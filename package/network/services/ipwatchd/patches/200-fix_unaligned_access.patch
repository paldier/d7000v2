--- a/src/analyse.c
+++ b/src/analyse.c
@@ -52,9 +52,11 @@ void ipwd_analyse (u_char * args, const 
 	char *p_rcv_sip = NULL;
 
 	/* Following variable was added because gcc 4.4.1 displayed warning: dereferencing type-punned pointer will break strict-aliasing rules */
-	struct in_addr * p_arp_spa = (struct in_addr *) &arpaddr->arp_spa;
+	struct in_addr arp_spa;
 
-	if ((p_rcv_sip = inet_ntoa (*(p_arp_spa))) == NULL)
+	memcpy(&arp_spa, &arpaddr->arp_spa, sizeof(arpaddr->arp_spa));
+
+	if ((p_rcv_sip = inet_ntoa (arp_spa)) == NULL)
 	{
 		ipwd_message (IPWD_MSG_ERROR, "Could not get source IP address from packet");
 		return;
@@ -65,8 +67,11 @@ void ipwd_analyse (u_char * args, const 
 	/* Source MAC address */
 	char rcv_smac[18];
 	char *p_rcv_smac = NULL;
+	struct ether_addr arp_sha;
+
+	memcpy(&arp_sha, &arpaddr->arp_sha, sizeof(arpaddr->arp_sha));
 
-	if ((p_rcv_smac = ether_ntoa ((const struct ether_addr *) &arpaddr->arp_sha)) == NULL)
+	if ((p_rcv_smac = ether_ntoa ((const struct ether_addr *) &arp_sha)) == NULL)
 	{
 		ipwd_message (IPWD_MSG_ERROR, "Could not get source MAC address from packet");
 		return;
@@ -79,9 +84,11 @@ void ipwd_analyse (u_char * args, const 
 	char *p_rcv_dip = NULL;
 
 	/* Following variable was added because gcc 4.4.1 displayed warning: dereferencing type-punned pointer will break strict-aliasing rules */
-	struct in_addr * p_arp_tpa = (struct in_addr *) &arpaddr->arp_tpa;
+	struct in_addr arp_tpa;
+
+	memcpy(&arp_tpa, &arpaddr->arp_tpa, sizeof(arpaddr->arp_tpa));
 
-	if ((p_rcv_dip = inet_ntoa (*(p_arp_tpa))) == NULL)
+	if ((p_rcv_dip = inet_ntoa (arp_tpa)) == NULL)
 	{
 		ipwd_message (IPWD_MSG_ERROR, "Could not get destination IP address from packet");
 		return;
@@ -92,8 +99,11 @@ void ipwd_analyse (u_char * args, const 
 	/* Destination MAC address */
 	char rcv_dmac[18];
 	char *p_rcv_dmac = NULL;
+	struct ether_addr arp_tha;
+
+	memcpy(&arp_tha, &arpaddr->arp_tha, sizeof(arpaddr->arp_tha));
 
-	if ((p_rcv_dmac = ether_ntoa ((const struct ether_addr *) &arpaddr->arp_tha)) == NULL)
+	if ((p_rcv_dmac = ether_ntoa ((const struct ether_addr *) &arp_tha)) == NULL)
 	{
 		ipwd_message (IPWD_MSG_ERROR, "Could not get destination MAC address from packet");
 		return;
