UGW remove unnecessary indexes from luci for framework model

diff --git a/modules/luci-base/luasrc/dispatcher.lua b/modules/luci-base/luasrc/dispatcher.lua
--- a/modules/luci-base/luasrc/dispatcher.lua
+++ b/modules/luci-base/luasrc/dispatcher.lua
@@ -21,6 +21,72 @@ local index = nil
 -- Fastindex
 local fi
 
+function remove_idx(  tbl, index )
+
+	-- initiate variables for save procedure
+	local tables,lookup = { tbl },{ [tbl] = 1 }
+
+	for idx,t in ipairs( tables ) do
+		local thandled = {}
+
+		for i,v in ipairs( t ) do
+			thandled[i] = true
+			local stype = type( v )
+			-- only handle value
+			if stype == "table" then
+				if not lookup[v] then
+					table.insert( tables, v )
+					lookup[v] = #tables
+				end
+			else
+				if i == index then
+					t[i] = nil
+					return
+				end
+			end
+		end
+
+		for i,v in pairs( t ) do
+			-- escape handled values
+			if (not thandled[i]) then
+
+				local flag = 0
+				local stype = type( i )
+				-- handle index
+				if stype == "table" then
+					if not lookup[i] then
+						table.insert( tables,i )
+						lookup[i] = #tables
+					end
+				else
+					flag = 1
+					if i == index then
+						t[i] = nil
+						return
+					end
+				end
+
+				if flag == 1 then
+					stype = type( v )
+					-- handle value
+					if stype == "table" then
+						if not lookup[v] then
+							table.insert( tables,v )
+							lookup[v] = #tables
+						end
+					else
+						if i == index then
+							t[i] = nil
+							return
+						end
+					end
+				end
+
+			end
+		end
+	end
+end 
+
 
 function build_url(...)
 	local path = {...}
@@ -411,6 +477,25 @@ function dispatch(request)
 		end
 	end
 
+	local is_ugw = io.open("/etc/version", "r")
+
+	--Checking if we are running ugw
+	if is_ugw ~= nil then
+		io.close(is_ugw)
+		local table_remove = {
+                                status  =  {"iptables", "routes", "syslog", "dmesg", "realtime"},
+                                system  =  {"startup", "crontab", "leds", "flashops", "reboot", "logout"},
+                                network =  {"dhcp", "hosts", "routes", "diagnostics", "firewall"}
+                        	}
+
+
+        	for menu,list in pairs(table_remove) do
+                	for i,v in ipairs(list) do
+                        	remove_idx(ctx.tree, v)
+                	end
+        	end
+	end
+
 	if type(target) == "function" then
 		util.copcall(function()
 			local oldenv = getfenv(target)
diff --git a/modules/luci-base/root/etc/config/luci b/modules/luci-base/root/etc/config/luci
--- a/modules/luci-base/root/etc/config/luci
+++ b/modules/luci-base/root/etc/config/luci
@@ -22,3 +22,4 @@ config internal ccache
 	option enable 1
 		
 config internal themes
+	option Bootstrap '/luci-static/bootstrap'
