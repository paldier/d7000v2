# HG changeset patch
# Parent 0eef32af1bf3108fb997a0dc094f61abd8eda526

diff --git a/board/vbg400/Kconfig b/board/vbg400/Kconfig
new file mode 100644
--- /dev/null
+++ b/board/vbg400/Kconfig
@@ -0,0 +1,45 @@
+#
+# For a description of the syntax of this configuration file,
+# see Linux Documentation
+#
+#
+
+config DRIVER_VBG400
+	bool "VBG400"
+	default y
+
+config VBG400_DDR_8BIT
+	bool "8Bit DDR RAM"
+	default n
+
+config VBG400_MAC_GMAC_INDEX
+	int "GMAC Index 0/1"
+	default 0
+
+config VBG400_MAC_INTERFACE_MODE
+	int "Interface mode: 0=mii_gmii, 1=rgmii, 2=rmii"
+	default 1
+
+config MAC_MODE_REVERSED
+	int "compile for REVERSED MODE"
+	default 0
+
+config VBG400_CHIPIT
+	bool "compile for CHIPIT"
+	default n
+
+config VBG400_EVB
+	bool "compile for evaluation board"
+	default n
+
+config MAC_DIV_CLOCK
+	int "select div clock for MAC, 1 for PLL2, 0 for other"
+	default 0
+
+config VBG400_PHY_ADDR_GMAC_0
+	int "select PHY address for GMAC0"
+	default 0
+
+config VBG400_PHY_ADDR_GMAC_1
+	int "select PHY address for GMAC1"
+	default 5
diff --git a/board/vbg400/Makefile b/board/vbg400/Makefile
new file mode 100644
--- /dev/null
+++ b/board/vbg400/Makefile
@@ -0,0 +1,45 @@
+#
+# (C) Copyright 2003-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS	= $(BOARD).o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(obj).depend $(OBJS) $(SOBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/vbg400/Makefile.lq b/board/vbg400/Makefile.lq
new file mode 100644
--- /dev/null
+++ b/board/vbg400/Makefile.lq
@@ -0,0 +1,43 @@
+ALL +=bootstrap.bin u-boot.lzimg u-boot.ltq u-boot.srec
+
+LDSCRIPT_BOOTSTRAP := $(TOPDIR)/board/$(BOARD)/bootstrap.lds
+OBJS_BOOTSTRAP  = $(TOPDIR)/$(CPUDIR)/$(BOARD)/start_bootstrap.o
+
+OBJS_BOOTSTRAP  += $(TOPDIR)/lib/string.o
+OBJS_BOOTSTRAP  += $(CPUDIR)/$(BOARD)/lib$(CPU).a
+LIBS_BOOTSTRAP  = $(TOPDIR)/lib_bootstrap/libbootstrap.a
+LIBS_BOOTSTRAP += $(TOPDIR)/lib/crc32.o
+LIBS_BOOTSTRAP += $(TOPDIR)/drivers/serial/lq_vbg400_asc.o
+#LIBS_BOOTSTRAP += $(TOPDIR)/$(CPUDIR)/$(BOARD)/clock.o
+#LIBS_BOOTSTRAP += $(TOPDIR)/$(CPUDIR)/$(BOARD)/asc.o
+LIBS_BOOTSTRAP += $(TOPDIR)/arch/mips/cpu/vbg400/time.o
+
+
+BOOTSTRAP_LDFLAGS = -Bstatic -T $(LDSCRIPT_BOOTSTRAP) -Ttext $(CONFIG_BOOTSTRAP_TEXT_BASE) 
+
+$(obj)u-boot.ltq: $(obj)System.map $(obj)bootstrap.bin $(obj)u-boot.lzimg
+		@$(TOPDIR)/scripts_platform/pad2align.sh -n 16 bootstrap.bin
+		@cat $(obj)bootstrap.bin > $(obj)u-boot.ltq
+		@cat $(obj)u-boot.lzimg >> $(obj)u-boot.ltq
+u-boot.lzimg: $(obj)u-boot.bin System.map
+		$(LZMA)lzma e $(obj)u-boot.bin $(obj)u-boot.lzma
+		scripts_platform/pad2align.sh -n 16 u-boot.lzma
+		$(TOPDIR)/tools/mkimage -A mips -T firmware -C lzma \
+		-a 0x$(shell grep "T _start" $(TOPDIR)/System.map | awk '{ printf "%s", $$1 }') \
+		-e 0x$(shell grep "T _start" $(TOPDIR)/System.map | awk '{ printf "%s", $$1 }') \
+		-n 'u-boot image' -d $(obj)u-boot.lzma $@
+															
+$(obj)u-boot.srec:	$(obj)u-boot
+		$(OBJCOPY) ${OBJCFLAGS} -O srec $< $@
+
+
+bootstrap.bin:    $(obj)bootstrap
+		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
+		
+bootstrap: $(OBJS_BOOTSTRAP) $(LIBS_BOOTSTRAP)  $(LDSCRIPT_BOOTSTRAP)
+		$(LD) $(BOOTSTRAP_LDFLAGS) $$UNDEF_SYM $(OBJS_BOOTSTRAP) $(LIBS_BOOTSTRAP) \
+		-Map bootstrap.map -o bootstrap
+		
+$(LIBS_BOOTSTRAP):
+		$(MAKE) -C `dirname $@` all
+		
diff --git a/board/vbg400/bootstrap.lds b/board/vbg400/bootstrap.lds
new file mode 100644
--- /dev/null
+++ b/board/vbg400/bootstrap.lds
@@ -0,0 +1,71 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-bigmips")
+*/
+OUTPUT_FORMAT("elf32-tradlittlemips", "elf32-tradlittlemips", "elf32-tradlittlemips")
+OUTPUT_ARCH(mips)
+ENTRY(_start)
+SECTIONS
+{
+        . = 0x00000000;
+
+        . = ALIGN(4);
+	.text       :
+	{
+	  *(.text)
+	}
+
+        . = ALIGN(4);
+        .rodata  : { *(.rodata) }
+
+        . = ALIGN(4);
+        .data  : { *(.data) }
+
+	. = ALIGN(4);
+	.sdata  : { *(.sdata) }
+
+	_gp = ALIGN(16);
+
+     . = ALIGN(16);
+	__got_start = .;
+	.got  : { *(.got) }
+	__got_end = .;
+
+	.sdata  : { *(.sdata) }
+
+	. = .;
+	__u_boot_cmd_start = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end = .;
+
+    . = ALIGN(16);
+	uboot_end_data = .;
+	num_got_entries = (__got_end - __got_start) >> 2;
+
+        . = ALIGN(4);
+	.sbss  : { *(.sbss) }
+        .bss  : { *(.bss) }
+	uboot_end = .;
+}
diff --git a/board/vbg400/config.mk b/board/vbg400/config.mk
new file mode 100644
--- /dev/null
+++ b/board/vbg400/config.mk
@@ -0,0 +1,39 @@
+#
+# (C) Copyright 2003
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+#
+
+-include $(TOPDIR)/.config
+
+# ROM version
+#TEXT_BASE = 0xB0000000
+
+# RAM version
+TEXT_BASE = 0xa0100000
+
+
+UBOOT_RAM_TEXT_BASE = $(TEXT_BASE)
+#UBOOT_RAM_TEXT_BASE = $(CONFIG_RAM_TEXT_BASE)
+
+#TEXT_BASE = $(UBOOT_RAM_TEXT_BASE)
+BOOTSTRAP_TEXT_BASE = $(CONFIG_BOOTSTRAP_TEXT_BASE)
diff --git a/board/vbg400/u-boot.lds b/board/vbg400/u-boot.lds
new file mode 100644
--- /dev/null
+++ b/board/vbg400/u-boot.lds
@@ -0,0 +1,70 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+# OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-bigmips")
+*/
+OUTPUT_FORMAT("elf32-tradlittlemips", "elf32-tradlittlemips", "elf32-tradlittlemips")
+OUTPUT_ARCH(mips)
+ENTRY(_start)
+SECTIONS
+{
+	. = 0x00000000;
+
+	. = ALIGN(4);
+	.text       :
+	{
+	  *(.text)
+	}
+
+	. = ALIGN(4);
+	.rodata  : { *(.rodata) }
+
+	. = ALIGN(4);
+	.data  : { *(.data) }
+
+	. = .;
+	_gp = ALIGN(16) + 0x7ff0;
+
+	.got : {
+	  __got_start = .;
+	  *(.got)
+	  __got_end = .;
+	}
+
+	.sdata  : { *(.sdata) }
+
+	.u_boot_cmd : {
+	  __u_boot_cmd_start = .;
+	  *(.u_boot_cmd)
+	  __u_boot_cmd_end = .;
+	}
+
+	uboot_end_data = .;
+	num_got_entries = (__got_end - __got_start) >> 2;
+
+	. = ALIGN(4);
+	.sbss (NOLOAD)  : { *(.sbss) }
+	.bss (NOLOAD)  : { *(.bss) }
+	uboot_end = .;
+}
diff --git a/board/vbg400/vbg400.c b/board/vbg400/vbg400.c
new file mode 100644
--- /dev/null
+++ b/board/vbg400/vbg400.c
@@ -0,0 +1,64 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <command.h>
+#include <asm/addrspace.h>
+#include <asm/io.h>
+#include <spi_flash.h>
+#ifndef CONFIG_ENV_SPI_BUS
+# define CONFIG_ENV_SPI_BUS 0
+#endif
+#ifndef CONFIG_ENV_SPI_CS
+# define CONFIG_ENV_SPI_CS      0
+#endif
+#ifndef CONFIG_ENV_SPI_MAX_HZ
+# define CONFIG_ENV_SPI_MAX_HZ  1000000
+#endif
+#ifndef CONFIG_ENV_SPI_MODE
+# define CONFIG_ENV_SPI_MODE    SPI_MODE_3
+#endif
+
+/* arad - change */
+/*long int initdram(int board_type)*/
+phys_size_t initdram(int board_type)
+{
+	puts ("initdram:\n");
+	return VBG400_SDRAM_SIZE;
+}
+
+int checkboard (void)
+{
+    /*TBD here...*/	
+	printf ("\nBoard: VBG400\n ");
+	return 0;
+}
+
+
+int board_eth_init(bd_t *bis)
+{
+	if (vbg400_switch_initialize(bis)<0)
+		return -1;
+	return 0;
+}
+
diff --git a/include/configs/vbg400.h b/include/configs/vbg400.h
new file mode 100644
--- /dev/null
+++ b/include/configs/vbg400.h
@@ -0,0 +1,240 @@
+/*
+ * (C) Copyright 2003-2005
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+ * This file contains the configuration parameters for the vbg400 board.
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include <configs/autoconf.h>
+#include <configs/lq_cfg.h>
+
+#define CONFIG_MIPS32		1	/* MIPS 4Ke CPU core	*/
+
+#ifndef	CPU_CLOCK_RATE
+#ifndef CONFIG_VBG400_CHIPIT
+#define CPU_CLOCK_RATE      240000000	/* default: 24 MHz clock for the MIPS core */
+#else
+#define CPU_CLOCK_RATE      48000000	/* default: 24 MHz clock for the MIPS core */
+#endif
+#endif
+
+#ifndef	SYS_CLOCK_RATE
+#ifndef CONFIG_VBG400_CHIPIT
+#define SYS_CLOCK_RATE	240000000	/* default: 24 MHz system clock */
+#else
+#define SYS_CLOCK_RATE	24000000	/* default: 24 MHz system clock */
+#endif
+#endif
+
+#define CONFIG_BAUDRATE		115200 //enter to default_environment
+//#define CONFIG_BAUDRATE		9600 //enter to default_environment
+
+
+#define VBG400_RAM            1       /* NO flash support   */
+#define PROTO		       1
+#define JTAG		       1
+
+#define CONFIG_GATEWAYIP 192.168.1.1
+#define CONFIG_NETMASK   255.255.255.0
+
+#define CONFIG_MII              1       /* MII PHY management */
+#define CONFIG_CMD_MII
+
+#define CONFIG_HAS_ETH0         1
+#define CONFIG_HAS_ETH1         0
+
+#define INFINEON_EBU_BOOTCFG  0x40C4  /* CMULT = 8 */
+#define CFG_TX_ETH_BUFFER	12
+
+/* valid baudrates */
+#define CONFIG_SYS_BAUDRATE_TABLE	{ 9600, 19200, 38400, 57600, 115200 }
+
+
+#define	CONFIG_TIMESTAMP		/* Print image info with timestamp */
+
+#ifndef CONFIG_PREBOOT
+#define CONFIG_PREBOOT	"echo;"	
+#define
+
+#undef	CONFIG_BOOTARGS
+
+#define	CONFIG_VBG400_IP_SWITCH
+
+
+#define CONFIG_EXTRA_ENV_SETTINGS   <configs/lq_extra_env.h>
+
+
+/*
+ * Chip related
+ */
+#define VBG400_SYS_INTERFACE_BASE_ADDR	0xa7000000
+
+/* DUummy - to compile lq_spi.c */
+#define F_SSC_CLK  5
+/* DUummy - to compile lq_extra_env.h */
+#ifndef CONFIG_RESET_DDR_CONFIG
+#define CONFIG_RESET_DDR_CONFIG "not_supported"
+#endif
+/*
+ * Miscellaneous configurable options
+ */
+#define CONFIG_CMDLINE_EDITING          /* Command-line editing */
+
+#define	CONFIG_SYS_LONGHELP				/* undef to save memory      */
+#define	CONFIG_SYS_PROMPT		"Lantiq # "	/* Monitor Command Prompt    */
+#define	CONFIG_SYS_CBSIZE		1024		/* Console I/O Buffer Size   */
+#define	CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE+sizeof(CONFIG_SYS_PROMPT)+16)  /* Print Buffer Size */
+#define	CONFIG_SYS_MAXARGS		32		/* max number of command args*/
+
+//#define CONFIG_SYS_MALLOC_LEN		128*1024
+#define CONFIG_SYS_MALLOC_LEN		192*1024
+
+#define CONFIG_SYS_BOOTPARAMS_LEN	128*1024
+#define CFG_BOOTPARAMS_LEN CONFIG_SYS_BOOTPARAMS_LEN	/* delete */
+
+//should be aligned to the rate used by timers
+//#define CONFIG_SYS_HZ			CPU_CLOCK_RATE
+#define CONFIG_SYS_HZ			SYS_CLOCK_RATE
+
+
+#define CONFIG_SYS_SDRAM_BASE		0xa0000000
+#define CFG_SDRAM_BASE CONFIG_SYS_SDRAM_BASE /* delete */
+
+
+#define	CFG_LOAD_ADDR		0xa0100000	/* default load address	*/
+#define CFG_MEMTEST_START	0xa0100000
+#define CFG_MEMTEST_END		0xa0800000
+/* arad -new added */
+#define	CONFIG_SYS_LOAD_ADDR CFG_LOAD_ADDR
+#define CONFIG_SYS_MEMTEST_START CFG_MEMTEST_START
+#define CONFIG_SYS_MEMTEST_END CFG_MEMTEST_END
+
+/*-----------------------------------------------------------------------
+ * FLASH and environment organization
+ */
+#ifdef CONFIG_DRIVER_VBG400
+#define VBG400_VERSION "7"
+
+#define CFG_MAX_FLASH_BANKS	1	/* max number of memory banks */
+#define CFG_MAX_FLASH_SECT	(128)	/* max number of sectors on one chip */
+/* arad -new added */
+#define CONFIG_SYS_MAX_FLASH_SECT	CFG_MAX_FLASH_SECT	/* max number of sectors on one chip */
+#define CONFIG_SYS_MAX_FLASH_BANKS CFG_MAX_FLASH_BANKS
+
+#define VBG400_SPI_WR_ADDR   (VBG400_SYS_INTERFACE_BASE_ADDR+0x120)
+#define VBG400_SPI_READ_ADDR (VBG400_SYS_INTERFACE_BASE_ADDR+0x124)
+#define VBG400_SPI_MODE_ADDR (VBG400_SYS_INTERFACE_BASE_ADDR+0x130)
+
+#define VBG400_SPI_MODE_SW_BIT (0x400) //When this bit is set, FLASH is accessed in SW mode
+#define VBG400_SPI_MODE_SHIFT_PAGE_BITS 8 //to increment to next page
+#define VBG400_SPI_MODE_CLEAR_PAGE_BITS 0xFCFF //to clean field
+#define VBG400_SPI_PAGE_END 0xC0000000
+
+#define VBG400_HW_MODE_READ
+
+#define PHYS_FLASH_1		0x00000000 /* no flash base, only register interface to spi master */
+//#define PHYS_FLASH_2		0xb0800000 /* Flash Bank #2 */
+
+
+//#define VBG400_NPU_SYS_IF_REGS_OFFSET       0x70000000
+#define VBG400_SHARED_REGS_OFFSET           0x001c0000
+#define VBG400_SYS_RESET_REG_OFFSET         0x00000008
+#define VBG400_RESET_OFFSET                 8
+#define VBG400_RESET_ADDR                   (VBG400_SYS_INTERFACE_BASE_ADDR+VBG400_SHARED_REGS_OFFSET+VBG400_RESET_OFFSET)
+#define VBG400_REBOOT_DATA                  0
+#define VBG400_REBOOT_BIT_MASK_NOT          0xfffeffff
+/*these shared registers are for clock and delay configuration*/
+#define VBG400_SHARED_GMAC_BASE_ADDR        (VBG400_SYS_INTERFACE_BASE_ADDR+VBG400_SHARED_REGS_OFFSET)
+#define VBG400_GMAC_MODE_REG_OFFSET         0x68
+#define VBG400_GMAC_MODE_REG_ADDR           (VBG400_SYS_INTERFACE_BASE_ADDR+VBG400_SHARED_REGS_OFFSET+VBG400_GMAC_MODE_REG_OFFSET)
+#define VBG400_GMAC_MODE_2_REG_OFFSET       0x80
+#define VBG400_GMAC_MODE_2_REG_ADDR         (VBG400_SYS_INTERFACE_BASE_ADDR+VBG400_SHARED_REGS_OFFSET+VBG400_GMAC_MODE_2_REG_OFFSET)
+#define VBG400_DLY_PGM_REG_OFFSET           0x64
+#define VBG400_DLY_PGM_REG_ADDR             (VBG400_SYS_INTERFACE_BASE_ADDR+VBG400_SHARED_REGS_OFFSET+VBG400_DLY_PGM_REG_OFFSET)
+#define VBG400_HCYCLE_CALIB_IND_REG_OFFSET  0x90
+#define VBG400_HCYCLE_CALIB_IND_REG_ADDR    (VBG400_SYS_INTERFACE_BASE_ADDR+VBG400_SHARED_REGS_OFFSET+VBG400_HCYCLE_CALIB_IND_REG_OFFSET)
+
+
+/* The following #defines are needed to get flash environment right */
+
+//#define	CFG_MONITOR_BASE	TEXT_BASE
+#define	CFG_MONITOR_BASE	0xa0100000
+/* arad - new added */
+#define	CONFIG_SYS_MONITOR_BASE CFG_MONITOR_BASE
+
+#define	CFG_MONITOR_LEN		(192 << 10)
+/* arad - new added */
+#define	CONFIG_SYS_MONITOR_LEN CFG_MONITOR_LEN
+
+#define CFG_INIT_SP_OFFSET	0x400000
+/* arad - new added */
+#define CONFIG_SYS_INIT_SP_OFFSET	CFG_INIT_SP_OFFSET
+
+#define CFG_FLASH_BASE		PHYS_FLASH_1
+#define CFG_FLASH_BASE_HW	0xBFC00000
+//#define CFG_FLASH_BASE_HW_SECT_1 /*only if u-boot in sector 1: 0xBFC10000*/
+
+//#define CFG_FLASH_BASE_HW_BOOTSTRAP   0xBFC00000
+//#define CFG_FLASH_BASE_HW	0xBFC10000/*for uboot in sect 1 (for develop)*/
+
+#define VBG400_FLASH_ENV_SECT 1 
+
+/* arad - new added */
+#define CONFIG_SYS_FLASH_BASE CFG_FLASH_BASE
+
+/*to see the env upon Init enable it:*/
+#define VBG400_PRINT_ENV
+/*to force default env enable it:*/
+//#define VBG400_USE_DEFAULT_ENV
+
+#endif //CONFIG_DRIVER_VBG400
+
+/* timeout values are in ticks */
+#define CFG_FLASH_ERASE_TOUT	(2 * CONFIG_SYS_HZ) /* Timeout for Flash Erase */
+#define CFG_FLASH_WRITE_TOUT	(2 * CONFIG_SYS_HZ) /* Timeout for Flash Write */
+
+#define	CFG_ENV_IS_IN_FLASH	1
+
+
+/* Address and size of Primary Environment Sector	*/
+/* Note !:
+   The RAM address is now hard coded.
+   If DRAM size is autodetect (using initdram()), need to change Env handling as well*/
+#define VBG400_SDRAM_SIZE 0x2000000
+
+/* Address and size of Primary Environment Sector	*/
+#define CONFIG_ENV_OFFSET		IFX_CFG_FLASH_UBOOT_CFG_START_ADDR
+#define CONFIG_ENV_ADDR		  IFX_CFG_FLASH_UBOOT_CFG_START_ADDR
+#define CONFIG_ENV_SIZE		  IFX_CFG_FLASH_UBOOT_CFG_SIZE
+
+//#define CONFIG_FLASH_16BIT
+#define CONFIG_FLASH_8BIT
+
+#define CONFIG_NR_DRAM_BANKS    1
+
+#define CONFIG_NET_MULTI        0
+
+#endif	/* __CONFIG_H */
diff --git a/include/configs/vbg400_cfg.h b/include/configs/vbg400_cfg.h
new file mode 100644
--- /dev/null
+++ b/include/configs/vbg400_cfg.h
@@ -0,0 +1,190 @@
+/* ============================================================================
+ * Copyright (C) 2003[- 2004] ? Infineon Technologies AG.
+ *
+ * All rights reserved.
+ * ============================================================================
+ *
+ * ============================================================================
+ *
+ * This document contains proprietary information belonging to Infineon
+ * Technologies AG. Passing on and copying of this document, and communication
+ * of its contents is not permitted without prior written authorisation.
+ *
+ * ============================================================================
+ *
+ * File Name: ifx_cfg.h
+ * Author : Mars Lin (mars.lin@infineon.com)
+ * Date:
+ *
+ * ===========================================================================
+ *
+ * Project:
+ * Block:
+ *
+ * ===========================================================================
+ * Contents:  This file contains the data structures and definitions used
+ *        by the core iptables and the sip alg modules.
+ * ===========================================================================
+ * References:
+ */
+
+/*
+ * This file contains the configuration parameters for the IFX board.
+ */
+
+
+/*-----------------------------------------------------------------------
+ * Board specific configurations
+ */
+#ifdef CONFIG_BOOT_FROM_NOR
+  #error "ERROR!! Define SPI Flash first!"
+#endif /*CONFIG_BOOT_FROM_NOR*/
+
+
+/***************************************************************************/
+/***************************************************************************/
+/***************SPI FLASH map starts here***********************************/
+/***************************************************************************/
+/***************************************************************************/
+
+#ifdef CONFIG_BOOT_FROM_SPI
+#ifdef CONFIG_SPI_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_SPI_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_SPI_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+  #error "2M not supported for vbg400"
+
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME          "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR          0x003DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME            "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR            0x003E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                  0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR              0x003EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME             "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR             0x003F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                   0x2000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR               0x003F1FFF
+
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	         "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	         0x003F2000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE                    0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR                0x003F3FFF
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"          \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"     \
+        "data_block5=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"       \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME          "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR          0x007DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME            "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR            0x007E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                  0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR              0x007EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME             "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR             0x007F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                   0x2000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR               0x007F1FFF
+
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME              "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR              0x007F2000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE                    0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR                0x007F3FFF
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x007FFFFF
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+  #error "ERROR!! Define Firmware in rootfs first!"
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+#endif /*CONFIG_BOOT_FROM_SPI*/
+
+
+/***************************************************************************/
+/***************************************************************************/
+/***************NAND FLASH map starts here***********************************/
+/***************************************************************************/
+/***************************************************************************/
+
+#ifdef CONFIG_BOOT_FROM_NAND
+  #error "ERROR!! Define SPI Flash first!"
+#endif /*CONFIG_BOOT_FROM_NAND*/
+
+
+/* End of Board specific configurations
+ *-----------------------------------------------------------------------
+ */
+
+/*************************************************************************/
+
