# HG changeset patch
# Parent 8ee86371a88c05073a071cb97f7cc58c9fd9a42f

diff --git a/common/Kconfig b/common/Kconfig
--- a/common/Kconfig
+++ b/common/Kconfig
@@ -218,6 +218,14 @@ config CMD_KGDB
 config CMD_LCD
      bool "lcd"
 
+config CMD_WDT
+     bool "wdt"
+
+config LANTIQ_WATCHDOG
+     bool
+	 depends on CMD_WDT
+	 default y
+
 config YAFFS2
      bool "YAFFS2"
 	 
diff --git a/common/Makefile b/common/Makefile
--- a/common/Makefile
+++ b/common/Makefile
@@ -166,6 +166,7 @@ COBJS-$(CONFIG_MODEM_SUPPORT) += modem.o
 COBJS-$(CONFIG_UPDATE_TFTP) += update.o
 COBJS-$(CONFIG_USB_KEYBOARD) += usb_kbd.o
 COBJS-$(CONFIG_CMD_UPGRADE) += upgrade.o cmd_upgrade.o
+COBJS-$(CONFIG_CMD_WDT) += cmd_wdt.o
 
 COBJS	:= $(sort $(COBJS-y))
 SRCS	:= $(AOBJS:.o=.S) $(COBJS:.o=.c)
diff --git a/common/cmd_wdt.c b/common/cmd_wdt.c
new file mode 100644
--- /dev/null
+++ b/common/cmd_wdt.c
@@ -0,0 +1,55 @@
+/*Copyright, Lantiq Asia Pacific,Ltd         */
+/*Revision history:                          */
+/*1 March, 2013 Wu Qi Ming Initial version   */
+/*********************************************/
+
+/*
+ * watch dog timer support
+ */
+#include <common.h>
+#include <command.h>
+
+extern void start_watchdog(int timeout);
+extern void stop_watchdog();
+
+/* Allow ports to override the default behavior */
+__attribute__((weak))
+
+int do_wdt (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	ulong	addr, rc;
+	int     timeout;
+	int     rcode = 0;
+	if (argc < 2) {
+		cmd_usage(cmdtp);
+		return 1;
+	}
+
+    if (strncmp(argv[1], "start", 5) == 0){
+	  if(!argv[2]){
+                 cmd_usage(cmdtp);
+		         return 1;
+	  }
+	  timeout=simple_strtoul(argv[2], NULL, 16);
+	  //printf ("start %d\n",timeout);
+	  start_watchdog(timeout);
+	}else if (strncmp(argv[1], "stop", 4) == 0){
+      //printf ("stop\n"); 
+	  stop_watchdog();
+	}else{
+      cmd_usage(cmdtp);
+      return 1;
+    }
+
+	return rcode;
+}
+
+/* -------------------------------------------------------------------- */
+
+U_BOOT_CMD(
+	wdt, CONFIG_SYS_MAXARGS, 2,	do_wdt,
+	"start/stop a watchdog timer",
+	"wdt start seconds\n    - start watchdog timer\n"
+	"wdt stop\n    - stop watch dog timer\n"
+);
+
diff --git a/drivers/watchdog/Makefile b/drivers/watchdog/Makefile
--- a/drivers/watchdog/Makefile
+++ b/drivers/watchdog/Makefile
@@ -26,6 +26,8 @@ include $(TOPDIR)/config.mk
 LIB	:= $(obj)libwatchdog.a
 
 COBJS-$(CONFIG_AT91SAM9_WATCHDOG) += at91sam9_wdt.o
+COBJS-$(CONFIG_LANTIQ_WATCHDOG) += lantiq_wdt.o
+
 
 COBJS	:= $(COBJS-y)
 SRCS	:= $(COBJS:.o=.c)
diff --git a/drivers/watchdog/lantiq_wdt.c b/drivers/watchdog/lantiq_wdt.c
new file mode 100644
--- /dev/null
+++ b/drivers/watchdog/lantiq_wdt.c
@@ -0,0 +1,31 @@
+#include <common.h>
+
+
+void start_watchdog(int timeout)
+{
+    u32 DIV=262144;
+    u32 fpi_clk;
+    u32 reload;
+    u32 CLKDIV=0x3;
+    u32 PW1=0xBE;
+    u32 PW2=0xDC;
+    u32 wdt_cr;
+    int i;
+	fpi_clk=get_fpi_clk();
+	reload=timeout*fpi_clk/DIV+0x8000;
+	wdt_cr=(1<<31)|(0x3<<24)|(PW2<<16)|(reload);
+	asm("sync");
+	*BSP_BIU_WDT_CR = PW1<<16;
+	asm("sync");
+	*BSP_BIU_WDT_CR=wdt_cr;
+
+}
+
+
+void stop_watchdog()
+{
+    u32 PW1=0xBE;
+	u32 PW2=0xDC;
+    *BSP_BIU_WDT_CR = PW1<<16;
+    *BSP_BIU_WDT_CR=  PW2<<16;
+}
