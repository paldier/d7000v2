diff -rupN klish-2.0.4_orig/Makefile.am klish-2.0.4_new/Makefile.am
--- klish-2.0.4_orig/Makefile.am	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/Makefile.am	2015-11-24 11:42:05.014471000 +0530
@@ -5,7 +5,7 @@ ACLOCAL_AMFLAGS = -I m4
 AM_CPPFLAGS = -I. -I$(top_srcdir)
 AM_LD = $(CC)
 VERSION_INFO = -version-info $(SONAME_CURRENT):$(SONAME_REVISION):$(SONAME_AGE)
-AM_LDFLAGS = $(VERSION_INFO)
+AM_LDFLAGS = $(VERSION_INFO) -lcal
 
 if DEBUG
   DEBUG_CFLAGS = -DDEBUG
@@ -16,7 +16,7 @@ AM_CFLAGS = -Wall $(DEBUG_CFLAGS)
 
 bin_PROGRAMS =
 lib_LTLIBRARIES =
-lib_LIBRARIES =
+lib_LIBRARIES = 
 nobase_include_HEADERS =
 
 EXTRA_DIST = \
diff -rupN klish-2.0.4_orig/clish/command/command.c klish-2.0.4_new/clish/command/command.c
--- klish-2.0.4_orig/clish/command/command.c	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/command/command.c	2015-12-12 15:39:17.617063000 +0530
@@ -44,6 +44,11 @@ clish_command_init(clish_command_t *this
 	this->interrupt = BOOL_FALSE;
 	this->dynamic = BOOL_FALSE;
 	this->access = NULL;
+    this->display = NULL;
+    this->links = NULL;
+    this->depends = NULL;
+    this->hidden = NULL;
+
 }
 
 /*--------------------------------------------------------- */
@@ -69,6 +74,11 @@ static void clish_command_fini(clish_com
 	lub_string_free(this->escape_chars);
 	lub_string_free(this->regex_chars);
 	lub_string_free(this->access);
+    lub_string_free(this->display);
+    lub_string_free(this->links);
+    lub_string_free(this->depends);
+    lub_string_free(this->hidden);
+
 	if (this->args)
 		clish_param_delete(this->args);
 }
@@ -485,3 +495,59 @@ char *clish_command__get_access(const cl
 {
 	return this->access;
 }
+/*--------------------------------------------------------- */
+void clish_command__set_links(clish_command_t *this, const char *links)
+{
+    if (this->links)
+        lub_string_free(this->links);
+    this->links = lub_string_dup(links);
+}
+
+/*--------------------------------------------------------- */
+char *clish_command__get_links(const clish_command_t *this)
+{
+    return this->links;
+}
+
+/*--------------------------------------------------------- */
+void clish_command__set_display(clish_command_t *this, const char *display)
+{
+    if (this->display)
+        lub_string_free(this->display);
+    this->display = lub_string_dup(display);
+}
+
+/*--------------------------------------------------------- */
+char *clish_command__get_display(const clish_command_t *this)
+{
+    return this->display;
+}
+
+/*--------------------------------------------------------- */
+void clish_command__set_depends(clish_command_t *this, const char *depends)
+{
+    if (this->depends)
+        lub_string_free(this->depends);
+    this->depends = lub_string_dup(depends);
+}
+
+/*--------------------------------------------------------- */
+char *clish_command__get_depends(const clish_command_t *this)
+{
+    return this->depends;
+}
+
+/*--------------------------------------------------------- */
+void clish_command__set_hidden(clish_command_t *this, const char *hidden)
+{
+    if (this->hidden)
+        lub_string_free(this->hidden);
+    this->hidden = lub_string_dup(hidden);
+}
+
+/*--------------------------------------------------------- */
+char *clish_command__get_hidden(const clish_command_t *this)
+{
+    return this->hidden;
+}
+
diff -rupN klish-2.0.4_orig/clish/command/private.h klish-2.0.4_new/clish/command/private.h
--- klish-2.0.4_orig/clish/command/private.h	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/command/private.h	2015-12-12 15:38:59.593619000 +0530
@@ -28,4 +28,8 @@ struct clish_command_s {
 	bool_t lock;
 	bool_t interrupt;
 	bool_t dynamic; /* Is command dynamically created */
+    char *display;
+    char *links;
+    char *depends;
+    char *hidden;
 };
diff -rupN klish-2.0.4_orig/clish/command.h klish-2.0.4_new/clish/command.h
--- klish-2.0.4_orig/clish/command.h	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/command.h	2015-12-12 15:39:50.115752000 +0530
@@ -89,5 +89,12 @@ bool_t clish_command__get_interrupt(cons
 void clish_command__set_interrupt(clish_command_t * instance, bool_t interrupt);
 void clish_command__set_access(clish_command_t *instance, const char *access);
 char *clish_command__get_access(const clish_command_t *instance);
-
+void clish_command__set_display(clish_command_t *instance, const char *display);
+char *clish_command__get_display(const clish_command_t *instance);
+void clish_command__set_links(clish_command_t *instance, const char *links);
+char *clish_command__get_links(const clish_command_t *instance);
+void clish_command__set_depends(clish_command_t *instance, const char *depends);
+char *clish_command__get_depends(const clish_command_t *instance);
+void clish_command__set_hidden(clish_command_t *instance, const char *hidden);
+char *clish_command__get_hidden(const clish_command_t *instance);
 #endif				/* _clish_command_h */
diff -rupN klish-2.0.4_orig/clish/shell/shell_xml.c klish-2.0.4_new/clish/shell/shell_xml.c
--- klish-2.0.4_orig/clish/shell/shell_xml.c	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/shell/shell_xml.c	2015-12-12 15:38:36.473684000 +0530
@@ -278,6 +278,7 @@ static int process_view(clish_shell_t *s
 	char *depth = clish_xmlnode_fetch_attr(element, "depth");
 	char *restore = clish_xmlnode_fetch_attr(element, "restore");
 	char *access = clish_xmlnode_fetch_attr(element, "access");
+	char *service = clish_xmlnode_fetch_attr(element, "service");
 
 	/* Check syntax */
 	if (!name) {
@@ -305,6 +306,8 @@ static int process_view(clish_shell_t *s
 	if (access)
 		clish_view__set_access(view, access);
 
+	if (service)
+		clish_view__set_service(view, service);
 //process_view_end:
 	res = process_children(shell, element, view);
 error:
@@ -313,6 +316,7 @@ error:
 	clish_xml_release(depth);
 	clish_xml_release(restore);
 	clish_xml_release(access);
+	clish_xml_release(service);
 
 	parent = parent; /* Happy compiler */
 
@@ -424,6 +428,10 @@ static int process_command(clish_shell_t
 	char *lock = clish_xmlnode_fetch_attr(element, "lock");
 	char *interrupt = clish_xmlnode_fetch_attr(element, "interrupt");
 	char *ref = clish_xmlnode_fetch_attr(element, "ref");
+    char *display = clish_xmlnode_fetch_attr(element, "display");
+    char *links = clish_xmlnode_fetch_attr(element, "links");
+    char *depends = clish_xmlnode_fetch_attr(element, "depends");
+    char *hidden = clish_xmlnode_fetch_attr(element, "hidden");
 
 	/* Check syntax */
 	if (!name) {
@@ -508,6 +516,19 @@ static int process_command(clish_shell_t
 	if (access)
 		clish_command__set_access(cmd, access);
 
+    if (display)
+        clish_command__set_display(cmd, display);
+    
+	if (links)
+        clish_command__set_links(cmd, links);
+	
+	if (depends)
+        clish_command__set_depends(cmd, depends);
+
+	if (hidden)
+        clish_command__set_hidden(cmd, hidden);
+
+
 //process_command_end:
 	res = process_children(shell, element, cmd);
 error:
@@ -522,8 +543,11 @@ error:
 	clish_xml_release(lock);
 	clish_xml_release(interrupt);
 	clish_xml_release(ref);
-
-	return res;
+    clish_xml_release(display);
+    clish_xml_release(links);
+	clish_xml_release(depends);
+	clish_xml_release(hidden);
+return res;
 }
 
 /* ------------------------------------------------------ */
diff -rupN klish-2.0.4_orig/clish/view/private.h klish-2.0.4_new/clish/view/private.h
--- klish-2.0.4_orig/clish/view/private.h	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/view/private.h	2015-11-24 11:39:44.476898000 +0530
@@ -19,4 +19,5 @@ struct clish_view_s {
 	clish_hotkeyv_t *hotkeys;
 	unsigned int depth;
 	clish_view_restore_t restore;
+	char *service;
 };
diff -rupN klish-2.0.4_orig/clish/view/view.c klish-2.0.4_new/clish/view/view.c
--- klish-2.0.4_orig/clish/view/view.c	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/view/view.c	2015-11-24 11:40:15.207439000 +0530
@@ -45,6 +45,7 @@ static void clish_view_init(clish_view_t
 	this->depth = 0;
 	this->restore = CLISH_RESTORE_NONE;
 	this->access = NULL;
+	this->service = NULL;
 
 	/* Be a good binary tree citizen */
 	lub_bintree_node_init(&this->bt_node);
@@ -100,6 +101,7 @@ static void clish_view_fini(clish_view_t
 	lub_string_free(this->name);
 	lub_string_free(this->prompt);
 	lub_string_free(this->access);
+	lub_string_free(this->service);
 }
 
 /*---------------------------------------------------------
@@ -417,3 +419,17 @@ char *clish_view__get_access(const clish
 }
 
 /*--------------------------------------------------------- */
+void clish_view__set_service(clish_view_t *this, const char *service)
+{
+	if (this->service)
+		lub_string_free(this->service);
+	this->service = lub_string_dup(service);
+}
+
+/*--------------------------------------------------------- */
+char *clish_view__get_service(const clish_view_t *this)
+{
+	return this->service;
+}
+
+/*--------------------------------------------------------- */
diff -rupN klish-2.0.4_orig/clish/view.h klish-2.0.4_new/clish/view.h
--- klish-2.0.4_orig/clish/view.h	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/clish/view.h	2015-11-24 11:37:48.275335000 +0530
@@ -76,6 +76,8 @@ int clish_view_insert_hotkey(const clish
 const char *clish_view_find_hotkey(const clish_view_t *instance, int code);
 void clish_view__set_access(clish_view_t *instance, const char *access);
 char *clish_view__get_access(const clish_view_t *instance);
+void clish_view__set_service(clish_view_t *instance, const char *service);
+char *clish_view__get_service(const clish_view_t *instance);
 
 #endif				/* _clish_view_h */
 /** @} clish_view */
diff -rupN klish-2.0.4_orig/plugins/clish/builtin_init.c klish-2.0.4_new/plugins/clish/builtin_init.c
--- klish-2.0.4_orig/plugins/clish/builtin_init.c	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/plugins/clish/builtin_init.c	2015-11-24 11:43:21.270744000 +0530
@@ -30,6 +30,7 @@ CLISH_PLUGIN_INIT(clish)
 	clish_plugin_add_psym(plugin, clish_wdog, "clish_wdog");
 	clish_plugin_add_psym(plugin, clish_macros, "clish_macros");
 	clish_plugin_add_sym(plugin, clish_script, "clish_script");
+	clish_plugin_add_sym(plugin, cli_cmdHandler, "cli_cmdHandler");
 
 	clish_shell = clish_shell; /* Happy compiler */
 
diff -rupN klish-2.0.4_orig/plugins/clish/module.am klish-2.0.4_new/plugins/clish/module.am
--- klish-2.0.4_orig/plugins/clish/module.am	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/plugins/clish/module.am	2015-11-24 11:44:01.776074000 +0530
@@ -19,4 +19,5 @@ clish_plugin_clish_la_SOURCES += \
 	plugins/clish/hook_log.c \
 	plugins/clish/sym_misc.c \
 	plugins/clish/sym_script.c \
+	plugins/clish/cli_command.c \
 	plugins/clish/private.h
diff -rupN klish-2.0.4_orig/plugins/clish/private.h klish-2.0.4_new/plugins/clish/private.h
--- klish-2.0.4_orig/plugins/clish/private.h	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/plugins/clish/private.h	2015-11-24 11:45:00.687924000 +0530
@@ -21,3 +21,4 @@ CLISH_PLUGIN_SYM(clish_nop);
 CLISH_PLUGIN_SYM(clish_wdog);
 CLISH_PLUGIN_SYM(clish_script);
 CLISH_PLUGIN_SYM(clish_macros);
+CLISH_PLUGIN_SYM(cli_cmdHandler);
diff -rupN klish-2.0.4_orig/plugins/clish/sym_misc.c klish-2.0.4_new/plugins/clish/sym_misc.c
--- klish-2.0.4_orig/plugins/clish/sym_misc.c	2015-04-27 16:12:00.000000000 +0530
+++ klish-2.0.4_new/plugins/clish/sym_misc.c	2015-11-24 11:47:24.046728000 +0530
@@ -16,6 +16,24 @@
 #include <sys/file.h>
 #include <signal.h>
 #include <fcntl.h>
+#include "cal.h"
+#define MAX_LEN_CMD_NAME 		64
+#define MAX_LEN_TR181OBJ_PATH	256
+#define MAX_LEN_OBJNAME 256 /*!< Object Name string length */
+
+typedef struct xParamMapList_s {
+	char sCmdName[MAX_LEN_CMD_NAME];
+	char sTR181ObjPath[MAX_LEN_TR181OBJ_PATH];
+	struct xParamMapList_s *pxParamNext;
+}xParamMapList_t;
+
+typedef struct xServiceParamMapList_s {
+	char sServiceName[MAX_LEN_OBJNAME];
+	xParamMapList_t *pxParamHead;
+	struct xServiceParamMapList_s *pxServiceNext;	
+}xServiceParamMapList_t;
+
+extern xServiceParamMapList_t *pxServiceList;	//WARNING: Ensure this gets freed on running "exit" command
 
 /*----------------------------------------------------------- */
 /* Terminate the current shell session */
@@ -23,9 +41,31 @@ CLISH_PLUGIN_SYM(clish_close)
 {
 	clish_shell_t *this = clish_context__get_shell(clish_context);
 	clish_shell__set_state(this, SHELL_STATE_CLOSING);
-
+	
 	script = script; /* Happy compiler */
 	out = out; /* Happy compiler */
+	if(pxServiceList != NULL) {
+		xServiceParamMapList_t *pxServTrav = pxServiceList;
+		xServiceParamMapList_t *pxServTmp = NULL;
+		xParamMapList_t *pxParamMapTrav = NULL;
+		xParamMapList_t *pxParamMapTmp = NULL;
+			
+		while(pxServTrav != NULL) {
+			//printf("The freed service is : %s\n", pxServTrav->sServiceName);
+			pxParamMapTrav = pxServTrav->pxParamHead;
+			while(pxParamMapTrav != NULL) {
+				//printf("\tParam %s is being freed\n", pxParamMapTrav->sCmdName);
+				pxParamMapTmp = pxParamMapTrav->pxParamNext;
+				HELP_FREE(pxParamMapTrav);
+				pxParamMapTrav = pxParamMapTmp;
+			}				
+			pxServTmp = pxServTrav->pxServiceNext;
+			HELP_FREE(pxServTrav);
+			pxServTrav = pxServTmp;
+		}
+
+	} 	
+
 
 	return 0;
 }
