diff -Npur mv-orig-hostapd-2.3/hostapd/config_file.c hostapd-2.3/hostapd/config_file.c
--- mv-orig-hostapd-2.3/hostapd/config_file.c	2016-07-08 09:26:49.000000000 +0300
+++ hostapd-2.3/hostapd/config_file.c	2016-07-12 17:02:26.000000000 +0300
@@ -2930,6 +2930,8 @@ static int hostapd_config_fill(struct ho
 				   line);
 			return 1;
 		}
+	} else if (os_strcmp(buf, "ignore_40_mhz_intolerant") == 0) {
+		conf->ignore_40_mhz_intolerant = atoi(pos);
 #endif /* CONFIG_IEEE80211N */
 #ifdef CONFIG_IEEE80211AC
 	} else if (os_strcmp(buf, "ieee80211ac") == 0) {
diff -Npur mv-orig-hostapd-2.3/src/ap/ap_config.h hostapd-2.3/src/ap/ap_config.h
--- mv-orig-hostapd-2.3/src/ap/ap_config.h	2016-07-08 09:26:49.000000000 +0300
+++ hostapd-2.3/src/ap/ap_config.h	2016-07-13 13:04:37.000000000 +0300
@@ -595,6 +595,7 @@ struct hostapd_config {
 	u16 channel_transition_delay_factor;
 	u16 scan_activity_threshold;
 	int obss_beacon_rssi_threshold;
+	int ignore_40_mhz_intolerant;
 	u32 vht_capab;
 	int ieee80211ac;
 	int require_vht;
diff -Npur mv-orig-hostapd-2.3/src/ap/hw_features.c hostapd-2.3/src/ap/hw_features.c
--- mv-orig-hostapd-2.3/src/ap/hw_features.c	2016-07-08 09:26:49.000000000 +0300
+++ hostapd-2.3/src/ap/hw_features.c	2016-07-13 13:04:23.000000000 +0300
@@ -735,6 +735,9 @@ static int ieee80211n_check_40mhz(struct
 	if (!iface->conf->secondary_channel)
 		return 0; /* HT40 not used */
 
+	if (iface->conf->ignore_40_mhz_intolerant)
+		return 0;
+
 	hostapd_set_state(iface, HAPD_IFACE_HT_SCAN);
 	wpa_printf(MSG_DEBUG, "Scan for neighboring BSSes prior to enabling "
 		   "40 MHz channel");
diff -Npur mv-orig-hostapd-2.3/src/ap/ieee802_11_ht.c hostapd-2.3/src/ap/ieee802_11_ht.c
--- mv-orig-hostapd-2.3/src/ap/ieee802_11_ht.c	2016-07-08 15:45:13.000000000 +0300
+++ hostapd-2.3/src/ap/ieee802_11_ht.c	2016-07-13 12:59:30.000000000 +0300
@@ -453,6 +453,12 @@ void ht40_intolerant_add(struct hostapd_
 	if (iface->current_mode->mode != HOSTAPD_MODE_IEEE80211G)
 		return;
 
+	if (iface->conf->ignore_40_mhz_intolerant) {
+		wpa_printf(MSG_INFO, "HT: Ignore Forty MHz Intolerant that is set by STA " MACSTR
+				   " in Association Request", MAC2STR(sta->addr));
+		return;
+	}
+		
 	wpa_printf(MSG_INFO, "HT: Forty MHz Intolerant is set by STA " MACSTR
 		   " in Association Request", MAC2STR(sta->addr));
 
