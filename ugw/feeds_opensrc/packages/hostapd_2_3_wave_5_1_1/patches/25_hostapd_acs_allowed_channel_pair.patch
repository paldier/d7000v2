diff --exclude 'msvc*' -Npur orig/src/ap/hw_features.c patched/src/ap/hw_features.c
--- orig/src/ap/hw_features.c	2015-10-12 09:08:13.000000000 +0300
+++ patched/src/ap/hw_features.c	2015-10-12 12:32:44.000000000 +0300
@@ -221,12 +221,39 @@ int hostapd_prepare_rates(struct hostapd
 
 
 #ifdef CONFIG_IEEE80211N
+static int ieee80211n_is_allowed_ht40_channel(struct hostapd_iface *iface, int channel)
+{
+	struct hostapd_data *hapd = iface->bss[0];
+	int i, j;
+	u16 num_modes, flags;
+	struct hostapd_hw_modes *modes;
+
+	modes = hostapd_get_hw_feature_data(hapd, &num_modes, &flags);
+	if (modes == NULL) {
+		hostapd_logger(hapd, NULL, HOSTAPD_MODULE_IEEE80211,
+			       HOSTAPD_LEVEL_DEBUG,
+			       "Fetching hardware channel/rate support not "
+			       "supported.");
+		return 0;
+	}
+
+	for (i = 0; i < num_modes; i++) {
+		struct hostapd_hw_modes *feature = &modes[i];
+		for (j = 0; j < feature->num_channels; j++) {
+			if (feature->channels[j].flag & HOSTAPD_CHAN_DISABLED)
+				continue;
+			if (feature->channels[j].chan == channel) {
+				wpa_printf(MSG_MSGDUMP, "Allowed channel found: channel=%d", channel);
+				return 1;
+			}
+		}
+	}
+	return 0;
+}
+
 static int ieee80211n_allowed_ht40_channel_pair(struct hostapd_iface *iface)
 {
 	int sec_chan, ok, j, first;
-	int allowed[] = { 36, 44, 52, 60, 100, 108, 116, 124, 132, 149, 157,
-			  184, 192 };
-	size_t k;
 
 	if (!iface->conf->secondary_channel)
 		return 1; /* HT40 not used */
@@ -268,13 +295,8 @@ static int ieee80211n_allowed_ht40_chann
 	else
 		first = sec_chan;
 
-	ok = 0;
-	for (k = 0; k < ARRAY_SIZE(allowed); k++) {
-		if (first == allowed[k]) {
-			ok = 1;
-			break;
-		}
-	}
+	ok = ieee80211n_is_allowed_ht40_channel(iface, first);
+
 	if (!ok) {
 		wpa_printf(MSG_ERROR, "HT40 channel pair (%d, %d) not allowed",
 			   iface->conf->channel,
