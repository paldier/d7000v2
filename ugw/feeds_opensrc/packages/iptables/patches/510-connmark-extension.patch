diff -Nuar iptables-1.4.19.1/extensions/libxt_CONNEXTMARK.c iptables-1.4.19.1_modified/extensions/libxt_CONNEXTMARK.c
--- iptables-1.4.19.1/extensions/libxt_CONNEXTMARK.c	1970-01-01 05:30:00.000000000 +0530
+++ iptables-1.4.19.1_modified/extensions/libxt_CONNEXTMARK.c	2013-12-30 19:34:26.000000000 +0530
@@ -0,0 +1,112 @@
+/*
+ * Shared library add-on to iptables to add CONNEXTMARK target support.
+ *
+ * Based on the MARK and CONNMARK targets.
+ *
+ * Copyright (C) 2006 Red Hat, Inc., James Morris <jmorris@redhat.com>
+ */
+#include <stdio.h>
+#include <xtables.h>
+#include <linux/netfilter/xt_CONNEXTMARK.h>
+
+#define PFX "CONNEXTMARK target: "
+
+enum {
+	O_SAVE = 0,
+	O_RESTORE,
+	F_SAVE    = 1 << O_SAVE,
+	F_RESTORE = 1 << O_RESTORE,
+};
+
+static void CONNEXTMARK_help(void)
+{
+	printf(
+"CONNEXTMARK target options:\n"
+"  --save                   Copy security mark from packet to conntrack\n"
+"  --restore                Copy security mark from connection to packet\n");
+}
+
+static const struct xt_option_entry CONNEXTMARK_opts[] = {
+	{.name = "save", .id = O_SAVE, .excl = F_RESTORE, .type = XTTYPE_NONE},
+	{.name = "restore", .id = O_RESTORE, .excl = F_SAVE,
+	 .type = XTTYPE_NONE},
+	XTOPT_TABLEEND,
+};
+
+static void CONNEXTMARK_parse(struct xt_option_call *cb)
+{
+	struct xt_connextmark_target_info *info = cb->data;
+
+	xtables_option_parse(cb);
+	switch (cb->entry->id) {
+	case O_SAVE:
+		info->mode = CONNEXTMARK_SAVE;
+		break;
+	case O_RESTORE:
+		info->mode = CONNEXTMARK_RESTORE;
+		break;
+	}
+}
+
+static void CONNEXTMARK_check(struct xt_fcheck_call *cb)
+{
+	if (cb->xflags == 0)
+		xtables_error(PARAMETER_PROBLEM, PFX "parameter required");
+}
+
+static void print_connextmark(const struct xt_connextmark_target_info *info)
+{
+	switch (info->mode) {
+	case CONNEXTMARK_SAVE:
+		printf("save");
+		break;
+		
+	case CONNEXTMARK_RESTORE:
+		printf("restore");
+		break;
+		
+	default:
+		xtables_error(OTHER_PROBLEM, PFX "invalid mode %hhu\n", info->mode);
+	}
+}
+
+static void
+CONNEXTMARK_print(const void *ip, const struct xt_entry_target *target,
+                  int numeric)
+{
+	const struct xt_connextmark_target_info *info =
+		(struct xt_connextmark_target_info*)(target)->data;
+
+	printf(" CONNEXTMARK ");
+	print_connextmark(info);
+}
+
+static void
+CONNEXTMARK_save(const void *ip, const struct xt_entry_target *target)
+{
+	const struct xt_connextmark_target_info *info =
+		(struct xt_connextmark_target_info*)target->data;
+
+	printf(" --");
+	print_connextmark(info);
+}
+
+static struct xtables_target connextmark_target = {
+	.family		= NFPROTO_UNSPEC,
+	.name		= "CONNEXTMARK",
+	.version	= XTABLES_VERSION,
+	.revision	= 0,
+	.size		= XT_ALIGN(sizeof(struct xt_connextmark_target_info)),
+	.userspacesize	= XT_ALIGN(sizeof(struct xt_connextmark_target_info)),
+	.help		= CONNEXTMARK_help,
+	.print		= CONNEXTMARK_print,
+	.save		= CONNEXTMARK_save,
+	.x6_parse	= CONNEXTMARK_parse,
+	.x6_fcheck	= CONNEXTMARK_check,
+	.x6_options	= CONNEXTMARK_opts,
+};
+
+void _init(void)
+{
+	xtables_register_target(&connextmark_target);
+}
diff -Nuar iptables-1.4.19.1/include/linux/netfilter/xt_CONNEXTMARK.h iptables-1.4.19.1_modified/include/linux/netfilter/xt_CONNEXTMARK.h
--- iptables-1.4.19.1/include/linux/netfilter/xt_CONNEXTMARK.h	1970-01-01 05:30:00.000000000 +0530
+++ iptables-1.4.19.1_modified/include/linux/netfilter/xt_CONNEXTMARK.h	2013-12-30 19:38:51.000000000 +0530
@@ -0,0 +1,15 @@
+#ifndef _XT_CONNEXTMARK_H_target
+#define _XT_CONNEXTMARK_H_target
+
+#include <linux/types.h>
+
+enum {
+	CONNEXTMARK_SAVE = 1,
+	CONNEXTMARK_RESTORE,
+};
+
+struct xt_connextmark_target_info {
+	__u8 mode;
+};
+
+#endif /*_XT_CONNEXTMARK_H_target */
