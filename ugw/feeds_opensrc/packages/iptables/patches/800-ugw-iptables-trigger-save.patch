--- a/extensions/libipt_TRIGGER.c
+++ b/extensions/libipt_TRIGGER.c
@@ -169,13 +169,39 @@ save(const void *ip, const struct xt_ent
 {
 	struct ipt_trigger_info *info = (struct ipt_trigger_info *)target->data;
 
-	printf("--trigger-proto ");
-	if (info->proto == IPPROTO_TCP)
-		printf("tcp ");
-	else if (info->proto == IPPROTO_UDP)
-		printf("udp ");
-	printf("--trigger-match %hu-%hu ", info->ports.mport[0], info->ports.mport[1]);
-	printf("--trigger-relate %hu-%hu ", info->ports.rport[0], info->ports.rport[1]);
+	/* UGW : if TARGET trigger is defined iptables-save is not working with existing iptables code. So it is modified to make it work*/
+	/* Add trigger type if it mentioned*/
+	switch(info->type) {
+	case IPT_TRIGGER_DNAT:
+		printf(" --trigger-type dnat ");
+		break;
+	case IPT_TRIGGER_IN:
+		printf(" --trigger-type in ");
+		break;
+	case IPT_TRIGGER_OUT:
+		printf(" --trigger-type out ");
+		break;
+	}
+
+	/* Add trigger proto if it mentioned*/
+	switch(info->proto) {
+	case IPPROTO_TCP:
+		printf("--trigger-proto tcp ");
+		break;
+	case IPPROTO_UDP:
+		printf("--trigger-proto udp ");
+		break;
+	case 0:
+		printf("--trigger-proto all ");
+		break;
+	}
+
+	/* Add trigger match if it mentioned*/
+	if(info->ports.mport[0] != 0)
+		printf("--trigger-match %hu-%hu ", info->ports.mport[0], info->ports.mport[1]);
+	/* Add trigger relate if it mentioned*/
+	if(info->ports.rport[0] != 0)
+		printf("--trigger-relate %hu-%hu ", info->ports.rport[0], info->ports.rport[1]);
 }
 
 static struct xtables_target trigger = {
