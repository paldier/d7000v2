Index: wide-dhcpv6-20080615/prefixconf.c
===================================================================
--- wide-dhcpv6-20080615.orig/prefixconf.c	2009-12-16 17:23:03.000000000 +0530
+++ wide-dhcpv6-20080615/prefixconf.c	2009-12-16 17:39:13.127044000 +0530
@@ -125,32 +125,228 @@
 
 #ifdef UPDATE_PD_IN_RADVD /* Added by Sundar */
 static int 
-update_radvd_conf(pinfo, pif)
-	struct dhcp6_prefix  *pinfo;
-	struct prefix_ifconf *pif;
+update_radvd_conf(a, pinfo, pre_len)
+	struct in6_addr *a;
+	struct prefix_ifconf *pinfo;
+	int pre_len;
 {
-	int fd;
-	char buf[100];
-
-	if((fd = open("/var/radvd.conf", O_RDWR|O_CREAT)) == -1) {
-		dprintf(LOG_NOTICE, FNAME, "couldn't create/open file \"radvd.conf\"");
+	FILE *fd, *rd;
+	char *buf, *buf5, *buf1, *buf2, *buf3, *buf6;
+	char *tp1, *tp2;
+	int t, flag = 0;
+
+     dprintf(LOG_DEBUG, FNAME, "Adding prefix %s/%d in radvd.conf pif->ifname = %s",                                                   
+                        in6addr2str(a, 0), pre_len , pinfo->ifname); 
+
+	system("touch /var/radvd_pd");
+	rd = fopen("/var/radvd.conf", "w+");
+	fclose(rd);
+
+	buf3 = (char *) malloc (80);
+
+	sprintf (buf3,"%s/%d",in6addr2str(a, 0),pre_len);
+
+	
+	strncpy(buf3,buf3,strlen(buf3));
+
+        buf5 = (char *) malloc (512);                                                                                                                 
+        buf1 = (char *) malloc (10);                                                                                                                  
+        buf2 = (char *) malloc (80);         
+
+	fd = fopen ("/var/radvd_pd" , "r+");
+	if (fd == NULL)
+	{
+		free(buf3);
+		fclose(fd);
+		return 0;
+	}
+        fseek(fd,0L,SEEK_END);
+        t = ftell(fd);
+        fclose(fd);
+	
+        if (t == 0)
+        {
+                flag = 2;
+                goto test;
+        }
+
+        buf = (char *) malloc (t);
+
+	fd = fopen ("/var/radvd_pd" , "r+");
+	if (fd == NULL)
+	{
+		free(buf);
+		free(buf5);
+		free(buf1);
+		free(buf2);
+		free(buf3);
+		fclose(fd);
 		return -1;
 	}
+	fread (buf,t,1,fd);
+	
+	rewind(fd);
+	
+	while (!feof(fd))
+	{
+                fscanf (fd,"%s %s", buf1 , buf2);
+        
+        
+	        if (!strncmp(buf1,pinfo->ifname,strlen(buf1)))
+                {
+                        if (!strncmp (buf2,buf3,strlen(buf2)))
+                        {
+                                // no chnage
+               			free(buf);
+				free(buf5);
+				free(buf1);
+				free(buf2);
+				free(buf3);
+				fclose(fd);
+				return 0;    
+                        }
+                        else
+                        {
+				memset (buf5,'\0',512);
+                                flag =1 ;
+                                tp1 = strstr(buf,buf2);
+                                tp2 = strstr(tp1,"\n");
+                                strncpy (buf5,buf,(tp1-buf));
+                                strncat (buf5,buf3,strlen(buf3));
+
+                                strcat(buf5,tp2);
+                                break;
+                        }
+                }
+                else{
+                        flag = 3;
+		}
+
+        }
+        fclose (fd);
 
-	if(lseek(fd, 0, SEEK_END) == -1) {
-		dprintf(LOG_NOTICE, FNAME, "error moving to EOF in radvd.conf");
+        if (flag == 1)
+        {
+                fd = fopen ("/var/radvd_pd" , "w+");
+        	if (fd == NULL)          
+		{                                                                                                                                             
+                free(buf);                                                                                                                            
+                free(buf5);                                                                                                                           
+                free(buf1);                                                                                                                           
+                free(buf2);                                                                                                                           
+                free(buf3);                                                                                                                           
+                fclose(fd);                                                                                                                           
+                return -1;                                                                                                                             
+        	}
+               
+                fwrite(buf5,1,strlen(buf5),fd);
+                fclose(fd);
+        }
+
+	if (flag == 3)
+		free(buf);
+
+test:   if (flag == 2 || flag == 3) 
+ 	{
+
+           fd = fopen ("/var/radvd_pd" , "r+");
+            if (fd == NULL)
+	     {              	
+		if (flag == 3)
+		{
+			free(buf5);
+			free(buf1);
+			free(buf2);
+			free(buf);
+		}                                                                                                                               
+                free(buf3);                                                                                                                           
+                fclose(fd);                                                                                                                           
+                return -1;                                                                                                                             
+             }               
+                        fseek(fd,0L,SEEK_END);
+			buf = (char *) malloc (100);
+			memset(buf, '\0',100);
+                        sprintf(buf,"%s %s \n",pinfo->ifname , buf3);
+			strncpy(buf,buf,strlen(buf));
+                        fwrite(buf,1,strlen(buf),fd);
+			free (buf);
+                        fclose(fd);
+
+       }
+
+if (flag == 3 || flag == 1)
+{
+	free(buf3);
+}
+
+
+if (flag != 0 )
+{
+
+	fd = fopen ("/var/radvd_pd" , "r+");
+	
+	if((rd = fopen("/var/radvd.conf", "w+")) == NULL) {
+		dprintf(LOG_NOTICE, FNAME, "couldn't create/open file \"radvd.conf\"");
+		 free(buf1);
+		free(buf2); 
+		free(buf5);    
 		return -1;
-	}
+	}	
 
-	memset(buf, 0, 100);
-	sprintf(buf, "\ninterface %s {\n\tprefix %s/%d\n}\n", pif->ifname, 
-		    in6addr2str(&pinfo->addr, 0), pinfo->plen);
-			
-	if(write(fd, buf, strlen(buf)) == -1) {
-		dprintf(LOG_NOTICE, FNAME, "error writing prefix in radvd.conf");
+	buf6 = (char *) malloc(100);	
+	while (!feof(fd))
+	{
+		memset(buf5, '\0', 512);
+		memset(buf1, '\0' ,10);
+		memset(buf2, '\0' ,80);
+		memset(buf6, '\0', 100);
+	
+		fscanf (fd,"%s %s", buf1 , buf2);
+		
+		if ((strlen(buf1) == 0) || (strlen(buf2) == 0))
+		{
+			continue;	
+		}
+       
+	if(fseek(rd, 0L, SEEK_END) != 0) {                                                                                                            
+                dprintf(LOG_NOTICE, FNAME, "error moving to EOF in radvd.conf");                                                                      
+                free(buf1);
+		free(buf2);
+		free(buf5);
+		free(buf6);
+		return -1;                                                                                                                            
+        }
+
+	memset(buf5,0, 512);
+
+
+
+	strcpy(buf5,"\ninterface ");
+	strncat(buf5,buf1,strlen(buf1));
+
+	sprintf(buf6, " {\n\tAdvSendAdvert on;\n\tAdvRetransTimer 1000;\n\tprefix %s ",buf2);
+	strncat(buf5,buf6,strlen(buf6));
+	strcat(buf5,"{\n\t\tAdvValidLifetime 2592000;\n\t\tAdvPreferredLifetime 604800;\n\t\tAdvOnLink on;\n\t\tAdvAutonomous on;\n\t};\n};\n");
+
+
+
+ dprintf(LOG_DEBUG, FNAME, "in radvd %s/%d in radvd.conf pif->ifname = %s",                                                                                          in6addr2str(a, 0), pre_len , pinfo->ifname);     
+	
+		fwrite(buf5,1,strlen(buf5),rd);
 	}
 
-	close(fd);
+	free(buf6);
+	fclose(rd);
+	fclose(fd);
+}
+
+	free(buf5);
+	free(buf1);
+	free(buf2);
+
+	system(". /etc/rc.d/create_and_run_dhcp6c_cfg radvdstop 0 0 ");
+	system("sleep 1");
+	system(". /etc/rc.d/create_and_run_dhcp6c_cfg radvdstart 0 0");
 
 	return 0;
 }
@@ -522,15 +718,19 @@
 
 	/* configure the corresponding address */
 	ifpfx->ifaddr = ifpfx->paddr;
+
+	dprintf(LOG_DEBUG, FNAME, "Adding Radvd  %s/%d in radvd.conf a = %s and b=%d, paadr= %s", in6addr2str(&ifpfx->ifaddr,0) , ifpfx->plen, in6addr2str(a,0), ifpfx->plen, in6addr2str(&ifpfx->paddr, 0));  
 	for (i = 15; i >= pconf->ifid_len / 8; i--)
 		ifpfx->ifaddr.sin6_addr.s6_addr[i] = pconf->ifid[i];
 	if (pd_ifaddrconf(IFADDRCONF_ADD, ifpfx))
 		goto bad;
 
 #ifdef UPDATE_PD_IN_RADVD /* Added by Sundar */
-	dprintf(LOG_DEBUG, FNAME, "Adding prefix %s/%d in radvd.conf",
-			in6addr2str(&prefix->addr, 0), prefix->plen);
-	update_radvd_conf(prefix, pconf);
+	dprintf(LOG_DEBUG, FNAME, "Adding prefix %s/%d in radvd.conf a = %s and b=%d , paddr = %s",
+			in6addr2str(&ifpfx->ifaddr, 0), ifpfx->plen, in6addr2str(a,0), prefix->plen, in6addr2str(&ifpfx->paddr, 0));
+//	update_radvd_conf(prefix, pconf);
+
+	update_radvd_conf(a, pconf,ifpfx->plen);
 #endif
 
 	/* TODO: send a control message for other processes */
