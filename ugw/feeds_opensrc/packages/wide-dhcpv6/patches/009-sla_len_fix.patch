diff -Nuar wide-dhcpv6-20080615/config.c wide-dhcpv6-20080615_modif/config.c
--- wide-dhcpv6-20080615/config.c	2010-11-23 14:30:39.624602789 +0530
+++ wide-dhcpv6-20080615_modif/config.c	2010-11-23 14:37:32.204600895 +0530
@@ -470,7 +470,11 @@
 	}
 
 	pif->ifid_len = IFID_LEN_DEFAULT;
+#ifndef DHCP6_TAHI_FIX
 	pif->sla_len = SLA_LEN_DEFAULT;
+#else
+	pif->sla_len = SLA_LEN_UNSPECIFIED;
+#endif
 	if (get_default_ifid(pif)) {
 		dprintf(LOG_NOTICE, FNAME,
 		    "failed to get default IF ID for %s", pif->ifname);
diff -Nuar wide-dhcpv6-20080615/config.h wide-dhcpv6-20080615_modif/config.h
--- wide-dhcpv6-20080615/config.h	2010-11-23 14:30:39.624602789 +0530
+++ wide-dhcpv6-20080615_modif/config.h	2010-11-22 19:04:55.940015502 +0530
@@ -188,6 +188,9 @@
 };
 #define IFID_LEN_DEFAULT 64
 #define SLA_LEN_DEFAULT 16
+#ifdef DHCP6_TAHI_FIX
+#define SLA_LEN_UNSPECIFIED -1
+#endif
 
 typedef enum { IATYPE_PD, IATYPE_NA } iatype_t;
 struct ia_conf {
diff -Nuar wide-dhcpv6-20080615/dhcp6c.c wide-dhcpv6-20080615_modif/dhcp6c.c
--- wide-dhcpv6-20080615/dhcp6c.c	2010-11-23 14:30:39.634602666 +0530
+++ wide-dhcpv6-20080615_modif/dhcp6c.c	2010-11-24 14:54:34.974600630 +0530
@@ -1942,7 +1942,7 @@
 		    "unexpected information refresh time option (ignored)");
 	}
 
-#ifdef DHCP6_TAHI_FIX
+#if 0
 	/*  DHCPv6_Self_Test_P2_1_1_0, RFC 3633 - 61,62 */
 	/* 
 	 *	When the client receives a Reply message in response to a Renew 
diff -Nuar wide-dhcpv6-20080615/prefixconf.c wide-dhcpv6-20080615_modif/prefixconf.c
--- wide-dhcpv6-20080615/prefixconf.c	2010-11-23 14:30:39.534602517 +0530
+++ wide-dhcpv6-20080615_modif/prefixconf.c	2010-11-24 15:03:45.044601022 +0530
@@ -686,6 +686,12 @@
 	ifpfx->paddr.sin6_len = sizeof(struct sockaddr_in6);
 #endif
 	ifpfx->paddr.sin6_addr = prefix->addr;
+#ifdef DHCP6_TAHI_FIX
+	dprintf(LOG_ERR, FNAME, "****Prefix len = %d*****\n", pconf->sla_len);
+	if(pconf->sla_len == SLA_LEN_UNSPECIFIED) {
+		pconf->sla_len = pconf->ifid_len - prefix->plen;
+	}
+#endif
 	ifpfx->plen = prefix->plen + pconf->sla_len;
 	/*
 	 * XXX: our current implementation assumes ifid len is a multiple of 8
