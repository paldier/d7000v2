--- org/wide-dhcpv6-20080615/common.c	2011-06-20 15:34:44.000000000 +0530
+++ wide-dhcpv6-20080615/common.c	2011-06-20 18:01:57.324410282 +0530
@@ -1121,6 +1121,11 @@
 			dprintf(LOG_ERR, FNAME, "DUID file corrupted");
 			goto fail;
 		}
+		if(len <= 0 && len > 256) {
+			dprintf(LOG_INFO, FNAME, "Invalid duid len");
+			goto fail;
+		}
+
 	} else {
 		int l;
 		
@@ -1130,14 +1135,18 @@
 		
 		system("mkdir /var/db");
 		buf = (char *) malloc (256);
+		if(buf == NULL) {
+			dprintf(LOG_ERR, FNAME, "Unable to allocate 256 bytes");
+			goto fail;
+		}
 		memset(buf,0,256);
 		memset(duid, 0, sizeof(*duid));
         	if ((ret = ifx_GetObjData(FILE_RC_CONF, TAG_IPV6, "dhcpv6_len", IFX_F_GET_ANY, &outFlag, buf)) != IFX_SUCCESS) { 
-              		printf ("FAILED TO GET THE DHCPv6_len ret = %d \n", ret);
+              		printf ("FAILED TO GET THE DHCPv6_len ret = %lu\n", ret);
 			free(buf);		
 			goto gen_duid;
 		}
-		strncpy(buf,buf,strlen(buf));
+		/* strncpy(buf,buf,strlen(buf)); */
 
 		len = (size_t)atoi(buf);
 
@@ -1162,7 +1171,7 @@
 			duid_flag = 1;
                         goto gen_duid;
                 }
-		strncpy(buf,buf,strlen(buf));    
+		/* strncpy(buf,buf,strlen(buf));  */
 
 		if (!strcmp(buf,"0"))
 		{
@@ -1177,7 +1186,7 @@
 		memset (tmpbuf,'\0',256);
 		cp = buf;
 		strncpy(tmpbuf,cp,sizeof(u_int32_t));
-		strncpy(tmpbuf,tmpbuf,strlen(tmpbuf));
+		/* strncpy(tmpbuf,tmpbuf,strlen(tmpbuf)); */
 		tp = atol(tmpbuf);	
 		dp->dh6_duid1_type = htonl(tp);
 
@@ -1228,18 +1237,24 @@
      
 		len = 0;
 	
-       		if ((fp = fopen(idfile, "r")) == NULL && errno != ENOENT)
+       		if ((fp = fopen(idfile, "r")) == NULL )
 		{
                		 dprintf(LOG_NOTICE, FNAME, "failed to open DUID file: %s",
                     idfile);
+			goto fail;
 		}
  
                /* decode length */                                                                                                                   
                 if (fread(&len, sizeof(len), 1, fp) != 1) {                                                                                           
                         dprintf(LOG_ERR, FNAME, "DUID file corrupted");                                                                               
-                        goto fail;                                                                                                                    
-                 }     
 			
+                        goto fail;                                                                                                                    
+                }     
+		if(len <= 0 && len > 64) {
+			dprintf(LOG_INFO, FNAME, "Invalid duid len");
+			goto fail;
+		}
+
 			goto cpy_duid;	                                       
 		}
 
@@ -1255,6 +1270,11 @@
 
 	memset(duid, 0, sizeof(*duid));
 	duid->duid_len = len;
+	if(len <= 0 && len > 64) {
+		dprintf(LOG_INFO, FNAME, "Invalid duid len");
+		goto fail;
+	}
+		
 	if ((duid->duid_id = (char *)malloc(len)) == NULL) {
 		dprintf(LOG_ERR, FNAME, "failed to allocate memory");
 		goto fail;
@@ -1301,9 +1321,13 @@
 #ifdef RCCONF_CHANGE
 	if (duid_flag == 1){
 		buf = (char *) malloc(256);   
+		if(buf == NULL) {
+			dprintf(LOG_DEBUG, FNAME, "Unable to allocate memory 256 bytes");
+			goto fail;
+		}
                 
 		sprintf(buf,"dhcpv6_len=\"%d\"\n",len);                                                                                                                
-                strncpy(buf,buf,strlen(buf));                                                                                                         
+                /* strncpy(buf,buf,strlen(buf)); */  
                 ifx_SetObjData(FILE_RC_CONF, TAG_IPV6, flags, 1, buf);                                                                                
                 memset(buf,0,256);
 		cp = buf;
