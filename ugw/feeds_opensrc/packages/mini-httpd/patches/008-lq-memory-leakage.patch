--- mini_httpd-1.19/mini_httpd.c	2011-04-07 16:28:47.818623921 +0530
+++ /home/singmano/mini_httpd.c	2011-04-07 16:27:40.998622808 +0530
@@ -1559,7 +1559,6 @@
 	    useragent = cp;
 	    }
 	}
-
     if ( strcasecmp( method_str, get_method_str( METHOD_GET ) ) == 0 )
 	method = METHOD_GET;
     else if ( strcasecmp( method_str, get_method_str( METHOD_HEAD ) ) == 0 )
@@ -1651,11 +1650,14 @@
 	    }
 
 	/* Nope, no index file, so it's an actual directory request. */
+	/* manohar : We don't have any directory to request. */
+#if 0
 	do_dir();
-
+#endif
 	got_one: ;
 	}
-
+    free(request);
+	request=NULL;
 #ifdef USE_SSL
     SSL_free( ssl );
 #endif /* USE_SSL */
@@ -2041,12 +2043,6 @@
 	*/
 	}
 
-    /* Make the environment vector. */
-    envp = make_envp();
-
-    /* Make the argument vector. */
-    argp = make_argp();
-
     /* Set up stdin.  For POSTs we may have to set up a pipe from an
     ** interposer process, depending on if we've read some of the data
     ** into our buffer.  We also have to do this for all SSL CGIs.
@@ -2093,7 +2089,15 @@
 	if ( conn_fd != STDIN_FILENO )
 	    (void) dup2( conn_fd, STDIN_FILENO );
 	}
-     return;
+
+	/*manohar : This part of the code is not required currently so we can uncomment this portion if required in future*/
+#if 0  
+	/* Make the environment vector. */
+    envp = make_envp();
+
+    /* Make the argument vector. */
+    argp = make_argp();
+
     /* Set up stdout/stderr.  For SSL, or if we're doing CGI header parsing,
     ** we need an output interposer too.
     */
@@ -2186,6 +2190,8 @@
 
     /* Something went wrong. */
     return send_error( 500, "Internal Error", "", "Something unexpected went wrong running a CGI program." );
+#endif
+	return;
     }
 
 
@@ -2365,6 +2371,8 @@
 
 	/* Write the saved headers. */
 	(void) my_write(conn_fd,headers, headers_len );
+	free(headers);
+	headers=NULL;
 	}
 
     /* Echo the rest of the output. */
@@ -2878,11 +2886,8 @@
 	buflen = snprintf( buf, MAX_MEMORY_BUFF, "Last-Modified: %s\015\012", timebuf );
 	add_to_response( buf, buflen );
 	}
-      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Connection: close\015\012\015\012" );
 #endif
-      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Connection: keep-alive\015\012" );
-      add_to_response( buf, buflen );
-      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Keep-Alive: 115\015\012\015\012" );
+      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Connection: close\015\012\015\012" );
       add_to_response( buf, buflen );
     }
 
@@ -2945,6 +2950,8 @@
 send_response( void )
     {
     (void) my_write(conn_fd,response, response_len );
+	free(response);/*manohar : once the response is send memory should be freed */
+	response=NULL;
     }
 
 
@@ -3234,8 +3241,14 @@
     ** the URL does match the url pattern, it's an illegal reference.
     */
     if ( ! match( lp, refhost ) && match( url_pattern, path ) )
+	{
+		free(refhost);
+		refhost=NULL;
 	return 0;
+	}
     /* Otherwise ok. */
+	free(refhost);
+	refhost=NULL;
     return 1;
     }
 
