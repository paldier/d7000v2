--- mini_httpd-1.19/mini_httpd.c	2011-01-11 20:24:05.425901399 +0530
+++ /home/singmano/mini_httpd.c9	2011-01-11 20:23:11.064651114 +0530
@@ -79,18 +79,19 @@
    #include "dmalloc.h"
 #endif
 
-//#define LTQ_APP_DEBUG
-#ifdef LTQ_APP_DEBUG
-#define dsyslog syslog
-#else
-#define dsyslog 
-#endif
+#define MAX_MEMORY_BUFF 8192    /* IO buffer */
+
+typedef struct
+{
+  char buf[MAX_MEMORY_BUFF];
+} HttpdConfig;
+
+static HttpdConfig config_v;
+static HttpdConfig *config = &config_v;
 
 int (*ifx_function_ptr)(struct ifx_exportFuncList *);
 struct ifx_exportFuncList ifx_exportedFunc;
 
-char *error;
-int i;
 void *dlHandle = NULL;
 
 static void sendHeaders(int s, char* title, char* extra_header, char* me, char* mt, off_t b, time_t mod,char *redirectURL);
@@ -374,8 +375,9 @@
     fd_set lfdset;
     int maxfd;
     usockaddr usa;
-    int sz, r;
+    int sz, r,i;
     char* cp;
+    char *error;
 
     /* Parse args. */
     argv0 = argv[0];
@@ -634,7 +636,6 @@
   {
     fprintf (stderr, "%s\n", error);
     fprintf(stderr,"Error : dlsym fails. Cannot find ifx_RegisterFunc\n");
-    //return start_ptr - rcv_buff;
   }else
   {
     ifx_exportedFunc.ifx_sendHeaders = (IFX_SENDHEADERS)sendHeaders;
@@ -664,7 +665,6 @@
       }
     }
   }
-//  signal(SIGPIPE, SIG_IGN); //XXX : Added to make the server ignore premature close sent by the IE.
 
     if ( ! debug )
 	{
@@ -932,7 +932,8 @@
 	    }
 
 	/* Fork a sub-process to handle the connection. */
-	r = fork();
+	/*r = fork();*/
+        r =0;
 	if ( r < 0 )
 	    {
 	    syslog( LOG_CRIT, "fork - %m" );
@@ -943,12 +944,12 @@
 	    {
 	    /* Child process. */
 	    client_addr = usa;
-	    if ( listen4_fd != -1 )
+	    /*if ( listen4_fd != -1 )
 		(void) close( listen4_fd );
 	    if ( listen6_fd != -1 )
-		(void) close( listen6_fd );
+        	(void) close( listen6_fd );*/
 	    handle_request();
-	    exit( 0 );
+	    /*exit( 0 );*/
 	    }
 	(void) close( conn_fd );
 	}
@@ -1235,9 +1236,7 @@
     char* line;
     char* cp;
     int r, file_len, i;
-    const char* index_names[] = {
-	"index.html", "index.htm", "index.xhtml", "index.xht", "Default.htm",
-	"index.cgi", "login.asp" };
+    const char* index_names[] = {"frame_setup.htm" };
 
     /* Set up the timeout for reading. */
 #ifdef HAVE_SIGSET
@@ -1245,7 +1244,7 @@
 #else /* HAVE_SIGSET */
     (void) signal( SIGALRM, handle_read_timeout );
 #endif /* HAVE_SIGSET */
-    (void) alarm( READ_TIMEOUT );
+    /*(void) alarm( READ_TIMEOUT );*/
 
     /* Initialize the request variables. */
     remoteuser = (char*) 0;
@@ -1296,13 +1295,14 @@
     start_request();
     for (;;)
 	{
-	char buf[10000];
-	int r = my_read(conn_fd,buf, sizeof(buf) );
+        char *buf = config->buf;
+	/*char buf[10000];*/
+	int r = my_read(conn_fd,buf,MAX_MEMORY_BUFF );
 	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
 	    continue;
 	if ( r <= 0 )
 	    break;
-	(void) alarm( READ_TIMEOUT );
+	/*(void) alarm( READ_TIMEOUT );*/
 	add_to_request( buf, r );
 	if ( strstr( request, "\015\012\015\012" ) != (char*) 0 ||
 	     strstr( request, "\012\012" ) != (char*) 0 )
@@ -1415,14 +1415,13 @@
 #else /* HAVE_SIGSET */
     (void) signal( SIGALRM, handle_write_timeout );
 #endif /* HAVE_SIGSET */
-    (void) alarm( WRITE_TIMEOUT );
+    /*(void) alarm( WRITE_TIMEOUT );*/
 
     r = stat( file, &sb );
     if ( r < 0 )
 	r = get_pathinfo();
    if ( r < 0 ){
-        	   
-    syslog( LOG_INFO, "File not found.");
+     /*syslog( LOG_INFO, "File not found.");*/
     } 
     file_len = strlen( file );
     if ( ! S_ISDIR( sb.st_mode ) )
@@ -1558,15 +1557,16 @@
 static void
 do_file( void )
     {
-    char buf[10000];
+    /*char buf[10000];*/
     char mime_encodings[500];
     const char* mime_type;
     char fixed_mime_type[500];
     char* cp;
     int fd;
     int writtenCount;
+    char *buf = config->buf;
     /* Check authorization for this directory. */
-    (void) strncpy( buf, file, sizeof(buf) );
+    (void) strncpy( buf, file, MAX_MEMORY_BUFF );
     cp = strrchr( buf, '/' );
     if ( cp == (char*) 0 )
 	(void) strcpy( buf, "." );
@@ -1623,7 +1623,7 @@
     send_response();
     if ( method == METHOD_HEAD)
 	return;
-/*   if ( sb.st_size > 0 )
+/*  if ( sb.st_size > 0 )
 	{
 
 
@@ -1644,30 +1644,30 @@
 
 #endif
 	}*/
- if ( sb.st_size > 0 )
-	         {
-	int count;
-	 int bNewFile = 1;
-                 memset(buf,0x00,sizeof(buf));
-         while ((count = my_read(fd, buf,sb.st_size)) > 0) {
-		      if ((strstr(fixed_mime_type,"html") != NULL ) || (strstr(file,"asp") != NULL)
-							                                ){
-			                                     //ifx_psendDHTMLFile
-        writtenCount = (*ifx_psendDHTMLFile)(buf,host,count,conn_fd,&bNewFile);
-        if (writtenCount != count && writtenCount >= 0)  {
-               if(lseek(fd,writtenCount - count,SEEK_CUR) == -1){
-                              fprintf(stderr,"lseek failed ERROR\n");
-                }
-           }
-         }
-        else {
-                 if (my_write(conn_fd, buf, count ) != count)
-                                  break;
-              }
-                 memset(buf,0x00,sizeof(buf));
-                 bNewFile = 0;
-        }
-		 }
+    if ( sb.st_size > 0 )
+    {
+	    int count;
+	    int bNewFile = 1;
+	    memset(buf,0x00,MAX_MEMORY_BUFF);
+	    while ((count = my_read(fd, buf,MAX_MEMORY_BUFF-1)) > 0) {
+		    if ((strstr(fixed_mime_type,"html") != NULL ) || (strstr(file,"asp") != NULL)
+		       ){
+			    writtenCount = (*ifx_psendDHTMLFile)(buf,host,count,conn_fd,&bNewFile);
+			    fsync(conn_fd);
+			    if (writtenCount != count && writtenCount >= 0)  {
+				    if(lseek(fd,writtenCount - count,SEEK_CUR) == -1){
+					    fprintf(stderr,"lseek failed ERROR\n");
+				    }
+			    }
+		    }
+		    else {
+			    if (my_write(conn_fd, buf, count ) != count)
+				    break;
+		    }
+		    memset(buf,0x00,MAX_MEMORY_BUFF);
+		    bNewFile = 0;
+	    }
+    }
     (void) close( fd );
     }
 
@@ -1675,7 +1675,8 @@
 static void
 do_dir( void )
     {
-    char buf[10000];
+    char *buf = config->buf;
+    /*char buf[10000];*/
     size_t buflen;
     char* contents;
     size_t contents_size, contents_len;
@@ -1709,7 +1710,7 @@
 #endif /* HAVE_SCANDIR */
 
     contents_size = 0;
-    buflen = snprintf( buf, sizeof(buf), "\
+    buflen = snprintf( buf, MAX_MEMORY_BUFF, "\
 <HTML>\n\
 <HEAD><TITLE>Index of %s</TITLE></HEAD>\n\
 <BODY BGCOLOR=\"#99cc99\" TEXT=\"#000000\" LINK=\"#2020ff\" VLINK=\"#4040cc\">\n\
@@ -1740,7 +1741,7 @@
 	for (;;)
 	    {
 	    size_t r;
-	    r = fread( buf, 1, sizeof(buf), fp );
+	    r = fread( buf, 1,MAX_MEMORY_BUFF, fp );
 	    if ( r == 0 )
 		break;
 	    add_to_buf( &contents, &contents_size, &contents_len, buf, r );
@@ -1749,7 +1750,7 @@
 	}
 #endif /* HAVE_SCANDIR */
 
-    buflen = snprintf( buf, sizeof(buf), "\
+    buflen = snprintf( buf,MAX_MEMORY_BUFF, "\
 </PRE>\n\
 <HR>\n\
 <ADDRESS><A HREF=\"%s\">%s</A></ADDRESS>\n\
@@ -1773,9 +1774,10 @@
     struct stat sb;
     char f_time[20];
     static char encname[1000];
-    static char buf[2000];
+    char *buf = config->buf;
+    /*static char buf[2000];*/
 
-    (void) snprintf( buf, sizeof(buf), "%s/%s", dir, name );
+    (void) snprintf( buf, MAX_MEMORY_BUFF, "%s/%s", dir, name );
     if ( lstat( buf, &sb ) < 0 )
 	return "???";
     (void) strftime( f_time, sizeof( f_time ), "%d%b%Y %H:%M", localtime( &sb.st_mtime ) );
@@ -1856,7 +1858,7 @@
 #ifdef USE_SSL
     if ( ( method == METHOD_POST && request_len > request_idx ) || do_ssl )
 #else /* USE_SSL */
-    if ( ( method == METHOD_POST && request_len > request_idx ) )
+    if ( ( method == METHOD_POST ))//&& request_len > request_idx ) )
 #endif /* USE_SSL */
 	{
 	int p[2];
@@ -1876,18 +1878,17 @@
 	    }
 	(void) close( p[1] );
 
- /*   if(ifx_AuthHandler_ptr){
+    /*if(ifx_AuthHandler_ptr){
           if((*ifx_AuthHandler_ptr)(file,p[0],p[1]) == 1)  
             syslog( LOG_INFO, "ifx_AuthHandler_ptr failed"); 
       }*/	  
-  if (strncmp(file, "goform", 6) == 0){
-      if(ifx_psendGoform)
-        (*ifx_psendGoform)(file,get_method_str(method),query,content_length,cookie, content_type,host,p[0],p[1]);
-      else
-         send_error( 403, "Forbidden", "", "You must supply a local referer." );
-    }
-
-
+	if (strncmp(file, "goform", 6) == 0){
+		if(ifx_psendGoform)
+			(*ifx_psendGoform)(file,get_method_str(method),query,content_length,cookie, content_type,host,p[0],p[1]);
+		else
+			send_error( 403, "Forbidden", "", "You must supply a local referer." );
+	}
+	
 	if ( p[0] != STDIN_FILENO )
 	    {
 	    (void) dup2( p[0], STDIN_FILENO );
@@ -1900,7 +1901,7 @@
 	if ( conn_fd != STDIN_FILENO )
 	    (void) dup2( conn_fd, STDIN_FILENO );
 	}
-
+     return;
     /* Set up stdout/stderr.  For SSL, or if we're doing CGI header parsing,
     ** we need an output interposer too.
     */
@@ -2009,7 +2010,8 @@
     {
     size_t c;
     ssize_t r, r2;
-    char buf[1024];
+    char *buf = config->buf;
+    /*char buf[1024];*/
 
     c = request_len - request_idx;
     if ( c > 0 )
@@ -2019,7 +2021,7 @@
 	}
     while ( c < content_length )
 	{
-	r = my_read(conn_fd,buf, MIN( sizeof(buf), content_length - c ) );
+	r = my_read(conn_fd,buf, MIN( MAX_MEMORY_BUFF, content_length - c ) );
 	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
 	    {
 	    sleep( 1 );
@@ -2066,7 +2068,7 @@
 #endif /* USE_SSL */
 
     set_ndelay( conn_fd );
-    (void) read( conn_fd, buf, sizeof(buf) );
+    (void) read( conn_fd, buf, MAX_MEMORY_BUFF );
     clear_ndelay( conn_fd );
     }
 
@@ -2076,8 +2078,8 @@
 cgi_interpose_output( int rfd, int parse_headers )
     {
     ssize_t r, r2;
-    char buf[1024];
-
+    /*char buf[1024];*/
+    char *buf = config->buf;
     if ( ! parse_headers )
 	{
 	/* If we're not parsing headers, write out the default status line
@@ -2108,7 +2110,7 @@
 	add_to_buf( &headers, &headers_size, &headers_len, (char*) 0, 0 );
 	for (;;)
 	    {
-	    r = read( rfd, buf, sizeof(buf) );
+	    r = read( rfd, buf,MAX_MEMORY_BUFF );
 	    if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
 		{
 		sleep( 1 );
@@ -2161,7 +2163,7 @@
 	    default: title = "Something"; break;
 	    }
 	(void) snprintf(
-	    buf, sizeof(buf), "HTTP/1.0 %d %s\015\012", status, title );
+	    buf, MAX_MEMORY_BUFF, "HTTP/1.0 %d %s\015\012", status, title );
 	(void) my_write(conn_fd,buf, strlen( buf ) );
 
 	/* Write the saved headers. */
@@ -2171,7 +2173,7 @@
     /* Echo the rest of the output. */
     for (;;)
 	{
-	r = read( rfd, buf, sizeof(buf) );
+	r = read( rfd, buf,MAX_MEMORY_BUFF );
 	if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
 	    {
 	    sleep( 1 );
@@ -2403,7 +2405,7 @@
 	syslog(
 	    LOG_ERR, "%.80s auth file %.80s could not be opened - %m",
 	    ntoa( &client_addr ), authpath );
-	send_error( 403, "Forbidden", "", "File is protected 3." );
+	send_error( 403, "Forbidden", "", "File is protected." );
 	}
 
     /* Read it. */
@@ -2495,7 +2497,7 @@
 #ifdef USE_SSL
     SSL_free( ssl );
 #endif /* USE_SSL */
-    exit( 1 );
+    /*exit( 1 );*/
     }
 
 
@@ -2503,7 +2505,8 @@
 send_error_body( int s, char* title, char* text )
     {
     char filename[1000];
-    char buf[10000];
+    char *buf = config->buf;
+    /*char buf[10000];*/
     int buflen;
 
     if ( vhost && req_hostname != (char*) 0 )
@@ -2524,14 +2527,14 @@
 
     /* Send built-in error page. */
     buflen = snprintf(
-	buf, sizeof(buf), "\
+	buf, MAX_MEMORY_BUFF, "\
 <HTML>\n\
 <HEAD><TITLE>%d %s</TITLE></HEAD>\n\
 <BODY BGCOLOR=\"#cc9999\" TEXT=\"#000000\" LINK=\"#2020ff\" VLINK=\"#4040cc\">\n\
 <H4>%d %s</H4>\n",
 	s, title, s, title );
     add_to_response( buf, buflen );
-    buflen = snprintf( buf, sizeof(buf), "%s\n", text );
+    buflen = snprintf( buf, MAX_MEMORY_BUFF, "%s\n", text );
     add_to_response( buf, buflen );
     }
 
@@ -2540,7 +2543,8 @@
 send_error_file( char* filename )
     {
     FILE* fp;
-    char buf[1000];
+    char *buf = config->buf;
+    /*char buf[1000];*/
     size_t r;
 
     fp = fopen( filename, "r" );
@@ -2548,7 +2552,7 @@
 	return 0;
     for (;;)
 	{
-	r = fread( buf, 1, sizeof(buf), fp );
+	r = fread( buf, 1,MAX_MEMORY_BUFF, fp );
 	if ( r == 0 )
 	    break;
 	add_to_response( buf, r );
@@ -2561,24 +2565,25 @@
 static void
 send_error_tail( void )
     {
-    char buf[500];
+    char *buf = config->buf;
+    /*char buf[500];*/
     int buflen;
 
     if ( match( "**MSIE**", useragent ) )
 	{
 	int n;
-	buflen = snprintf( buf, sizeof(buf), "<!--\n" );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "<!--\n" );
 	add_to_response( buf, buflen );
 	for ( n = 0; n < 6; ++n )
 	    {
-	    buflen = snprintf( buf, sizeof(buf), "Padding so that MSIE deigns to show this error instead of its own canned one.\n" );
+	    buflen = snprintf( buf, MAX_MEMORY_BUFF, "Padding so that MSIE deigns to show this error instead of its own canned one.\n" );
 	    add_to_response( buf, buflen );
 	    }
-	buflen = snprintf( buf, sizeof(buf), "-->\n" );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "-->\n" );
 	add_to_response( buf, buflen );
 	}
 
-    buflen = snprintf( buf, sizeof(buf), "\
+    buflen = snprintf( buf, MAX_MEMORY_BUFF, "\
 <HR>\n\
 <ADDRESS><A HREF=\"%s\">%s</A></ADDRESS>\n\
 </BODY>\n\
@@ -2593,7 +2598,8 @@
     {
     time_t now, expires;
     char timebuf[100];
-    char buf[10000];
+    char *buf = config->buf;
+    /*char buf[10000];*/
     int buflen;
     int s100;
     const char* rfc1123_fmt = "%a, %d %b %Y %H:%M:%S GMT";
@@ -2602,49 +2608,49 @@
     bytes = b;
     make_log_entry();
     start_response();
-    buflen = snprintf( buf, sizeof(buf), "%s %d %s\015\012", protocol, status, title );
+    buflen = snprintf( buf, MAX_MEMORY_BUFF, "%s %d %s\015\012", protocol, status, title );
     add_to_response( buf, buflen );
-    buflen = snprintf( buf, sizeof(buf), "Server: %s\015\012", SERVER_SOFTWARE );
+    buflen = snprintf( buf, MAX_MEMORY_BUFF, "Server: %s\015\012", SERVER_SOFTWARE );
     add_to_response( buf, buflen );
     now = time( (time_t*) 0 );
     (void) strftime( timebuf, sizeof(timebuf), rfc1123_fmt, gmtime( &now ) );
-    buflen = snprintf( buf, sizeof(buf), "Date: %s\015\012", timebuf );
+    buflen = snprintf( buf, MAX_MEMORY_BUFF, "Date: %s\015\012", timebuf );
     add_to_response( buf, buflen );
     s100 = status / 100;
     if ( s100 != 2 && s100 != 3 )
 	{
-	buflen = snprintf( buf, sizeof(buf), "Cache-Control: no-cache,no-store\015\012" );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "Cache-Control: no-cache,no-store\015\012" );
 	add_to_response( buf, buflen );
 	}
    if(status == 302)
        {
-	 buflen = snprintf( buf, sizeof(buf), "Location: %s\015\012",redirectURL);
+	 buflen = snprintf( buf, MAX_MEMORY_BUFF, "Location: %s\015\012",redirectURL);
          add_to_response( buf, buflen );	 
        }
     if ( extra_header != (char*) 0 && extra_header[0] != '\0' )
 	{
-	buflen = snprintf( buf, sizeof(buf), "%s\015\012", extra_header );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "%s\015\012", extra_header );
 	add_to_response( buf, buflen );
 	}
     if ( me != (char*) 0 && me[0] != '\0' )
 	{
-	buflen = snprintf( buf, sizeof(buf), "Content-Encoding: %s\015\012", me );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "Content-Encoding: %s\015\012", me );
 	add_to_response( buf, buflen );
 	}
     if ( mt != (char*) 0 && mt[0] != '\0' )
 	{
-	buflen = snprintf( buf, sizeof(buf), "Content-Type: %s\015\012", mt );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "Content-Type: %s\015\012", mt );
 	add_to_response( buf, buflen );
 	}
-  /*  if ( bytes >= 0 )
+    /*if ( bytes >= 0 )
 	{
 	buflen = snprintf(
-	    buf, sizeof(buf), "Content-Length: %lld\015\012", (int64_t) bytes );
+	    buf, MAX_MEMORY_BUFF, "Content-Length: %lld\015\012", (int64_t) bytes );
 	add_to_response( buf, buflen );
 	}
     if ( p3p != (char*) 0 && p3p[0] != '\0' )
 	{
-	buflen = snprintf( buf, sizeof(buf), "P3P: %s\015\012", p3p );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "P3P: %s\015\012", p3p );
 	add_to_response( buf, buflen );
 	}*/
     if ( max_age >= 0 )
@@ -2652,18 +2658,21 @@
 	expires = now + max_age;
 	(void) strftime(
 	    timebuf, sizeof(timebuf), rfc1123_fmt, gmtime( &expires ) );
-	buflen = snprintf( buf, sizeof(buf),
+	buflen = snprintf( buf, MAX_MEMORY_BUFF,
 	    "Cache-Control: max-age=%d\015\012Expires: %s\015\012", max_age, timebuf );
 	add_to_response( buf, buflen );
 	}
- /*   if ( mod != (time_t) -1 )
+    /*if ( mod != (time_t) -1 )
 	{
 	(void) strftime(
 	    timebuf, sizeof(timebuf), rfc1123_fmt, gmtime( &mod ) );
-	buflen = snprintf( buf, sizeof(buf), "Last-Modified: %s\015\012", timebuf );
+	buflen = snprintf( buf, MAX_MEMORY_BUFF, "Last-Modified: %s\015\012", timebuf );
 	add_to_response( buf, buflen );
-	}*/
-     buflen = snprintf( buf, sizeof(buf), "Connection: close\015\012\015\012" );
+	}
+      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Connection: close\015\012\015\012" );*/
+      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Connection: keep-alive\015\012" );
+      add_to_response( buf, buflen );
+      buflen = snprintf( buf, MAX_MEMORY_BUFF, "Keep-Alive: 115\015\012\015\012" );
       add_to_response( buf, buflen );
     }
 
@@ -2751,12 +2760,13 @@
     else
 	{
 	/* mmap can't deal with files larger than 2GB. */
-	char buf[30000];
+	char *buf = config->buf;
+        /*char buf[30000];*/
 	ssize_t r, r2;
 
 	for (;;)
 	    {
-	    r = read( fd, buf, sizeof(buf) );
+	    r = read( fd, buf,MAX_MEMORY_BUFF );
 	    if ( r < 0 && ( errno == EINTR || errno == EAGAIN ) )
 		{
 		sleep( 1 );
