diff -Nur hostapd20-04/src/drivers/driver_mtlk.c hostapd20/src/drivers/driver_mtlk.c
--- hostapd20-04/src/drivers/driver_mtlk.c	2013-04-23 15:48:36.000000000 +0300
+++ hostapd20/src/drivers/driver_mtlk.c	2013-04-24 17:00:29.000000000 +0300
@@ -201,7 +201,7 @@
 	else if (alg == WPA_ALG_CCMP)
 		ext->alg = IW_ENCODE_ALG_CCMP;
 	else {
-		printf("%s: unknown/unsupported algorithm %d\n",
+		wpa_printf(MSG_ERROR, "%s: unknown/unsupported algorithm %d\n",
 			__func__, alg);
 		return -1;
 	}
@@ -395,7 +395,7 @@
 		}
 		rsnie = malloc(ielen);
 		if (!rsnie) {
-			printf("ERROR: can't allocate buffer "
+			wpa_printf(MSG_ERROR, "ERROR: can't allocate buffer "
 				"of %i bytes for RSNIE", ielen);
 			return;
 		}
@@ -853,7 +853,7 @@
 	if (len > sizeof(buf)) {
 		bp = malloc(len);
 		if (bp == NULL) {
-			printf("EAPOL frame discarded, cannot malloc temp "
+			wpa_printf(MSG_ERROR, "EAPOL frame discarded, cannot malloc temp "
 			       "buffer of size %lu!\n", (unsigned long) len);
 			return -1;
 		}
@@ -891,7 +891,7 @@
 
 	drv = os_zalloc(sizeof(struct mtlk_driver_data));
 	if (drv == NULL) {
-		printf("Could not allocate memory for mtlk driver data\n");
+		wpa_printf(MSG_ERROR, "Could not allocate memory for mtlk driver data\n");
 		goto bad;
 	}
 
@@ -936,7 +936,7 @@
 
 	if (ioctl(drv->ioctl_sock, SIOCSIWMODE, &iwr) < 0) {
 		perror("ioctl[SIOCSIWMODE]");
-		printf("Could not set interface to master mode!\n");
+		wpa_printf(MSG_ERROR, "Could not set interface to master mode!\n");
 		goto bad;
 	}
 
@@ -994,7 +994,7 @@
 
 	if (ioctl(drv->ioctl_sock, SIOCSIWESSID, &iwr) < 0) {
 		perror("ioctl[SIOCSIWESSID]");
-		printf("len=%d\n", len);
+		wpa_printf(MSG_ERROR, "len=%d\n", len);
 		return -1;
 	}
 	return 0;
