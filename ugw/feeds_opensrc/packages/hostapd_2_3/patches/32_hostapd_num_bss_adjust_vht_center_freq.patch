diff -ru --show-c-function hostap-724fce8-orig/src/ap/acs.c hostap-724fce8-modif/src/ap/acs.c
--- hostap-724fce8-orig/src/ap/acs.c	2015-10-29 16:49:05.000000000 +0200
+++ hostap-724fce8-modif/src/ap/acs.c	2015-10-29 17:22:53.000000000 +0200
@@ -1070,6 +1070,30 @@ static void acs_compute_badness(struct h
 	}
 }
 
+static void acs_numbss_adjust_vht_center_freq(struct hostapd_iface *iface, unsigned prim_chan_index)
+{
+	int offset;
+
+	wpa_printf(MSG_DEBUG, "ACS NUMBSS: Adjusting VHT center frequency");
+
+	switch (iface->conf->vht_oper_chwidth) {
+	case VHT_CHANWIDTH_USE_HT:
+		offset = 2 * iface->conf->secondary_channel;
+		break;
+	case VHT_CHANWIDTH_80MHZ:
+		offset = 6 - (prim_chan_index * 4);
+		break;
+	default:
+		/* TODO: How can this be calculated? Adjust
+		 * acs_find_ideal_chan() */
+		wpa_printf(MSG_INFO, "ACS NUMBSS: Only VHT20/40/80 is supported now");
+		return;
+	}
+
+	iface->conf->vht_oper_centr_freq_seg0_idx =
+		iface->conf->channel + offset;
+}
+
 static void acs_find_min_badness(struct hostapd_iface *iface, FILE *fp)
 {
 	struct hostapd_hw_modes *mode = iface->current_mode;
@@ -1078,6 +1102,7 @@ static void acs_find_min_badness(struct 
 	struct hostapd_channel_data *chan40plus = NULL;
 	struct hostapd_channel_data *chan40minus = NULL;
 	struct hostapd_channel_data *chan80 = NULL;
+	unsigned prim_chan_idx = 0;
 	int min20 = -1;
 	int min40plus = -1;
 	int min40minus = -1;
@@ -1175,6 +1200,7 @@ static void acs_find_min_badness(struct 
 	if (n_chans == 4) {
 		iface->conf->channel = chan80->chan;
 		iface->conf->secondary_channel = (chan80->prim_chan_idx & 0x01) ? -1 : 1;
+		prim_chan_idx = chan80->prim_chan_idx;
 		wpa_printf(MSG_DEBUG, "ACS: Chose 80 MHz bandwidth with primary channel %hi (badness %i)", chan80->chan, min80);
 	} else if (n_chans == 2) {
 		iface->conf->vht_oper_chwidth = VHT_OPER_CHWIDTH_20_40;
@@ -1213,7 +1239,7 @@ static void acs_find_min_badness(struct 
 		wpa_printf(MSG_ERROR, "ACS: NumBSS-based approach failed, picking channel %hi", iface->conf->channel);
 	}
 
-	acs_adjust_vht_center_freq(iface);
+	acs_numbss_adjust_vht_center_freq(iface, prim_chan_idx);
 }
 
 static void acs_count_bsses(struct hostapd_iface *iface, struct wpa_scan_results *scan_res)
