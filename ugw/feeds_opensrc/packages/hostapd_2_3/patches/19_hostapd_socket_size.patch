diff --exclude 'msvc*' -Npur hostap-724fce8/src/drivers/driver_nl80211.c hostap-724fce8-m/src/drivers/driver_nl80211.c
--- hostap-724fce8/src/drivers/driver_nl80211.c	2015-07-31 17:06:36.000000000 +0300
+++ hostap-724fce8-m/src/drivers/driver_nl80211.c	2015-09-16 10:56:58.000000000 +0300
@@ -167,10 +167,31 @@ static void nl_destroy_handles(struct nl
 #define ELOOP_SOCKET_INVALID	(intptr_t) 0x88888889ULL
 #endif
 
+#define MGMT_SOCKET_RX_SIZE (262144)
+
 static void nl80211_register_eloop_read(struct nl_handle **handle,
 					eloop_sock_handler handler,
 					void *eloop_data)
 {
+
+#if defined(CONFIG_LIBNL20) || defined(CONFIG_LIBNL32)
+	/*
+	 * libnl uses a pretty small buffer (32 kB that gets converted to 64 kB)
+	 * by default. It is possible to hit that limit in some cases where
+	 * operations are blocked, e.g., with a burst of Deauthentication frames
+	 * to hostapd and STA entry deletion. Try to increase the buffer to make
+	 * this less likely to occur.
+	 */
+		wpa_printf(MSG_DEBUG,
+			   "nl80211: increase nl_socket RX buffer size: %d", MGMT_SOCKET_RX_SIZE);
+	if (nl_socket_set_buffer_size(*handle, MGMT_SOCKET_RX_SIZE, 0) < 0) {
+		wpa_printf(MSG_DEBUG,
+			   "nl80211: Could not set nl_socket RX buffer size: %s",
+			   strerror(errno));
+		/* continue anyway with the default (smaller) buffer */
+	}
+#endif /* CONFIG_LIBNL20 */
+
 	nl_socket_set_nonblocking(*handle);
 	eloop_register_read_sock(nl_socket_get_fd(*handle), handler,
 				 eloop_data, *handle);
