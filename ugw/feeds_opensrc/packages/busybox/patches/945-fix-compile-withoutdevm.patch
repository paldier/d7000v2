Index: busybox-1.17.1/networking/udhcp/common.c
===================================================================
--- busybox-1.17.1.orig/networking/udhcp/common.c	2013-07-05 10:32:55.000000000 +0530
+++ busybox-1.17.1/networking/udhcp/common.c	2013-07-05 10:37:10.000000000 +0530
@@ -689,7 +689,7 @@
 }
 #endif
 
-#if defined ENABLE_FEATURE_DHCP_TR111_DEVICE_ASSOCIATION || CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if ENABLE_FEATURE_DHCP_TR111_DEVICE_ASSOCIATION
 /*
 
 This function takes pointer to the first enterprise no of the vendor specific options
@@ -761,22 +761,6 @@
 	return NULL;
 }
 
-
-/******************************************************************
-This function posts a message with appropriats options and
-null string when the entry for Gateway or Device is to be removed
-Function used by :
-DEVICE to write empty string for gateway, ipaddr = 0
-GATEWAY to delete the ipaddr of a device whose lease has expired
-*******************************************************************/
-int writenullmsg(uint32_t iIpaddr){
-	int iRetrn = 0;
-#if CONFIG_PACKAGE_LTQ_DEVM
-	iRetrn = writemsg( TR69_FIFO, NULL, 2,iIpaddr, IFX_IPC_APP_ID_DHCPD);
-#endif
-	return iRetrn;
-}
-
 /*
 This function takes pointer to Vendor Specific info below the identified enterprise no.
 
@@ -812,49 +796,66 @@
 
 int form_vsi_string(uint8_t *pVSD,char *string)
 {
-        int i;
-        uint8_t *optionptr=NULL;
-        uint8_t data_len, option_len;
+	int i;
+	uint8_t *optionptr=NULL;
+	uint8_t data_len, option_len;
 	uint8_t string_len = 0;
 
-        optionptr = pVSD;
+	optionptr = pVSD;
 	data_len = optionptr[0];
 	optionptr++;
-        i = 0;
+	i = 0;
 
-		log1( " FORM_VSI_STRING called\n");
-        while ( i < data_len) {
+	log1( " FORM_VSI_STRING called\n");
+	while ( i < data_len)
+	{
 #ifdef CONFIG_FEATURE_DEVM_DEVICE
-			if(( optionptr[i + SUBOPT_CODE] < 0x04) || ( optionptr[i + SUBOPT_CODE] > 0x06)){
-				log1("bogus packet, invalid sub-option code from device");
-				return -1; //failure
-			}
+		if(( optionptr[i + SUBOPT_CODE] < 0x04) || ( optionptr[i + SUBOPT_CODE] > 0x06)){
+			log1("bogus packet, invalid sub-option code from device");
+			return -1; //failure
+		}
 #else
-			if(( optionptr[i + SUBOPT_CODE] < 0x01) || ( optionptr[i + SUBOPT_CODE] > 0x03)){
-				log1("bogus packet, invalid sub-option code from device");
-				return -1; //failure
-			}
+		if(( optionptr[i + SUBOPT_CODE] < 0x01) || ( optionptr[i + SUBOPT_CODE] > 0x03)){
+			log1("bogus packet, invalid sub-option code from device");
+			return -1; //failure
+		}
 #endif
 
-			option_len = optionptr[i + SUBOPT_LEN];
+		option_len = optionptr[i + SUBOPT_LEN];
 
-			if( i + 1 +  option_len > data_len) {
-					log1("bogus packet, option fields too long.");
-					return -1 ; // failure
-			}
+		if( i + 1 +  option_len > data_len) {
+				log1("bogus packet, option fields too long.");
+				return -1 ; // failure
+		}
 
-			log1( " FORM_VSI_STRING : copying option to be sent\n");
-			memcpy(string+ string_len,optionptr + i + SUBOPT_DATA, option_len);
+		log1( " FORM_VSI_STRING : copying option to be sent\n");
+		memcpy(string+ string_len,optionptr + i + SUBOPT_DATA, option_len);
 
-			i += 1 + 1 + option_len; // move the offset to next VSD
-			string_len = string_len + option_len;	// update the total string size
-			*(string + string_len)= '\0'; //add a null in the end of thie string
-			string_len++;
-		}
+		i += 1 + 1 + option_len; // move the offset to next VSD
+		string_len = string_len + option_len;	// update the total string size
+		*(string + string_len)= '\0'; //add a null in the end of thie string
+		string_len++;
+	}
 
 
-		log1( " FORM_VSI_STRING done\n");
-		return string_len-1; //success
+	log1( " FORM_VSI_STRING done\n");
+	return string_len-1; //success
+}
+#endif
+
+/******************************************************************
+This function posts a message with appropriats options and
+null string when the entry for Gateway or Device is to be removed
+Function used by :
+DEVICE to write empty string for gateway, ipaddr = 0
+GATEWAY to delete the ipaddr of a device whose lease has expired
+*******************************************************************/
+int writenullmsg(uint32_t iIpaddr){
+	int iRetrn = 0;
+#if CONFIG_PACKAGE_LTQ_DEVM
+	iRetrn = writemsg( TR69_FIFO, NULL, 2,iIpaddr, IFX_IPC_APP_ID_DHCPD);
+#endif
+	return iRetrn;
 }
 
 
@@ -862,6 +863,7 @@
 
 
 
+#if CONFIG_PACKAGE_LTQ_DEVM
 /************************************************************
 This function writes a message to file.
 The structure of the message is
@@ -958,7 +960,9 @@
 	}
 	return iRet;
 }
+#endif
 
+#if ENABLE_FEATURE_DHCP_TR111_DEVICE_ASSOCIATION
 /* This function initializes the variables to be used in TR-111 option 125
 */
 char subopt1[IFX_DEVM_DHCP_PARAM_SIZE];
@@ -968,7 +972,8 @@
 char subopt5[IFX_DEVM_DHCP_PARAM_SIZE];
 char subopt6[IFX_DEVM_DHCP_PARAM_SIZE];
 
-void ifx_init_tr111_vars(){
+void ifx_init_tr111_vars()
+{
 	int iRet = 0;
 	char sValue[IFX_DEVM_DHCP_PARAM_SIZE] = {0};
 	void *dlHandle = NULL;
@@ -1071,7 +1076,9 @@
 			goto BACKUP;
 		}
 
-	} else {
+	}
+	else
+	{
 		log1( "dlopen failed !! taking backup values \n");
 BACKUP :
 #ifdef CONFIG_FEATURE_DEVM_DEVICE 	//  it is a device
@@ -1084,10 +1091,9 @@
 		strcpy(subopt6,"GATEWAY");
 #endif
 
-}
+	}
 
 	dlclose(dlHandle);
 	return;
 }
-
 #endif
Index: busybox-1.17.1/networking/udhcp/common.h
===================================================================
--- busybox-1.17.1.orig/networking/udhcp/common.h	2013-07-05 10:32:55.000000000 +0530
+++ busybox-1.17.1/networking/udhcp/common.h	2013-07-05 10:37:30.000000000 +0530
@@ -196,14 +196,15 @@
 	struct option_set *next;
 };
 
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#define LTQ_IPC_APP_ID_DHCP_LEASE_CHANGE	222
+#endif
+
 #if ENABLE_FEATURE_DHCP_TR111_DEVICE_ASSOCIATION
 /* added for TR-111 */
 #define VSI_ENTERPRISE_NO_DSL	3561
 #define IFX_IPC_APP_ID_DHCPD		211
 #define IFX_IPC_APP_ID_DHCPC		212
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
-#define LTQ_IPC_APP_ID_DHCP_LEASE_CHANGE	222
-#endif
 
 #define OPT_VSI_ENTPNO_LEN 4
 #define SUBOPT_CODE		0
Index: busybox-1.17.1/networking/udhcp/dhcpd.c
===================================================================
--- busybox-1.17.1.orig/networking/udhcp/dhcpd.c	2013-07-05 10:32:55.000000000 +0530
+++ busybox-1.17.1/networking/udhcp/dhcpd.c	2013-07-05 10:38:05.000000000 +0530
@@ -662,11 +662,11 @@
 		switch (udhcp_sp_read(&rfds)) {
 		case SIGUSR1:
 			bb_info_msg("Received SIGUSR1");
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
 			dhcp_release_tr69_flag = 1;
 #endif
 			write_leases();
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
 			dhcp_release_tr69_flag = 0;
 #endif
 			/* why not just reset the timeout, eh */
@@ -867,7 +867,7 @@
 				/* client requested or configured IP matches the lease.
 				 * ACK it, and bump lease expiration time. */
 				send_ACK(&packet, lease->lease_nip);
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
 				if ( packet.ciaddr == 0 ) // Only in case of new request, we need to post meesage to devm stack. Avoid in case of renew.
 					writemsg(TR69_FIFO,NULL, 1, lease->lease_nip, LTQ_IPC_APP_ID_DHCP_LEASE_CHANGE);
 #endif
@@ -957,9 +957,10 @@
 			) {
 				lease->expires = time(NULL);
 			}
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
 			writemsg(TR69_FIFO, NULL, 2, lease->lease_nip, LTQ_IPC_APP_ID_DHCP_LEASE_CHANGE);
 #endif
+
 #ifndef CONFIG_FEATURE_DEVM_DEVICE  // TR-111 for gateway
 #if ENABLE_FEATURE_DHCP_TR111_DEVICE_ASSOCIATION
 			// if TR-111 defined. post a message to TR-69 resetting
Index: busybox-1.17.1/networking/udhcp/dhcpd.h
===================================================================
--- busybox-1.17.1.orig/networking/udhcp/dhcpd.h	2013-07-05 10:32:55.000000000 +0530
+++ busybox-1.17.1/networking/udhcp/dhcpd.h	2013-07-05 10:38:19.000000000 +0530
@@ -99,7 +99,7 @@
 #define SERVER_PORT 67
 #endif
 
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
 volatile sig_atomic_t dhcp_release_tr69_flag;
 #endif
 
Index: busybox-1.17.1/networking/udhcp/files.c
===================================================================
--- busybox-1.17.1.orig/networking/udhcp/files.c	2013-07-05 10:32:55.000000000 +0530
+++ busybox-1.17.1/networking/udhcp/files.c	2013-07-05 10:38:41.000000000 +0530
@@ -274,7 +274,7 @@
 		if ((signed_leasetime_t) g_leases[i].expires < 0)
 		{
 			g_leases[i].expires = 0;
-#ifdef CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
+#if CONFIG_FEATURE_DHCP_TR69_HOSTS_OBJ
 			if(dhcp_release_tr69_flag == 0)
 			{
         		writemsg(TR69_FIFO, NULL, 2, g_leases[i].lease_nip, LTQ_IPC_APP_ID_DHCP_LEASE_CHANGE);
