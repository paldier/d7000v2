Support  PRETIMEOUT support for Bootcore Watchdog. Specific to Bootcore and
NOT Applicable for InterAptiv

Index: busybox-1.17.1/include/usage.src.h
===================================================================
--- busybox-1.17.1.orig/include/usage.src.h	2014-11-19 01:06:16.000000000 +0530
+++ busybox-1.17.1/include/usage.src.h	2014-11-19 01:21:58.000000000 +0530
@@ -4825,6 +4825,19 @@
      "\n" \
      "\nUse 500ms to specify period in milliseconds"
 #else
+#ifdef CONFIG_WATCHDOG_PRETIMEOUT
+#define watchdog_trivial_usage \
+       "[-t N[ms]] [-T N[ms]] [-p M] [-F] DEV"
+#define watchdog_full_usage "\n\n" \
+       "Periodically write to watchdog device DEV\n" \
+     "\nOptions:" \
+     "\n        -T N    Reboot after N seconds if not reset (default 60)" \
+     "\n        -t N    Reset every N seconds (default 30)" \
+     "\n        -p M    Set pretimeout for TIMER2" \
+     "\n        -F      Run in foreground" \
+     "\n" \
+     "\nUse 500ms to specify period in milliseconds"
+#else
 #define watchdog_trivial_usage \
        "[-t N[ms]] [-T N[ms]] [-F] DEV"
 #define watchdog_full_usage "\n\n" \
@@ -4836,6 +4849,7 @@
      "\n" \
      "\nUse 500ms to specify period in milliseconds"
 #endif
+#endif
 
 #define wc_trivial_usage \
        "[OPTIONS] [FILE]..."
Index: busybox-1.17.1/miscutils/watchdog.c
===================================================================
--- busybox-1.17.1.orig/miscutils/watchdog.c	2014-11-19 01:06:16.000000000 +0530
+++ busybox-1.17.1/miscutils/watchdog.c	2014-11-19 01:21:23.000000000 +0530
@@ -19,6 +19,9 @@
 #ifdef CONFIG_WATCHDOG_PER_VPE
 #define OPT_AFFINITY 	(1 << 3)
 #endif
+#ifdef CONFIG_WATCHDOG_PRETIMEOUT
+#define OPT_PRETIMEOUT    (1 << 3)
+#endif
 
 static void watchdog_shutdown(int sig UNUSED_PARAM)
 {
@@ -49,10 +52,22 @@
  	int process_affinity = -1;
 	char *af_arg;
 #endif
+#ifdef CONFIG_WATCHDOG_PRETIMEOUT
+	int pretimeout = -1;
+	char *pretime_arg;
+#endif
 
 	opt_complementary = "=1"; /* must have exactly 1 argument */
 #ifndef CONFIG_WATCHDOG_PER_VPE
+ #ifndef CONFIG_WATCHDOG_PRETIMEOUT
 	opts = getopt32(argv, "Ft:T:", &st_arg, &ht_arg);
+ #else
+	opts = getopt32(argv, "Ft:T:p:", &st_arg, &ht_arg, &pretime_arg);
+
+	if (opts & OPT_PRETIMEOUT)
+		pretimeout = xatoi_u(pretime_arg);
+
+ #endif
 #else
 	opts = getopt32(argv, "Ft:T:P:", &st_arg, &ht_arg, &af_arg);
 
@@ -119,6 +134,10 @@
 	}
 # endif
 	ioctl_or_warn(3, WDIOC_SETTIMEOUT, &htimer_duration);
+ #ifdef CONFIG_WATCHDOG_PRETIMEOUT
+	if (pretimeout > 0)
+		ioctl_or_warn(3, WDIOC_SETPRETIMEOUT, &pretimeout);
+ #endif
 #endif
 
 #if 0
Index: busybox-1.17.1/miscutils/Config.src
===================================================================
--- busybox-1.17.1.orig/miscutils/Config.src	2014-11-19 01:29:17.000000000 +0530
+++ busybox-1.17.1/miscutils/Config.src	2014-11-19 01:53:44.000000000 +0530
@@ -662,4 +662,13 @@
 	  Supports "-P cpu#" to launch watchdog application on any CPU/VPE.
 	  Used if SoC supports Per-VPE Watchdog.
 
+config WATCHDOG_PRETIMEOUT
+        bool "Set PRETIMEOUT on WDT for Bootcore (MIPS4Kec)"
+        default n
+        depends on WATCHDOG
+        help
+          Supports "-p <seconds>" to set PRETIMEOUT of Bootcore.
+          Basically configures TIMER2 timeout. Specific to Bootcore.
+          Not applicable to InterAptiv.
+
 endmenu
