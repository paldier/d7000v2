# HG changeset patch
# Parent fe7749b188d0734cd39e7401cd78ae8a6b5fff29
diff --git a/drivers/pinctrl/pinctrl-lantiq.h b/drivers/pinctrl/pinctrl-lantiq.h
--- a/drivers/pinctrl/pinctrl-lantiq.h
+++ b/drivers/pinctrl/pinctrl-lantiq.h
@@ -162,6 +162,15 @@ enum ltq_pin {
 	GPIO54,
 	GPIO55,
 
+	GPIO56,
+	GPIO57,
+	GPIO58,
+	GPIO59,
+	GPIO60,
+	GPIO61,
+	GPIO62,
+	GPIO63,
+
 	GPIO64,
 	GPIO65,
 	GPIO66,
diff --git a/drivers/pinctrl/pinctrl-xway.c b/drivers/pinctrl/pinctrl-xway.c
--- a/drivers/pinctrl/pinctrl-xway.c
+++ b/drivers/pinctrl/pinctrl-xway.c
@@ -82,6 +82,7 @@
 
 #define XWAY_MAX_PIN		32
 #define XR9_MAX_PIN		56
+#define XR10_MAX_PIN	62
 
 enum xway_mux {
 	XWAY_MUX_GPIO = 0,
@@ -102,7 +103,6 @@ enum xway_mux {
 	XWAY_MUX_EPHY,
 	XWAY_MUX_DFE,
 	XWAY_MUX_SDIO,
-	XWAY_MUX_GPHY,
 	XWAY_MUX_NONE = 0xffff,
 };
 
@@ -110,12 +110,12 @@ static const struct ltq_mfp_pin xway_mfp
 	/*       pin    f0	f1	f2	f3   */
 	MFP_XWAY(GPIO0, GPIO,	EXIN,	NONE,	TDM),
 	MFP_XWAY(GPIO1, GPIO,	EXIN,	NONE,	NONE),
-	MFP_XWAY(GPIO2, GPIO,	CGU,	EXIN,	GPHY),
+	MFP_XWAY(GPIO2, GPIO,	CGU,	EXIN,	NONE),
 	MFP_XWAY(GPIO3, GPIO,	CGU,	NONE,	PCI),
 	MFP_XWAY(GPIO4, GPIO,	STP,	NONE,	ASC),
-	MFP_XWAY(GPIO5, GPIO,	STP,	NONE,	GPHY),
+	MFP_XWAY(GPIO5, GPIO,	STP,	NONE,	NONE),
 	MFP_XWAY(GPIO6, GPIO,	STP,	GPT,	ASC),
-	MFP_XWAY(GPIO7, GPIO,	CGU,	PCI,	GPHY),
+	MFP_XWAY(GPIO7, GPIO,	CGU,	PCI,	NONE),
 	MFP_XWAY(GPIO8, GPIO,	CGU,	NMI,	NONE),
 	MFP_XWAY(GPIO9, GPIO,	ASC,	SPI,	EXIN),
 	MFP_XWAY(GPIO10, GPIO,	ASC,	SPI,	NONE),
@@ -152,18 +152,25 @@ static const struct ltq_mfp_pin xway_mfp
 	MFP_XWAY(GPIO41, GPIO,	NONE,	NONE,	NONE),
 	MFP_XWAY(GPIO42, GPIO,	MDIO,	NONE,	NONE),
 	MFP_XWAY(GPIO43, GPIO,	MDIO,	NONE,	NONE),
-	MFP_XWAY(GPIO44, GPIO,	NONE,	GPHY,	SIN),
-	MFP_XWAY(GPIO45, GPIO,	NONE,	GPHY,	SIN),
+	MFP_XWAY(GPIO44, GPIO,	NONE,	NONE,	SIN),
+	MFP_XWAY(GPIO45, GPIO,	NONE,	NONE,	SIN),
 	MFP_XWAY(GPIO46, GPIO,	NONE,	NONE,	EXIN),
-	MFP_XWAY(GPIO47, GPIO,	NONE,	GPHY,	SIN),
+	MFP_XWAY(GPIO47, GPIO,	NONE,	NONE,	SIN),
 	MFP_XWAY(GPIO48, GPIO,	EBU,	NONE,	NONE),
 	MFP_XWAY(GPIO49, GPIO,	EBU,	NONE,	NONE),
-	MFP_XWAY(GPIO50, GPIO,	NONE,	NONE,	NONE),
-	MFP_XWAY(GPIO51, GPIO,	NONE,	NONE,	NONE),
-	MFP_XWAY(GPIO52, GPIO,	NONE,	NONE,	NONE),
-	MFP_XWAY(GPIO53, GPIO,	NONE,	NONE,	NONE),
-	MFP_XWAY(GPIO54, GPIO,	NONE,	NONE,	NONE),
-	MFP_XWAY(GPIO55, GPIO,	NONE,	NONE,	NONE),
+	MFP_XWAY(GPIO50, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO51, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO52, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO53, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO54, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO55, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO56, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO57, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO58, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO59, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO60, GPIO,	EBU,	NONE,	NONE),
+	MFP_XWAY(GPIO61, GPIO,	EBU,	NONE,	NONE),
+
 };
 
 static const struct ltq_mfp_pin ase_mfp[] = {
@@ -209,13 +216,6 @@ static const unsigned pins_stp[] = {GPIO
 static const unsigned pins_nmi[] = {GPIO8};
 static const unsigned pins_mdio[] = {GPIO42, GPIO43};
 
-static const unsigned pins_gphy0_led0[] = {GPIO5};
-static const unsigned pins_gphy0_led1[] = {GPIO7};
-static const unsigned pins_gphy0_led2[] = {GPIO2};
-static const unsigned pins_gphy1_led0[] = {GPIO44};
-static const unsigned pins_gphy1_led1[] = {GPIO45};
-static const unsigned pins_gphy1_led2[] = {GPIO47};
-
 static const unsigned pins_ebu_a24[] = {GPIO13};
 static const unsigned pins_ebu_clk[] = {GPIO21};
 static const unsigned pins_ebu_cs1[] = {GPIO23};
@@ -230,6 +230,18 @@ static const unsigned pins_nand_cs1[] = 
 static const unsigned pins_nand_cle[] = {GPIO24};
 static const unsigned pins_nand_rdy[] = {GPIO48};
 static const unsigned pins_nand_rd[] = {GPIO49};
+static const unsigned pins_nand_d1[] = {GPIO50};
+static const unsigned pins_nand_d0[] = {GPIO51};
+static const unsigned pins_nand_d2p1[] = {GPIO52};
+static const unsigned pins_nand_d2p2[] = {GPIO53};
+static const unsigned pins_nand_d6 [] = {GPIO54};
+static const unsigned pins_nand_d5p1 [] = {GPIO55};
+static const unsigned pins_nand_d5p2 [] = {GPIO56};
+static const unsigned pins_nand_d3 [] = {GPIO57};
+static const unsigned pins_nand_cs0 [] = {GPIO58};
+static const unsigned pins_nand_wr [] = {GPIO59};
+static const unsigned pins_nand_wp [] = {GPIO60};
+static const unsigned pins_nand_se [] = {GPIO61};
 
 static const unsigned pins_exin0[] = {GPIO0};
 static const unsigned pins_exin1[] = {GPIO1};
@@ -330,12 +342,19 @@ static const struct ltq_pin_group xway_g
 	GRP_MUX("gnt4", PCI, pins_pci_gnt4),
 	GRP_MUX("req4", PCI, pins_pci_gnt4),
 	GRP_MUX("mdio", MDIO, pins_mdio),
-	GRP_MUX("gphy0 led0", GPHY, pins_gphy0_led0),
-	GRP_MUX("gphy0 led1", GPHY, pins_gphy0_led1),
-	GRP_MUX("gphy0 lde2", GPHY, pins_gphy0_led2),
-	GRP_MUX("gphy1 led0", GPHY, pins_gphy1_led0),
-	GRP_MUX("gphy1 led1", GPHY, pins_gphy1_led1),
-	GRP_MUX("gphy1 lde2", GPHY, pins_gphy1_led2),
+	/* xrx388 additional pins */
+    GRP_MUX("nand d1", EBU, pins_nand_d1),
+	GRP_MUX("nand d0", EBU, pins_nand_d0),
+	GRP_MUX("nand d2p1", EBU, pins_nand_d2p1),
+	GRP_MUX("nand d2p2", EBU, pins_nand_d2p2),
+	GRP_MUX("nand d6", EBU, pins_nand_d6),
+	GRP_MUX("nand d5p1", EBU, pins_nand_d5p1),
+	GRP_MUX("nand d5p2", EBU, pins_nand_d5p2),
+	GRP_MUX("nand d3", EBU, pins_nand_d3),
+	GRP_MUX("nand cs0", EBU, pins_nand_cs0),
+	GRP_MUX("nand wr", EBU, pins_nand_wr),
+	GRP_MUX("nand wp", EBU, pins_nand_wp),
+	GRP_MUX("nand se", EBU, pins_nand_se),
 };
 
 static const struct ltq_pin_group ase_grps[] = {
@@ -379,15 +398,18 @@ static const char * const xway_nmi_grps[
 
 /* ar9/vr9/gr9 */
 static const char * const xrx_mdio_grps[] = {"mdio"};
-static const char * const xrx_gphy_grps[] = {"gphy0 led0", "gphy0 led1",
-						"gphy0 led2", "gphy1 led0",
-						"gphy1 led1", "gphy1 led2"};
 static const char * const xrx_ebu_grps[] = {"ebu a23", "ebu a24",
 						"ebu a25", "ebu cs1",
 						"ebu wait", "ebu clk",
 						"nand ale", "nand cs1",
 						"nand cle", "nand rdy",
-						"nand rd"};
+						"nand rd",	"nand d1",
+						"nand d0", "nand d2p1",
+						"nand d2p2", "nand d6",
+						"nand d5p1", "nand d5p2",
+						"nand d3", "nand cs0",
+						"nand wr",	"nand wp",
+						"nand se"};
 static const char * const xrx_exin_grps[] = {"exin0", "exin1", "exin2",
 						"exin3", "exin4", "exin5"};
 static const char * const xrx_pci_grps[] = {"gnt1", "gnt2",
@@ -431,7 +453,6 @@ static const struct ltq_pmx_func xrx_fun
 	{"pci",		ARRAY_AND_SIZE(xrx_pci_grps)},
 	{"ebu",		ARRAY_AND_SIZE(xrx_ebu_grps)},
 	{"mdio",	ARRAY_AND_SIZE(xrx_mdio_grps)},
-	{"gphy",	ARRAY_AND_SIZE(xrx_gphy_grps)},
 };
 
 static const struct ltq_pmx_func ase_funcs[] = {
@@ -729,6 +750,10 @@ static struct pinctrl_xway_soc {
 		xway_grps, ARRAY_SIZE(xway_grps),
 		xrx_funcs, ARRAY_SIZE(xrx_funcs),
 		xway_exin_pin_map, 6},
+	{XR10_MAX_PIN, xway_mfp,
+		xway_grps, ARRAY_SIZE(xway_grps),
+		xrx_funcs, ARRAY_SIZE(xrx_funcs),
+		xway_exin_pin_map, 6},
 	/* xway ase series */
 	{XWAY_MAX_PIN, ase_mfp,
 		ase_grps, ARRAY_SIZE(ase_grps),
@@ -744,7 +769,8 @@ static struct pinctrl_gpio_range xway_gp
 static const struct of_device_id xway_match[] = {
 	{ .compatible = "lantiq,pinctrl-xway", .data = &soc_cfg[0]},
 	{ .compatible = "lantiq,pinctrl-xr9", .data = &soc_cfg[1]},
-	{ .compatible = "lantiq,pinctrl-ase", .data = &soc_cfg[2]},
+	{ .compatible = "lantiq,pinctrl-ar10", .data = &soc_cfg[2]},
+	{ .compatible = "lantiq,pinctrl-ase", .data = &soc_cfg[3]},
 	{},
 };
 MODULE_DEVICE_TABLE(of, xway_match);
