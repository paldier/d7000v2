This patch creates a new section "system" and groups all the functions which are used with __system. Due to grouping of the functions it helps to have the functions in a same cacheline as when a cache miss happens entire cacheline is loaded.

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1734,6 +1734,19 @@
 
 menu "Kernel type"
 
+config LTQ
+	bool "Enable LTQ enhancements"
+	default y
+	help
+	Enables all config options and features added by LTQ.
+
+config LTQ_SYS_OPT
+	bool "LTQ sys optimization"
+	depends on LTQ
+	help
+	Enbaling this feature improves the networking performance
+	due to LTQ enhancements to IRQ scheduling.
+
 choice
 	prompt "Kernel code model"
 	help
diff --git a/arch/mips/kernel/irq.c b/arch/mips/kernel/irq.c
--- a/arch/mips/kernel/irq.c
+++ b/arch/mips/kernel/irq.c
@@ -138,7 +138,11 @@
  * SMP cross-CPU interrupts have their own specific
  * handlers).
  */
+#ifdef CONFIG_LTQ_SYS_OPT
+void __system __irq_entry do_IRQ(unsigned int irq)
+#else
 void __irq_entry do_IRQ(unsigned int irq)
+#endif
 {
 	irq_enter();
 	check_stack_overflow();
diff --git a/include/linux/init.h b/include/linux/init.h
--- a/include/linux/init.h
+++ b/include/linux/init.h
@@ -53,6 +53,10 @@
 
 /* These are for everybody (although not all archs will actually
    discard it in modules) */
+
+#ifdef CONFIG_LTQ_SYS_OPT
+#define __system       __section(system)
+#endif
 #define __init		__section(.init.text) __cold notrace
 #define __initdata	__section(.init.data)
 #define __initconst	__constsection(.init.rodata)
diff --git a/include/linux/irqdesc.h b/include/linux/irqdesc.h
--- a/include/linux/irqdesc.h
+++ b/include/linux/irqdesc.h
@@ -109,7 +109,11 @@
  * irqchip-style controller then we call the ->handle_irq() handler,
  * and it calls __do_IRQ() if it's attached to an irqtype-style controller.
  */
+#ifdef CONFIG_LTQ_SYS_OPT
+static inline void __system generic_handle_irq_desc(unsigned int irq, struct irq_desc *desc)
+#else
 static inline void generic_handle_irq_desc(unsigned int irq, struct irq_desc *desc)
+#endif
 {
 	desc->handle_irq(irq, desc);
 }
diff --git a/kernel/irq/irqdesc.c b/kernel/irq/irqdesc.c
--- a/kernel/irq/irqdesc.c
+++ b/kernel/irq/irqdesc.c
@@ -305,7 +305,11 @@
  * @irq:	The irq number to handle
  *
  */
+#ifdef CONFIG_LTQ_SYS_OPT
+int __system generic_handle_irq(unsigned int irq)
+#else
 int generic_handle_irq(unsigned int irq)
+#endif
 {
 	struct irq_desc *desc = irq_to_desc(irq);
 
