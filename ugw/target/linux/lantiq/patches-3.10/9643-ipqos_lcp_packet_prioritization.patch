This patch prioritizes LCP control packets by assigning them to highest priority

IPQoS patch for LCP packet prioritization

diff --git a/drivers/net/ppp/ppp_generic.c b/drivers/net/ppp/ppp_generic.c
--- a/drivers/net/ppp/ppp_generic.c
+++ b/drivers/net/ppp/ppp_generic.c
@@ -1245,6 +1245,17 @@
 		/* peek at outbound CCP frames */
 		ppp_ccp_peek(ppp, skb, 0);
 		break;
+#ifdef CONFIG_LANTIQ_IPQOS
+//LCP prioritization hack	
+	case PPP_LCP:
+	case PPP_IPCP:
+	case PPP_PAP:
+	case PPP_CHAP:
+		/* MARK LCP frames with highest priority */
+		/* hack for QOS: if QOS is enabled, give highest priority to LCP control packets */
+		skb->priority = 7;
+		break;
+#endif
 	}
 
 	/* try to do packet compression */
@@ -1582,6 +1593,7 @@
 	if (pch->chan) {
 		while (!skb_queue_empty(&pch->file.xq)) {
 			skb = skb_dequeue(&pch->file.xq);
+			skb->priority = 7; /* For LCP Prioritization */
 			if (!pch->chan->ops->start_xmit(pch->chan, skb)) {
 				/* put the packet back and try again later */
 				skb_queue_head(&pch->file.xq, skb);
@@ -1789,6 +1801,17 @@
 	case PPP_CCP:
 		ppp_ccp_peek(ppp, skb, 1);
 		break;
+#ifdef CONFIG_LANTIQ_IPQOS
+// LCP prioritization hack	
+	case PPP_LCP:
+	case PPP_IPCP:
+	case PPP_PAP:
+	case PPP_CHAP:
+		/* MARK LCP frames with highest priority */
+		/* hack for QOS: if QOS is enabled, give highest priority to LCP control packets */
+		skb->priority = 7;
+		break;
+#endif
 	}
 
 	++ppp->stats64.rx_packets;
