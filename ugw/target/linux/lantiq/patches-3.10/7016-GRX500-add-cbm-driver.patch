# HG changeset patch
# Parent 513b755a6f9e71345dde822f7966ba5d4dd6c22f
et/ethernet/lantiq/cbm/cbm.c

diff --git a/drivers/net/ethernet/lantiq/Kconfig b/drivers/net/ethernet/lantiq/Kconfig
--- a/drivers/net/ethernet/lantiq/Kconfig
+++ b/drivers/net/ethernet/lantiq/Kconfig
@@ -34,5 +34,6 @@ config LANTIQ_ETH_FRAMEWORK
 
 source "drivers/net/ethernet/lantiq/switch-api/Kconfig"
 source "drivers/net/ethernet/lantiq/tmu/Kconfig"
+source "drivers/net/ethernet/lantiq/cbm/Kconfig"
 
 endif # NET_VENDOR_LANTIQ
diff --git a/drivers/net/ethernet/lantiq/Makefile b/drivers/net/ethernet/lantiq/Makefile
--- a/drivers/net/ethernet/lantiq/Makefile
+++ b/drivers/net/ethernet/lantiq/Makefile
@@ -2,3 +2,4 @@ obj-$(CONFIG_LANTIQ_VRX318) += ltq_vrx31
 obj-$(CONFIG_LANTIQ_ETH_FRAMEWORK) += lantiq_eth_framework.o
 obj-$(CONFIG_LTQ_ETHSW_API) += switch-api/
 obj-$(CONFIG_LTQ_TMU) += tmu/
+obj-$(CONFIG_LTQ_CBM) += cbm/
diff --git a/drivers/net/ethernet/lantiq/cbm/Kconfig b/drivers/net/ethernet/lantiq/cbm/Kconfig
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/Kconfig
@@ -0,0 +1,37 @@
+#
+# Central Buffer Manager(CBM) configuration
+#
+
+menu "CBM"
+
+config LTQ_CBM
+        tristate "Central Buffer Manager Driver"
+	depends on SOC_GRX500
+        default n
+        ---help---
+          Turn on this option to enable CBM driver which is a special hardware
+	  present in the XRX500 series of SoCs to manage the network buffers
+	  in HW.
+
+config CBM_STD_BUF_POOL_SIZE
+	hex "CBM Standard Buffer pool size"
+	depends on LTQ_CBM
+	default 0x200000
+
+config CBM_JBO_BUF_SIZE 
+	hex "CBM Jumbo Buffer pool size"
+	depends on LTQ_CBM
+	default 0x800000
+
+config CBM_JBO_PKT_SIZE 
+	hex "CBM Jumbo Packet size"
+	depends on LTQ_CBM
+	default 0x2000
+config CBM_LS_ENABLE
+    tristate "CBM loadspreader"
+	depends on LTQ_CBM
+    default n
+        ---help---
+          Turn on this option to enable CBM LS and TCP packet Marking
+	  in HW.
+endmenu
diff --git a/drivers/net/ethernet/lantiq/cbm/Makefile b/drivers/net/ethernet/lantiq/cbm/Makefile
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/Makefile
@@ -0,0 +1,5 @@
+#
+# Makefile for CBM driver.
+#
+
+obj-$(CONFIG_LTQ_CBM)                += cbm.o cbm_proc.o 
diff --git a/drivers/net/ethernet/lantiq/cbm/cbm.c b/drivers/net/ethernet/lantiq/cbm/cbm.c
new file mode 100755
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/cbm.c
@@ -0,0 +1,5450 @@
+#include "cbm.h"
+#include <linux/dma-mapping.h>
+#include <lantiq_dmax.h>
+#include <net/drv_tmu_ll.h>
+#include <linux/skbuff.h>
+#include <linux/if_ether.h>
+#include <linux/klogging.h>
+
+#define xrx500_cbm_r32(m_reg)		__raw_readl(m_reg)
+#define xrx500_cbm_w32(m_reg, val)	__raw_writel(val, m_reg)
+#define xrx500_cbm_w32_mask(m, clear, set, reg) \
+		ltq_w32((ltq_r32(m + reg) & ~(clear)) | (set), \
+		m + reg)
+
+#define set_val(reg, val, mask, offset) \
+do {\
+	xrx500_cbm_w32(reg, xrx500_cbm_r32(reg) & ~(mask));\
+	xrx500_cbm_w32(reg, xrx500_cbm_r32(reg)\
+	| (((val) << (offset)) & (mask)));\
+} while (0)
+
+#define get_val(val, mask, offset) (((val) & (mask)) >> (offset))
+/*#define DISABLE_OTHER_QUEUE 1*/
+#undef ENABLE_LL_DEBUG
+#define CBM_NUM_INTERRUPTS 5
+#define CBM_NUM_BASEADDR_IN_DTS 12
+#define CBM_NUM_ITEMS_DTS_CONFIG 6
+#define CBM_PMAC_DYNAMIC 1000
+#define CBM_PORT_INVALID 2000
+#define CBM_PMAC_NOT_APPL 3000
+#define CBM_PORT_NOT_APPL 255
+#define CBM_MAX_PHY_PORT_PER_EP 4
+#define CBM_DEQ_BUF_SIZE 64
+#define CBM_FROM_VRX318_PORT 18
+#define CBM_SOC_REV_1 1
+#define CBM_SOC_REV_0 0
+#define CBM_EQM_DELAY_ENQ 0x10
+#define CBM_PDU_TYPE 26
+#define CBM_BASE						(g_base_addr.cbm_addr_base)
+#define FSQM0_BASE						(g_base_addr.fsqm0_addr_base)
+#define FSQM1_BASE						(g_base_addr.fsqm1_addr_base)
+#define FSQM_BASE(idx) \
+	(idx == 0 ? g_base_addr.fsqm0_addr_base : g_base_addr.fsqm1_addr_base)
+#define CBM_EQM_BASE					(g_base_addr.cbm_eqm_addr_base)
+#define CBM_DQM_BASE					(g_base_addr.cbm_dqm_addr_base)
+#define CBM_DESC_BASE					(g_base_addr.cbm_desc_addr_base)
+#define CBM_LS_BASE						(g_base_addr.cbm_ls_addr_base)
+#define CBM_QIDT_BASE					(g_base_addr.cbm_qidt_addr_base)
+#define CBM_QEQCNT_BASE					(g_base_addr.cbm_qeqcnt_addr_base)
+#define CBM_QDQCNT_BASE					(g_base_addr.cbm_qdqcnt_addr_base)
+#define CBM_DMADESC_BASE				(g_base_addr.cbm_dmadesc_addr_base)
+
+extern void *ltq_cbm_std_buf_base;
+extern void *ltq_cbm_jbo_buf_base;
+static struct cbm_ctrl g_cbm_ctrl;
+
+static struct cbm_buff_info g_cbm_buff = {
+	.std_frm_size = CBM_STD_BUF_SIZE,
+	.jbo_frm_size = CONFIG_CBM_JBO_PKT_SIZE,
+	.std_fsqm_idx = 0,
+	.jbo_fsqm_idx = 1
+	};
+static DEFINE_PER_CPU(struct cbm_jumbo_divide, g_cbm_jbo_divide);
+#ifdef CONFIG_CBM_LS_ENABLE
+static struct cbm_desc_list g_cbm_dq_dlist[204];
+static void __iomem *dqmdesc[2];
+static int g_budget;
+#endif
+static struct cbm_base_addr g_base_addr;
+static struct cbm_desc_list g_cbm_dlist[4][CBM_DEQ_BUF_SIZE];
+static struct cbm_dqm_port_info dqm_port_info[CBM_PORT_MAX] = { {0} };
+static struct cbm_eqm_port_info eqm_port_info[CBM_EQM_PORT_MAX] = { {0} };
+static void __iomem *bufreq[2];
+static void __iomem *eqmdesc[4];
+static struct rcnt_idx rcnt_data[2];
+static volatile unsigned long g_cpu_port_alloc;
+static uint32_t g_cbm_irq[8];
+/*Maintain a shadow queue lookup table for fast processing of queue map get API*/
+
+static struct cbm_qidt_shadow g_cbm_qidt_mirror[0x1000];
+static struct cbm_q_info  cbm_qtable[MAX_TMU_QUEUES] = { {0} };
+static	struct  cbm_qlink_get queue_flush_buff;
+static	uint32_t  tmp_q_buff2[EGRESS_QUEUE_ID_MAX];
+static	uint32_t  tmp_q_buff3[EGRESS_QUEUE_ID_MAX];
+static struct cbm_cntr_mode cbm_cntr_func[] = {
+	{
+		.msel_mask = CBM_EQM_CTRL_MSEL_MASK,
+		.msel_pos = CBM_EQM_CTRL_MSEL_POS,
+		.qen_mask = CBM_EQM_CTRL_EQQCEN_MASK,
+		.qen_pos = CBM_EQM_CTRL_EQQCEN_POS,
+		.reset_counter = reset_enq_counter_all
+	},
+	{
+		.msel_mask = CBM_DQM_CTRL_MSEL_MASK,
+		.msel_pos = CBM_DQM_CTRL_MSEL_POS,
+		.qen_mask = CBM_DQM_CTRL_DQQCEN_MASK,
+		.qen_pos = CBM_DQM_CTRL_DQQCEN_POS,
+		.reset_counter = reset_deq_counter_all
+	}
+};
+spinlock_t cbm_queue_flush_lock;		/*!< spin lock */
+
+static uint32_t g_qidt_help[0x4000];
+static u32 cbm_p2p_setup_done;
+static u32 cbm_p2p_turned_on;
+void (*reset_counter)(void);
+static int cbm_rev;
+spinlock_t cbm_qidt_lock;	/*!< spin lock */
+spinlock_t cbm_buff_lock;		/*!< spin lock */
+spinlock_t cbm_buff_free_lock;		/*!< spin lock */
+LIST_HEAD(pmac_mapping_list);
+spinlock_t cbm_port_mapping;		/*!< spin lock for cbm port mapping list*/
+
+
+
+#ifdef CONFIG_CBM_LS_ENABLE
+static int do_dq_cbm_poll(struct napi_struct *napi, int budget);
+static inline int cbm_dq_deq_list(void);
+#endif
+static void do_cbm_tasklet(unsigned long);
+static void reserved_ports_highest(cbm_tmu_res_t *tmu_res, int flag_set);
+static struct tasklet_struct cbm_tasklet[NR_CPUS];
+#ifdef ENABLE_LL_DEBUG
+static void do_cbm_debug_tasklet(unsigned long cpu);
+static struct tasklet_struct cbm_debug_tasklet;
+#endif
+static void store_rcnt_baseaddr(void);
+static void store_bufreq_baseaddr(void);
+
+static int get_is_bit_set(uint32_t flags);
+
+#define BADKEY -1
+enum port_value {
+	DQM_PORTS_VALUE = 1,
+	EQM_PORTS_VALUE
+};
+#define SBID_START 16
+struct t_symstruct {
+char *key;
+int val;
+} ;
+
+static struct t_symstruct device_table[] = {
+	{ "ltq_dqm_ports", DQM_PORTS_VALUE },
+	{ "ltq_eqm_ports", EQM_PORTS_VALUE },
+};
+
+#define NKEYS (sizeof(device_table)/sizeof(struct t_symstruct))
+
+int keyfromstring(const char *key)
+{
+	int i;
+	for (i = 0; i < NKEYS; i++) {
+		struct t_symstruct *sym = device_table + i;
+		if (strcmp(sym->key, key) == 0)
+			return sym->val;
+	}
+	return BADKEY;
+}
+int find_eqm_port_type(int port)
+{
+	LOGF_KLOG_DEBUG("%s\r\n", __func__);
+	if ((port >= EQM_CPU_START_ID) && (port <= EQM_CPU_END_ID))
+		return EQM_CPU_TYPE;
+	else if ((port >= EQM_DMA_START_ID) && (port <= EQM_DMA_END_ID))
+		return EQM_DMA_TYPE;
+	else if (port == EQM_TOE_TYPE)
+		return EQM_TOE_TYPE;
+	else if (port == EQM_VRX318_TYPE)
+		return EQM_VRX318_TYPE;
+	else
+		return CBM_FAILURE;
+
+}
+int find_dqm_port_type(int port)
+{
+	if ((port >= DQM_CPU_START_ID) && (port <= DQM_CPU_END_ID))
+		return DQM_CPU_TYPE;
+	if ((port >= DQM_WAVE_START_ID) && (port <= DQM_WAVE_END_ID))
+		return DQM_CPU_TYPE;
+	else if ((port >= DQM_SCPU_START_ID) && (port <= DQM_SCPU_END_ID))
+		return DQM_SCPU_TYPE;
+	else if ((port >= DQM_DMA_START_ID) && (port <= DQM_DMA_END_ID))
+		return DQM_DMA_TYPE;
+	else if ((port >= DQM_LDMA_START_ID) && (port <= DQM_LDMA_END_ID))
+		return DQM_LDMA_TYPE;
+	else
+		return CBM_FAILURE;
+}
+
+int find_dqm_port_flush(int port)
+{
+	if ((port >= DQM_CPU_START_ID) && (port <= (DQM_CPU_END_ID - 1)))
+		return DQM_CPU_TYPE;
+	if (port == DQM_CPU_END_ID)
+		return DQM_WAVE_TYPE;
+	if ((port >= DQM_WAVE_START_ID) && (port <= DQM_WAVE_END_ID))
+		return DQM_WAVE_TYPE;
+	else if ((port >= DQM_SCPU_START_ID) && (port <= DQM_SCPU_END_ID))
+		return DQM_SCPU_TYPE;
+	else if ((port >= DQM_DMA_START_ID) && (port <= DQM_DMA_END_ID))
+		return DQM_DMA_TYPE;
+	else if ((port >= DQM_LDMA_START_ID) && (port <= DQM_LDMA_END_ID))
+		return DQM_LDMA_TYPE;
+	else
+		return CBM_FAILURE;
+}
+static struct cbm_pmac_port_map *cbm_add_to_list(
+struct cbm_pmac_port_map *val)
+{
+	struct cbm_pmac_port_map *ptr = NULL;
+	int i = 0;
+	unsigned long flags;
+
+
+	LOGF_KLOG_DEBUG("\n new linked list\n");
+	ptr = (struct cbm_pmac_port_map *)kmalloc(sizeof(struct cbm_pmac_port_map), GFP_ATOMIC);
+	if (NULL == ptr) {
+		LOGF_KLOG_ERROR("\n Node creation failed\n");
+		return NULL;
+	}
+	LOGF_KLOG_DEBUG("\n %s : 1\n", __func__);
+	ptr->pmac = val->pmac;
+	ptr->egp_port_map = val->egp_port_map;
+	for (i = 0; i < val->qid_num; i++) {
+		ptr->qids[i] = val->qids[i];
+	}
+	ptr->qid_num = val->qid_num;
+	ptr->egp_type = val->egp_type;
+	ptr->owner = 0;
+	ptr->dev = 0;
+	ptr->dev_port = 0;
+	ptr->flags = P_ALLOCATED;
+	LOGF_KLOG_DEBUG("\n %s : 2\n", __func__);
+	spin_lock_irqsave(&cbm_port_mapping, flags);
+	/* Init the list within the struct. */
+	INIT_LIST_HEAD(&ptr->list);
+	/* Add this struct to the tail of the list. */
+	list_add_tail(&ptr->list, &pmac_mapping_list);
+	spin_unlock_irqrestore(&cbm_port_mapping, flags);
+	return ptr;
+}
+
+struct cbm_pmac_port_map *is_cbm_allocated(
+int32_t cbm, uint32_t flags)
+{
+	struct cbm_pmac_port_map *ptr = NULL;
+	unsigned long lock_flags;
+	int num_deq_ports, i;
+	uint32_t port_map, index;
+
+	if ((flags != DP_F_MPE_ACCEL) && (flags != DP_F_DIRECTPATH_RX))
+		flags = DP_F_DONTCARE;
+	spin_lock_irqsave(&cbm_port_mapping, lock_flags);
+	if (flags == DP_F_DONTCARE) {
+		list_for_each_entry(ptr, &pmac_mapping_list, list) {
+			num_deq_ports = hweight_long(ptr->egp_port_map);
+			port_map = ptr->egp_port_map;
+			for (i = 0; i < num_deq_ports; i++) {
+				index = get_is_bit_set(port_map);
+				if ((index == cbm)
+			&& (ptr->egp_type != DP_F_MPE_ACCEL)
+			&& (ptr->egp_type != DP_F_DIRECTPATH_RX)
+			) {
+				spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+				return ptr;
+				}
+				port_map &= ~(1 << index);
+			}
+		}
+	} else {
+		list_for_each_entry(ptr, &pmac_mapping_list, list) {
+			if (/*(ptr->pmac == pmac)
+			&&*/ (ptr->egp_type == flags)) {
+				spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+				return ptr;
+			}
+		}
+	}
+	spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+	return NULL;
+
+}
+struct cbm_pmac_port_map *is_dp_allocated(
+int32_t pmac, uint32_t flags)
+{
+	struct cbm_pmac_port_map *ptr = NULL;
+	unsigned long lock_flags;
+
+	#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+	if ((!(flags & DP_F_MPE_ACCEL)) && (!(flags & DP_F_DIRECTPATH_RX)) /*&& (!(flags & DP_F_CHECKSUM))*/)
+	#else
+	if ((!(flags & DP_F_MPE_ACCEL)) && (!(flags & DP_F_DIRECTPATH_RX)) && (!(flags & DP_F_CHECKSUM)))
+	#endif
+		flags = DP_F_DONTCARE;
+	LOGF_KLOG_DEBUG("%s: flags 0x%x\r\n", __func__, flags);
+	spin_lock_irqsave(&cbm_port_mapping, lock_flags);
+	if (flags & DP_F_DONTCARE) {
+		list_for_each_entry(ptr, &pmac_mapping_list, list) {
+			LOGF_KLOG_DEBUG("11:pmac %d type %d  input %d input %d\r\n", ptr->pmac, ptr->egp_type, pmac, flags);
+			if ((ptr->pmac == pmac)
+			&& (!(ptr->egp_type & DP_F_MPE_ACCEL))
+			&& (!(ptr->egp_type & DP_F_DIRECTPATH_RX))
+			#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+			#else
+			&& (!(ptr->egp_type & DP_F_CHECKSUM))
+			#endif
+			) {
+				spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+				return ptr;
+			}
+		}
+	} else {
+		list_for_each_entry(ptr, &pmac_mapping_list, list) {
+			LOGF_KLOG_DEBUG("22:pmac %d type %d \r\n", ptr->pmac, ptr->egp_type);
+			if (ptr->egp_type == flags) {
+				spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+				return ptr;
+			}
+		}
+	}
+	spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+	return NULL;
+
+}
+static int cbm_delete_from_list(
+int32_t pmac, uint32_t flags)
+{
+
+	struct cbm_pmac_port_map *ptr = NULL;
+	struct cbm_pmac_port_map *next = NULL;
+	int found = 0;
+	unsigned long lock_flags;
+
+	if ((flags != DP_F_MPE_ACCEL) && (flags != DP_F_DIRECTPATH_RX))
+		flags = DP_F_DONTCARE;
+	LOGF_KLOG_DEBUG("%s: flags 0x%x\r\n", __func__, flags);
+
+	spin_lock_irqsave(&cbm_port_mapping, lock_flags);
+
+	list_for_each_entry_safe(ptr, next, &pmac_mapping_list, list) {
+		if (ptr->pmac == pmac) {
+			if (flags == DP_F_DONTCARE) {
+				found = 1;
+				break;
+			} else if (ptr->egp_type & flags) {
+				found = 1;
+				break;
+			}
+		}
+	}
+	if (found) {
+		list_del(&ptr->list);
+		kfree(ptr);
+		spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+		return 1;
+	}
+	spin_unlock_irqrestore(&cbm_port_mapping, lock_flags);
+	return 0;
+}
+
+
+struct cbm_egp_map epg_lookup_table[] = {
+	{0,	0,					0},
+	{0,	CBM_PMAC_DYNAMIC, DP_F_DIRECT},
+	{1,	0,					DP_F_MPE_ACCEL},
+	{1,	CBM_PMAC_DYNAMIC, DP_F_DIRECTLINK},
+	{4,	CBM_PMAC_DYNAMIC, DP_F_FAST_WLAN},
+	{5,	CBM_PMAC_NOT_APPL, DP_F_LRO},
+	{6,	1,			 DP_F_FAST_ETH_LAN},
+	{7,	2,			 DP_F_FAST_ETH_LAN},
+	{8,	3,			 DP_F_FAST_ETH_LAN},
+	{9,	4,			 DP_F_FAST_ETH_LAN},
+	{10,	5,			 DP_F_FAST_ETH_LAN},
+	{11,	6,			 DP_F_FAST_ETH_LAN},
+	{12,	1,			 DP_F_FAST_ETH_LAN},
+	{13,	2,			 DP_F_FAST_ETH_LAN},
+	{14,	3,			 DP_F_FAST_ETH_LAN},
+	{15,	4,			 DP_F_FAST_ETH_LAN},
+	{16,	5,			 DP_F_FAST_ETH_LAN},
+	{17,	6,			 DP_F_FAST_ETH_LAN},
+	{18,	CBM_PMAC_NOT_APPL, DP_F_FAST_DSL_DOWNSTREAM},
+	{19,	15,			 DP_F_FAST_ETH_WAN},
+	#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+	{20,	CBM_PMAC_DYNAMIC, DP_F_CHECKSUM},
+	#else
+	{20,	CBM_PMAC_NOT_APPL, DP_F_CHECKSUM},
+	#endif
+	{21,	CBM_PMAC_NOT_APPL, DP_F_DIRECTPATH_RX},
+	{23,	CBM_PMAC_DYNAMIC, DP_F_FAST_DSL},
+	{CBM_PORT_NOT_APPL,	CBM_PMAC_DYNAMIC, DP_F_FAST_WLAN},
+	{CBM_PORT_NOT_APPL,	CBM_PMAC_DYNAMIC, DP_F_FAST_WLAN},
+	{CBM_PORT_NOT_APPL,	CBM_PMAC_DYNAMIC, DP_F_FAST_WLAN},
+	{CBM_PORT_NOT_APPL, CBM_PMAC_DYNAMIC, DP_F_PORT_TUNNEL_DECAP},
+};
+
+static uint32_t get_matching_EP(
+	uint32_t cbm_port,
+	uint32_t flags,
+	uint32_t *pmac
+)
+{
+	int i;
+
+	for (i = 0; i < sizeof(epg_lookup_table)/sizeof(epg_lookup_table[0]);
+	i++) {
+		LOGF_KLOG_DEBUG("%s: %d %d %d\r\n", __func__, epg_lookup_table[i].epg, epg_lookup_table[i].port_type, epg_lookup_table[i].pmac);
+		LOGF_KLOG_DEBUG("%s: %d %d \r\n", __func__, cbm_port, flags);
+		if ((epg_lookup_table[i].epg == cbm_port) && (epg_lookup_table[i].port_type == flags)) {
+				/*flags = epg_lookup_table[i].port_type;*/
+				*pmac = epg_lookup_table[i].pmac;
+				return 1;
+			}
+	}
+	return 0;
+}
+static uint32_t assign_port_from_DT(
+	uint32_t flags,
+	uint32_t cbm_port)
+{
+	int i, result = CBM_NOTFOUND;
+
+	for (i = 0; i < sizeof(epg_lookup_table)/sizeof(epg_lookup_table[0]);
+	i++) {
+		if (epg_lookup_table[i].port_type == flags) {
+			if ((flags == DP_F_FAST_WLAN) && (epg_lookup_table[i].epg != CBM_PORT_NOT_APPL))
+				continue;
+			epg_lookup_table[i].epg = cbm_port;
+			result = CBM_SUCCESS;
+			break;
+		}
+	}
+	return result;
+}
+static uint32_t get_matching_flag(
+	uint32_t *flags,
+	uint32_t cbm_port)
+{
+	int i, result = CBM_NOTFOUND;
+	for (i = 0; i < sizeof(epg_lookup_table)/sizeof(epg_lookup_table[0]);
+	i++) {
+		if (epg_lookup_table[i].epg == cbm_port) {
+			*flags = epg_lookup_table[i].port_type;
+			result = CBM_SUCCESS;
+			break;
+		}
+	}
+	return result;
+}
+static uint32_t get_matching_pmac(
+	uint32_t *ep,
+	uint32_t flags,
+	uint32_t *cbm_port,
+	int pmac,
+	int pmac_present)
+{
+	int i, j = 0, result = CBM_NOTFOUND;
+	for (i = 0; i < CBM_MAX_PHY_PORT_PER_EP;
+	i++) {
+		ep[i] = CBM_PORT_INVALID;
+		cbm_port[i] = CBM_PORT_INVALID;
+	}
+	if (flags & DP_F_FAST_WLAN)
+		flags = DP_F_FAST_WLAN;
+	for (i = 0; i < sizeof(epg_lookup_table)/sizeof(epg_lookup_table[0]);
+	i++) {
+		if (epg_lookup_table[i].port_type == flags) {
+			if (j < CBM_MAX_PHY_PORT_PER_EP) {
+				if (pmac_present
+				&& (epg_lookup_table[i].pmac == pmac)) {
+					ep[j] = epg_lookup_table[i].pmac;
+					cbm_port[j] = epg_lookup_table[i].epg;
+					j++;
+				}
+				if (!pmac_present) {
+					ep[j] = epg_lookup_table[i].pmac;
+					cbm_port[j] = epg_lookup_table[i].epg;
+					j++;
+				}
+				result = CBM_SUCCESS;
+			} else {
+				break;
+			}
+		}
+	}
+	return result;
+}
+static uint32_t get_matching_pmac_noflags(
+	uint32_t *cbm_port,
+	int pmac,
+	uint32_t *flags,
+	uint32_t *num_ports)
+{
+	int i, j = 0, result = CBM_NOTFOUND;
+	for (i = 0; i < CBM_MAX_PHY_PORT_PER_EP;
+	i++) {
+		cbm_port[i] = CBM_PORT_INVALID;
+	}
+	for (i = 0; i < sizeof(epg_lookup_table)/sizeof(epg_lookup_table[0]);
+	i++) {
+			if (j < CBM_MAX_PHY_PORT_PER_EP) {
+				if ((epg_lookup_table[i].pmac == pmac)
+				&& (epg_lookup_table[i].port_type != DP_F_MPE_ACCEL)
+				&& (epg_lookup_table[i].port_type != DP_F_DIRECTPATH_RX)) {
+					cbm_port[j] = epg_lookup_table[i].epg;
+					*flags = epg_lookup_table[i].port_type;
+					j++;
+					*num_ports = j;
+					result = CBM_SUCCESS;
+				}
+			}
+	}
+	return result;
+}
+
+struct sk_buff *cbm_build_skb(void *data, unsigned int frag_size, gfp_t priority)
+{
+	struct skb_shared_info *shinfo;
+	struct sk_buff *skb;
+	unsigned int size;
+	size = frag_size;
+	/*printk("%s data 0x%x size %d\r\n",__func__, data, frag_size);*/
+	skb = alloc_skb_head(GFP_ATOMIC);
+	if (!skb) {
+		LOGF_KLOG_ERROR("%s: SKB head alloc failed\r\n", __func__);
+		return NULL;
+	}
+
+	size -= SKB_DATA_ALIGN(sizeof(struct skb_shared_info));
+
+	memset(skb, 0, offsetof(struct sk_buff, tail));
+	skb->truesize = SKB_TRUESIZE(size);
+	skb->head_frag = 0;
+	atomic_set(&skb->users, 1);
+	skb->head = data;
+	skb->data = data;
+	skb_reset_tail_pointer(skb);
+	skb->end = skb->tail + size;
+#ifdef NET_SKBUFF_DATA_USES_OFFSET
+	skb->mac_header = ~0U;
+	skb->transport_header = ~0U;
+#endif
+
+	/* make sure we initialize shinfo sequentially */
+	shinfo = skb_shinfo(skb);
+	memset(shinfo, 0, offsetof(struct skb_shared_info, dataref));
+	atomic_set(&shinfo->dataref, 1);
+	kmemcheck_annotate_variable(shinfo->destructor_arg);
+
+	return skb;
+}
+EXPORT_SYMBOL(cbm_build_skb);
+/*
+ *	FSQM initialization
+ */
+
+void init_fsqm(void)
+{
+
+	buf_addr_adjust((uint32_t)ltq_cbm_std_buf_base,
+	CONFIG_CBM_STD_BUF_POOL_SIZE,
+	&g_cbm_buff.std_buf_addr,
+	&g_cbm_buff.std_buf_size,
+	g_cbm_buff.std_frm_size);
+	buf_addr_adjust((uint32_t)ltq_cbm_jbo_buf_base,
+	CONFIG_CBM_JBO_BUF_SIZE,
+	&g_cbm_buff.jbo_buf_addr,
+	&g_cbm_buff.jbo_buf_size,
+	g_cbm_buff.jbo_frm_size);
+
+	g_cbm_buff.std_frm_num = g_cbm_buff.std_buf_size / g_cbm_buff.std_frm_size;
+	g_cbm_buff.jbo_frm_num = g_cbm_buff.jbo_buf_size / g_cbm_buff.jbo_frm_size;
+
+	LOGF_KLOG_DEBUG("Jumbo:  buf base: 0x%x, buf size: 0x%x,\
+	total frame num: %d, frame size: %d\n",
+	g_cbm_buff.jbo_buf_addr, g_cbm_buff.jbo_buf_size,
+	g_cbm_buff.jbo_frm_num, g_cbm_buff.jbo_frm_size);
+
+	init_fsqm_buf_standard(g_cbm_buff.std_buf_addr, g_cbm_buff.std_buf_size);
+	init_fsqm_buf_jumbo(g_cbm_buff.jbo_buf_addr, g_cbm_buff.jbo_buf_size);
+	LOGF_KLOG_INFO("fsqm init successfully\n");
+	return;
+}
+
+void init_fsqm_by_idx(int idx)
+{
+	xrx500_cbm_w32(FSQM_BASE(idx) + IO_BUF_RD, 0);
+	xrx500_cbm_w32(FSQM_BASE(idx) + IO_BUF_WR, 0);
+	xrx500_cbm_w32(FSQM_BASE(idx) + FSQM_CTRL, 0x1);
+	return;
+}
+
+/*
+ *	 FSQM buffer initialization
+ */
+
+void buf_addr_adjust(unsigned int buf_base_addr,
+unsigned int buf_size,
+unsigned int *adjusted_buf_base,
+unsigned int *adjusted_buf_size,
+unsigned int align)
+{
+	unsigned int base;
+	unsigned int size;
+
+	base = ALIGN(buf_base_addr, align);
+	size = buf_base_addr + buf_size - base;
+
+	*adjusted_buf_base = base;
+	*adjusted_buf_size = size;
+}
+
+void init_fsqm_buf_standard(unsigned int std_base_addr,
+unsigned int size)
+{
+	int i;
+	int minlsa, maxlsa;
+
+	for (i = 1; i <= g_cbm_buff.std_frm_num; i++) {
+		/*__raw_writel(i,FSQM_LLT_RAM(FSQM_BASE(g_std_fsqm_idx),i)); */
+		if (i == g_cbm_buff.std_frm_num - 1) {
+			xrx500_cbm_w32((FSQM_LLT_RAM(FSQM_BASE(g_cbm_buff.std_fsqm_idx),
+			i-1)),
+			0x7FFF);
+		} else {
+			xrx500_cbm_w32((FSQM_LLT_RAM(FSQM_BASE(g_cbm_buff.std_fsqm_idx),
+			i-1)),
+			i % g_cbm_buff.std_frm_num);
+		}
+	#ifdef ENABLE_LL_DEBUG
+	xrx500_cbm_w32((FSQM_RCNT(FSQM_BASE(g_cbm_buff.std_fsqm_idx), i-1)), 0);
+	#else
+	xrx500_cbm_w32((FSQM_RCNT(FSQM_BASE(g_cbm_buff.std_fsqm_idx), i-1)), 1);
+	#endif
+	}
+	minlsa = 0;/* minlas is always zero, it's offset counted into the BA */
+	maxlsa = (size / g_cbm_buff.std_frm_size) - 2; /* The last item is invalid inside the FSQM */
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + LSARNG),
+	((maxlsa << LSARNG_MAXLSA_POS) & LSARNG_MAXLSA_MASK)
+	| ((minlsa << LSARNG_MINLSA_POS) & LSARNG_MINLSA_MASK));
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + OFSQ),
+	((maxlsa << OFSQ_TAIL_POS) & OFSQ_TAIL_MASK)
+	|((minlsa << OFSQ_HEAD_POS) & OFSQ_HEAD_MASK));
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + OFSC),
+	((maxlsa - minlsa + 1) << OFSC_FSC_POS) & OFSC_FSC_MASK);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + FSQM_IRNEN), 0x111101F);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + FSQT0), g_cbm_buff.std_frm_num/6 * 5);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + FSQT1), g_cbm_buff.std_frm_num/6 * 4);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + FSQT2), g_cbm_buff.std_frm_num/6 * 3);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + FSQT3), g_cbm_buff.std_frm_num/6 * 2);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.std_fsqm_idx) + FSQT4), g_cbm_buff.std_frm_num/6);
+
+	init_fsqm_by_idx(g_cbm_buff.std_fsqm_idx);
+
+	LOGF_KLOG_INFO("init fsqm std successfully\n");
+
+	return;
+}
+
+
+void init_fsqm_buf_jumbo(unsigned int jbo_base_addr, unsigned int size)
+{
+	int i;
+	int minlsa, maxlsa;
+
+	for (i = 1; i <= g_cbm_buff.jbo_frm_num; i++) {
+	/*__raw_writel(i, FSQM_LLT_RAM(FSQM_BASE(g_jbo_fsqm_idx),i));*/
+	if (i == g_cbm_buff.jbo_frm_num - 1) {
+		xrx500_cbm_w32((FSQM_LLT_RAM(FSQM_BASE(g_cbm_buff.jbo_fsqm_idx), i-1)),
+		0x7FFF);
+	} else {
+		xrx500_cbm_w32((FSQM_LLT_RAM(FSQM_BASE(g_cbm_buff.jbo_fsqm_idx), i-1)),
+		i % g_cbm_buff.jbo_frm_num);
+	}
+	xrx500_cbm_w32((FSQM_RCNT(FSQM_BASE(g_cbm_buff.jbo_fsqm_idx), i-1)),
+	1);
+	}
+
+	/* minlas is always zero, it's counted into the BA */
+	minlsa = 0;
+	maxlsa = (size / g_cbm_buff.jbo_frm_size) - 2;  /* The last item is invalid in the FSQM */
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + LSARNG),
+	((maxlsa << LSARNG_MAXLSA_POS) & LSARNG_MAXLSA_MASK)
+	| ((minlsa << LSARNG_MINLSA_POS) & LSARNG_MINLSA_MASK));
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + OFSQ),
+	((maxlsa << OFSQ_TAIL_POS) & OFSQ_TAIL_MASK)
+	|((minlsa << OFSQ_HEAD_POS) & OFSQ_HEAD_MASK));
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + OFSC),
+	((maxlsa - minlsa + 1) << OFSC_FSC_POS & OFSC_FSC_MASK));
+
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + FSQM_IRNEN), 0x111101F);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + FSQT0), g_cbm_buff.jbo_frm_num/6 * 5);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + FSQT1), g_cbm_buff.jbo_frm_num/6 * 4);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + FSQT2), g_cbm_buff.jbo_frm_num/6 * 3);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + FSQT3), g_cbm_buff.jbo_frm_num/6 * 2);
+	xrx500_cbm_w32((FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + FSQT4), g_cbm_buff.jbo_frm_num/6);
+	init_fsqm_by_idx(g_cbm_buff.jbo_fsqm_idx);
+	LOGF_KLOG_INFO("init fsqm jbo successfully\n");
+	return;
+}
+
+/*
+ * CBM interrupt mapping initialization
+*/
+void cbm_intr_mapping_init(void)
+{
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(4, cbm_irnen)), 0x1 << 8);
+	#ifdef ENABLE_LL_DEBUG
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)), 0x1 << 16);
+	#else
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)), 0x2 << 8);
+	#endif
+
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(6, cbm_irnen)), 0x4 << 8);
+#ifdef CONFIG_CBM_LS_ENABLE
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(6, egp_irnen)), 0x4);
+#endif
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(7, cbm_irnen)), 0x8 << 8);
+	/* Disable the EGP and IGP interrupts at top level */
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(0, egp_irnen)), 0x0);
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(4, egp_irnen)), 0x0);
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(5, egp_irnen)), 0x0);
+#ifndef CONFIG_CBM_LS_ENABLE
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(6, egp_irnen)), 0x0);
+#endif
+	return;
+}
+
+void cbm_intr_mapping_uninit(void)
+{
+	int i;
+
+	for (i = 0; i < CBM_MAX_INT_LINES/2; i++) {
+		/*enq intr attach to first 4 lines */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(i, igp_irnen)),
+		0 << i);
+		/*LS intr attach to last 4 lines */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(i + (CBM_MAX_INT_LINES/2),
+		cbm_irnen)),
+		0 << (i+8));
+	}
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(0, cbm_irnen)), 0x0);
+	return;
+}
+
+
+/*
+ * CBM basic initialization
+*/
+void init_cbm_basic(void)
+{
+	int jsel = 0;
+
+	xrx500_cbm_w32((CBM_BASE + CBM_SBA_0), __pa(g_cbm_buff.std_buf_addr));
+	xrx500_cbm_w32((CBM_BASE + CBM_JBA_0), __pa(g_cbm_buff.jbo_buf_addr));
+	xrx500_cbm_w32((CBM_BASE + CBM_SBA_1), CBM_IOCU_ADDR(g_cbm_buff.std_buf_addr));
+	xrx500_cbm_w32((CBM_BASE + CBM_JBA_1), CBM_IOCU_ADDR(g_cbm_buff.jbo_buf_addr));
+	jsel = (g_cbm_buff.jbo_frm_size == 0x2000) ? 0 : 1;
+	set_val((CBM_BASE + CBM_CTRL), jsel, 0x20000, 17);
+	#ifdef ENABLE_LL_DEBUG
+	set_val((CBM_BASE + CBM_CTRL), 1, 0x01000000, 24);
+	#endif
+	cbm_dw_memset((uint32_t *)CBM_QEQCNT_BASE,
+	0, CBM_QEQCNTR_SIZE / sizeof(uint32_t));
+	cbm_dw_memset((uint32_t *)CBM_QDQCNT_BASE,
+	0, CBM_QDQCNTR_SIZE / sizeof(uint32_t));
+
+	/* Enable all the interrupts */
+	cbm_intr_mapping_init();
+	cbm_interrupt_init();
+	LOGF_KLOG_INFO("init basic CBM successfully\n");
+
+	return;
+}
+
+/*
+ * CBM Enqueue port Initialization
+ */
+void init_cbm_eqm_scpu_port(void)
+{
+	xrx500_cbm_w32((CBM_EQM_BASE + CFG_CPU_IGP_4), 0x303);
+	xrx500_cbm_w32((CBM_EQM_BASE + POCC_CPU_IGP_4), 0);
+}
+
+void init_cbm_eqm_cpu_port(int idx)
+{
+	/*struct cbm_eqm_cpu_igp_reg cbm_cpu_igp;*/
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_CPU_PORT(idx, cfg)), 0xFC7);
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_CPU_PORT(idx, pocc)), 0);
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_CPU_PORT(idx, irnen)), 0x3F);
+}
+
+/*
+ *	form 64bit register from 2 32bit DWORDs, 64-bit register is little endian mode
+ */
+uint64_t cbm_form_64bit_reg(uint32_t dw0, uint32_t dw1)
+{
+	uint64_t reg64;
+	reg64 = (((uint64_t)dw1) << 32) | (uint64_t)dw0;
+	return reg64;
+}
+
+int setup_eqm_dma_desc(int pid, uint32_t desc_num, uint32_t flag, uint32_t data_offset)
+{
+	struct dma_desc desc;
+	uint32_t buf;
+	u32 reg1;
+	u32 reg2;
+	int i;
+	cbm_assert(pid >= 5, "cbm dma eqm port id is less than 5,pid:%d ", pid);
+
+	/*LOGF_KLOG_INFO("%s:pid:%d,desc_num:%d, flag: %d, offset:%d\n",
+	__func__, pid, desc_num, flag, data_offset);*/
+
+	for (i = 0; i < desc_num; i++) {
+		buf = (uint32_t)cbm_buffer_alloc(smp_processor_id(), flag);
+		if (!buf) {
+			cbm_err("Cannot alloc buffer from CBM!!!\n");
+			return CBM_FAILURE;
+		}
+		buf = __pa(buf);
+		cbm_dw_memset((uint32_t *)&desc,
+		0,
+		sizeof(struct dma_desc)/sizeof(uint32_t));
+		reg1 = 0;
+		reg2 = 0;
+		if (flag == CBM_PORT_F_STANDARD_BUF) {
+			reg2 = g_cbm_buff.std_frm_size;
+		} else {
+			reg2 = g_cbm_buff.jbo_frm_size;
+	}
+	reg1 = (buf + data_offset) & ~0x7;
+	reg2 |= ((buf + data_offset) & 0x7) << 23;
+	reg2 |= (CBM_DMA_DESC_OWN << 31);
+	/*adjust the flag*/
+	#ifdef CONFIG_CPU_LITTLE_ENDIAN
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0x0, 0);
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0x4, 0);
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0x8, reg1);
+	asm("sync");
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0xc, reg2);
+	asm("sync");
+	#else
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0x4, 0);
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0x0, 0);
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0xc, reg1);
+	asm("sync");
+	xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag >> 1) + 0x8, reg2);
+	asm("sync");
+	#endif
+	#if 0
+		LOGF_KLOG_DEBUG("reg 0x%x desc0: 0x%x \r\n",  (unsigned int) ((CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag) + 4)), (unsigned int) (xrx500_cbm_r32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag) + 4)));
+		LOGF_KLOG_DEBUG("reg 0x%x desc1:\r\n",  (CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag)), (unsigned int) (xrx500_cbm_r32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag))));
+		LOGF_KLOG_DEBUG("reg 0x%x desc2:\r\n", (CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag) + 0xc), xrx500_cbm_r32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag) + 0xc));
+		LOGF_KLOG_DEBUG("reg 0x%x desc3:\r\n", (CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag) + 0x8), xrx500_cbm_r32(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(pid, i%2, flag) + 0x8));
+	#endif
+	}
+
+	return CBM_SUCCESS;
+}
+
+void init_cbm_eqm_dma_port(int idx, uint32_t flags)
+{
+	/*struct cbm_eqm_dma_igp_reg cbm_dma_igp;*/
+#if 0
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_DMA_PORT(idx, cfg)), 0x301);
+#else
+	/*enable backpressure*/
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_DMA_PORT(idx, cfg)), 0x701);
+#endif
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_DMA_PORT(idx, pocc)), 0);
+	setup_eqm_dma_desc(idx + 5, 2, flags, CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD);
+}
+
+void init_cbm_eqm_dma_toe_port(int idx, uint32_t flags)
+{
+	/*struct cbm_eqm_dma_igp_reg cbm_dma_igp;*/
+	/*enable backpressure*/
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_DMA_PORT(idx, cfg)), 0x701);
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_DMA_PORT(idx, pocc)), 0);
+	setup_eqm_dma_desc(idx + 5, 2, flags, CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD);
+
+}
+
+void init_cbm_eqm_ldma_port(int flags)
+{
+	int i;
+	u32 buf;
+
+	for (i = 0; i < 32; i++) {
+		buf = (u32)cbm_buffer_alloc(smp_processor_id(), flags);
+		if (!buf) {
+			cbm_err("Cannot alloc buffer from CBM!!!\n");
+			return;
+		}
+		buf = __pa(buf);
+		xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_LDMA_DESC(i) + 0x4), buf);
+		xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_LDMA_DESC(i)), 0x80000800);
+	}
+	xrx500_cbm_w32((CBM_EQM_BASE + CFG_DMA_IGP_15), 0x1B01);
+	xrx500_cbm_w32((CBM_EQM_BASE + POCC_DMA_IGP_15), 0);
+	xrx500_cbm_w32((CBM_EQM_BASE + WM_DMA_IGP_15), (DEFAULT_DMA_HWM << 16) | (DEFAULT_DMA_HWM/3*2));
+}
+
+/*
+ *	CBM Dequeue Port Initialization
+ */
+void setup_dqm_dma_desc(uint32_t pid, uint32_t desc_num)
+{
+	int i;
+	cbm_assert(pid >= 5, "cbm dma dqm port id less than 5, pid:%d", pid);
+
+	for (i = 0; i < desc_num; i++) {
+		xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(pid, i%2) + 0x0, 0);
+		xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(pid, i%2) + 0x4, 0);
+		xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(pid, i%2) + 0x8, 0);
+		xrx500_cbm_w32(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(pid, i%2) + 0xc, 0);
+	}
+	return;
+
+}
+void init_cbm_dqm_cpu_port(int idx)
+{
+	/*struct cbm_dqm_cpu_egp_reg  cbm_dqm_cpu;*/
+	xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(idx, cfg)), 0x10F | ((idx << CFG_CPU_EGP_0_EPMAP_POS) & CFG_CPU_EGP_0_EPMAP_MASK));
+#ifdef CONFIG_CBM_LS_ENABLE
+	xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(2, irnen)), 0x2);
+#endif
+}
+
+void init_cbm_dqm_wlan_cpu_port(int idx)
+{
+	/*struct cbm_dqm_cpu_egp_reg  cbm_dqm_cpu;*/
+	xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(idx, cfg)), 0x107 | ((idx << CFG_CPU_EGP_0_EPMAP_POS) & CFG_CPU_EGP_0_EPMAP_MASK));
+	#if 0
+	xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(idx, irnen)), 0x2);
+	#endif
+}
+
+void init_cbm_dqm_scpu_port(int idx)
+{
+	xrx500_cbm_w32((CBM_DQM_BASE + CFG_CPU_EGP_5), 0x101 | ((idx << CFG_CPU_EGP_5_EPMAP_POS) & CFG_CPU_EGP_5_EPMAP_MASK));
+}
+
+void init_cbm_dqm_dma_port(int dqp_idx, int dmap_idx)
+{
+	setup_dqm_dma_desc(dqp_idx, 2);
+	xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_DMA_PORT(dmap_idx, cfg)), 0x101 | ((dqp_idx << CFG_DMA_EGP_6_EPMAP_POS) & CFG_DMA_EGP_6_EPMAP_MASK));
+}
+
+void init_cbm_dqm_ldma_port(int dqp_idx)
+{
+	xrx500_cbm_w32((CBM_DQM_BASE + CFG_DMA_EGP_23), 0x1901 | ((dqp_idx << CFG_DMA_EGP_23_EPMAP_POS) & CFG_DMA_EGP_23_EPMAP_MASK));
+}
+
+
+/*
+ *	Load Spreader Initialization
+ */
+
+void init_cbm_ls_port(int idx)
+{
+	int lsport = CBM_LS_PORT(idx, ctrl);
+#ifdef CONFIG_CBM_LS_ENABLE
+	if ((1 << idx) & g_cpu_port_alloc) {
+	/*Enable spreading only for port 0*/
+#else
+	if (!idx) {
+#endif
+		xrx500_cbm_w32((CBM_LS_BASE + lsport), 0xF
+			| ((DEFAULT_LS_QTHH << LS_CTRL_PORT0_QUEUE_THRSHLD_POS) & (LS_CTRL_PORT0_QUEUE_THRSHLD_MASK))
+			| ((DEFAULT_LS_OVFL_CNT << LS_CTRL_PORT0_CNT_THRSHLD_POS) & LS_CTRL_PORT0_CNT_THRSHLD_MASK));
+	} else {
+		xrx500_cbm_w32((CBM_LS_BASE + lsport), 0xD
+			| ((DEFAULT_LS_QTHH << LS_CTRL_PORT0_QUEUE_THRSHLD_POS) & LS_CTRL_PORT0_QUEUE_THRSHLD_MASK)
+			| ((DEFAULT_LS_OVFL_CNT << LS_CTRL_PORT0_CNT_THRSHLD_POS) & LS_CTRL_PORT0_CNT_THRSHLD_MASK));
+	}
+}
+
+void cbm_add_ls_port(int idx, int flag)
+{
+	int lsport = CBM_LS_PORT(idx, ctrl);
+	if (flag) {
+		xrx500_cbm_w32((CBM_LS_BASE + lsport), 0xF
+			| ((DEFAULT_LS_QTHH << LS_CTRL_PORT0_QUEUE_THRSHLD_POS) & (LS_CTRL_PORT0_QUEUE_THRSHLD_MASK))
+			| ((DEFAULT_LS_OVFL_CNT << LS_CTRL_PORT0_CNT_THRSHLD_POS) & LS_CTRL_PORT0_CNT_THRSHLD_MASK));
+	} else {
+		xrx500_cbm_w32((CBM_LS_BASE + lsport), 0xD
+			| ((DEFAULT_LS_QTHH << LS_CTRL_PORT0_QUEUE_THRSHLD_POS) & LS_CTRL_PORT0_QUEUE_THRSHLD_MASK)
+			| ((DEFAULT_LS_OVFL_CNT << LS_CTRL_PORT0_CNT_THRSHLD_POS) & LS_CTRL_PORT0_CNT_THRSHLD_MASK));
+	}
+}
+EXPORT_SYMBOL(cbm_add_ls_port);
+
+
+int32_t cbm_load_spreader_cfg_get (
+	cbm_load_spreader_cfg_t *cfg,
+	uint32_t flags)
+{
+	uint32_t g_reg;
+	g_reg = xrx500_cbm_r32(CBM_LS_BASE + LS_GLBL_CTRL);
+	cfg->enable = g_reg >> LS_GLBL_CTRL_EN_POS;
+	cfg->clk_div = g_reg >> LS_GLBL_CTRL_CLK_DIV_POS;
+
+	g_reg = xrx500_cbm_r32(CBM_LS_BASE + LS_SPR_CTRL);
+	cfg->flowid_mode = g_reg >> LS_SPR_CTRL_SPR_SEL_POS;
+	cfg->wp0 = cbm_ls_port_weight_get(0);
+	cfg->wp1 = cbm_ls_port_weight_get(1);
+	cfg->wp2 = cbm_ls_port_weight_get(2);
+	cfg->wp3 = cbm_ls_port_weight_get(3);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_load_spreader_cfg_get);
+
+int32_t cbm_load_spreader_cfg_set(
+	cbm_load_spreader_cfg_t *cfg,
+	uint32_t flags)
+{
+	xrx500_cbm_w32((CBM_LS_BASE + LS_GLBL_CTRL), (cfg->enable << LS_GLBL_CTRL_EN_POS));
+	xrx500_cbm_w32((CBM_LS_BASE + LS_GLBL_CTRL), (cfg->clk_div << LS_GLBL_CTRL_CLK_DIV_POS) | xrx500_cbm_r32(CBM_LS_BASE + LS_GLBL_CTRL));
+	cbm_ls_spread_alg_set(cfg->flowid_mode);
+	cbm_ls_port_weight_set(0, cfg->wp0);
+	cbm_ls_port_weight_set(1, cfg->wp1);
+	cbm_ls_port_weight_set(2, cfg->wp2);
+	cbm_ls_port_weight_set(3, cfg->wp3);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_load_spreader_cfg_set);
+
+int32_t cbm_port_load_spreader_cfg_get (
+	uint32_t port_id,
+	cbm_port_load_spreader_cfg_t *cfg,
+	uint32_t flags)
+{
+	int lsport = CBM_LS_PORT(port_id, ctrl);
+	uint32_t r_cfg = xrx500_cbm_r32(CBM_LS_BASE + lsport);
+	cfg->enable = r_cfg >> LS_CTRL_PORT0_PORT_EN_POS;
+	cfg->spreading_enable = r_cfg >> LS_CTRL_PORT0_SPR_EN_POS;
+	cfg->irq_en = r_cfg >> LS_CTRL_PORT0_INT_EN_POS;
+	cfg->counter_en = r_cfg >> LS_CTRL_PORT0_CNT_EN_POS;
+	cfg->queue_thresh = r_cfg >> LS_CTRL_PORT0_QUEUE_THRSHLD_POS;
+	cfg->counter_thresh = r_cfg >> LS_CTRL_PORT0_CNT_THRSHLD_POS;
+	return CBM_SUCCESS;
+
+}
+EXPORT_SYMBOL(cbm_port_load_spreader_cfg_get);
+
+int32_t cbm_port_load_spreader_cfg_set (
+	uint32_t port_id,
+	cbm_port_load_spreader_cfg_t *cfg,
+	uint32_t flags)
+{
+	uint32_t reg;
+	int lsport = CBM_LS_PORT(port_id, ctrl);
+	reg = (cfg->enable << LS_CTRL_PORT0_PORT_EN_POS)
+	| (cfg->spreading_enable << LS_CTRL_PORT0_SPR_EN_POS)
+	| (cfg->irq_en << LS_CTRL_PORT0_INT_EN_POS)
+	| (cfg->counter_en << LS_CTRL_PORT0_CNT_EN_POS)
+	| (cfg->queue_thresh << LS_CTRL_PORT0_QUEUE_THRSHLD_POS)
+	| (cfg->counter_thresh << LS_CTRL_PORT0_CNT_THRSHLD_POS);
+	xrx500_cbm_w32((CBM_LS_BASE + lsport), reg);
+	return CBM_SUCCESS;
+
+}
+EXPORT_SYMBOL(cbm_port_load_spreader_cfg_set);
+
+void cbm_ls_spread_alg_set(uint32_t alg)
+{
+	cbm_assert(alg < SPREAD_MAX, "illegal cbm load spread alg");
+	set_val((CBM_LS_BASE + LS_SPR_CTRL), alg, LS_SPR_CTRL_SPR_SEL_MASK, LS_SPR_CTRL_SPR_SEL_POS);
+}
+
+void cbm_ls_port_weight_set(uint32_t port_id, uint32_t weight)
+{
+	uint32_t pos, mask;
+
+	cbm_assert(port_id < LS_PORT_NUM, "illegal cbm ls port id");
+
+	pos  = LS_SPR_CTRL_WP0_POS + 2 * port_id;
+	mask = (LS_SPR_CTRL_WP0_MASK >> LS_SPR_CTRL_WP0_POS) << pos;
+	set_val((CBM_LS_BASE+LS_SPR_CTRL), weight, mask, pos);
+}
+
+void cbm_ls_flowId_map_set(uint32_t col, uint32_t val)
+{
+	xrx500_cbm_w32((CBM_LS_BASE+LS_FLOWID_MAP_COL0+(col*4)), val);
+	return;
+}
+
+uint32_t cbm_ls_flowId_map_get(uint32_t col)
+{
+	return xrx500_cbm_r32(CBM_LS_BASE+LS_FLOWID_MAP_COL0+(col*4));
+}
+
+uint32_t cbm_ls_port_weight_get(uint32_t port_id)
+{
+	uint32_t pos, mask;
+
+	cbm_assert(port_id < LS_PORT_NUM, "illegal cbm ls port id");
+
+	pos  = LS_SPR_CTRL_WP0_POS + 2 * port_id;
+	mask = (LS_SPR_CTRL_WP0_MASK >> LS_SPR_CTRL_WP0_POS) << pos;
+	return get_val(xrx500_cbm_r32(CBM_LS_BASE + LS_SPR_CTRL), mask, pos);
+}
+
+
+
+void init_cbm_ls(void)
+{
+	int i;
+
+	for (i = 0; i < LS_PORT_NUM; i++) {
+		init_cbm_ls_port(i);
+	}
+
+	cbm_ls_spread_alg_set(SPREAD_WRR);
+	for (i = 0; i < LS_PORT_NUM; i++) {
+		cbm_ls_port_weight_set(i, DEFAULT_LS_PORT_WEIGHT);
+	}
+
+	xrx500_cbm_w32((CBM_LS_BASE + IRNEN_LS), 0xFF0000);
+	xrx500_cbm_w32((CBM_LS_BASE + LS_GLBL_CTRL), (0x01 << LS_GLBL_CTRL_EN_POS));
+
+	LOGF_KLOG_INFO("Load spreader init successfully\n");
+
+	return;
+}
+
+void cbm_qid_reg_set(struct cbm_qidt_elm *qidt_elm, uint8_t qid_val)
+{
+	uint32_t qidt;
+	uint32_t qidt_idx;
+	uint32_t qidt_offset;
+	uint32_t offset_factor, value_mask;
+	uint8_t prev_qid;
+	uint32_t value;
+
+	qidt = (((qidt_elm->flowidh  << 13) & 0x2000)
+		| ((qidt_elm->flowidl  << 12) & 0x1000)
+		| ((qidt_elm->dec	   << 11) & 0x800)
+		| ((qidt_elm->enc	   << 10) & 0x400)
+		| ((qidt_elm->mpe2	   << 9) & 0x200)
+		| ((qidt_elm->mpe1	   << 8) & 0x100)
+		| ((qidt_elm->ep	   << 4) & 0xF0)
+		| ((qidt_elm->clsid    << 0) & 0x0F));
+	qidt_idx	= qidt >> 2;
+	qidt_offset = qidt % 4;
+
+	offset_factor = qidt_offset << 3;
+	value_mask = 255 << offset_factor;
+
+	prev_qid = (g_cbm_qidt_mirror[qidt_idx].qidt_shadow & value_mask) >> offset_factor;
+
+	if (qid_val == 255) {
+		g_cbm_qidt_mirror[qidt_idx].qidt_drop_flag = (g_cbm_qidt_mirror[qidt_idx].qidt_drop_flag & ~value_mask) | (1 << offset_factor);
+		/*g_cbm_qidt_mirror[qidt_idx].qidt_shadow = (g_cbm_qidt_mirror[qidt_idx].qidt_shadow & ~value_mask) | ((qid_val & 0xFF) << ((qidt_offset) * 8));*/
+		if (cbm_qtable[prev_qid].refcnt && (prev_qid != 255))
+			cbm_qtable[prev_qid].refcnt--;
+	} else {
+		if (cbm_qtable[prev_qid].refcnt && (prev_qid != 255) && (!((g_cbm_qidt_mirror[qidt_idx].qidt_drop_flag & value_mask) >> offset_factor)))
+			cbm_qtable[prev_qid].refcnt--;
+		g_cbm_qidt_mirror[qidt_idx].qidt_shadow = (g_cbm_qidt_mirror[qidt_idx].qidt_shadow & ~value_mask) | ((qid_val & 0xFF) << ((qidt_offset) * 8));
+		g_cbm_qidt_mirror[qidt_idx].qidt_drop_flag = (g_cbm_qidt_mirror[qidt_idx].qidt_drop_flag & ~value_mask);
+		cbm_qtable[qid_val].refcnt++;
+	}
+	value = (xrx500_cbm_r32(CBM_QIDT_BASE + qidt_idx * 4) & ~value_mask) | ((qid_val & 0xFF) << offset_factor);
+	xrx500_cbm_w32((CBM_QIDT_BASE + qidt_idx * 4), value);
+}
+
+void cbm_qidt_set(const struct cbm_qidt_elm *qid_set, const struct cbm_qidt_mask *qid_mask, uint8_t qid_val)
+{
+	int cls_idx, ep_idx, fl_idx, fh_idx, dec_idx, enc_idx, mpe1_idx, mpe2_idx;
+	struct cbm_qidt_elm qidt_elm;
+	/* Calc class id */
+	for (cls_idx = 0; cls_idx < ((qid_mask->classid_mask == 1) ? 16 : 1); cls_idx++) {
+		if (qid_mask->classid_mask) {
+			qidt_elm.clsid = cls_idx;
+		} else {
+			qidt_elm.clsid = qid_set->clsid;
+		}
+
+		/* Calc EP */
+		for (ep_idx = 0; ep_idx < ((qid_mask->ep_mask == 1) ? 16 : 1); ep_idx++) {
+			if (qid_mask->ep_mask) {
+				qidt_elm.ep = ep_idx;
+			} else {
+				qidt_elm.ep = qid_set->ep;
+			}
+
+			/* Calc MPE1 */
+			for (mpe1_idx = 0; mpe1_idx < ((qid_mask->mpe1_mask == 1) ? 2 : 1); mpe1_idx++) {
+				if (qid_mask->mpe1_mask) {
+					qidt_elm.mpe1 = mpe1_idx;
+				} else {
+					qidt_elm.mpe1 = qid_set->mpe1;
+				}
+
+				/* Calc MPE2 */
+				for (mpe2_idx = 0; mpe2_idx < ((qid_mask->mpe2_mask == 1) ? 2 : 1); mpe2_idx++) {
+					if (qid_mask->mpe2_mask) {
+						qidt_elm.mpe2 = mpe2_idx;
+					} else {
+						qidt_elm.mpe2 = qid_set->mpe2;
+					}
+
+					/* Calc ENC */
+					for (enc_idx = 0; enc_idx < ((qid_mask->enc_mask == 1) ? 2 : 1); enc_idx++) {
+						if (qid_mask->enc_mask) {
+							qidt_elm.enc = enc_idx;
+						} else {
+							qidt_elm.enc = qid_set->enc;
+						}
+
+						/* Calc DEC */
+						for (dec_idx = 0; dec_idx < ((qid_mask->dec_mask == 1) ? 2 : 1); dec_idx++) {
+							if (qid_mask->dec_mask) {
+								qidt_elm.dec = dec_idx;
+							} else {
+								qidt_elm.dec = qid_set->dec;
+							}
+
+							/* Calc flowid lowbit */
+							for (fl_idx = 0; fl_idx < ((qid_mask->flowid_lmask == 1) ? 2 : 1); fl_idx++) {
+								if (qid_mask->flowid_lmask) {
+									qidt_elm.flowidl = fl_idx;
+								} else {
+									qidt_elm.flowidl = qid_set->flowidl;
+								}
+								/* Calc flowid lowbit */
+								for (fh_idx = 0; fh_idx < ((qid_mask->flowid_hmask == 1) ? 2 : 1); fh_idx++) {
+									if (qid_mask->flowid_hmask) {
+										qidt_elm.flowidh = fh_idx;
+									} else {
+										qidt_elm.flowidh = qid_set->flowidh;
+									}
+									cbm_qid_reg_set(&qidt_elm, qid_val);
+								}
+
+							}
+
+						}
+					}
+				}
+			}
+		}
+	}
+}
+
+int32_t
+cbm_queue_map_get(
+	int32_t tmu_queue_id,
+	int32_t *num_entries,
+	cbm_queue_map_entry_t **entries,
+	uint32_t flags
+	)
+{
+	int i = 0, j = 0, k = 0;
+	u32 offset, index;
+	unsigned long sys_flag;
+	cbm_queue_map_entry_t *temp_entry;
+	uint8_t *ptr;
+	spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+	if (((tmu_queue_id >= 0) && (tmu_queue_id <= 255))
+		&& (cbm_qtable[tmu_queue_id].refcnt)) {
+		for (i = 0, k = i; i < 0x1000; i += 1, k += 4) {
+		    /*unrolling the loop*/
+			ptr = (uint8_t *)&g_cbm_qidt_mirror[i].qidt_shadow;
+			if (ptr[3] == tmu_queue_id) {
+				g_qidt_help[j] = k + 3;
+				j++;
+			}
+			if (ptr[2] == tmu_queue_id) {
+				g_qidt_help[j] = k + 2;
+				j++;
+			}
+			if (ptr[1] == tmu_queue_id) {
+				g_qidt_help[j] = k + 1;
+				j++;
+			}
+			if (ptr[0] == tmu_queue_id) {
+				g_qidt_help[j] = k;
+				j++;
+			}
+		}
+	} else {
+		spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+		return CBM_FAILURE;
+	}
+	temp_entry = (cbm_queue_map_entry_t *)kmalloc(sizeof(cbm_queue_map_entry_t) * (j), GFP_ATOMIC);
+	if (temp_entry) {
+		*entries = temp_entry;
+		*num_entries = j;
+		for (i = 0; i < j; i++) {
+			index = (g_qidt_help[i] / 4) << 2;
+			offset = (g_qidt_help[i] % 4);
+			index = index + 3 - offset;
+
+			temp_entry[i].regval = 0;
+			temp_entry[i].flowid = ((index & 0x2000) | (index & 0x1000)) >> 12;
+			temp_entry[i].dec = (index & 0x800) >> 11;
+			temp_entry[i].enc = (index & 0x400) >> 10;
+			temp_entry[i].mpe1 = (index & 0x100) >> 8;
+			temp_entry[i].mpe2 = (index & 0x200) >> 9;
+			temp_entry[i].ep = (index & 0xF0) >> 4;
+			temp_entry[i].tc = (index & 0x0F) >> 0;
+		}
+	}
+	spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+	return CBM_SUCCESS;
+}
+
+EXPORT_SYMBOL(cbm_queue_map_get);
+
+int32_t
+cbm_queue_map_set(
+int32_t tmu_queue_id,
+cbm_queue_map_entry_t *entry,
+uint32_t flags
+)
+{
+
+	unsigned long sys_flag;
+	struct cbm_qidt_elm qidt_elm;
+	struct cbm_qidt_mask qidt_mask = {0};
+	if (!entry)
+		return CBM_FAILURE;
+	/*(pr_info("q %d\r\n", tmu_queue_id);*/
+	qidt_elm.clsid = entry->tc;
+	qidt_elm.ep = entry->ep;
+	qidt_elm.mpe1 = entry->mpe1;
+	qidt_elm.mpe2 = entry->mpe2;
+	qidt_elm.enc = entry->enc;
+	qidt_elm.dec = entry->dec;
+	qidt_elm.flowidl = entry->flowid & 0x1;
+	qidt_elm.flowidh = entry->flowid >> 1;
+
+	if (flags & CBM_QUEUE_MAP_F_FLOWID_L_DONTCARE) {
+		qidt_mask.flowid_lmask = 1;
+	}
+    if (flags & CBM_QUEUE_MAP_F_FLOWID_H_DONTCARE) {
+		qidt_mask.flowid_hmask = 1;
+	}
+	if (flags & CBM_QUEUE_MAP_F_EN_DONTCARE) {
+		qidt_mask.enc_mask = 1;
+	};
+	if (flags & CBM_QUEUE_MAP_F_DE_DONTCARE) {
+		qidt_mask.dec_mask = 1;
+	};
+	if (flags & CBM_QUEUE_MAP_F_MPE1_DONTCARE) {
+		qidt_mask.mpe1_mask = 1;
+	};
+	if (flags & CBM_QUEUE_MAP_F_MPE2_DONTCARE) {
+		qidt_mask.mpe2_mask = 1;
+	};
+	if (flags & CBM_QUEUE_MAP_F_EP_DONTCARE) {
+		qidt_mask.ep_mask = 1;
+	};
+	if (flags & CBM_QUEUE_MAP_F_TC_DONTCARE) {
+		qidt_mask.classid_mask = 1;
+	};
+
+	spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+	cbm_qidt_set(&qidt_elm, &qidt_mask, tmu_queue_id);
+	spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_queue_map_set);
+
+/*
+ *	CBM CPU Enqueue API
+ */
+static int cbm_setup_desc(struct cbm_desc *desc, uint32_t data_ptr, uint32_t data_len,
+uint32_t DW0, uint32_t DW1)
+{
+
+	struct dma_desc temp_desc;
+	struct cbm_desc *ptr;
+	if (!desc) {
+		return CBM_FAILURE;
+	}
+
+	memset(&temp_desc, 0, sizeof(struct dma_desc));
+	temp_desc.data_ptr		= data_ptr & (~0x7);
+	temp_desc.data_len		= data_len;
+	temp_desc.byte_offset	= data_ptr & 0x7;
+	temp_desc.sop			= 1;
+	temp_desc.eop			= 1;
+	temp_desc.own			= 0;
+	ptr = (struct cbm_desc *)&temp_desc;
+	ptr->desc0 = DW0;
+	ptr->desc1 = DW1;
+	#ifdef CONFIG_LITTLE_ENDIAN
+	desc->desc0 = ptr->desc0;
+	desc->desc1 = ptr->desc1;
+	desc->desc2 = ptr->desc2;
+	desc->desc3 = ptr->desc3;
+	#else
+	desc->desc0 = ptr->desc1;
+	desc->desc1 = ptr->desc0;
+	desc->desc2 = ptr->desc3;
+	desc->desc3 = ptr->desc2;
+	#endif
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_setup_desc);
+
+void dump_cbm_desc(struct cbm_desc *desc, int detail)
+{
+	struct dma_desc *des = (struct dma_desc *)desc;
+	LOGF_KLOG_INFO("The RAW value of the CBM desc:\n");
+
+	LOGF_KLOG_INFO("desc 0: 0x%x\n", desc->desc0);
+	LOGF_KLOG_INFO("desc 1: 0x%x\n", desc->desc1);
+	LOGF_KLOG_INFO("desc 2: 0x%x\n", desc->desc2);
+	LOGF_KLOG_INFO("desc 3: 0x%x\n", desc->desc3);
+
+	if (!detail)
+		return;
+
+	LOGF_KLOG_INFO("The detail of the DMA desc:\n");
+
+	LOGF_KLOG_INFO("dest sub interface id: %d\n",   des->dest_sub_if_id);
+	LOGF_KLOG_INFO("eth type:              %d\n",   des->eth_type);
+	LOGF_KLOG_INFO("flow id:               %d n",   des->flow_id);
+	LOGF_KLOG_INFO("tunnel id:             %d\n\n", des->tunnel_id);
+
+	LOGF_KLOG_INFO("class id:              %d\n",   des->classid);
+	LOGF_KLOG_INFO("ep:                    %d\n",   des->ep);
+	LOGF_KLOG_INFO("color:                 %d\n",   des->color);
+	LOGF_KLOG_INFO("mpe1:                  %d\n",   des->mpe1);
+	LOGF_KLOG_INFO("mpe2:                  %d\n",   des->mpe2);
+	LOGF_KLOG_INFO("enc:                   %d\n",   des->enc);
+	LOGF_KLOG_INFO("dec:                   %d\n",   des->dec);
+	LOGF_KLOG_INFO("nat:                   %d\n",   des->nat);
+	LOGF_KLOG_INFO("tcp_err:               %d\n",   des->tcp_err);
+	LOGF_KLOG_INFO("session id:            %d\n\n", des->session_id);
+
+	LOGF_KLOG_INFO("data ptr:              %d\n\n", des->data_ptr);
+
+	LOGF_KLOG_INFO("data len:              %d\n",   des->data_len);
+	LOGF_KLOG_INFO("mpoa mode:             %d\n",   des->mpoa_mode);
+	LOGF_KLOG_INFO("mpoa pt:               %d\n",   des->mpoa_pt);
+	LOGF_KLOG_INFO("qid:                   %d\n",   des->qid);
+	LOGF_KLOG_INFO("byte offset:           %d\n",   des->byte_offset);
+	LOGF_KLOG_INFO("pdu type:              %d\n",   des->pdu_type);
+	LOGF_KLOG_INFO("dic:                   %d\n",   des->dic);
+	LOGF_KLOG_INFO("eop:                   %d\n",   des->eop);
+	LOGF_KLOG_INFO("sop:                   %d\n",   des->sop);
+	LOGF_KLOG_INFO("complete:              %d\n",   des->c);
+	LOGF_KLOG_INFO("own:                   %d\n",   des->own);
+
+	return;
+}
+
+static int cbm_cpu_enqueue(uint32_t pid, struct cbm_desc *desc)
+{
+	uint32_t data_pointer, size_to_wb, pointer_to_wb;
+
+	if (!desc || pid >= CPU_EQM_PORT_NUM /*|| ((1 << pid) & g_cpu_port_alloc) == 0*/)
+		return CBM_FAILURE;
+
+
+	size_to_wb = ((desc->desc2 >= g_cbm_buff.std_buf_addr) && (desc->desc2 <= (g_cbm_buff.std_buf_addr + g_cbm_buff.std_buf_size))) ?
+		CBM_STD_BUF_SIZE : CONFIG_CBM_JBO_PKT_SIZE;
+	pointer_to_wb = (size_to_wb == CBM_STD_BUF_SIZE) ? (desc->desc2 & 0xfffff800) : (desc->desc2 & g_cbm_ctrl.jumbo_size_mask);
+
+	if ((size_to_wb == CONFIG_CBM_JBO_PKT_SIZE) && (get_cnt_of_ptr(desc->desc2) > 1)) {
+		size_to_wb = desc->desc3 & 0x0000FFFF;
+		pointer_to_wb = desc->desc2;
+	}
+
+	data_pointer = dma_map_single(g_cbm_ctrl.dev, (void *) pointer_to_wb,
+		size_to_wb, DMA_TO_DEVICE);
+	if (dma_mapping_error(g_cbm_ctrl.dev, data_pointer)) {
+		LOGF_KLOG_DEV_ERROR(g_cbm_ctrl.dev, "%s DMA map failed\n", __func__);
+		return CBM_FAILURE;
+	}
+	data_pointer += desc->desc2 - pointer_to_wb;
+	cbm_cpu_enqueue_hw(pid, desc, (void *)data_pointer, 0);
+	return CBM_SUCCESS;
+}
+/* flags : STD Buffer or Jumbo buffer using existing defines
+Caller must have checked the parameter validity etc before calling this API  */
+int cbm_cpu_enqueue_hw(uint32_t pid, struct cbm_desc *desc, void *data_pointer,  int flags)
+{
+	unsigned long sys_flag;
+	local_irq_save(sys_flag);
+	xrx500_cbm_w32(eqmdesc[pid], desc->desc0);
+	xrx500_cbm_w32(eqmdesc[pid] + 4, desc->desc1);
+	xrx500_cbm_w32(eqmdesc[pid] + 8, (uint32_t)data_pointer);
+	asm("sync");
+	xrx500_cbm_w32(eqmdesc[pid] + 12, desc->desc3);
+	asm("sync");
+	local_irq_restore(sys_flag);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_cpu_enqueue_hw);
+
+static void store_bufreq_baseaddr(void)
+{
+	bufreq[0] = CBM_EQM_BASE + CBM_EQM_CPU_PORT(0, new_sptr);
+	bufreq[1] = CBM_EQM_BASE + CBM_EQM_CPU_PORT(0, new_jptr);
+#ifdef CONFIG_CBM_LS_ENABLE
+	dqmdesc[0] = CBM_DQM_BASE + CBM_DQM_CPU_PORT(2, desc0.desc0);
+	dqmdesc[1] = CBM_DQM_BASE + CBM_DQM_CPU_PORT(2, desc1.desc0);
+#endif
+	eqmdesc[0] = CBM_EQM_BASE + CBM_EQM_CPU_PORT(0, desc0.desc0);
+	eqmdesc[1] = CBM_EQM_BASE + CBM_EQM_CPU_PORT(1, desc0.desc0);
+	eqmdesc[2] = CBM_EQM_BASE + CBM_EQM_CPU_PORT(2, desc0.desc0);
+	eqmdesc[3] = CBM_EQM_BASE + CBM_EQM_CPU_PORT(3, desc0.desc0);
+	cbm_cntr_func[0].reg = CBM_EQM_BASE + CBM_EQM_CTRL;
+	cbm_cntr_func[1].reg = CBM_DQM_BASE + CBM_DQM_CTRL;
+
+}
+void *cbm_alloc_buf_by_size(uint32_t size)
+{
+	void *ptr = NULL;
+	unsigned int cpu = smp_processor_id();
+	int32_t *jumbo_buf_used = &per_cpu(g_cbm_jbo_divide.jumbo_buf_used, cpu);
+	void **curr_jumbo_buf = &per_cpu(g_cbm_jbo_divide.curr_jumbo_buf, cpu);
+	int32_t *curr_jumbo_buf_bytes_used = &per_cpu(g_cbm_jbo_divide.curr_jumbo_buf_bytes_used, cpu);
+	int32_t *curr_jumbo_buf_alloc_no = &per_cpu(g_cbm_jbo_divide.curr_jumbo_buf_alloc_no, cpu);
+	if (*curr_jumbo_buf == NULL
+	|| get_cnt_of_ptr((uint32_t)*curr_jumbo_buf)  == CBM_MAX_RCNT
+	|| (CONFIG_CBM_JBO_PKT_SIZE - *curr_jumbo_buf_bytes_used) < size) {
+		if (*curr_jumbo_buf) {
+		/* Adjust RCNT in HW */
+			cbm_buffer_free(cpu, (uint32_t)*curr_jumbo_buf, 0);
+		}
+		/* Get new Jumbo buffer from CBM */
+		*curr_jumbo_buf = cbm_buffer_alloc(cpu, CBM_PORT_F_JUMBO_BUF);
+		(*jumbo_buf_used)++;
+		*curr_jumbo_buf_alloc_no = 0;
+		*curr_jumbo_buf_bytes_used = 0;
+	}
+
+	ptr = *curr_jumbo_buf + *curr_jumbo_buf_bytes_used;
+	*curr_jumbo_buf_bytes_used += size + CBM_JUMBO_BUF_SPLIT_GUARD_BAND;
+	(*curr_jumbo_buf_alloc_no)++;
+	if (*curr_jumbo_buf_alloc_no == CBM_MAX_RCNT) {
+		*curr_jumbo_buf = NULL;
+	} else {
+		cbm_buffer_upd_rcnt(cpu, *curr_jumbo_buf,
+		CBM_CPU_BUF_INC_RCNT);
+	}
+	return ptr;
+}
+
+struct sk_buff *cbm_alloc_skb_by_size(
+	unsigned int size,
+	gfp_t priority
+	)
+{
+	void *buf = NULL;
+	struct sk_buff *skbuf = NULL;
+	size = SKB_DATA_ALIGN(size + CBM_DMA_DATA_OFFSET + NET_SKB_PAD)
+			 + SKB_DATA_ALIGN(sizeof(struct skb_shared_info));
+	buf = cbm_alloc_buf_by_size(size);
+	if (buf) {
+		skbuf = cbm_build_skb((void *)buf,
+			size, priority);
+		if (skbuf) {
+			skb_reserve(skbuf, CBM_DMA_DATA_OFFSET);
+		} else {
+			cbm_buffer_free(smp_processor_id(), (uint32_t) buf, 0);
+		}
+	}
+	return skbuf;
+}
+EXPORT_SYMBOL(cbm_alloc_skb_by_size);
+
+void *cbm_buffer_alloc(uint32_t pid, uint32_t flag)
+{
+	uint32_t buf_addr = 0;
+	uint32_t i = 0;
+	unsigned long sys_flag;
+
+
+	if (pid >= CPU_EQM_PORT_NUM /*|| (((1 << pid) & g_cpu_port_alloc) == 0)*/) {
+		cbm_err("illegal pid: %d, legal cpu bitmap: 0x%x\n", pid, (unsigned int) (g_cpu_port_alloc));
+		return NULL;
+	}
+	local_irq_save(sys_flag);
+	do {
+		buf_addr = xrx500_cbm_r32(bufreq[flag >> 1] + (pid * 0x1000));
+	} while ((buf_addr & 0xFFFFF800) == 0xFFFFF800 && (i++) < DEFAULT_WAIT_CYCLES);
+
+	if ((buf_addr & 0xFFFFF800) == 0xFFFFF800) {
+		cbm_err("alloc buffer fail for portid: %d type %d", pid, flag);
+		local_irq_restore(sys_flag);
+		return NULL;
+	}
+	local_irq_restore(sys_flag);
+
+	return (void *)__va(buf_addr);
+}
+EXPORT_SYMBOL(cbm_buffer_alloc);
+
+struct sk_buff *cbm_copy_skb(const struct sk_buff *skb, gfp_t gfp_mask)
+{
+	int headerlen = skb_headroom(skb);
+	unsigned int size = skb_end_offset(skb) + skb->data_len;
+	struct sk_buff *n = cbm_alloc_skb(size, gfp_mask);
+
+	if (!n)
+		return NULL;
+
+	/* Set the data pointer */
+	skb_reserve(n, headerlen);
+	/* Set the tail pointer and length */
+	skb_put(n, skb->len);
+
+	if (skb_copy_bits(skb, -headerlen, n->head, headerlen + skb->len))
+		BUG();
+
+	ltq_copy_skb_header(n, skb);
+	return n;
+}
+EXPORT_SYMBOL(cbm_copy_skb);
+
+struct sk_buff *cbm_alloc_skb(
+	unsigned int size,
+	gfp_t priority
+	)
+{
+	uint32_t flag = CBM_PORT_F_STANDARD_BUF;
+	void *buf = NULL;
+	struct sk_buff *skbuf = NULL;
+	size = SKB_DATA_ALIGN(size + CBM_DMA_DATA_OFFSET + NET_SKB_PAD)
+			 + SKB_DATA_ALIGN(sizeof(struct skb_shared_info));
+
+	if (size > CBM_STD_BUF_SIZE) {
+		flag = CBM_PORT_F_JUMBO_BUF;
+	}
+	buf = cbm_buffer_alloc(smp_processor_id(), flag);
+	if (buf) {
+		skbuf = cbm_build_skb((void *)buf,
+			size, priority);
+		if (skbuf) {
+			skb_reserve(skbuf, CBM_DMA_DATA_OFFSET);
+		} else {
+			cbm_buffer_free(smp_processor_id(), (uint32_t) buf, 0);
+		}
+	}
+	return skbuf;
+}
+EXPORT_SYMBOL(cbm_alloc_skb);
+
+int cbm_buffer_free(uint32_t pid, uint32_t v_buf, uint32_t flag)
+{
+	uint32_t buf;
+	unsigned long sys_flag, cnt;
+	uint32_t size_to_wb, pointer_to_wb;
+
+	if (pid >= CPU_DQM_PORT_NUM /*|| (((1 << pid) & g_cpu_port_alloc) == 0)*/) {
+		cbm_err("illegal pid: %d, legal cpu bitmap: 0x%x", pid, (unsigned int)g_cpu_port_alloc);
+		return CBM_FAILURE;
+	}
+	if (flag)
+		v_buf = (uint32_t)__va(v_buf);
+	size_to_wb = ((v_buf >= g_cbm_buff.std_buf_addr) && (v_buf <= (g_cbm_buff.std_buf_addr + g_cbm_buff.std_buf_size))) ?
+		CBM_STD_BUF_SIZE : CONFIG_CBM_JBO_PKT_SIZE;
+	pointer_to_wb = (size_to_wb == CBM_STD_BUF_SIZE) ? (v_buf & 0xfffff800) : (v_buf & g_cbm_ctrl.jumbo_size_mask);
+
+	cnt = get_cnt_of_ptr(v_buf);
+	#ifdef ENABLE_LL_DEBUG
+	if ((cnt == 1) || (cnt == 0)) {
+	#else
+	WARN_ON(!cnt);
+	if (cnt == 1) {
+	#endif
+		buf = dma_map_single(
+		g_cbm_ctrl.dev,
+		(void *) pointer_to_wb,
+		size_to_wb,
+		DMA_FROM_DEVICE);
+		if (dma_mapping_error(g_cbm_ctrl.dev, buf)) {
+			LOGF_KLOG_DEV_ERROR(g_cbm_ctrl.dev, "%s DMA map failed\n", __func__);
+			return CBM_FAILURE;
+		}
+	} else {
+		buf = __pa(pointer_to_wb);
+	}
+	local_irq_save(sys_flag);
+	xrx500_cbm_w32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(pid, ptr_rtn), buf);
+	local_irq_restore(sys_flag);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_buffer_free);
+
+
+
+#ifdef CONFIG_CBM_LS_ENABLE
+static inline int cbm_dq_deq_list()
+{
+	int i = 0;
+	static int to_read;
+	int l_read = to_read;
+	int rx = 0;
+		g_cbm_dq_dlist[i].desc.desc3 = xrx500_cbm_r32(dqmdesc[l_read] + 12);
+		if (!(g_cbm_dq_dlist[i].desc.desc3 & 0x80000000)) {
+			goto DONE;
+		}
+		g_cbm_dq_dlist[i].desc.desc0 = xrx500_cbm_r32(dqmdesc[l_read]);
+		g_cbm_dq_dlist[i].desc.desc1 = xrx500_cbm_r32(dqmdesc[l_read] + 4);
+		g_cbm_dq_dlist[i].desc.desc2 = xrx500_cbm_r32(dqmdesc[l_read] + 8);
+		xrx500_cbm_w32(dqmdesc[l_read] + 12, 0);
+		i++;
+		rx++;
+		to_read = !l_read;
+DONE:
+	LOGF_KLOG_DEBUG("rx %d\r\n", rx);
+	return rx;
+}
+
+int get_budget()
+{
+	return g_budget;
+}
+#endif
+int cbm_ls_deq_list(uint32_t pid)
+{
+	int budget = 50, i = 0;
+	int ret = CBM_SUCCESS;
+	while (((xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, status)) >> 7) & 0xF) != 0) {
+		if (budget-- < 0) {
+			ret = CBM_RESCHEDULE;
+			break;
+		}
+			g_cbm_dlist[pid][i].desc.desc0 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc0));
+			g_cbm_dlist[pid][i].desc.desc1 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc1));
+			g_cbm_dlist[pid][i].desc.desc2 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc2));
+			g_cbm_dlist[pid][i].desc.desc3 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc3));
+			i++;
+	}
+	g_cbm_dlist[pid][i].desc.desc2 = 0;
+	return ret;
+}
+
+int cbm_cpu_dequeue_list(uint32_t pid)
+{
+	if (pid >= CPU_DQM_PORT_NUM || (((1 << pid) & g_cpu_port_alloc) == 0))
+	return CBM_FAILURE;
+	return cbm_ls_deq_list(pid);
+}
+EXPORT_SYMBOL(cbm_cpu_dequeue_list);
+
+#if 0
+int cbm_ls_deq(uint32_t pid, struct cbm_desc *desc)
+{
+	if (((xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, status)) >> 7) & 0xF) != 0) {
+		desc->desc0 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc0));
+		desc->desc1 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc1));
+		desc->desc2 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc2));
+		desc->desc3 = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pid, desc.desc3));
+
+		desc->desc2 = phy2vrtl(desc->desc2);
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+
+int cbm_cpu_dequeue(uint32_t pid, struct cbm_desc *desc, int *quota, uint32_t *buf_per_port)
+{
+	int i;
+	if (pid >= CPU_DQM_PORT_NUM)
+	return CBM_FAILURE;
+
+	for (i = 0; i < *quota; i++) {
+		if (cbm_ls_deq(pid, desc) == CBM_SUCCESS) {
+			(*buf_per_port)++;
+			desc += 1;
+		} else {
+			break;
+		}
+	}
+
+	*quota = *quota - i;
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_cpu_dequeue);
+#endif
+
+/*
+ *	return 1: pointer is valid
+ *
+ *		 0: pointer is invalid
+*/
+inline int check_ptr_validation(uint32_t buf)
+{
+	if (((buf >= g_cbm_buff.std_buf_addr) && (buf <= (g_cbm_buff.std_buf_addr + g_cbm_buff.std_buf_size)))
+		|| ((buf >= g_cbm_buff.jbo_buf_addr) && (buf <= (g_cbm_buff.jbo_buf_addr + g_cbm_buff.jbo_buf_size)))) {
+		return 1;
+	}
+	return 0;
+}
+EXPORT_SYMBOL(check_ptr_validation);
+inline int check_ptr_valid_type(uint32_t buf)
+{
+
+	if ((buf >= g_cbm_buff.std_buf_addr) && (buf <= (g_cbm_buff.std_buf_addr + g_cbm_buff.std_buf_size))) {
+		return SBA0_STD;
+	} else if ((buf >= g_cbm_buff.jbo_buf_addr) && (buf <= (g_cbm_buff.jbo_buf_addr + g_cbm_buff.jbo_buf_size))) {
+		return SBA0_JBO;
+	}
+	return 0;
+}
+
+u32 cbm_linearise_buf(struct sk_buff *skb)
+{
+	u32 new_buf, tmp_buf;
+	void *frag_addr;
+	const skb_frag_t *frag;
+	int i, len = 0, tot_len = 0, copy_len = 0;
+	int buf_size;
+
+	SKB_FRAG_ASSERT(skb);
+    /*This check is not needed at the moment*/
+	/*WARN_ON(skb_shared(skb));*/
+
+	tot_len = skb->len;
+	if (tot_len <= CBM_STD_BUF_SIZE) {
+		new_buf = (u32) cbm_buffer_alloc(smp_processor_id(), CBM_PORT_F_STANDARD_BUF);
+		buf_size = CBM_STD_BUF_SIZE;
+	} else if (tot_len <= CONFIG_CBM_JBO_PKT_SIZE) {
+		new_buf = (u32) cbm_buffer_alloc(smp_processor_id(), CBM_PORT_F_JUMBO_BUF);
+		buf_size = CONFIG_CBM_JBO_PKT_SIZE;
+	} else {
+		LOGF_KLOG_ERROR("%s:11:length exceeds buf size tot_len %d \n", __func__, tot_len);
+		return 0;
+	}
+	if (new_buf) {
+		/*reserve the headroom for the HW */
+		new_buf += CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD;
+		tmp_buf = new_buf;
+		if (skb_is_nonlinear(skb)) {
+			LOGF_KLOG_DEBUG("skb is non-linear in cbm\n");
+			copy_len = skb_headlen(skb);
+		} else
+			copy_len = skb->len;
+		memcpy((u8 *)tmp_buf, skb->data, copy_len);
+		tmp_buf += copy_len;
+		/* If the packet has fragments, copy that also */
+		for (i = 0; i < (skb_shinfo(skb)->nr_frags); i++) {
+			frag = &skb_shinfo(skb)->frags[i];
+			len = skb_frag_size(frag);
+			frag_addr = skb_frag_address(frag);
+			if (len < (buf_size - copy_len)) {
+				 memcpy((u8 *)tmp_buf, (u8 *)frag_addr, len);
+				 tmp_buf += len;
+				 copy_len += len;
+			} else {
+				 LOGF_KLOG_ERROR("%s:22:copied = %d and remaining = %d and skb->head is %x \n", __func__, copy_len, len, (u32)(skb->head));
+				 cbm_buffer_free(smp_processor_id(), new_buf, 0);
+				 return 0;
+			}
+		}
+	} else { /* no buffer */
+		LOGF_KLOG_ERROR("%s:33:no buffer in CBM HW ! \n", __func__);
+		return 0;
+	}
+	return new_buf;
+}
+#if 0
+static void dump_raw_data(unsigned char *p, int len, char *prefix_str)
+{
+	int i;
+	int line_num = 32;
+
+	printk("%s:\n", prefix_str ? prefix_str : "Data");
+	for (i = 0; i < len; i++) {
+		if ((i % line_num) == 0)
+			printk("  ");
+		printk("%02x ", p[i]);
+		if ((i % line_num) == (line_num - 1))
+			printk("\n");
+	}
+	printk("\n");
+}
+#endif
+
+/* Transmit the packet sent by the upper layer */
+
+int32_t
+cbm_cpu_pkt_tx(
+	struct sk_buff *skb,
+	int32_t pmac_port_id,
+	uint32_t flags
+	)
+{
+	struct cbm_desc desc;
+	uint32_t tmp_data_ptr;
+	struct dma_tx_desc_2 *desc_2 = (struct dma_tx_desc_2 *) &skb->DW2;
+	u32 new_buf;
+
+
+	if (!check_ptr_validation((u32)(skb->head)) || skb_cloned(skb)) {
+	/*	LOGF_KLOG_INFO("11:buffer status: %d and cloned status: %d\n", check_ptr_validation((u32) (skb->head)),  skb_cloned(skb));*/
+		new_buf = cbm_linearise_buf(skb);
+		if (!new_buf) {
+			LOGF_KLOG_ERROR("%s: cbm buffer alloc failed ..\n", __func__);
+			dev_kfree_skb_any(skb);
+			return CBM_FAILURE;
+		}
+		tmp_data_ptr = new_buf;
+	} else {
+/*		LOGF_KLOG_INFO("22:buffer status: %d and cloned status: %d\n", check_ptr_validation((u32) (skb->head)),  skb_cloned(skb));*/
+		tmp_data_ptr = desc_2->field.data_ptr;
+		/* Detach th skb */
+		skb->head = NULL;
+	}
+
+	/*dump_raw_data(new_buf, 96, "Tx Data after linearise");*/
+
+	if (cbm_setup_desc((struct cbm_desc *) &desc, tmp_data_ptr,
+			(skb->len < (ETH_ZLEN + 8)) ? (ETH_ZLEN + 8) : skb->len,
+			skb->DW1, skb->DW0)){
+		LOGF_KLOG_ERROR("cbm setup desc failed..\n");
+		dev_kfree_skb_any(skb);
+		cbm_buffer_free(smp_processor_id(), tmp_data_ptr, 0);
+		/*spin_unlock_irqrestore(&cbm_tx_lock, sys_flag);*/
+		return CBM_FAILURE;
+	}
+	/*copy the pdu type bit for DSL*/
+	if (skb->DW3 & BIT(CBM_PDU_TYPE))
+		desc.desc3 |= BIT(CBM_PDU_TYPE);
+	/*spin_lock_irqsave(&cbm_tx_lock, sys_flag);*/
+
+	dev_kfree_skb_any(skb);
+
+	if (cbm_cpu_enqueue(smp_processor_id(), &desc) == CBM_FAILURE) {
+		LOGF_KLOG_ERROR("cpu enqueue failed..\n");
+		cbm_buffer_free(smp_processor_id(), tmp_data_ptr, 0);
+		return CBM_FAILURE;
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_cpu_pkt_tx);
+
+
+void cbm_hw_init(void)
+{
+	init_fsqm();
+	init_cbm_basic();
+	LOGF_KLOG_INFO("CBM HW init\n");
+	return;
+}
+
+
+int cbm_set_cpu_alloc_offset(uint32_t pid,
+uint32_t jbo,
+unsigned int offset)
+{
+	if (pid > 4) {
+		cbm_err("pid:[%d]  > 4", pid);
+		return CBM_FAILURE;
+	}
+
+	if (!jbo) {
+		xrx500_cbm_w32(CBM_EQM_BASE +  CBM_EQM_CPU_PORT(pid, new_sptr),
+		offset);
+	} else {
+		xrx500_cbm_w32(CBM_EQM_BASE +  CBM_EQM_CPU_PORT(pid, new_jptr),
+		offset);
+	}
+
+	return CBM_SUCCESS;
+}
+
+uint32_t cbm_get_total_buf_num(uint32_t flag)
+{
+	if (flag == 0) {/*STD*/
+		return g_cbm_buff.std_frm_num - 2; /* !!!should change to -1 after HW updated*/
+	} else {
+		return g_cbm_buff.jbo_frm_num - 2;
+	}
+}
+
+
+/*
+* CBM assistant function
+*/
+void cbm_dw_memset(uint32_t *base, int val, uint32_t size)
+{
+	int i;
+	for (i = 0; i < size; i++) {
+		base[i] = val;
+	}
+
+	return;
+}
+
+/*
+ *	CBM Interrupt handler
+ */
+
+void fsqm_intr_handler(uint32_t fsqm_idx)
+{
+	uint32_t fsqm_intr_stat;
+	int i;
+
+	fsqm_intr_stat = xrx500_cbm_r32(FSQM_BASE(fsqm_idx) + FSQM_IRNCR);
+
+	LOGF_KLOG_INFO("fsqm[%d] status: 0x%x\n",
+	fsqm_idx, fsqm_intr_stat);
+	for (i = 0; i < 5; i++) {
+		if (fsqm_intr_stat & (1 << i)) {
+			LOGF_KLOG_ERR_ONCE("fsqm[%d] watermark[%d] interrupt!\n",
+			fsqm_idx, i);
+		}
+	}
+	if (fsqm_intr_stat & (1 << 12)) {
+		LOGF_KLOG_ERR_ONCE("RAM Access Violation interrupt\n");
+	}
+	if (fsqm_intr_stat & (1 << 16)) {
+		LOGF_KLOG_ERR_ONCE("Free Command RAM Access Violation\n");
+	}
+	if (fsqm_intr_stat & (1 << 20)) {
+		LOGF_KLOG_ERR_ONCE("Free Command OverFlow\n");
+	}
+	if (fsqm_intr_stat & (1 << 24)) {
+		LOGF_KLOG_ERR_ONCE("Alloc Command Nil Response\n");
+	}
+
+	LOGF_KLOG_DEBUG("Clear FSQM interrupt status\n");
+	xrx500_cbm_w32(FSQM_BASE(fsqm_idx) + FSQM_IRNCR, fsqm_intr_stat);
+	LOGF_KLOG_DEBUG("Double check the fsqm intr status:0x%x\n",
+	xrx500_cbm_r32(FSQM_BASE(fsqm_idx) + FSQM_IRNCR));
+
+}
+
+void ls_intr_handler(uint32_t pid)
+{
+	uint32_t ls_intr_stat;
+
+	ls_intr_stat = xrx500_cbm_r32(CBM_LS_BASE + IRNICR_LS);
+	LOGF_KLOG_DEBUG("ls interrupt status: 0x%x\n", ls_intr_stat);
+
+	if (ls_intr_stat & (3 << (pid * 2 + 16))) {
+		LOGF_KLOG_DEBUG("pid:%d, interrupt\n", pid);
+	}
+
+	LOGF_KLOG_DEBUG("Clear ls intr status on pid:%d\n", pid);
+	ls_intr_stat &= (3 << (pid * 2 + 16));
+	xrx500_cbm_w32(CBM_LS_BASE + IRNCR_LS, ls_intr_stat);
+
+	LOGF_KLOG_DEBUG("Double check the ls status after clear: 0x%x\n",
+	xrx500_cbm_r32(CBM_LS_BASE + IRNCR_LS));
+
+}
+
+void igp_cpu_intr_handler(uint32_t pid)
+{
+	uint32_t eqm_intr_stat;
+
+	eqm_intr_stat = xrx500_cbm_r32(CBM_EQM_BASE
+	+ CBM_EQM_CPU_PORT(pid, irncr));
+	LOGF_KLOG_ERR_ONCE("igp interrupt for pid: %d, stat: 0x%x\n", pid, eqm_intr_stat);
+
+	if (eqm_intr_stat & (1 << 0)) {
+		LOGF_KLOG_ERR_ONCE("Packet Not Accept\n");
+	}
+	if (eqm_intr_stat & (1 << 1)) {
+		LOGF_KLOG_ERR_ONCE("Low WaterMark Interrupt\n");
+	}
+	if (eqm_intr_stat & (1 << 2)) {
+		LOGF_KLOG_ERR_ONCE("High WaterMark Interrupt\n");
+	}
+	if (eqm_intr_stat & (1 << 3)) {
+		LOGF_KLOG_ERR_ONCE("Descriptor Ready for Enqueue\n");
+	}
+	if (eqm_intr_stat & (1 << 4)) {
+		LOGF_KLOG_ERR_ONCE("Standard Pointer Ready\n");
+	}
+	if (eqm_intr_stat & (1 << 5)) {
+		LOGF_KLOG_ERR_ONCE("Jumbo Pointer Ready\n");
+	}
+
+	LOGF_KLOG_DEBUG("Clear IGP intr status on pid:%d\n", pid);
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, irncr), eqm_intr_stat);
+
+	LOGF_KLOG_DEBUG("Double check the IGP status after clear: 0x%x\n",
+	xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, irncr)));
+}
+
+void egp_cpu_intr_handler(uint32_t pid)
+{
+	uint32_t dqm_intr_stat;
+
+	dqm_intr_stat = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(pid, irncr));
+	LOGF_KLOG_ERR_ONCE("dqm interrupt for pid: %d, stat: 0x%x\n", pid, dqm_intr_stat);
+
+	if (dqm_intr_stat & 0x01) {
+		LOGF_KLOG_ERR_ONCE("Register ready for pointer free on port: %d\n", pid);
+	}
+
+	LOGF_KLOG_DEBUG("Clear EGP intr status on pid:%d\n", pid);
+	xrx500_cbm_w32(CBM_DQM_BASE + CBM_EQM_CPU_PORT(pid, irncr), dqm_intr_stat);
+
+	LOGF_KLOG_DEBUG("Double check the EGP status after clear: 0x%x\n",
+	xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(pid, irncr)));
+}
+
+static irqreturn_t cbm_isr_0(int irq, void *dev_id)
+{
+	uint32_t cbm_intr_status;
+	uint32_t igp_intr_status;
+	uint32_t egp_intr_status;
+
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(0, cbm_irncr));
+	igp_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(0, igp_irncr));
+	egp_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(0, egp_irncr));
+
+	LOGF_KLOG_DEBUG("isr0: cbm_intr_status: 0x%x\n", cbm_intr_status);
+	LOGF_KLOG_DEBUG("isr0: igp_intr_status: 0x%x\n", igp_intr_status);
+	LOGF_KLOG_DEBUG("isr0: egp_intr_status: 0x%x\n", egp_intr_status);
+
+	/* isr 0 by default bind FSQM interrupt and TMU interrupt */
+	if (cbm_intr_status != 0) {
+	if (cbm_intr_status & 3) {/*TMU interrupt*/
+		LOGF_KLOG_DEBUG("TMU interrupt triggered!!! Impossible!!!\n");
+		LOGF_KLOG_ERROR("TMU interrupt triggered!!! Impossible!!!\n");
+	}
+	if (cbm_intr_status & 0xF0) {/*FSQM interrupt */
+		if (cbm_intr_status & 0x30) {
+			LOGF_KLOG_DEBUG("FSQM0 interrupt!\n");
+			LOGF_KLOG_ERROR("FSQM0 interrupt!\n");
+			fsqm_intr_handler(0);
+		} else {
+			LOGF_KLOG_DEBUG("FSQM1 interrupt!\n");
+			LOGF_KLOG_ERROR("FSQM1 interrupt!\n");
+			fsqm_intr_handler(1);
+		}
+	}
+	if (cbm_intr_status & 0x0100) {
+		LOGF_KLOG_DEBUG("Load Spreader interrupt on pid 0\n");
+		LOGF_KLOG_ERROR("Load Spreader interrupt on pid 0\n");
+	}
+	}
+
+	if (igp_intr_status & 0x1) {
+	igp_cpu_intr_handler(0);
+	}
+
+	LOGF_KLOG_DEBUG("Clear CBM intr source \n");
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(0, cbm_irncr),
+	cbm_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(0, igp_irncr),
+	igp_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(0, egp_irncr),
+	egp_intr_status);
+
+	LOGF_KLOG_DEBUG("The status after clear\n");
+
+	LOGF_KLOG_DEBUG("isr0: cbm_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(0, cbm_irncr)));
+	LOGF_KLOG_DEBUG("isr0: igp_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(0, igp_irncr)));
+	LOGF_KLOG_DEBUG("isr0: egp_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(0, egp_irncr)));
+
+	return IRQ_HANDLED;
+}
+
+void cbm_isr_1(void)
+{
+	uint32_t cbm_intr_status;
+	uint32_t igp_intr_status;
+	uint32_t egp_intr_status;
+
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(1, cbm_irncr));
+	igp_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(1, igp_irncr));
+	egp_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(1, egp_irncr));
+
+	LOGF_KLOG_DEBUG("isr1: cbm_intr_status: 0x%x\n", cbm_intr_status);
+	LOGF_KLOG_DEBUG("isr1: igp_intr_status: 0x%x\n", igp_intr_status);
+	LOGF_KLOG_DEBUG("isr1: egp_intr_status: 0x%x\n", egp_intr_status);
+
+	if (igp_intr_status & 0x2) {
+		igp_cpu_intr_handler(1);
+	}
+
+	LOGF_KLOG_DEBUG("Clear intr source \n");
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(1, cbm_irncr),
+	cbm_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(1, igp_irncr),
+	igp_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(1, egp_irncr),
+	egp_intr_status);
+
+	LOGF_KLOG_DEBUG("The status after clear\n");
+	LOGF_KLOG_DEBUG("isr1: cbm_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(1, cbm_irncr)));
+	LOGF_KLOG_DEBUG("isr1: igp_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(1, igp_irncr)));
+	LOGF_KLOG_DEBUG("isr1: egp_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(1, egp_irncr)));
+
+}
+
+void cbm_isr_2(void)
+{
+	uint32_t cbm_intr_status;
+	uint32_t igp_intr_status;
+	uint32_t egp_intr_status;
+
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(2, cbm_irncr));
+	igp_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(2, igp_irncr));
+	egp_intr_status = xrx500_cbm_r32(CBM_BASE
+	+ CBM_INT_LINE(2, egp_irncr));
+
+	LOGF_KLOG_DEBUG("isr2: cbm_intr_status: 0x%x\n", cbm_intr_status);
+	LOGF_KLOG_DEBUG("isr2: igp_intr_status: 0x%x\n", igp_intr_status);
+	LOGF_KLOG_DEBUG("isr2: egp_intr_status: 0x%x\n", egp_intr_status);
+
+	if (igp_intr_status & 0x4) {
+		igp_cpu_intr_handler(2);
+	}
+
+	LOGF_KLOG_DEBUG("Clear intr source \n");
+
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(2, cbm_irncr),
+	cbm_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(2, igp_irncr),
+	igp_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(2, egp_irncr),
+	egp_intr_status);
+
+	LOGF_KLOG_DEBUG("The status after clear\n");
+	LOGF_KLOG_DEBUG("isr2: cbm_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(2, cbm_irncr)));
+	LOGF_KLOG_DEBUG("isr2: igp_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(2, igp_irncr)));
+	LOGF_KLOG_DEBUG("isr2: egp_intr_status: 0x%x\n",
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(2, egp_irncr)));
+}
+
+void cbm_isr_3(void)
+{
+	uint32_t cbm_intr_status;
+	uint32_t igp_intr_status;
+	uint32_t egp_intr_status;
+
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(3, cbm_irncr));
+	igp_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(3, igp_irncr));
+	egp_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(3, egp_irncr));
+
+	LOGF_KLOG_DEBUG("isr3: cbm_intr_status: 0x%x\n", cbm_intr_status);
+	LOGF_KLOG_DEBUG("isr3: igp_intr_status: 0x%x\n", igp_intr_status);
+	LOGF_KLOG_DEBUG("isr3: egp_intr_status: 0x%x\n", egp_intr_status);
+
+	if (igp_intr_status & 0x8) {
+		igp_cpu_intr_handler(3);
+	}
+
+	LOGF_KLOG_DEBUG("Clear intr source \n");
+
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(3, cbm_irncr),
+	cbm_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(3, igp_irncr),
+	igp_intr_status);
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(3, egp_irncr),
+	egp_intr_status);
+
+	LOGF_KLOG_DEBUG("The status after clear\n");
+
+}
+#ifdef CONFIG_CBM_LS_ENABLE
+static int do_dq_cbm_poll(struct napi_struct *napi, int budget)
+{
+	struct cbm_desc_list *desc_list;
+	struct sk_buff *skb;
+	int data_len = 0;
+	uint32_t data_ptr;
+	int real_len = 0, temp_len = 0;
+	int deq_ret = 0;
+	static int tasklet_loop;
+	int complete = 0;
+
+	while ((deq_ret < budget) && !complete) {
+		if (cbm_dq_deq_list()) {
+			LOGF_KLOG_DEBUG("deq_ret %d\r\n", deq_ret);
+			deq_ret++;
+			desc_list = &g_cbm_dq_dlist[0];
+			/* Build the SKB */
+			data_len = desc_list->desc.desc3 & 0x0000FFFF;
+			data_ptr = (unsigned int) __va(desc_list->desc.desc2);
+			dma_map_single(g_cbm_ctrl.dev, (void *) (data_ptr + ((desc_list->desc.desc3 & 0x3800000) >> 23)),
+			data_len, DMA_FROM_DEVICE);
+			if (dma_mapping_error(g_cbm_ctrl.dev, desc_list->desc.desc2)) {
+				LOGF_KLOG_DEV_ERROR(g_cbm_ctrl.dev, "%s DMA map failed\n", __func__);
+				break;
+			}
+
+			temp_len = data_len + CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD;
+			real_len = SKB_DATA_ALIGN(temp_len)
+			+ SKB_DATA_ALIGN(sizeof(struct skb_shared_info));
+			skb = cbm_build_skb((void *) (data_ptr +
+			((desc_list->desc.desc3 & 0x3800000) >> 23)
+			- CBM_DMA_DATA_OFFSET - NET_IP_ALIGN - NET_SKB_PAD),
+			real_len, GFP_ATOMIC);
+			if (skb) {
+				skb_reserve(skb,  CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD);
+				/* Call the datapath library Rx function */
+				skb->DW0 = desc_list->desc.desc0;
+				skb->DW1 = desc_list->desc.desc1;
+				skb->DW2 = data_ptr;
+				skb->DW3 = desc_list->desc.desc3;
+				skb_put(skb, data_len);
+				dp_rx(skb, 0);
+				LOGF_KLOG_DEBUG ("%s: rx to datapath library\n", __func__);
+			} else {
+				LOGF_KLOG_ERROR("%s:failure in allocating skb, free cbm data pointer\r\n", __func__);
+				cbm_buffer_free(smp_processor_id(), desc_list->desc.desc2, 0);
+			}
+		} else {
+				tasklet_loop = (tasklet_loop >= 2) ? 0 : tasklet_loop + 1;
+				if (tasklet_loop >= 2)
+					complete = 1;
+		}
+	}
+	g_budget++;
+	LOGF_KLOG_DEBUG(" complete %d deq_ret %d\r\n", complete, deq_ret);
+	/*tasklet_loop += 1;*/
+	if ((complete || !deq_ret)) {
+		LOGF_KLOG_DEBUG("complete\r\n");
+		/*tasklet_loop = 0;*/
+		napi_complete(napi);
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(6, egp_irnen)), 4);
+	}
+	return CBM_SUCCESS;
+}
+#endif
+
+#ifdef ENABLE_LL_DEBUG
+/** Trigger when taklet schedule calls*/
+static void do_cbm_debug_tasklet(unsigned long cpu)
+{
+	uint32_t err_port = 0;
+	uint32_t err_egpid = 0;
+	uint32_t err_igpid = 0;
+	uint32_t err_lsa = 0;
+
+
+	err_port = get_val(xrx500_cbm_r32(CBM_BASE + CBM_LL_DBG_0),
+	CBM_LL_DBG_0_ERR_PORT_MASK,
+	CBM_LL_DBG_0_ERR_PORT_POS);
+
+	err_egpid = get_val(xrx500_cbm_r32(CBM_BASE + CBM_LL_DBG_0),
+	CBM_LL_DBG_0_ERR_EGPID_MASK,
+	CBM_LL_DBG_0_ERR_EGPID_POS);
+
+	err_igpid = get_val(xrx500_cbm_r32(CBM_BASE + CBM_LL_DBG_0),
+	CBM_LL_DBG_0_ERR_IGPID_MASK,
+	CBM_LL_DBG_0_ERR_IGPID_POS);
+
+	err_lsa = get_val(xrx500_cbm_r32(CBM_BASE + CBM_LL_DBG_0),
+	CBM_LL_DBG_0_ERR_LSA_MASK,
+	CBM_LL_DBG_0_ERR_LSA_POS);
+	if (err_port)
+		LOGF_KLOG_ERROR("Double free egp %u Buff addr 0x%x\n", err_egpid, xrx500_cbm_r32(CBM_BASE + CBM_SBA_0) + (err_lsa * 0x800));
+	else
+		LOGF_KLOG_ERROR("Double free igp %u Buff addr 0x%x\n", err_igpid, xrx500_cbm_r32(CBM_BASE + CBM_SBA_0) + (err_lsa * 0x800));
+
+	xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(5, cbm_irncr), 1 << 16);
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(5, cbm_irnicr));
+	/*Dummy read for write flush*/
+	xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(5, cbm_irncr));
+	rmb();
+	/* Enable all interrupts */
+	xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)),
+	(1) << 16);
+
+}
+#endif
+/** Trigger when taklet schedule calls*/
+static void do_cbm_tasklet(unsigned long cpu)
+{
+	struct cbm_desc_list *desc_list;
+	struct sk_buff *skb;
+	uint32_t pkt_recvd = 0;
+	int data_len = 0, deq_ret = 0, j = 0;
+	uint32_t data_ptr;
+	int real_len = 0, temp_len = 0;
+
+	/* Dequeue the packet */
+	LOGF_KLOG_DEBUG("am running in cpu %lu\r\n", cpu);
+	LOGF_KLOG_DEBUG("tasklet:cpu dequeue\n");
+	pkt_recvd = get_val(xrx500_cbm_r32(CBM_LS_BASE +
+	CBM_LS_PORT(cpu, status)),
+	LS_STATUS_PORT0_QUEUE_LEN_MASK,
+	LS_STATUS_PORT0_QUEUE_LEN_POS);
+
+	LOGF_KLOG_DEBUG("Qlen Port %lu recv %d pkts\n", cpu, pkt_recvd);
+	if (pkt_recvd > 0) {
+		deq_ret = cbm_cpu_dequeue_list (cpu);
+		desc_list = &g_cbm_dlist[cpu][0];
+		while (desc_list->desc.desc2) {
+			/* Build the SKB */
+			data_len = desc_list->desc.desc3 & 0x0000FFFF;
+			data_ptr = (unsigned int) __va(desc_list->desc.desc2);
+			dma_map_single(g_cbm_ctrl.dev, (void *) (data_ptr + ((desc_list->desc.desc3 & 0x3800000) >> 23)),
+			data_len, DMA_FROM_DEVICE);
+			if (dma_mapping_error(g_cbm_ctrl.dev, desc_list->desc.desc2)) {
+				LOGF_KLOG_DEV_ERROR(g_cbm_ctrl.dev, "%s DMA map failed\n", __func__);
+				break;
+			}
+
+			temp_len = data_len + CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD;
+			real_len = SKB_DATA_ALIGN(temp_len)
+			+ SKB_DATA_ALIGN(sizeof(struct skb_shared_info));
+			skb = cbm_build_skb((void *) (data_ptr +
+			((desc_list->desc.desc3 & 0x3800000) >> 23)
+			- CBM_DMA_DATA_OFFSET - NET_IP_ALIGN - NET_SKB_PAD),
+			real_len, GFP_ATOMIC);
+			if (skb) {
+				skb_reserve(skb,  CBM_DMA_DATA_OFFSET + NET_IP_ALIGN + NET_SKB_PAD);
+				/* Call the datapath library Rx function */
+				skb->DW0 = desc_list->desc.desc0;
+				skb->DW1 = desc_list->desc.desc1;
+				skb->DW2 = data_ptr;
+				skb->DW3 = desc_list->desc.desc3;
+				skb_put(skb, data_len);
+				dp_rx(skb, 0);
+				LOGF_KLOG_DEBUG ("%s: rx to datapath library\n", __func__);
+			} else {
+				LOGF_KLOG_ERROR("%s:failure in allocating skb, free cbm data pointer\r\n", __func__);
+				cbm_buffer_free(smp_processor_id(), desc_list->desc.desc2, 0);
+			}
+			desc_list = &g_cbm_dlist[cpu][++j];
+		}
+	}
+	if ((deq_ret == CBM_RESCHEDULE) || !(xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(cpu, status)) & BIT(13))) {
+		tasklet_schedule(&cbm_tasklet[smp_processor_id()]);
+	} else {
+		ls_intr_handler(cpu);
+		wmb();
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr), BIT(cpu) << 8);
+		xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irnicr));
+		/*Dummy read for write flush*/
+		xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr));
+		rmb();
+		/* Enable LS */
+		xrx500_cbm_w32(CBM_LS_BASE + IRNEN_LS, xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS) | (3 << (cpu * 2 + 16)));
+		/* Enable all interrupts */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irnen)),
+		(1 << cpu) << 8);
+	}
+}
+
+static irqreturn_t cbm_isr_4(int irq, void *dev_id)
+{
+	int cpu = smp_processor_id();
+	uint32_t cbm_intr_status;
+
+	/*try disable, clear and then run the tasklet
+	*/
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(4, cbm_irncr));
+	if (cbm_intr_status & 0x0100) {
+		/* Disable all interrupts */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(4, cbm_irnen)), 0);
+		/*Dummy Read, for write flush*/
+		xrx500_cbm_r32((CBM_BASE + CBM_INT_LINE(4, cbm_irnen)));
+		/* Disable  LS interrupt */
+		xrx500_cbm_w32(CBM_LS_BASE + IRNEN_LS, xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS) & (~(3 << (cpu * 2 + 16))));
+		xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS);
+		LOGF_KLOG_DEBUG("Load Spreader interrupt on pid 0\n");
+		/* Schedule the tasklet */
+		tasklet_schedule(&cbm_tasklet[cpu]);
+	} else {
+		ls_intr_handler(cpu);
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr), BIT(cpu) << 8);
+		return IRQ_NONE;
+	}
+	return IRQ_HANDLED;
+}
+
+static irqreturn_t cbm_isr_5(int irq, void *dev_id)
+{
+	int cpu = smp_processor_id();
+	uint32_t cbm_intr_status;
+
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(5, cbm_irncr));
+	if (cbm_intr_status & 0x0200) {
+		/* Disable all interrupts */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)), 0);
+		/*Dummy Read, for write flush*/
+		xrx500_cbm_r32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)));
+		/* Disable  LS interrupt */
+		xrx500_cbm_w32(CBM_LS_BASE + IRNEN_LS, xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS) & (~(3 << (cpu * 2 + 16))));
+		xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS);
+		/* Schedule the tasklet */
+		tasklet_schedule(&cbm_tasklet[cpu]);
+	#ifdef ENABLE_LL_DEBUG
+	} else if (cbm_intr_status & 0x10000) {
+		/* Disable all interrupts */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)), 0);
+		/*Dummy Read, for write flush*/
+		xrx500_cbm_r32((CBM_BASE + CBM_INT_LINE(5, cbm_irnen)));
+		/* Schedule the tasklet */
+		tasklet_schedule(&cbm_debug_tasklet);
+	#endif
+	} else {
+		ls_intr_handler(cpu);
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr), BIT(cpu) << 8);
+		return IRQ_NONE;
+	}
+	return IRQ_HANDLED;
+}
+
+static irqreturn_t cbm_isr_6(int irq, void *dev_id)
+{
+	uint32_t cbm_intr_status = 0;
+	int cpu = smp_processor_id();
+	#ifdef CONFIG_CBM_LS_ENABLE
+	uint32_t dqm_intr_status = 0;
+	uint32_t pkt_recvd, pkt_recvd1;
+	dqm_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(6, egp_irncr));
+
+	if (dqm_intr_status) {
+		xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(2, irncr)), 0x2);
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(6, egp_irncr), dqm_intr_status);
+		LOGF_KLOG_DEBUG("schedule napi 0x%x\r\n", dqm_intr_status);
+		pkt_recvd = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(2, desc0.desc3));
+		pkt_recvd1 = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(2, desc1.desc3));
+		if ((pkt_recvd & 0x80000000) || ((pkt_recvd1 & 0x80000000))) {
+			napi_schedule(&g_cbm_ctrl.napi);
+			xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(6, egp_irnen)), 0);
+			/*Dummy Read, for write flush*/
+			xrx500_cbm_r32((CBM_BASE + CBM_INT_LINE(6, egp_irnen)));
+		}
+	}
+	#endif
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(6, cbm_irncr));
+	if (cbm_intr_status) {
+		/* Disable all interrupts */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(6, cbm_irnen)), 0);
+		/*Dummy Read, for write flush*/
+		xrx500_cbm_r32((CBM_BASE + CBM_INT_LINE(6, cbm_irnen)));
+		/* Disable  LS interrupt */
+		xrx500_cbm_w32(CBM_LS_BASE + IRNEN_LS, xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS) & (~(3 << (cpu * 2 + 16))));
+		xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS);
+		/* Schedule the tasklet */
+		tasklet_schedule(&cbm_tasklet[cpu]);
+#ifdef CONFIG_CBM_LS_ENABLE
+	}
+	if (!dqm_intr_status && !cbm_intr_status) {
+		LOGF_KLOG_DEBUG("######spurious ls int###########\r\n");
+		ls_intr_handler(cpu);
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr), BIT(cpu) << 8);
+		return IRQ_NONE;
+	}
+#else
+	} else {
+		ls_intr_handler(cpu);
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr), BIT(cpu) << 8);
+		return IRQ_NONE;
+	}
+#endif
+	return IRQ_HANDLED;
+}
+
+static irqreturn_t cbm_isr_7(int irq, void *dev_id)
+{
+	int cpu = smp_processor_id();
+	uint32_t cbm_intr_status;
+
+	cbm_intr_status = xrx500_cbm_r32(CBM_BASE + CBM_INT_LINE(7, cbm_irncr));
+	if (cbm_intr_status & 0x0800) {
+		/* Disable all interrupts */
+		xrx500_cbm_w32((CBM_BASE + CBM_INT_LINE(7, cbm_irnen)), 0);
+		/*Dummy Read, for write flush*/
+		xrx500_cbm_r32((CBM_BASE + CBM_INT_LINE(7, cbm_irnen)));
+		/* Disable  LS interrupt */
+		xrx500_cbm_w32(CBM_LS_BASE + IRNEN_LS, xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS) & (~(3 << (cpu * 2 + 16))));
+		xrx500_cbm_r32(CBM_LS_BASE + IRNEN_LS);
+		/* Schedule the tasklet */
+		tasklet_schedule(&cbm_tasklet[cpu]);
+	} else {
+		ls_intr_handler(cpu);
+		xrx500_cbm_w32(CBM_BASE + CBM_INT_LINE(4 + cpu, cbm_irncr), BIT(cpu) << 8);
+		return IRQ_NONE;
+	}
+	return IRQ_HANDLED;
+}
+
+
+/*
+ *	CBM Interrupt init
+ *	Register to handle all the 8 lines , need to be adapted to work with MPE FW
+ */
+int cbm_interrupt_init(void)
+{
+	int ret = 0;
+	struct cpumask cpumask;
+
+	ret = request_irq(g_cbm_irq[0], cbm_isr_0, IRQF_DISABLED, "cbm_eqm", NULL);
+	if (ret) {
+		LOGF_KLOG_ERROR("Can not get IRQ - %d", ret);
+		return ret;
+	}
+
+	if (g_cbm_irq[1]) {
+		ret = request_irq(g_cbm_irq[1], cbm_isr_4, IRQF_DISABLED, "cbm_dqm", NULL);
+		if (ret) {
+			LOGF_KLOG_ERROR("Can not get IRQ - %d", ret);
+			return ret;
+		}
+		/* Set the Affinity to VPE0 */
+		cpumask.bits[0] = 0x1;
+		ret = irq_set_affinity(g_cbm_irq[1], &cpumask);
+		if (ret)
+			LOGF_KLOG_ERROR("Can not set affinity for IRQ - %d", g_cbm_irq[1]);
+	}
+
+	if (g_cbm_irq[2]) {
+		ret = request_irq(g_cbm_irq[2], cbm_isr_5, IRQF_DISABLED, "cbm_dqm", NULL);
+		if (ret) {
+			LOGF_KLOG_ERROR("Can not get IRQ - %d", ret);
+			return ret;
+		}
+		/* Set the Affinity to VPE1 */
+		#ifdef ENABLE_LL_DEBUG
+		cpumask.bits[0] = 0x4;
+		#else
+		cpumask.bits[0] = 0x2;
+		#endif
+		ret = irq_set_affinity(g_cbm_irq[2], &cpumask);
+		if (ret)
+			LOGF_KLOG_ERROR("Can not set affinity for IRQ - %d", g_cbm_irq[2]);
+	}
+
+	if (g_cbm_irq[3]) {
+		ret = request_irq(g_cbm_irq[3], cbm_isr_6, IRQF_DISABLED, "cbm_dqm", NULL);
+		if (ret) {
+			LOGF_KLOG_ERROR("Can not get IRQ - %d", ret);
+			return ret;
+		}
+		/* Set the Affinity to VPE2 */
+		cpumask.bits[0] = 0x4;
+		ret = irq_set_affinity(g_cbm_irq[3], &cpumask);
+		if (ret)
+			LOGF_KLOG_ERROR("Can not set affinity for IRQ - %d", g_cbm_irq[3]);
+	}
+	if (g_cbm_irq[4]) {
+		ret = request_irq(g_cbm_irq[4], cbm_isr_7, IRQF_DISABLED, "cbm_dqm", NULL);
+		if (ret) {
+			LOGF_KLOG_ERROR("Can not get IRQ - %d", ret);
+			return ret;
+		}
+		/* Set the Affinity to VPE3 */
+		cpumask.bits[0] = 0x8;
+		ret = irq_set_affinity(g_cbm_irq[4], &cpumask);
+		if (ret)
+			LOGF_KLOG_ERROR("Can not set affinity for IRQ - %d", g_cbm_irq[4]);
+	}
+
+	return ret;
+}
+
+
+
+/* violation ptr start from 8K*2k offset for STD pointer
+ *	and 0.5K * (8K/16K) offset for JBO pointer
+ */
+uint32_t get_violation_ptr(uint32_t fsqm_idx)
+{
+	static uint32_t delta;
+	uint32_t buf_addr;
+	const uint32_t std_base		= 8 * 1024 * 2	* 1024;		 /* (8k * 2k)*/
+	const uint32_t jbo_base_8k	= 1 * 1024 * 8	* 1024 / 2;  /* (0.5k * 8k)*/
+	const uint32_t jbo_base_16k = 1 * 1024 * 16 * 1024 / 2;  /* (0.5k * 16k)*/
+
+	if (fsqm_idx == g_cbm_buff.std_fsqm_idx) {
+		buf_addr = xrx500_cbm_r32(CBM_BASE + CBM_SBA_0);
+		buf_addr += (delta * 2 * 1024) + std_base;
+	} else {
+		buf_addr = xrx500_cbm_r32(CBM_BASE + CBM_JBA_0);
+	#if defined(CONFIG_BRONZE_RTL307)
+		if (xrx500_cbm_r32(CBM_BASE + CBM_CTRL) & (1 << CBM_CTRL_JSEL_POS)) {/*(16k)*/
+	#else
+		if (xrx500_cbm_r32(CBM_BASE + CBM_STAT) & (1 << CBM_STAT_JSEL_POS)) {/*(16k)*/
+	#endif
+			buf_addr += (delta * 16 * 1024) + jbo_base_16k;
+		} else {/*(8k)*/
+			buf_addr += (delta * 8 * 1024) + jbo_base_8k;
+		}
+	}
+
+	delta += 1;
+
+	LOGF_KLOG_DEBUG("The illegal pointer addr: 0x%x\n", buf_addr);
+
+	return buf_addr;
+}
+
+void fsqm_intr_ctrl(uint32_t idx, uint32_t val)
+{
+	xrx500_cbm_w32(FSQM_BASE(idx) + FSQM_IRNEN, val); /* 0x111101F;*/
+}
+
+void ls_intr_ctrl(uint32_t val)
+{
+	xrx500_cbm_w32(CBM_LS_BASE + IRNEN_LS, val); /* 0xFF0000;*/
+}
+
+void eqm_intr_ctrl(uint32_t val)
+{
+	int i;
+
+	for (i = 0; i < CPU_EQM_PORT_NUM; i++) {
+		xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(i, irnen), val);/* 0x3F;*/
+	}
+}
+
+void dqm_intr_ctrl(uint32_t val)
+{
+	int i;
+	for (i = 0; i < CPU_EQM_PORT_NUM; i++)
+		xrx500_cbm_w32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(i, irnen), val); /* 0x02*/
+}
+
+void cbm_eqm_enable_bkpr(uint32_t pid, uint32_t enable)
+{
+	if (enable) {
+		xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, cfg),
+		xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, cfg))
+		& (~(1 << 5)));
+		xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, cfg),
+		xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, cfg))
+		& (~(1 << 5)));
+	} else {
+		xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, cfg),
+		xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, cfg))
+		| (1 << 5));
+	}
+}
+
+int cbm_ptr_refcnt_incr(uint32_t pid, uint32_t buf_ptr)
+{
+	uint32_t i;
+
+	if (pid >= CPU_EQM_PORT_NUM /*|| ((1 << pid) & g_cpu_port_alloc) == 0*/) {
+		LOGF_KLOG_ERROR("illegal port id: %d\n", pid);
+		return CBM_FAILURE;
+	}
+
+	if (!check_ptr_validation(buf_ptr)) {
+		LOGF_KLOG_ERROR("buf is not valid: 0x%x\n", buf_ptr);
+		return CBM_FAILURE;
+	}
+
+	i = 0;
+	/*xrx500_cbm_w32(0xbf800020) = 0x1234; */
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, rcnt), buf_ptr);
+	LOGF_KLOG_DEBUG("pid:%d, offset: 0x%x\n", pid, CBM_EQM_CPU_PORT(pid, rcnt));
+	while (xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, rcnt))
+	!= 0xFFFFF800 && (i++) < DEFAULT_WAIT_CYCLES) {
+	};
+	if (i >= DEFAULT_WAIT_CYCLES) {
+		LOGF_KLOG_ERROR("Increase buf_ptr 0x%x refcnt on pid:\
+		%d fail!!!\n", buf_ptr, pid);
+	}
+
+	return CBM_SUCCESS;
+}
+
+int cbm_clear_cpu_eqm_cnt(uint32_t pid)
+{
+	if (pid >= CPU_EQM_PORT_NUM)
+		return CBM_FAILURE;
+
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, eqpc), 0);
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, dicc), 0);
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, rcntc), 0);
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, nsbpc), 0);
+	xrx500_cbm_w32(CBM_EQM_BASE + CBM_EQM_CPU_PORT(pid, njbpc), 0);
+
+	return CBM_SUCCESS;
+}
+
+static void store_rcnt_baseaddr()
+{
+	rcnt_data[0].fsqm_idx = g_cbm_buff.std_fsqm_idx;
+	rcnt_data[0].frm_size = g_cbm_buff.std_frm_size;
+	rcnt_data[0].rcnt_base = (uint32_t)FSQM_BASE(g_cbm_buff.std_fsqm_idx) + RCNT;
+	rcnt_data[0].buf_addr = g_cbm_buff.std_buf_addr;
+	rcnt_data[1].fsqm_idx = g_cbm_buff.jbo_fsqm_idx;
+	rcnt_data[1].frm_size = g_cbm_buff.jbo_frm_size;
+	rcnt_data[1].rcnt_base = (uint32_t)FSQM_BASE(g_cbm_buff.jbo_fsqm_idx) + RCNT;
+	rcnt_data[1].buf_addr = g_cbm_buff.jbo_buf_addr;
+}
+
+int32_t get_cnt_of_ptr(uint32_t buf_addr)
+{
+	uint32_t buf_base, idx, arr_idx;
+	uint32_t buf_type, fsqm_idx = 0;
+	uint32_t buf_cnt = 0;
+
+	buf_base = __pa(buf_addr);
+	buf_type = check_ptr_valid_type(buf_addr);
+	if ((buf_type != SBA0_STD) && (buf_type != SBA0_JBO))
+		return -1;
+	arr_idx = buf_type >> 1;
+	fsqm_idx = rcnt_data[arr_idx].fsqm_idx;
+	buf_base &= ~(rcnt_data[arr_idx].frm_size - 1);
+	idx		 = (buf_addr - rcnt_data[arr_idx].buf_addr)/rcnt_data[arr_idx].frm_size;
+
+	buf_cnt = xrx500_cbm_r32((void __iomem *)rcnt_data[arr_idx].rcnt_base + (idx * 4));
+	LOGF_KLOG_DEBUG("Buf:[0x%x],PHY base:[0x%x] fsqm:%d, offset idx: %d,\
+	refcnt:%d\n", buf_addr, buf_base, fsqm_idx, idx, buf_cnt);
+	return buf_cnt;
+}
+
+int32_t cbm_buffer_upd_rcnt(int32_t vpe_id, void *buffer, uint32_t flags)
+{
+	uint32_t i;
+	int count;
+	if (vpe_id >= CPU_EQM_PORT_NUM /*|| ((1 << pid) & g_cpu_port_alloc) == 0*/) {
+		LOGF_KLOG_ERROR("illegal port id: %d\n", vpe_id);
+		return CBM_FAILURE;
+	}
+
+	count = get_cnt_of_ptr((uint32_t)buffer);
+	LOGF_KLOG_DEBUG("Repeat count %d\r\n", count);
+	if ((count == CBM_MAX_RCNT) || (count == -1) || (count == 0))
+		return CBM_FAILURE;
+	i = 0;
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_CPU_PORT(vpe_id, rcnt)),
+	__pa(buffer));
+	LOGF_KLOG_DEBUG("clone done\r\n");
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_buffer_upd_rcnt);
+
+inline void set_wlan_ep(int ep, int cbm_port)
+{
+	switch (cbm_port) {
+	case 4:
+		set_val((CBM_BASE + CBM_CTRL), ep, 0xF00000, 20);
+		break;
+	case 24:
+		set_val((CBM_BASE + CBM_CTRL), ep, 0xF000, 12);
+		break;
+	case 25:
+		set_val((CBM_BASE + CBM_CTRL), ep, 0xF00, 8);
+		break;
+	case 26:
+		set_val((CBM_BASE + CBM_CTRL), ep, 0xF0, 4);
+		break;
+	default:
+		break;
+	}
+
+}
+inline void cbm_populate_entry(
+struct cbm_pmac_port_map *local_entry,
+int *phys_port,
+uint32_t cbm_port,
+uint32_t flags,
+int *found)
+{
+	*phys_port = cbm_port;
+	local_entry->egp_port_map |= BIT(cbm_port);
+	local_entry->qids[local_entry->qid_num]
+		= dqm_port_info[cbm_port].def_qid;
+	local_entry->qid_num++;
+	local_entry->egp_type = flags;
+	*found = 1;
+}
+
+/*CBM Dequeue port reset.
+This API expects that no traffic is enqueued for this port while calling this port reset API.
+This API resets the Dequeue Port Current Desc Index and Buffer Return Register Current Index
+(only applicable to CPU Dequeue Ports) to zero, and resets statistics for the port!*/
+int32_t cbm_port_quick_reset(
+int32_t cbm_port_id,
+uint32_t flags)
+{
+	int result = cbm_port_id;
+	if (flags & CBM_PORT_F_DEQUEUE_PORT) {
+		if ((cbm_port_id >= 5) && (cbm_port_id <= 22))
+		result = 5;
+		switch (result) {
+		case 4:
+		case 24:
+		case 25:
+		case 26:
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dptr)), 0x1f);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, resv2[0])), 0x0);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dqpc)), 0x0);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, bprc)), 0x0);
+		break;
+		case 0:
+		case 1:
+		case 2:
+		case 3:
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dptr)), 0x1);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dqpc)), 0x0);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, bprc)), 0x0);
+		break;
+		case 5:
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dptr)), 0x1);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dqpc)), 0x0);
+		break;
+		case 23:
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dptr)), 0x1f);
+			xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, dqpc)), 0x0);
+		}
+	} else {
+		return CBM_FAILURE;
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_port_quick_reset);
+
+int32_t
+cbm_dp_port_alloc(
+	struct module *owner,
+	struct net_device *dev,
+	uint32_t dev_port,
+	int32_t port_id,
+/*	cbm_dp_callback_t *cbm_dp_cb,*/
+	uint32_t flags
+	)
+{
+	uint32_t port_start;
+	uint32_t port_end;
+	uint32_t temp_flags, exit = 0;
+	int i, result, phys_port = 0, phys_port_1 = 0;
+	int param_pmac = 0, pmac_present = 0, pmac_found = 0;
+	uint32_t cbm_port[CBM_MAX_PHY_PORT_PER_EP],
+	pmac[CBM_MAX_PHY_PORT_PER_EP];
+	struct cbm_pmac_port_map *test_ptr = NULL;
+	struct cbm_pmac_port_map local_entry = {0};
+	if (!owner)
+		return CBM_FAILURE;
+	if (flags & DP_F_DEREGISTER) {	/*De-register */
+		if (port_id >= PMAC_MAX_NUM || port_id < 0)
+			return DP_FAILURE;
+		cbm_delete_from_list(port_id, flags);
+		return DP_SUCCESS;
+	}
+	/*to allocate port*/
+	if (flags & DP_F_FAST_ETH_LAN) {
+		port_start = PMAC_ETH_LAN_START_ID;
+		port_end = PMAC_ETH_LAN_END_ID;
+	} else if (flags & DP_F_FAST_ETH_WAN) {
+		port_start = PMAC_ETH_WAN_ID;
+		port_end = PMAC_ETH_WAN_ID;
+	} else {
+		port_start = PMAC_ALLOC_START_ID;
+		port_end = PMAC_ALLOC_END_ID;
+	}
+	/*alloc port */
+	if (port_id) {	/*allocate with specified port id */
+		if ((port_id > port_end) || (port_id < port_start))
+			return DP_FAILURE;
+
+		if (is_dp_allocated(port_id, flags)) {
+			LOGF_KLOG_ERROR("Failed to alloc a pmac port %d\
+			since it is allocated already\n", port_id);
+			return DP_FAILURE; /*not free*/
+		}
+		param_pmac = port_id;
+		pmac_present = 1;
+		goto ALLOC_OK;
+	} else { /* dynamic alloc a free port */
+		for (i = port_start; i <= port_end; i++) {
+			if (!is_dp_allocated(i, flags)) {
+				port_id = i;
+				goto ALLOC_OK;
+			}
+		}
+	}
+	LOGF_KLOG_ERROR("Failed to get a free port for module %p\n", owner);
+	return DP_FAILURE;
+ALLOC_OK:
+	result = get_matching_pmac(pmac, flags, cbm_port, param_pmac, pmac_present);
+	if (result == CBM_FAILURE) {
+		return DP_FAILURE;
+	} else if (result == CBM_NOTFOUND) {
+		/*Physical port allocation failure, means this is just virtual pmac required*/
+	} else {
+		if ((pmac[0] != CBM_PMAC_DYNAMIC) && (pmac[0] != port_id)) {
+			LOGF_KLOG_ERROR("%s Error in the mapping table\r\n", __func__);
+			return DP_FAILURE;
+		}
+		local_entry.pmac = port_id;
+		for (i = 0; i < CBM_MAX_PHY_PORT_PER_EP; i++) {
+			if (pmac[i] != CBM_PORT_INVALID) {
+				temp_flags = (flags & DP_F_FAST_WLAN) ? DP_F_FAST_WLAN : flags;
+				temp_flags = (flags & DP_F_DSL_BONDING) ? DP_F_DSL_BONDING : temp_flags;
+				switch (temp_flags) {
+				case DP_F_FAST_WLAN:
+					if (cbm_port[i] != CBM_PORT_NOT_APPL) {
+						test_ptr = is_cbm_allocated(cbm_port[i], flags);
+						if (!test_ptr) {
+							cbm_populate_entry(&local_entry, &phys_port, cbm_port[i], flags, &pmac_found);
+							exit = 1;
+						}
+					}
+				break;
+				case DP_F_DSL_BONDING:
+					if (cbm_port[i] != CBM_PORT_NOT_APPL) {
+						test_ptr = NULL;
+						test_ptr = is_cbm_allocated(cbm_port[i], flags);
+						if (!test_ptr) {
+							if (i == (CBM_MAX_PHY_PORT_PER_EP - 1)) {
+								LOGF_KLOG_ERROR("%s Error allocating 2 ports for DSL BONDING\r\n", __func__);
+								return DP_FAILURE;
+							}
+							cbm_populate_entry(&local_entry, &phys_port, cbm_port[i], flags, &pmac_found);
+							test_ptr = NULL;
+							test_ptr = is_cbm_allocated(cbm_port[i+1], flags);
+							if (!test_ptr) {
+								cbm_populate_entry(&local_entry, &phys_port_1, cbm_port[i+1], flags, &pmac_found);
+								exit = 1;
+							} else {
+								return DP_FAILURE;
+							}
+						}
+					}
+				break;
+				default:
+					cbm_populate_entry(&local_entry, &phys_port, cbm_port[i], flags, &pmac_found);
+				break;
+				}
+				if (exit)
+					break;
+			}
+		}
+		if (!pmac_found)
+			return DP_FAILURE;
+	}
+	local_entry.owner = owner;
+	local_entry.dev = dev;
+	local_entry.dev_port = dev_port;
+	local_entry.flags = P_ALLOCATED;
+
+	cbm_add_to_list(&local_entry);
+
+	if (flags & DP_F_FAST_WLAN) {
+		/*special mapping for direct path*/
+		set_wlan_ep(port_id, phys_port);
+		if (flags & DP_F_DSL_BONDING) {
+			set_wlan_ep(0, phys_port_1);
+		}
+	}
+	return port_id;
+}
+EXPORT_SYMBOL(cbm_dp_port_alloc);
+int32_t
+cbm_dp_port_dealloc(
+	struct module *owner,
+	uint32_t dev_port,
+	int32_t cbm_port_id,
+	uint32_t flags
+	)
+{
+	cbm_delete_from_list(cbm_port_id, flags);
+	return CBM_SUCCESS;
+}
+
+/**
+*  Return CBM Port ID of the given WLAN EP
+*  input:
+*   @ep_id:   ep_id (7-14) allocated from datapath library.
+*  output:
+*   @cbm_pid:  (0 - 3)
+* return:  Fail < 0,  Success: 0
+ */
+int cbm_get_wlan_umt_pid(u32 ep_id,  u32 *cbm_pid)
+{
+	uint32_t reg;
+	reg = xrx500_cbm_r32(CBM_BASE + CBM_CTRL);
+	LOGF_KLOG_INFO("0x%x 0x%x 0x%x 0x%x %d\r\n",
+	((reg & 0xF00000) >> 20),
+	((reg & 0xF000) >> 12),
+	((reg & 0xF00) >> 8),
+	((reg & 0xF0) >> 4),
+	ep_id);
+	if (((reg & 0xF00000) >> 20) == ep_id) {
+		*cbm_pid = 0;
+		return CBM_SUCCESS;
+	}
+	if (((reg & 0xF000) >> 12) == ep_id) {
+		*cbm_pid = 1;
+		return CBM_SUCCESS;
+	}
+	if (((reg & 0xF00) >> 8) == ep_id) {
+		*cbm_pid = 2;
+		return CBM_SUCCESS;
+	}
+	if (((reg & 0xF0) >> 4) == ep_id) {
+		*cbm_pid = 3;
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_get_wlan_umt_pid);
+
+int32_t direct_dp_enable(uint32_t port_id, uint32_t flags, uint32_t type)
+{
+	int j, queue_number;
+	struct cbm_qidt_elm qidt_set = {0};
+	struct cbm_qidt_mask qidt_mask = {1, 1, 1, 1, 1, 1, 1, 1};
+	struct cbm_pmac_port_map *local_entry = NULL;
+	qidt_set.ep = port_id;
+	qidt_mask.ep_mask = 0;
+	if (type != DP_F_FAST_DSL) {
+		local_entry = is_dp_allocated(CBM_PMAC_NOT_APPL, DP_F_DIRECTPATH_RX);
+		if (local_entry) {
+			for (j = 0; j < local_entry->qid_num; j++) {
+				if (flags & CBM_PORT_F_DISABLE)
+					queue_number = 255;
+				else
+					queue_number = local_entry->qids[j];
+				qidt_set.flowidl = 0;
+				qidt_mask.flowid_lmask = 0;
+				qidt_set.flowidh = 0;
+				qidt_mask.flowid_hmask = 0;
+				qidt_set.mpe2 = 0;
+				qidt_mask.mpe2_mask = 0;
+				qidt_set.mpe1 = 0;
+				qidt_mask.mpe1_mask = 0;
+				qidt_set.dec = 1;
+				qidt_mask.dec_mask = 0;
+				qidt_set.enc = 1;
+				qidt_mask.enc_mask = 0;
+				cbm_qidt_set(&qidt_set,
+				&qidt_mask,
+				queue_number);
+			}
+		}
+	}
+#ifndef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+	local_entry = is_dp_allocated(CBM_PMAC_NOT_APPL, DP_F_CHECKSUM);
+	if (local_entry) {
+		for (j = 0; j < local_entry->qid_num; j++) {
+			if (flags & CBM_PORT_F_DISABLE)
+				queue_number = 255;
+			else
+				queue_number = local_entry->qids[j];
+			qidt_set.flowidl = 0;
+			qidt_mask.flowid_lmask = 0;
+			qidt_set.flowidh = 0;
+			qidt_mask.flowid_lmask = 0;
+			qidt_set.mpe2 = 1;
+			qidt_mask.mpe2_mask = 0;
+			qidt_mask.mpe1_mask = 1;
+			qidt_set.dec = 1;
+			qidt_mask.dec_mask = 0;
+			qidt_set.enc = 1;
+			qidt_mask.enc_mask = 0;
+			cbm_qidt_set(&qidt_set,
+			&qidt_mask,
+			queue_number);
+		}
+	}
+#endif
+	return CBM_SUCCESS;
+}
+#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+int32_t checksum_dp_enable(uint32_t port_id, uint32_t flags, uint32_t type)
+{
+	int j, queue_number;
+	struct cbm_qidt_elm qidt_set = {0};
+	struct cbm_qidt_mask qidt_mask = {1, 1, 1, 1, 1, 1, 1, 1};
+	struct cbm_pmac_port_map *local_entry = NULL;
+	qidt_set.ep = port_id;
+	qidt_mask.ep_mask = 0;
+	local_entry = is_dp_allocated(port_id, DP_F_CHECKSUM);
+	if (local_entry) {
+		for (j = 0; j < local_entry->qid_num; j++) {
+			if (flags & CBM_PORT_F_DISABLE)
+				queue_number = 255;
+			else
+				queue_number = local_entry->qids[j];
+			qidt_set.flowidl = 0;
+			qidt_mask.flowid_lmask = 0;
+			qidt_set.flowidh = 0;
+			qidt_mask.flowid_lmask = 0;
+			qidt_set.mpe2 = 1;
+			qidt_mask.mpe2_mask = 0;
+			qidt_mask.mpe1_mask = 1;
+			qidt_set.dec = 1;
+			qidt_mask.dec_mask = 0;
+			qidt_set.enc = 1;
+			qidt_mask.enc_mask = 0;
+			cbm_qidt_set(&qidt_set,
+			&qidt_mask,
+			queue_number);
+		}
+	}
+	return CBM_SUCCESS;
+}
+#endif
+void cbm_restore_qmap(int enable)
+{
+	uint8_t *ptr, *ptr1;
+	uint32_t i, found = 0, count = 0;
+	for (i = 0; i < 0x1000; i++) {
+		ptr = (uint8_t *)&g_cbm_qidt_mirror[i].qidt_drop_flag;
+		ptr1 = (uint8_t *)&g_cbm_qidt_mirror[i].qidt_shadow;
+
+		if (enable) {
+			if (ptr[3]) {
+				cbm_qtable[ptr1[3]].refcnt++;
+				found = 1;
+				count++;
+			}
+			if (ptr[2]) {
+				cbm_qtable[ptr1[2]].refcnt++;
+				found = 1;
+				count++;
+			}
+			if (ptr[1]) {
+				cbm_qtable[ptr1[1]].refcnt++;
+				found = 1;
+				count++;
+			}
+			if (ptr[0]) {
+				cbm_qtable[ptr1[0]].refcnt++;
+				found = 1;
+				count++;
+			}
+		} else {
+			if (ptr[3] || ptr[2] || ptr[1] || ptr[0])
+				found = 1;
+			if (ptr[3]) {
+				count++;
+			}
+			if (ptr[2]) {
+				count++;
+			}
+			if (ptr[1]) {
+				count++;
+			}
+			if (ptr[0]) {
+				count++;
+			}
+		}
+		if (found) {
+			g_cbm_qidt_mirror[i].qidt_drop_flag = 0;
+			if (enable)
+				xrx500_cbm_w32((CBM_QIDT_BASE + i * 4), g_cbm_qidt_mirror[i].qidt_shadow);
+		}
+		found = 0;
+	}
+	LOGF_KLOG_DEBUG("%s:count %d\n", __func__, count);
+}
+
+int32_t
+cbm_dp_enable(
+	struct module *owner,
+	uint32_t port_id,
+	uint32_t flags,
+	uint32_t alloc_flags
+	)
+{
+	int j;
+	struct cbm_qidt_elm qidt_set = {0};
+	struct cbm_qidt_mask qidt_mask = {1, 1, 1, 1, 1, 1, 1, 1};
+	struct cbm_pmac_port_map *local_entry = NULL;
+	uint32_t num;
+	cbm_tmu_res_t *res = NULL;
+	int q_buff_num;
+	unsigned long sys_flag;
+	qidt_set.ep = port_id;
+	qidt_mask.ep_mask = 0;
+
+		if ((cbm_dp_port_resources_get(&port_id, &num, &res,
+						  alloc_flags) != 0) && (!res)) {
+
+			LOGF_KLOG_ERROR("Error getting resources for port_id %d\n", port_id);
+			return CBM_FAILURE;
+		}
+		LOGF_KLOG_INFO("******************ep=%d tmu_port=%d queue=%d sid=%d\n", port_id,
+					   res[0].tmu_port,
+					   res[0].tmu_q,
+					   res[0].tmu_sched);
+		local_entry = is_dp_allocated(port_id, alloc_flags);
+		spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+		if (local_entry && ((local_entry->egp_type == DP_F_DIRECT)
+		|| (local_entry->egp_type == DP_F_FAST_DSL)
+		|| (local_entry->egp_type == DP_F_DIRECTLINK))) {
+				/*cpu 0 ,*/
+				cbm_qidt_set(&qidt_set,
+				&qidt_mask,
+				(flags & CBM_PORT_F_DISABLE) ? 255 : res[0].tmu_q);
+				/*Hard coded 2 physical ports mapped,
+				 port 20, port 21
+				*/
+				/*enable the queue for direcpath rx and checksum ports when a directpath port is enabled*/
+				direct_dp_enable(port_id, flags, local_entry->egp_type);
+				kfree(res);
+				spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+				return CBM_SUCCESS;
+		}
+		#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+		if (local_entry && (local_entry->egp_type == DP_F_CHECKSUM))	{
+				checksum_dp_enable(port_id, flags, local_entry->egp_type);
+				kfree(res);
+				spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+				return CBM_SUCCESS;
+		}
+		#endif
+		/* For the Datapath port i, disable the corresponding TMU port, i*/
+		tmu_egress_port_enable(res[0].tmu_port, 0);
+		cbm_debug("tmu port disabled\n");
+		/*For the Datapath port (EP i), go through all entries in the CBM Queue Map table in DDR, and mark with
+		CBM_F_QUEUE_DROP flag. For each such entry, program the CBM Queue Map table entry in CBM to map
+		to the Global Drop Queue*/
+		cbm_qidt_set(&qidt_set,
+					&qidt_mask,
+					255);
+		cbm_debug("global drop queue\n");
+
+		/* For each queue_id in the CBM Queue map table matched entries (by EP), disable/enable the TMU queue by calling
+		the API of the TMU driver*/
+
+		tmu_queue_list(res[0].tmu_port, tmp_q_buff3, ARRAY_SIZE(tmp_q_buff3), &q_buff_num, NULL);
+		for (j = 0; j < q_buff_num; j++) {
+			tmu_equeue_enable(tmp_q_buff3[j], (flags & CBM_PORT_F_DISABLE) ? 0 : 1);
+			LOGF_KLOG_INFO("enable queue %d %d\n", (flags & CBM_PORT_F_DISABLE), tmp_q_buff3[j]);
+		}
+		LOGF_KLOG_INFO("enable queue %d %d\n", (flags & CBM_PORT_F_DISABLE), q_buff_num);
+		/*restore all entries in the queue map table for that
+		EP to map to original queues, and remove the CBM_F_QUEUE_DROP flag from the DDR table*/
+		/*cbm_restore_qmap((flags & CBM_PORT_F_DISABLE) ? 0 : 1);
+		pr_info("restore map\n");*/
+		if ((!cbm_qtable[res[0].tmu_q].refcnt) && !(flags & CBM_PORT_F_DISABLE)) {
+			LOGF_KLOG_INFO("guess first time\n");
+			cbm_qidt_set(&qidt_set,
+			&qidt_mask,
+			res[0].tmu_q);
+		}
+		LOGF_KLOG_INFO("%d\n", cbm_qtable[res[0].tmu_q].refcnt);
+
+		/*Enable the TMU port, i*/
+		tmu_egress_port_enable(res[0].tmu_port, 1);
+		LOGF_KLOG_INFO("enable tmu port\n");
+
+		kfree(res);
+	spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+	return CBM_SUCCESS;
+}
+
+
+#define CHECK_BIT(var, pos) ((var) & (1<<(pos)))
+/*cbm_qid_schedule_out:
+Input: TMU port id, tmu queue id
+output:void
+This API disables/enables the scheduling of packets from queues other than tmu_queue_id(disassociation of queues).
+Expects the sequence of disable before enable*/
+void cbm_qid_schedule_out(int32_t cbm_port_id, int32_t tmu_queue_id, int32_t enable)
+{
+	struct tmu_equeue_link qlink;
+	static int q_buff_num;
+	int	j;
+	/*LOGF_KLOG_INFO("enable %d\n", enable);*/
+	if (!enable) {
+		tmu_queue_list(cbm_port_id, &queue_flush_buff.qid[0], EGRESS_QUEUE_ID_MAX, &q_buff_num, NULL);
+		/*LOGF_KLOG_INFO("qbuff_num %d\n", q_buff_num);*/
+		for (j = 0; j < q_buff_num; j++) {
+			if (queue_flush_buff.qid[j] == tmu_queue_id) {
+				/*tmu_equeue_link_get(queue_flush_buff.qid[j], &qlink);
+				udelay(20000);
+				LOGF_KLOG_INFO("queue def %d sbit def %d\r\n",  queue_flush_buff.qid[j], qlink.sbin);*/
+				continue;
+			} else {
+				#ifdef DISABLE_OTHER_QUEUE
+				/*Disable the queue*/
+				tmu_equeue_enable(queue_flush_buff.qid[j], 0);
+				#else
+				tmu_equeue_link_get(queue_flush_buff.qid[j], &qlink);
+				/*Disable the scheduler block input*/
+				tmu_sched_blk_in_enable(qlink.sbin, enable);
+				queue_flush_buff.qlink_sbin[j] = qlink.sbin;
+				#endif
+				/*LOGF_KLOG_INFO("queue %d sbit %d\r\n",  queue_flush_buff.qid[j], qlink.sbin);*/
+				udelay(20000);
+			}
+		}
+	} else {
+		for (j = 0; j < q_buff_num; j++) {
+			if (queue_flush_buff.qid[j] == tmu_queue_id)
+				continue;
+			else {
+				#ifdef DISABLE_OTHER_QUEUE
+				/*Enable the queue*/
+				tmu_equeue_enable(queue_flush_buff.qid[j], 1);
+				#else
+				/*Disable the scheduler block input*/
+				tmu_sched_blk_in_enable(queue_flush_buff.qlink_sbin[j] , enable);
+				#endif
+				udelay(20000);
+				/*LOGF_KLOG_INFO("enable back queue %d sbit %d\r\n", queue_flush_buff.qid[j], queue_flush_buff.qlink_sbin[j]);*/
+			}
+		}
+	}
+}
+
+int32_t cbm_queue_flush(
+int32_t cbm_port_id,
+int32_t tmu_queue_id,
+uint32_t timeout,
+uint32_t flags)
+{
+	int i;
+	uint32_t port_type = find_dqm_port_flush(cbm_port_id);
+	uint32_t reg, reg1;
+	#ifdef CONFIG_CBM_LS_ENABLE
+	int32_t pos = 3;
+	int count1 = 0;
+	#endif
+	int chan;
+	uint32_t wq, qrth, qocc, qavg;
+	uint32_t qocc_temp;
+	int no_packet = 0;
+	uint32_t epoc[4];
+	cbm_debug_1("%s\r\n", __func__);
+	if (timeout)
+		usleep_range(timeout, timeout+100);
+	if ((port_type == DQM_DMA_TYPE) || (port_type == DQM_LDMA_TYPE) || (port_type == DQM_WAVE_TYPE)) {
+
+		chan = dqm_port_info[cbm_port_id].dma_ch;
+
+		if (tmu_queue_id != -1) {
+			qocc = 0;
+			/*spin_lock_irqsave(&cbm_queue_flush_lock, sys_flag);*/
+			cbm_qid_schedule_out(cbm_port_id, tmu_queue_id, 0);
+			udelay(50000);
+			/* Disable the DMA channels associated with CBM Dequeue Port */
+			if (chan)
+				ltq_dma_chan_off(chan);
+		}
+		tmu_qoct_read(tmu_queue_id, &wq, &qrth, &qocc_temp, &qavg);
+		if ((port_type == DQM_LDMA_TYPE) || (port_type == DQM_WAVE_TYPE)) {
+			while (qocc_temp) {
+				udelay(50000);
+				tmu_qoct_read(tmu_queue_id, &wq, &qrth, &qocc_temp, &qavg);
+				cbm_debug_1("----->qocc_temp =%d Q %d\n", qocc_temp, tmu_queue_id);
+			}
+		} else {
+			while (1) {
+				for (i = 0; i < dqm_port_info[cbm_port_id].deq_info.num_desc; i++) {
+					reg = xrx500_cbm_r32(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(cbm_port_id, i) + 0x8);
+					/*LOGF_KLOG_ERROR("0x%x 0x%x\n", CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(cbm_port_id, i) + 0x8, reg);*/
+					/*LOGF_KLOG_ERROR("0x%x \n", xrx500_cbm_r32(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(cbm_port_id, i) + 0xc));*/
+					rmb();
+					if (reg & 0x80000000) {
+						xrx500_cbm_w32((CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(cbm_port_id, i) + 0x8), (reg & 0x7fffffff) | 0x40000000);
+						wmb();
+						no_packet = 0;
+					} else {
+						no_packet++;
+					}
+				}
+				if (no_packet >= 10) {
+					/*udelay(5000);*/
+					no_packet = 0;
+					tmu_qoct_read(tmu_queue_id, &wq, &qrth, &qocc_temp, &qavg);
+					/*LOGF_KLOG_ERROR("QOCC %d\n", qocc_temp);*/
+					if (qocc_temp && (qocc_temp != 32767)) {
+						continue;
+					} else
+						goto RESTORE;
+				}
+			}
+	}
+RESTORE:
+		if (tmu_queue_id != -1) {
+			tmu_qoct_read(tmu_queue_id, &wq, &qrth, &qocc_temp, &qavg);
+		/*	if(qocc) {*/
+				LOGF_KLOG_ERROR("out QOCC %d\n", qocc_temp);
+				LOGF_KLOG_INFO("enq %d deq %d qid %d\r\n", get_enq_counter(tmu_queue_id), get_deq_counter(tmu_queue_id), tmu_queue_id);
+				tmu_egress_port_seg_occupancy_get(cbm_port_id, &epoc[0]);
+				LOGF_KLOG_INFO(" epoc0 %u epoc1 %u epoc2 %u epoc3 %u\r\n", epoc[0], epoc[1], epoc[2], epoc[3]);
+		/*	}*/
+			cbm_qid_schedule_out(cbm_port_id, tmu_queue_id, 1);
+		}
+		if (chan)
+			ltq_dma_chan_on(chan);
+	} else if ((port_type == DQM_CPU_TYPE)) {
+		if (tmu_queue_id != -1) {
+		/*Disassociate other queues and stop scheduling them*/
+			cbm_qid_schedule_out(cbm_port_id, tmu_queue_id, 0);
+		}
+		#ifdef CONFIG_CBM_LS_ENABLE
+			if (!cbm_port_id) {
+			/*port 0, so need to read all the LS ports involved in spreading*/
+				while (pos >= 0) {
+					if ((1 << pos) & g_cpu_port_alloc) {
+						/*LS port*/
+						DEQ_PKTS:
+						while (((xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pos, status)) >> 7) & 0xF) != 0) {
+							/*return the cbm buffer to CBM pool*/
+							cbm_buffer_free(smp_processor_id(), xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pos, desc.desc2)), 1);
+							reg = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(pos, desc.desc3));
+						}
+						reg = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc0.desc0) + 12);
+						reg1 = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc1.desc0) + 12);
+						if ((reg & 0x80000000) || (reg1 & 0x80000000)) {
+							udelay(10);
+							goto DEQ_PKTS;
+						}
+					}
+					pos--;
+				}
+			} else {
+				while (!(count0 && count1)) {
+					count0 = count1 = 0;
+					reg = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc0.desc0) + 12);
+					if (!(reg & 0x80000000)) {
+						count0++;
+					} else {
+						cbm_buffer_free(smp_processor_id(), xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc0.desc0) + 8), 1);
+						/*xrx500_cbm_w32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, ptr_rtn),
+						xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc0.desc0) + 8));*/
+						xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc0.desc0) + 12), 0);
+					}
+					reg = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc1.desc0) + 12);
+					if (!(reg & 0x80000000)) {
+						count1++;
+					} else {
+						cbm_buffer_free(smp_processor_id(), xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc1.desc0) + 8), 1);
+						/*xrx500_cbm_w32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, ptr_rtn),
+						xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc1.desc0) + 8));*/
+						xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc1.desc0) + 12), 0);
+					}
+				}
+			}
+		#else
+			/*Loop until LS port packet count becomes 0*/
+			LS_DEQ_PKTS:
+			while (((xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(cbm_port_id, status)) >> 7) & 0xF) != 0) {
+				/*return the cbm buffer to CBM pool*/
+				cbm_buffer_free(smp_processor_id(), xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(cbm_port_id, desc.desc2)), 1);
+				/*xrx500_cbm_w32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, ptr_rtn),
+					xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(cbm_port_id, desc.desc2)));*/
+				/*read the desc3 to clear*/
+				reg = xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(cbm_port_id, desc.desc3));
+				cbm_debug("ls queue len %d", ((xrx500_cbm_r32(CBM_LS_BASE + CBM_LS_PORT(cbm_port_id, status)) >> 7) & 0xF));
+			}
+			reg = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc0.desc0) + 12);
+			reg1 = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CPU_PORT(cbm_port_id, desc1.desc0) + 12);
+			if ((reg & 0x80000000) || (reg1 & 0x80000000)) {
+				udelay(10);
+				goto LS_DEQ_PKTS;
+			}
+		#endif
+		/*Reassociate other queues whose scheduling were stopped*/
+		if (tmu_queue_id != -1) {
+			cbm_qid_schedule_out(cbm_port_id, tmu_queue_id, 1);
+		}
+	} else {
+		LOGF_KLOG_ERROR("Unsupported port type\n");
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_queue_flush);
+
+int32_t cbm_queue_sched_mgmt(int32_t tmu_port, uint32_t qid, uint32_t flags)
+{
+	struct tmu_equeue_link qlink;
+	cbm_debug("\n");
+	if (flags & CBM_Q_F_DISABLE) {
+		if (flags & CBM_Q_F_FLUSH) {
+			cbm_queue_flush(tmu_port, qid, 0, 0);
+		} else if (!(flags & CBM_Q_F_NODEQUEUE)) {
+			LOGF_KLOG_ERROR("Queue %d is not empty after timeout\n", qid);
+			return CBM_FAILURE;
+		}
+	}
+	tmu_equeue_link_get(qid, &qlink);
+	/*Disable the scheduler block input*/
+	/*/tmu_sched_blk_out_enable(qlink.sbin >> 3, 0);
+	udelay(50000);*/
+	tmu_equeue_enable(qid, (flags & CBM_Q_F_DISABLE) ? 0 : 1);
+	/*udelay(50000);*/
+	if (!(flags & CBM_Q_F_DISABLE))
+		tmu_sched_blk_out_enable(qlink.sbin >> 3, 1);
+	return CBM_SUCCESS;
+}
+
+int32_t cbm_dp_q_enable (
+int32_t dp_port_id,
+int32_t qnum,
+int32_t tmu_port_id,
+int32_t remap_to_qid,
+uint32_t timeout,
+int32_t qidt_valid,
+/*struct cbm_queue_map_entry_t *qidt_set_cfg,*/
+uint32_t flags)
+{
+	uint32_t op_type = 0;
+	int j;
+	struct cbm_qidt_elm qidt_set = {0};
+	struct cbm_qidt_mask qidt_mask = {1, 1, 1, 1, 1, 1, 1, 1};
+	struct cbm_pmac_port_map *local_entry = NULL;
+	uint32_t num;
+	cbm_tmu_res_t *res = NULL;
+	int q_buff_num, result = CBM_SUCCESS;
+	unsigned long sys_flag;
+	int32_t num_entries = 0, i = 0, tmu_port = -1;
+	struct tmu_equeue_link qlink;
+	cbm_queue_map_entry_t *q_map_get = NULL;
+	qidt_set.ep = dp_port_id;
+	qidt_mask.ep_mask = 0;
+
+
+	if (dp_port_id >= 0) {
+		op_type = 1;
+		tmu_port = tmu_port_id;
+	}
+	if (qnum >= 0) {
+		op_type = 2;
+		tmu_equeue_link_get(qnum, &qlink);
+		tmu_port = qlink.epn;
+	}
+	if (flags & CBM_Q_F_CKSUM)
+		op_type = 3;
+	cbm_debug("optype %d\n", op_type);
+	if (cbm_dp_port_resources_get(&dp_port_id, &num, &res,
+						(op_type == 3) ? DP_F_CHECKSUM : 0) != 0) {
+
+			LOGF_KLOG_ERROR("Error getting resources for port_id %d\n", dp_port_id);
+			return CBM_FAILURE;
+	}
+
+	switch (op_type) {
+	case 1:
+		cbm_debug("******************ep=%d tmu_port=%d queue=%d\n", dp_port_id,
+					tmu_port,
+					qnum);
+
+		/*spin_lock_irqsave(&cbm_qidt_lock, sys_flag);*/
+		/*For the Datapath port (EP i), go through all entries in the CBM Queue Map table in DDR, and mark with
+		CBM_F_QUEUE_DROP flag. For each such entry, program the CBM Queue Map table entry in CBM to map
+		to the Global Drop Queue*/
+		if (flags & CBM_Q_F_DISABLE) {
+			spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+			cbm_qidt_set(&qidt_set,
+						&qidt_mask,
+						255);
+			spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+			LOGF_KLOG_INFO("global drop queue\n");
+			if (!(flags & CBM_Q_F_NODEQUEUE))
+				usleep_range(timeout, timeout+100);
+		}
+		/*spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);*/
+		/* For each queue_id in the CBM Queue map table matched entries (by EP), disable/enable the TMU queue by calling
+		the API of the TMU driver*/
+		tmu_queue_list(tmu_port, tmp_q_buff2, ARRAY_SIZE(tmp_q_buff2), &q_buff_num, NULL);
+		cbm_debug(" q_buff_num: %d\n", q_buff_num);
+		for (j = 0; j < q_buff_num; j++) {
+			cbm_queue_sched_mgmt(tmu_port, tmp_q_buff2[j], flags);
+			cbm_debug(" j: %d\n", j);
+		}
+		/*restore all entries in the queue map table for that
+		EP to map to original queues, and remove the CBM_F_QUEUE_DROP flag from the DDR table*/
+		spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+		(flags & CBM_Q_F_DISABLE) ?  : cbm_restore_qmap(1);
+		spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+	break;
+	case 3:
+		local_entry = is_dp_allocated(CBM_PMAC_NOT_APPL, DP_F_CHECKSUM);
+		if (!local_entry) {
+			LOGF_KLOG_ERROR("ret failure\n");
+			kfree(res);
+			return CBM_FAILURE;
+		}
+		qnum = local_entry->qids[0];
+		tmu_port = res[0].tmu_port;
+	case 2:
+		cbm_debug("case 2 %d sbin %d\n", qnum, qlink.sbin);
+
+		/*For the Datapath port (EP i), go through all entries in the CBM Queue Map table in DDR, and mark with
+		CBM_F_QUEUE_DROP flag. For each such entry, program the CBM Queue Map table entry in CBM to map
+		to the Global Drop Queue*/
+		/*cbm_queue_map_get_hw(qnum, &num_entries);*/
+		/*pr_info("map get hw %d %d\n", num_entries, qnum);*/
+		num_entries = 0;
+		cbm_queue_map_get(
+				qnum,
+				&num_entries,
+				&q_map_get, 0);
+		/*pr_info("map get %d %d %d\n", num_entries, remap_to_qid, (flags & CBM_Q_F_DISABLE)? 0 : 1);*/
+		if (num_entries > 0) {
+			for (i = 0; i < num_entries; i++) {
+				cbm_queue_map_set((remap_to_qid == -1) ? 255 : remap_to_qid, &q_map_get[i], 0);
+			}
+			cbm_debug("map set\n");
+			/*udelay(200000);*/
+		}
+
+		/*spin_lock_irqsave(&cbm_qidt_lock, sys_flag);*/
+		if (!(flags & CBM_Q_F_NODEQUEUE))
+			usleep_range(timeout, timeout+100);
+		/* For each queue_id in the CBM Queue map table matched entries (by EP), disable/enable the TMU queue by calling
+		the API of the TMU driver*/
+		cbm_debug("cbm_queue_sched_mgmt\n");
+		if (cbm_queue_sched_mgmt(tmu_port, qnum, flags) == CBM_FAILURE) {
+			LOGF_KLOG_ERROR("ret failure\n");
+			result = CBM_FAILURE;
+			goto DQ_FAIL;
+		}
+
+		/*restore all entries in the queue map table for that
+		EP to map to original queues, and remove the CBM_F_QUEUE_DROP flag from the DDR table*/
+		if ((num_entries > 0) && (remap_to_qid == -1) && (!(flags & CBM_Q_F_DISABLE))) {
+			/*cbm_restore_qmap((flags & CBM_Q_F_DISABLE) ? 0 : 1);*/
+			LOGF_KLOG_INFO("%s***********FIX ME***********\n", __func__);
+		}
+
+		if (qidt_valid == 0) {
+			if ((!cbm_qtable[qnum].refcnt) && !(flags & CBM_Q_F_DISABLE)) {
+				cbm_debug("guess first time\n");
+				cbm_qidt_set(&qidt_set,
+				&qidt_mask,
+				qnum);
+			}
+		}
+		cbm_debug("%d\n", cbm_qtable[qnum].refcnt);
+		/*spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);*/
+	break;
+	default:
+	break;
+	}
+	DQ_FAIL:
+	if (res)
+		kfree(res);
+	if (q_map_get)
+		kfree(q_map_get);
+	return result;
+}
+EXPORT_SYMBOL(cbm_dp_q_enable);
+
+static int get_is_bit_set(uint32_t flags)
+{
+	int i;
+
+	for (i = 0; i <= 31; i++) {
+		if ((flags & (1 << i)) != 0)
+			return i;
+	}
+	return -1;
+}
+
+int32_t cbm_enqueue_port_resources_get (
+cbm_eq_port_res_t *res,
+uint32_t flags)
+{
+	int count = 0, i, j;
+	switch (flags) {
+	case DP_F_ENQ_GSWIPL:
+	case DP_F_ENQ_PAE:
+	case DP_F_ENQ_TSO:
+	case DP_F_ENQ_VRX318:
+	case DP_F_ENQ_CPU_0:
+	case DP_F_ENQ_CPU_1:
+	case DP_F_ENQ_CPU_2:
+	case DP_F_ENQ_CPU_3:
+	case DP_F_ENQ_WAVE:
+	break;
+	default:
+		LOGF_KLOG_ERROR("%s: Invalid flag for the port\r\n", __func__);
+		return CBM_FAILURE;
+	}
+	for (i = 0; i < CBM_EQM_PORT_MAX; i++) {
+		if (eqm_port_info[i].port_type == flags) {
+			count++;
+		}
+	}
+	if (count) {
+		res->num_eq_ports = count;
+		res->eq_info = (cbm_eq_info_t *)kmalloc(sizeof(cbm_eq_info_t) * (res->num_eq_ports), GFP_ATOMIC);
+		if (res->eq_info) {
+			j = 0;
+			for (i = 0; i < CBM_EQM_PORT_MAX; i++) {
+				if (eqm_port_info[i].port_type == flags) {
+					res->eq_info[j].port_no = i;
+					res->eq_info[j].cbm_eq_port_base
+					= eqm_port_info[i].eq_info.
+					cbm_eq_port_base;
+					res->eq_info[j].dma_rx_chan_std
+					= eqm_port_info[i].eq_info.dma_rx_chan_std;
+					if (eqm_port_info[i].num_eq_ports > 1) {
+						res->eq_info[j].dma_rx_chan_jumbo
+						= eqm_port_info[i].eq_info.dma_rx_chan_jumbo;
+					}
+					res->eq_info[j].num_desc
+					= eqm_port_info[i].eq_info.num_desc;
+					j++;
+				}
+
+				if (j > res->num_eq_ports)
+					BUG_ON("exceeds the number of resources\r\n");
+			}
+		}
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_enqueue_port_resources_get);
+
+int32_t
+cbm_dequeue_port_resources_get(
+	uint32_t	dp_port,
+	cbm_dq_port_res_t *res,
+	uint32_t flags
+	)
+{
+	int i = 0;
+	uint32_t port_map, port;
+	struct cbm_pmac_port_map *local_entry;
+
+	local_entry = is_dp_allocated(dp_port, flags);
+	if (local_entry) {
+		res->num_deq_ports = hweight_long(local_entry->egp_port_map);
+		res->deq_info = (cbm_dq_info_t *)kmalloc(sizeof(cbm_dq_info_t) * (res->num_deq_ports), GFP_ATOMIC);
+		if (res->deq_info) {
+			port_map = local_entry->egp_port_map;
+			port = get_is_bit_set(port_map);
+			res->cbm_buf_free_base
+			= dqm_port_info[port]
+			.cbm_buf_free_base;
+			res->num_free_entries
+			= dqm_port_info[port]
+			.num_free_entries;
+
+			for (i = 0; i < res->num_deq_ports; i++) {
+				port = get_is_bit_set(port_map);
+				res->deq_info[i].cbm_dq_port_base
+				= dqm_port_info[port]
+				.deq_info.cbm_dq_port_base;
+				res->deq_info[i].num_desc
+				= dqm_port_info[port]
+				.deq_info.num_desc;
+				res->deq_info[i].dma_tx_chan
+				= dqm_port_info[port]
+				.deq_info.dma_tx_chan;
+				res->deq_info[i].port_no = port;
+				/*clear the flag for the current bitpos*/
+				port_map &= ~(1 << port);
+			}
+		} else {
+			LOGF_KLOG_ERROR("%s error in allocating memory", __func__);
+		}
+	} else {
+		LOGF_KLOG_ERROR("%s: unallocated pmac port\r\n", __func__);
+		return -1;
+	}
+	return 0;
+}
+EXPORT_SYMBOL(cbm_dequeue_port_resources_get);
+
+int32_t cbm_dp_port_resources_get (
+	uint32_t *dp_port,
+	uint32_t *num_tmu_ports,
+	cbm_tmu_res_t **res_pp,
+	uint32_t flags)
+{
+	int i = 0;
+	uint32_t port_map;
+	cbm_tmu_res_t *res;
+	struct cbm_pmac_port_map *local_entry = NULL;
+	uint32_t cbm_port[CBM_MAX_PHY_PORT_PER_EP];
+	uint32_t local_flags = 0, local_num_ports = 0, result;
+
+	LOGF_KLOG_DEBUG("%s: dp %d\r\n", __func__, *dp_port);
+	local_entry = is_dp_allocated(*dp_port, flags);
+	if (local_entry) {
+		*num_tmu_ports = hweight_long(local_entry->egp_port_map);
+		LOGF_KLOG_DEBUG("%s: number of tmu ports %d\r\n", __func__, *num_tmu_ports);
+		if (*num_tmu_ports > 16)
+			return -1;
+		res = (cbm_tmu_res_t *)kmalloc(sizeof(cbm_tmu_res_t) * (*num_tmu_ports), GFP_ATOMIC);
+		if (res) {
+			*res_pp = res;
+			port_map = local_entry->egp_port_map;
+			LOGF_KLOG_DEBUG("port_map %d\r\n", port_map);
+			for (i = 0; i < *num_tmu_ports; i++) {
+				res[i].tmu_port = get_is_bit_set(port_map);
+				res[i].cbm_deq_port = get_is_bit_set(port_map);
+				LOGF_KLOG_DEBUG("%d tmu_port\r\n", res[i].tmu_port);
+				/*clear the flag for the current bitpos*/
+				port_map &= ~(1 << res[i].tmu_port);
+				res[i].tmu_q = local_entry->qids[i];
+				LOGF_KLOG_DEBUG("%d tmu_q\r\n", res[i].tmu_q);
+				res[i].tmu_sched = res[i].tmu_q - SBID_START;
+			}
+		} else {
+			LOGF_KLOG_ERROR("%s error in allocating memory", __func__);
+		}
+	#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+	} else if ((!local_entry) && ((flags & DP_F_MPE_ACCEL) || (flags & DP_F_DIRECTPATH_RX) /*|| (flags & DP_F_CHECKSUM)*/)) {
+	#else
+	} else if ((!local_entry) && ((flags & DP_F_MPE_ACCEL) || (flags & DP_F_DIRECTPATH_RX) || (flags & DP_F_CHECKSUM))) {
+	#endif
+		return -1;
+	} else if ((*dp_port <= 6) || (*dp_port == 15)) {
+		/*check if it is static pmac*/
+			result = get_matching_pmac_noflags(cbm_port, *dp_port, &local_flags, &local_num_ports);
+			if (result == CBM_SUCCESS) {
+				res = (cbm_tmu_res_t *)kmalloc(sizeof(cbm_tmu_res_t) * (local_num_ports), GFP_ATOMIC);
+				if (res) {
+					*res_pp = res;
+					LOGF_KLOG_DEBUG("local_num_ports %d\r\n", local_num_ports);
+					*num_tmu_ports = local_num_ports;
+					for (i = 0; i < local_num_ports; i++) {
+						LOGF_KLOG_DEBUG("cbm_port %d\r\n", cbm_port[i]);
+						res[i].tmu_port = cbm_port[i];
+						res[i].cbm_deq_port = cbm_port[i];
+						/*clear the flag for the current bitpos*/
+						res[i].tmu_q = dqm_port_info[cbm_port[i]]
+									.def_qid;
+						LOGF_KLOG_DEBUG("%d tmu_\r\n", res[i].tmu_q);
+						res[i].tmu_sched = res[i].tmu_q - SBID_START;
+					}
+				} else {
+					LOGF_KLOG_ERROR("%s: kmalloc failed in getting static pmac port\r\n", __func__);
+				}
+			} else {
+			LOGF_KLOG_ERROR("%s: Error in getting static pmac port\r\n", __func__);
+			return -1;
+		}
+	} else {
+		/*LOGF_KLOG_ERROR("%s: unallocated pmac port\r\n", __func__);*/
+		return -1;
+	}
+	return 0;
+}
+EXPORT_SYMBOL(cbm_dp_port_resources_get);
+
+int32_t cbm_reserved_dp_resources_get(
+	uint32_t *tmu_port,
+	uint32_t *tmu_sched,
+	uint32_t *tmu_q)
+{
+	cbm_tmu_res_t tmu_res;
+	reserved_ports_highest(&tmu_res, 0);
+	*tmu_port = tmu_res.tmu_port;
+	*tmu_sched = tmu_res.tmu_sched;
+	*tmu_q = tmu_res.tmu_q;
+	return 0;
+}
+EXPORT_SYMBOL(cbm_reserved_dp_resources_get);
+
+int32_t cbm_get_egress_port_info(uint32_t cbm_port, uint32_t *tx_ch,
+	uint32_t *flags)
+{
+	if (cbm_port < ARRAY_SIZE(dqm_port_info)) {
+		if (tx_ch)
+			*tx_ch = dqm_port_info[cbm_port].deq_info.dma_tx_chan;
+		if (flags)
+			*flags = dqm_port_info[cbm_port].egp_type;
+	} else {
+		if (tx_ch)
+			*tx_ch = 0;
+		if (flags)
+			*flags = 0;
+
+	}
+	return 0;
+}
+EXPORT_SYMBOL(cbm_get_egress_port_info);
+
+int32_t cbm_enqueue_mgr_ctrl_get(
+	cbm_eqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	)
+{
+	ctrl->regval = xrx500_cbm_r32(CBM_BASE + CBM_CTRL);
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_enqueue_mgr_ctrl_set(
+	cbm_eqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	)
+{
+	xrx500_cbm_w32(CBM_BASE + CBM_CTRL, ctrl->regval);
+	asm("sync");
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dequeue_mgr_ctrl_get(
+	cbm_dqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	)
+{
+	ctrl->regval = xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CTRL);
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dequeue_mgr_ctrl_set(
+	cbm_dqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	)
+{
+	xrx500_cbm_w32(CBM_DQM_BASE + CBM_DQM_CTRL, ctrl->regval);
+	asm("sync");
+	return CBM_SUCCESS;
+}
+
+#define DMA_DQM_START_PORT 6
+#define DMA_EQM_START_PORT 5
+
+static int get_controller(char *ctrl)
+{
+	if (!strcmp(ctrl, "DMA1TX"))
+		return DMA1TX;
+	else if (!strcmp(ctrl, "DMA1RX"))
+		return DMA1RX;
+	else if (!strcmp(ctrl, "DMA2TX"))
+		return DMA2TX;
+	else if (!strcmp(ctrl, "DMA2RX"))
+		return DMA2RX;
+	else
+		return DMAMAX;
+}
+
+static int32_t setup_DMA_channel(int chan, int cbm_port, int type, int buf_type)
+{
+	LOGF_KLOG_DEBUG("port %d type %d buf_type %d\r\n",
+	cbm_port, type, buf_type);
+	if ((ltq_request_dma(chan, "test")) < 0) {
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan%d\r\n",
+		__func__, chan);
+		return CBM_FAILURE;
+	}
+	if (type & DQM_DMA) {
+		/* For CBM */
+		if ((ltq_dma_chan_desc_cfg(chan,
+		RPHYSADDR(
+		(uint32_t)(CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(cbm_port
+		, 0))),
+		2)) < 0) {
+			LOGF_KLOG_ERROR(" %s failed to setup chan\
+			desc for chan%d\r\n", __func__, chan);
+			return CBM_FAILURE;
+		}
+	} else {
+		LOGF_KLOG_DEBUG("EQM DMA reg 0x%x\r\n",
+		(unsigned int)(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(cbm_port,
+		0, (buf_type >> 1))));
+		if ((ltq_dma_chan_desc_cfg(chan,
+		RPHYSADDR(
+		(uint32_t)(CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(cbm_port,
+		0,
+		(buf_type >> 1)))), 2)) < 0) {
+			LOGF_KLOG_ERROR(" %s failed to setup chan desc for chan%d\r\n", __func__, chan);
+		}
+	}
+	if (ltq_dma_chan_irq_disable(chan) < 0) {
+		LOGF_KLOG_ERROR(" %s failed to disable IRQ for chan%d\r\n",
+		__func__, chan);
+		return CBM_FAILURE;
+	}
+	/* Channel on */
+	if (ltq_dma_chan_on(chan) < 0) {
+		LOGF_KLOG_ERROR(" %s failed to ON chan%d\r\n", __func__, chan);
+		return CBM_FAILURE;
+	}
+	LOGF_KLOG_DEBUG("%s executed\n", __func__);
+	return CBM_SUCCESS;
+}
+
+
+int32_t
+cbm_enqueue_dma_port_init(
+	int32_t cbm_port_id,
+	int32_t dma_hw_num,
+	uint32_t std_dma_chan_num,
+	uint32_t jumbo_dma_chan_num,
+	uint32_t flags
+	)
+{
+	int dma_controller, chan;
+	unsigned char dma_ctrl[16];
+	if (flags & CBM_PORT_F_STANDARD_BUF) {
+		/*config the dma channel*/
+		sprintf(dma_ctrl, "DMA%dRX", dma_hw_num);
+		dma_controller = get_controller(dma_ctrl);
+		chan = _DMA_C(dma_controller, 0, std_dma_chan_num);
+		eqm_port_info[cbm_port_id].eq_info.dma_rx_chan_std = chan;
+		if (setup_DMA_channel(chan,
+		cbm_port_id,
+		EQM_DMA,
+		CBM_PORT_F_STANDARD_BUF))
+			return CBM_FAILURE;
+	}
+	if (flags & CBM_PORT_F_JUMBO_BUF) {
+		/*config the dma channel*/
+		sprintf(dma_ctrl, "DMA%dRX", dma_hw_num);
+		dma_controller = get_controller(dma_ctrl);
+		chan = _DMA_C(dma_controller, 0, jumbo_dma_chan_num);
+		eqm_port_info[cbm_port_id].eq_info.dma_rx_chan_jumbo = chan;
+		if (setup_DMA_channel(chan,
+		cbm_port_id,
+		EQM_DMA,
+		CBM_PORT_F_JUMBO_BUF))
+			return CBM_FAILURE;
+	}
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_enqueue_dma_port_uninit(
+	int32_t cbm_port_id,
+	uint32_t flags
+	)
+{
+	int chan;
+	chan = dqm_port_info[cbm_port_id].dma_ch;
+	if (ltq_dma_chan_off(chan))
+		return CBM_FAILURE;
+
+	if (ltq_free_dma(chan))
+		return CBM_FAILURE;
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dequeue_dma_port_init(
+	int32_t cbm_port_id,
+	int32_t dma_hw_num,
+	uint32_t dma_chan_num,
+	uint32_t flags
+	)
+{
+	int32_t ret = CBM_SUCCESS;
+	int dma_controller, chan;
+	unsigned char dma_ctrl[16];
+	/*config the dma channel*/
+	sprintf(dma_ctrl, "DMA%dTX", dma_hw_num);
+	dma_controller = get_controller(dma_ctrl);
+	LOGF_KLOG_DEBUG("dma %d \r\n", dma_controller);
+	chan = _DMA_C(dma_controller, 0, dma_chan_num);
+	LOGF_KLOG_DEBUG("chan %d \r\n", chan);
+	dqm_port_info[cbm_port_id].dma_ch = chan;
+	if (setup_DMA_channel(chan,
+	cbm_port_id,
+	DQM_DMA,
+	CBM_PORT_F_STANDARD_BUF) < 0)
+		ret = CBM_FAILURE;
+	return ret;
+}
+
+
+int32_t
+cbm_dequeue_dma_port_uninit(
+	int32_t cbm_port_id,
+	uint32_t flags
+	)
+{
+	int chan;
+	chan = dqm_port_info[cbm_port_id].dma_ch;
+	if (ltq_dma_chan_off(chan))
+		return CBM_FAILURE;
+	if (ltq_free_dma(chan))
+		return CBM_FAILURE;
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dma_port_enable(
+	int32_t cbm_port_id,
+	uint32_t flags
+	)
+{
+	if (flags & CBM_PORT_F_DEQUEUE_PORT) {
+		/*DMA dequeue port*/
+		if (flags & CBM_PORT_F_DISABLE)
+			xrx500_cbm_w32((CBM_DQM_BASE +
+			CBM_DQM_DMA_PORT(cbm_port_id - 6, cfg)),
+			0x0);
+		else
+			init_cbm_dqm_dma_port(cbm_port_id,
+			cbm_port_id - 6);
+	} else {
+		/*DMA Enqueue port*/
+		if (flags & CBM_PORT_F_DISABLE)
+			xrx500_cbm_w32((CBM_EQM_BASE
+			+ CBM_EQM_DMA_PORT(cbm_port_id - 5, cfg)),
+			0x0);
+		else
+			init_cbm_eqm_dma_port(cbm_port_id - 5, flags);
+	}
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dma_toe_port_enable(
+	int32_t cbm_port_id,
+	int flags)
+{
+		/*DMA Enqueue port*/
+	if (flags & CBM_PORT_F_DISABLE)
+		xrx500_cbm_w32((CBM_EQM_BASE
+		+ CBM_EQM_DMA_PORT(cbm_port_id - 5, cfg)), 0x0);
+	else
+		init_cbm_eqm_dma_toe_port(cbm_port_id - 5, flags);
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dma_vrx318_port_enable(int32_t cbm_port_id, int flags)
+{
+	/*DMA Enqueue port*/
+	if (flags & CBM_PORT_F_DISABLE)
+		xrx500_cbm_w32((CBM_EQM_BASE
+		+ CBM_EQM_DMA_PORT(cbm_port_id - 5, cfg)), 0x0);
+	else
+		init_cbm_eqm_ldma_port(flags);
+	return CBM_SUCCESS;
+}
+
+
+int32_t
+cbm_dma_port_config_get(
+	int32_t cbm_port_id,
+	cbm_dma_port_config_t *cfg,
+	uint32_t flags
+	)
+{
+	if (flags == CBM_PORT_F_DEQUEUE_PORT)
+		cfg->deq_cfg.regval =  xrx500_cbm_r32(CBM_DQM_BASE
+		+ CBM_DQM_DMA_PORT(cbm_port_id - DMA_DQM_START_PORT,
+		cfg));
+	else
+		cfg->enq_cfg.regval = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_DMA_PORT(cbm_port_id - DMA_EQM_START_PORT,
+		cfg));
+	return CBM_SUCCESS;
+}
+
+int32_t
+cbm_dma_port_config_set(
+	int32_t cbm_port_id,
+	cbm_dma_port_config_t *cfg,
+	uint32_t flags
+	)
+{
+	if (flags == CBM_PORT_F_DEQUEUE_PORT)
+		xrx500_cbm_w32(CBM_DQM_BASE
+		+ CBM_DQM_DMA_PORT(cbm_port_id - DMA_DQM_START_PORT, cfg),
+		cfg->deq_cfg.regval);
+	else
+		xrx500_cbm_w32(CBM_EQM_BASE
+		+ CBM_EQM_DMA_PORT(cbm_port_id - DMA_EQM_START_PORT, cfg),
+		cfg->enq_cfg.regval);
+	return CBM_SUCCESS;
+}
+int32_t
+cbm_enqueue_port_overhead_set(
+int32_t port_id,
+int8_t ovh
+)
+{
+	BUG_ON(!((port_id >= 0) && (port_id <= 15)));
+	if (cbm_rev <= CBM_SOC_REV_1) {
+		set_val(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(port_id, cfg),
+		ovh,
+		CFG_CPU_IGP_0_OVH_MASK,
+		CFG_CPU_IGP_0_OVH_POS);
+	} else {
+		xrx500_cbm_w32(CBM_EQM_BASE + OVH_0 + (4 * port_id), ovh);
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_enqueue_port_overhead_set);
+
+int32_t
+cbm_enqueue_port_overhead_get(
+int32_t port_id,
+int8_t *ovh
+)
+{
+	BUG_ON(!((port_id >= 0) && (port_id <= 15)));
+	if (cbm_rev <= CBM_SOC_REV_1) {
+		*ovh = (xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(port_id, cfg)) & CFG_CPU_IGP_0_OVH_MASK) >> CFG_CPU_IGP_0_OVH_POS;
+	} else {
+		*ovh = xrx500_cbm_r32(CBM_EQM_BASE + OVH_0 + (4 * port_id)) & 0xff;
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_enqueue_port_overhead_get);
+
+int32_t
+cbm_igp_delay_set(
+	int32_t cbm_port_id,
+	int32_t delay
+	)
+{
+
+	BUG_ON(!((cbm_port_id >= 0) && (cbm_port_id <= 15)));
+
+	if (cbm_rev > CBM_SOC_REV_1) {
+		xrx500_cbm_w32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id, dcntr)
+		, delay & 0x3f);
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_igp_delay_set);
+
+int32_t
+cbm_igp_delay_get(
+	int32_t cbm_port_id,
+	int32_t *delay
+	)
+{
+	BUG_ON(!((cbm_port_id >= 0) && (cbm_port_id <= 15)));
+	if (cbm_rev > CBM_SOC_REV_1) {
+		*delay = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id, dcntr)
+		) & 0x3f;
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_igp_delay_get);
+int32_t
+cbm_queue_delay_enable_set(
+	int32_t enable,
+	int32_t queue
+	)
+{
+	uint32_t regval, i;
+	BUG_ON(!((queue >= 0) && (queue <= 256)));
+#if 0
+	if (ltq_get_soc_rev() != CBM_SOC_REV_1) {
+		regval = xrx500_cbm_r32(CBM_EQM_BASE
+		+ DEN_0 + ((queue >> 5) * 4));
+		if (enable & CBM_QUEUE_DELAY_ENABLE)
+			regval |= BIT(queue & 0x1F);
+		else
+			regval &= ~BIT(queue & 0x1F);
+		xrx500_cbm_w32(CBM_EQM_BASE
+		+ DEN_0 + ((queue >> 5) * 4), regval);
+	}
+#endif
+	regval = xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CTRL);
+	regval |= BIT(8) | BIT(6);
+	regval |= 3 << CBM_EQM_CTRL_L_POS;
+	xrx500_cbm_w32(CBM_EQM_BASE
+		+ CBM_EQM_CTRL, regval);
+	for (i = 0; i <= 15; i++) {
+		cbm_igp_delay_set(i, CBM_EQM_DELAY_ENQ);
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_queue_delay_enable_set);
+
+int32_t
+cbm_enqueue_port_thresh_get(
+	int32_t cbm_port_id,
+	cbm_port_thresh_t *thresh,
+	uint32_t flags
+	)
+{
+	WARN_ON(!((cbm_port_id >= 0) && (cbm_port_id <= 15)));
+	if ((cbm_port_id >= 0) && (cbm_port_id <= 15)) {
+		thresh->regval = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id, wm));
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_enqueue_port_thresh_get);
+
+int32_t cbm_enqueue_port_thresh_set(
+	int32_t cbm_port_id,
+	cbm_port_thresh_t *thresh,
+	uint32_t flags)
+{
+	WARN_ON(!((cbm_port_id >= 0) && (cbm_port_id <= 15)));
+	if ((cbm_port_id >= 0) && (cbm_port_id <= 15)) {
+		 xrx500_cbm_w32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id,
+		wm), thresh->regval);
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_enqueue_port_thresh_set);
+
+int32_t cbm_dequeue_cpu_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *deq_ctr,
+	uint32_t flags)
+{
+	WARN_ON(!((cbm_port_id >= 0) && (cbm_port_id <= 4)));
+	if ((cbm_port_id >= 0) && (cbm_port_id <= 4)) {
+		*deq_ctr = xrx500_cbm_r32(CBM_DQM_BASE
+		+ CBM_DQM_CPU_PORT(cbm_port_id,
+		dqpc));
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_dequeue_cpu_port_stats_get);
+
+int32_t cbm_enqueue_cpu_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *occupancy_ctr,
+	uint32_t *enq_ctr,
+	uint32_t flags)
+{
+	WARN_ON(!((cbm_port_id >= 0) && (cbm_port_id <= 4)));
+	if ((cbm_port_id >= 0) && (cbm_port_id <= 4)) {
+		*enq_ctr = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id, eqpc));
+		*occupancy_ctr = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id,
+		pocc));
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_enqueue_cpu_port_stats_get);
+
+int32_t cbm_dequeue_dma_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *deq_ctr,
+	uint32_t flags)
+{
+	WARN_ON(!((cbm_port_id >= 5) && (cbm_port_id <= 23)));
+	if ((cbm_port_id >= 5) && (cbm_port_id <= 23)) {
+		*deq_ctr = xrx500_cbm_r32(CBM_DQM_BASE
+		+ CBM_DQM_CPU_PORT(cbm_port_id,
+		dqpc));
+		return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_dequeue_dma_port_stats_get);
+
+int32_t cbm_enqueue_dma_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *occupancy_ctr,
+	uint32_t *enq_ctr,
+	uint32_t flags)
+{
+
+	WARN_ON(!((cbm_port_id >= 5) && (cbm_port_id <= 15)));
+	if ((cbm_port_id >= 5) && (cbm_port_id <= 15)) {
+		 *enq_ctr = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id,
+		eqpc));
+		*occupancy_ctr = xrx500_cbm_r32(CBM_EQM_BASE
+		+ CBM_EQM_CPU_PORT(cbm_port_id,
+		pocc));
+	return CBM_SUCCESS;
+	}
+	return CBM_FAILURE;
+}
+EXPORT_SYMBOL(cbm_enqueue_dma_port_stats_get);
+
+uint32_t get_enq_counter(uint32_t index)
+{
+	return xrx500_cbm_r32(CBM_QEQCNT_BASE + index * 4);
+}
+EXPORT_SYMBOL(get_enq_counter);
+
+uint32_t get_deq_counter(uint32_t index)
+{
+	return xrx500_cbm_r32(CBM_QDQCNT_BASE + index * 4);
+}
+EXPORT_SYMBOL(get_deq_counter);
+
+void reset_enq_counter(uint32_t index)
+{
+	xrx500_cbm_w32(CBM_QEQCNT_BASE + index * 4, 0);
+}
+EXPORT_SYMBOL(reset_enq_counter);
+
+void reset_deq_counter(uint32_t index)
+{
+	xrx500_cbm_w32(CBM_QDQCNT_BASE + index * 4, 0);
+}
+EXPORT_SYMBOL(reset_deq_counter);
+
+void reset_enq_counter_all()
+{
+	int i;
+	for (i = 0; i < CBM_QEQCNTR_SIZE / sizeof(uint32_t); i++)
+		xrx500_cbm_w32(CBM_QEQCNT_BASE+i*4, 0);
+}
+EXPORT_SYMBOL(reset_enq_counter_all);
+
+void reset_deq_counter_all()
+{
+	int i;
+	for (i = 0; i < CBM_QDQCNTR_SIZE / sizeof(uint32_t); i++)
+		xrx500_cbm_w32(CBM_QDQCNT_BASE+i*4, 0);
+}
+EXPORT_SYMBOL(reset_deq_counter_all);
+
+int cbm_counter_mode_set(int enq, int mode)
+{
+	int curr_mode;
+	curr_mode = get_val(xrx500_cbm_r32(cbm_cntr_func[enq].reg), cbm_cntr_func[enq].msel_mask, cbm_cntr_func[enq].msel_pos);
+	if (mode != curr_mode) {
+		set_val(cbm_cntr_func[enq].reg, 0, cbm_cntr_func[enq].qen_mask, cbm_cntr_func[enq].qen_pos);
+		cbm_cntr_func[enq].reset_counter();
+		set_val(cbm_cntr_func[enq].reg, mode, cbm_cntr_func[enq].msel_mask, cbm_cntr_func[enq].msel_pos);
+		set_val(cbm_cntr_func[enq].reg, 1, cbm_cntr_func[enq].qen_mask, cbm_cntr_func[enq].qen_pos);
+	}
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_counter_mode_set);
+
+int cbm_q_thres_get(uint32_t *length)
+{
+	*length = get_val (xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CTRL), CBM_EQM_CTRL_L_MASK, CBM_EQM_CTRL_L_POS);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_q_thres_get);
+int cbm_q_thres_set(uint32_t length)
+{
+	set_val((CBM_EQM_BASE + CBM_EQM_CTRL), length, CBM_EQM_CTRL_L_MASK, CBM_EQM_CTRL_L_POS);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_q_thres_set);
+int cbm_counter_mode_get(int enq, int *mode)
+{
+	*mode = get_val(xrx500_cbm_r32(cbm_cntr_func[enq].reg), cbm_cntr_func[enq].msel_mask, cbm_cntr_func[enq].msel_pos);
+	return CBM_SUCCESS;
+}
+EXPORT_SYMBOL(cbm_counter_mode_get);
+
+void set_lookup_qid_via_index(uint32_t index, uint32_t qid)
+{
+	uint32_t offset = (index / 4) * 4;
+	uint32_t shift = (index % 4) * 8;
+	unsigned long sys_flag;
+	uint32_t tmp;
+	spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+	tmp = xrx500_cbm_r32(CBM_QIDT_BASE + offset);
+	tmp = (tmp & (~(0xFF << shift))) | (qid << shift);
+	xrx500_cbm_w32(CBM_QIDT_BASE + offset, tmp);
+	spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+}
+EXPORT_SYMBOL(set_lookup_qid_via_index);
+
+
+uint8_t get_lookup_qid_via_index(uint32_t index)
+{
+	uint32_t offset = (index / 4) * 4;
+	uint32_t shift = (index % 4) * 8;
+	unsigned long sys_flag;
+	uint8_t value = 0;
+	spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+	value =  ((xrx500_cbm_r32(CBM_QIDT_BASE + offset)) >> shift) & 0xFF;
+	spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+	return value;
+}
+EXPORT_SYMBOL(get_lookup_qid_via_index);
+
+uint8_t get_lookup_qid_via_bits(uint32_t ep,
+uint32_t classid,
+uint32_t mpe1,
+uint32_t mpe2,
+uint32_t enc,
+uint32_t dec,
+uint8_t flow_id,
+uint32_t dic)
+{
+	uint32_t index;
+	index = ((flow_id  << 12) & 0x3000)
+		| ((dec   << 11) & 0x800)
+		| ((enc   << 10) & 0x400)
+		| ((mpe2  << 9) & 0x200)
+		| ((mpe1  << 8) & 0x100)
+		| ((ep  << 4) & 0xF0)
+		| ((classid) & 0x0F);
+	return get_lookup_qid_via_index(index);
+}
+EXPORT_SYMBOL(get_lookup_qid_via_bits);
+
+void setup_DMA_p2p()
+{
+/*do only p2p here.commented out other dma channel setup*/
+	int chan1 = DMA1TX_LAN_SWITCH_CLASS0;
+	int chan2 = DMA2RX_GSWIP_R_CLASS0;
+#if !defined(SINGLE_RX_CH0_ONLY) || !SINGLE_RX_CH0_ONLY
+	int chan1_1 = DMA1TX_LAN_SWITCH_CLASS1;
+	int chan2_1 = DMA2RX_GSWIP_R_CLASS1;
+	int chan1_2 = DMA1TX_LAN_SWITCH_CLASS2;
+	int chan2_2 = DMA2RX_GSWIP_R_CLASS2;
+	int chan1_3 = DMA1TX_LAN_SWITCH_CLASS3;
+	int chan2_3 = DMA2RX_GSWIP_R_CLASS3;
+#endif
+
+	if ((ltq_request_dma(chan1, "dma1 tx lan")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan1\r\n", __func__);
+
+	if ((ltq_request_dma(chan2, "dma2 rx gswpr")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan2\r\n", __func__);
+
+	/* rx decriptor setup */
+	if (ltq_dma_chan_desc_alloc(chan2, 32) == 0)
+		ltq_dma_chan_data_buf_alloc(chan2);
+
+#if !defined(SINGLE_RX_CH0_ONLY) || !SINGLE_RX_CH0_ONLY
+	if ((ltq_request_dma(chan1_1, "dma1 tx lan")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan1_1\r\n", __func__);
+
+	if ((ltq_request_dma(chan2_1, "dma2 rx gswpr")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan2_1\r\n", __func__);
+
+	/* rx decriptor setup */
+	if (ltq_dma_chan_desc_alloc(chan2_1, 32) == 0)
+		ltq_dma_chan_data_buf_alloc(chan2_1);
+
+	if ((ltq_request_dma(chan1_2, "dma1 tx lan")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan1_2\r\n", __func__);
+
+	if ((ltq_request_dma(chan2_2, "dma2 rx gswpr")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan2_2\r\n", __func__);
+
+	/* rx decriptor setup */
+	if (ltq_dma_chan_desc_alloc(chan2_2, 32) == 0)
+		ltq_dma_chan_data_buf_alloc(chan2_2);
+
+	if ((ltq_request_dma(chan1_3, "dma1 tx lan")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan1_3\r\n", __func__);
+
+	if ((ltq_request_dma(chan2_3, "dma2 rx gswpr")) < 0)
+		LOGF_KLOG_ERROR(" %s failed to open chan for chan2_3\r\n", __func__);
+
+		/* rx decriptor setup */
+	if (ltq_dma_chan_desc_alloc(chan2_3, 32) == 0)
+		ltq_dma_chan_data_buf_alloc(chan2_3);
+#endif
+
+	/* Any other configuration ???? */
+	ltq_dma_p2p_cfg(chan2, chan1);
+#if !defined(SINGLE_RX_CH0_ONLY) || !SINGLE_RX_CH0_ONLY
+	ltq_dma_p2p_cfg(chan2_3, chan1_3);
+	ltq_dma_p2p_cfg(chan2_1, chan1_1);
+	ltq_dma_p2p_cfg(chan2_2, chan1_2);
+#endif
+	ltq_dma_chan_irq_disable(chan2);
+	ltq_dma_chan_irq_disable(chan1);
+#if !defined(SINGLE_RX_CH0_ONLY) || !SINGLE_RX_CH0_ONLY
+	ltq_dma_chan_irq_disable(chan2_3);
+	ltq_dma_chan_irq_disable(chan1_3);
+	ltq_dma_chan_irq_disable(chan2_1);
+	ltq_dma_chan_irq_disable(chan1_1);
+	ltq_dma_chan_irq_disable(chan2_2);
+	ltq_dma_chan_irq_disable(chan1_2);
+#endif
+	cbm_p2p_setup_done = 1;
+	LOGF_KLOG_INFO("%s executed\n", __func__);
+}
+EXPORT_SYMBOL(setup_DMA_p2p);
+
+int turn_on_DMA_p2p(void)
+{
+	int chan1 = DMA1TX_LAN_SWITCH_CLASS0;
+	int chan2 = DMA2RX_GSWIP_R_CLASS0;
+#if !defined(SINGLE_RX_CH0_ONLY) || !SINGLE_RX_CH0_ONLY
+	int chan1_1 = DMA1TX_LAN_SWITCH_CLASS1;
+	int chan2_1 = DMA2RX_GSWIP_R_CLASS1;
+	int chan1_2 = DMA1TX_LAN_SWITCH_CLASS2;
+	int chan2_2 = DMA2RX_GSWIP_R_CLASS2;
+	int chan1_3 = DMA1TX_LAN_SWITCH_CLASS3;
+	int chan2_3 = DMA2RX_GSWIP_R_CLASS3;
+#endif
+
+	if (!cbm_p2p_setup_done || cbm_p2p_turned_on)
+		return -EPERM;
+
+	if (!cbm_p2p_turned_on) {
+		ltq_dma_chan_on(chan1);
+		ltq_dma_chan_on(chan2);
+#if !defined(SINGLE_RX_CH0_ONLY) || !SINGLE_RX_CH0_ONLY
+		ltq_dma_chan_on(chan1_1);
+		ltq_dma_chan_on(chan2_1);
+
+		ltq_dma_chan_on(chan1_2);
+		ltq_dma_chan_on(chan2_2);
+
+		ltq_dma_chan_on(chan1_3);
+		ltq_dma_chan_on(chan2_3);
+#endif
+		cbm_p2p_turned_on = 1;
+
+	}
+	return 0;
+}
+EXPORT_SYMBOL(turn_on_DMA_p2p);
+
+
+static void reserved_ports_highest(cbm_tmu_res_t *tmu_res, int flag_set)
+{
+	static cbm_tmu_res_t high_tmu_res = {0};
+	if (flag_set) {
+		if (high_tmu_res.tmu_port < tmu_res->tmu_port)
+			high_tmu_res.tmu_port = tmu_res->tmu_port;
+		if (high_tmu_res.cbm_deq_port < tmu_res->cbm_deq_port)
+			high_tmu_res.cbm_deq_port = tmu_res->cbm_deq_port;
+
+		if ((high_tmu_res.tmu_q < tmu_res->tmu_q) && (tmu_res->tmu_q != 255))
+			high_tmu_res.tmu_q = tmu_res->tmu_q;
+		if ((high_tmu_res.tmu_sched < tmu_res->tmu_sched) && (tmu_res->tmu_q != 255))
+			high_tmu_res.tmu_sched = tmu_res->tmu_sched;
+	} else {
+		tmu_res->cbm_deq_port = high_tmu_res.cbm_deq_port;
+		tmu_res->tmu_port = high_tmu_res.tmu_port;
+		tmu_res->tmu_sched = high_tmu_res.tmu_sched;
+		tmu_res->tmu_q = high_tmu_res.tmu_q;
+	}
+
+}
+
+void init_special_ports(uint32_t tmu_port)
+{
+	struct cbm_pmac_port_map local_entry = {0};
+	local_entry.pmac = CBM_PMAC_NOT_APPL;
+	local_entry.qid_num = 0;
+	/*special mapping for direct path*/
+	local_entry.egp_port_map = BIT(tmu_port);
+	local_entry.qids[local_entry.qid_num]
+	= dqm_port_info[tmu_port].def_qid;
+	local_entry.qid_num++;
+	local_entry.egp_type = (tmu_port == DQM_CHECKSUM_ID) ? DP_F_CHECKSUM : DP_F_DIRECTPATH_RX;
+	cbm_add_to_list(&local_entry);
+}
+
+static int configure_ports(struct device_node *node)
+{
+	int count = 0;
+	struct device_node *child;
+	unsigned int config[CBM_NUM_ITEMS_DTS_CONFIG];
+	int result, res = 0;
+	unsigned int ep, flags = 0;
+	int type, num_queue;
+	int (*fp) (int);
+	struct cbm_qidt_elm qidt_set = {0};
+	struct cbm_qidt_mask qidt_mask = {0};
+	cbm_tmu_res_t tmp_res;
+	uint32_t tmu_port, tmu_queue;
+	uint32_t dma_ctrl, dma_chan;
+	uint32_t port_enable, num_desc;
+
+	struct cbm_pmac_port_map local_entry = {0};
+	count = of_get_child_count(node);
+
+	LOGF_KLOG_DEBUG("%s\r\n", node->name);
+	for_each_child_of_node(node, child) {
+		memset(&local_entry, 0, sizeof(local_entry));
+		type = keyfromstring(node->name);
+		LOGF_KLOG_DEBUG("%d\r\n", type);
+		if (type == DQM_PORTS_VALUE)
+			fp = &find_dqm_port_type;
+		else
+			fp = &find_eqm_port_type;
+		of_property_read_u32_array(child,
+		"lantiq,cbm-config", config, 1);
+		result = fp(config[0]);
+		if (result == CBM_FAILURE) {
+			LOGF_KLOG_ERROR("Invalid port number dts\r\n");
+			return CBM_FAILURE;
+		}
+		of_property_read_u32_array(child,
+		"lantiq,cbm-config",
+		config,
+		CBM_NUM_ITEMS_DTS_CONFIG);
+		LOGF_KLOG_DEBUG("%d %d %d %d %d %d\r\n",
+		config[0], config[1], config[2],
+		config[3], config[4], config[5]);
+		tmu_port = config[0];
+		tmu_queue = config[1];
+		dma_ctrl = config[2];
+		dma_chan = config[3];
+		port_enable = config[4];
+		num_desc = config[5];
+
+		if (!port_enable)
+			continue;
+		if (type == DQM_PORTS_VALUE) {
+			/*As of now tmu port and cbm port ar emapped  1 to 1*/
+			tmp_res.cbm_deq_port = tmu_port;
+			tmp_res.tmu_port = tmu_port;
+			tmp_res.tmu_sched = tmu_queue - SBID_START;
+			tmp_res.tmu_q = tmu_queue;
+			reserved_ports_highest(&tmp_res, 1);
+		}
+		memset(&qidt_set, 0, sizeof(struct cbm_qidt_elm));
+		memset(&qidt_mask, 0, sizeof(struct cbm_qidt_mask));
+		switch (result) {
+		case DQM_DMA_TYPE:
+			num_queue = 1;
+			/*check if the EP is enabled and do the config*/
+			if ((tmu_port == 22) && (cbm_rev <= CBM_SOC_REV_1)) {
+				LOGF_KLOG_INFO("skip dq22 if a11\r\n");
+				break;
+			}
+			if (tmu_port == 18)
+				num_queue = 4;
+			dqm_port_info[tmu_port]
+			.def_qid = tmu_queue;
+			dqm_port_info[tmu_port]
+			.def_schd = tmu_queue - SBID_START;
+			dqm_port_info[tmu_port]
+			.deq_info.cbm_dq_port_base
+			= CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(tmu_port, 0);
+			dqm_port_info[tmu_port]
+			.deq_info.num_desc
+			= num_desc;
+			dqm_port_info[tmu_port]
+			.deq_info.port_no
+			= tmu_port;
+			dqm_port_info[tmu_port]
+			.deq_info.dma_tx_chan
+			= dma_chan;
+			dqm_port_info[tmu_port]
+			.cbm_buf_free_base = NULL;
+			dqm_port_info[tmu_port]
+			.num_free_entries = 0;
+			if (!get_matching_flag(&flags, tmu_port)) {
+				dqm_port_info[tmu_port].egp_type
+				= flags;
+			}
+			dqm_port_info[tmu_port]
+			.dma_dt_ch
+			= dma_chan;
+			dqm_port_info[tmu_port]
+			.dma_dt_ctrl
+			= dma_ctrl;
+			dqm_port_info[tmu_port]
+			.dma_dt_init_type
+			= 1;
+			cbm_dma_port_enable(tmu_port,
+			CBM_PORT_F_DEQUEUE_PORT);
+			/*config the tmu queue and scheduler*/
+			tmu_create_flat_egress_path(1,
+			tmu_port,
+			tmu_queue - SBID_START,
+			tmu_queue,
+			num_queue);
+			#ifdef CONFIG_LTQ_DP_ACA_CSUM_WORKAROUND
+			if (/*(tmu_port == DQM_CHECKSUM_ID) ||*/ (tmu_port == DQM_DIRECTPATH_RX)) {
+			#else
+			if ((tmu_port == DQM_CHECKSUM_ID) || (tmu_port == DQM_DIRECTPATH_RX)) {
+			#endif
+				init_special_ports(tmu_port);
+			}
+			break;
+		case DQM_LDMA_TYPE:
+			dqm_port_info[tmu_port]
+			.def_qid = tmu_queue;
+			dqm_port_info[tmu_port]
+			.def_schd = tmu_queue - SBID_START;
+			dqm_port_info[tmu_port]
+			.deq_info.cbm_dq_port_base
+			= CBM_DQM_BASE + LDESC0_0_DMA_EGP_23;
+			dqm_port_info[tmu_port]
+			.deq_info.num_desc
+			 = num_desc;
+			 dqm_port_info[tmu_port]
+			.deq_info.port_no
+			= tmu_port;
+			dqm_port_info[tmu_port]
+			.deq_info.dma_tx_chan
+			= dqm_port_info[CBM_FROM_VRX318_PORT]
+			.deq_info.dma_tx_chan;
+			 dqm_port_info[tmu_port]
+			.cbm_buf_free_base = NULL;
+			dqm_port_info[tmu_port]
+			.num_free_entries = 0;
+			if (!get_matching_flag(&flags, tmu_port)) {
+				dqm_port_info[tmu_port].egp_type
+				= flags;
+			}
+			init_cbm_dqm_ldma_port(tmu_port);
+			/*config the tmu queue and scheduler*/
+			tmu_create_flat_egress_path(1,
+			tmu_port,
+			tmu_queue - SBID_START,
+			tmu_queue,
+			1);
+			break;
+		case DQM_CPU_TYPE:
+			dqm_port_info[tmu_port]
+			.def_qid = tmu_queue;
+			dqm_port_info[tmu_port]
+			.def_schd = tmu_queue - SBID_START;
+			dqm_port_info[tmu_port]
+			.deq_info.cbm_dq_port_base
+			 = CBM_DQM_BASE + CBM_DQM_CPU_PORT(tmu_port, desc0);
+			dqm_port_info[tmu_port]
+			.deq_info.num_desc
+			 = num_desc;
+			dqm_port_info[tmu_port]
+			.deq_info.port_no
+			= tmu_port;
+			dqm_port_info[tmu_port]
+			.deq_info.dma_tx_chan
+			= dma_chan;
+			dqm_port_info[tmu_port]
+			.cbm_buf_free_base
+			= CBM_DQM_BASE + CBM_DQM_CPU_PORT(tmu_port, ptr_rtn);
+			dqm_port_info[tmu_port]
+			.num_free_entries
+			= (tmu_port > 3) ? 32 : 1;
+			/*config cbm/dma port*/
+			init_cbm_dqm_cpu_port(tmu_port);
+			/*config the tmu queue and scheduler*/
+			tmu_create_flat_egress_path(1,
+			tmu_port,
+			tmu_queue - SBID_START,
+			tmu_queue, 1);
+
+
+			if (tmu_port <= 3) {
+				if (port_enable == DP_F_DEQ_CPU) {
+					flags = 0;
+					assign_port_from_DT(0, tmu_port);
+					assign_port_from_DT(DP_F_DIRECT, tmu_port);
+				} else if (port_enable == DP_F_DEQ_CPU1) {
+					flags = 0;
+					/*assign_port_from_DT(0, tmu_port);
+					assign_port_from_DT(DP_F_DIRECT, tmu_port);*/
+				} else if (port_enable == DP_F_DEQ_MPE) {
+					flags = DP_F_MPE_ACCEL;
+					assign_port_from_DT(DP_F_MPE_ACCEL, tmu_port);
+				} else if (port_enable == DP_F_DEQ_DL) {
+					flags = DP_F_DIRECTLINK;
+					assign_port_from_DT(DP_F_DIRECTLINK, tmu_port);
+				}
+				/*if(tmu_port != 0) {*/
+				/*TMU/CBM port  with pmac 0 is fixed for cpu port*/
+				#ifdef CONFIG_CBM_LS_ENABLE
+				if (port_enable == DP_F_DEQ_CPU1) {
+					local_entry.pmac = 0;
+					local_entry.egp_type = 0;
+					qidt_set.mpe2 = 0;
+					qidt_set.mpe1 = 0;
+					qidt_set.flowidl = 1;
+					qidt_set.flowidh = 0;
+					/*to receive packets with any classid*/
+					qidt_mask.classid_mask = 1;
+					qidt_mask.mpe1_mask = 1;
+					qidt_mask.mpe2_mask = 1;
+					qidt_mask.enc_mask = 1;
+					qidt_mask.dec_mask = 1;
+					cbm_qidt_set(&qidt_set,
+					&qidt_mask,
+					tmu_queue);
+				} else
+				#endif
+				if (port_enable == DP_F_DEQ_CPU) {
+					local_entry.pmac = 0;
+					local_entry.egp_type = 0;
+					qidt_set.mpe2 = 0;
+					qidt_set.mpe1 = 0;
+					qidt_set.flowidh = 0;
+					#ifdef CONFIG_CBM_LS_ENABLE
+					qidt_set.flowidl = 0;
+					#else
+					qidt_mask.flowid_lmask = 1;
+					#endif
+					/*to receive packets with any classid*/
+					qidt_mask.classid_mask = 1;
+					qidt_mask.mpe1_mask = 1;
+					qidt_mask.mpe2_mask = 1;
+					qidt_mask.enc_mask = 1;
+					qidt_mask.dec_mask = 1;
+					cbm_qidt_set(&qidt_set,
+					&qidt_mask,
+					tmu_queue);
+				} else {
+					res = get_matching_EP(tmu_port, flags, &ep);
+					if (res) {
+						local_entry.egp_type = flags;
+						local_entry.pmac = ep;
+						if (ep == CBM_PMAC_DYNAMIC) {
+							LOGF_KLOG_DEBUG("ep is dyanmic %d\r\n", tmu_port);
+							/*break;*/
+							goto ASSIGN_FLAGS;
+						}
+					} else {
+						LOGF_KLOG_ERROR("mapping missing for phys port %d\r\n", tmu_port);
+						return CBM_FAILURE;
+					}
+				}
+				local_entry.egp_port_map |= BIT(tmu_port);
+				local_entry.qids[local_entry.qid_num] = dqm_port_info[tmu_port].def_qid;
+				local_entry.qid_num++;
+				local_entry.owner = 0;
+				local_entry.dev = 0;
+				local_entry.dev_port = 0;
+				local_entry.flags = P_ALLOCATED;
+				cbm_add_to_list(&local_entry);
+			} else if ((cbm_rev > CBM_SOC_REV_1) && (tmu_port > 4)) {
+				flags = DP_F_FAST_WLAN;
+				assign_port_from_DT(DP_F_FAST_WLAN, tmu_port);
+			}
+ASSIGN_FLAGS:
+			dqm_port_info[tmu_port].egp_type
+			= flags;
+			break;
+		case DQM_SCPU_TYPE:
+			dqm_port_info[tmu_port]
+			.def_qid = tmu_queue;
+			dqm_port_info[tmu_port]
+			.def_schd = tmu_queue - SBID_START;
+			dqm_port_info[tmu_port]
+			.deq_info.cbm_dq_port_base
+			= CBM_DMADESC_BASE + CBM_DQM_DMA_DESC(tmu_port, 0);
+			dqm_port_info[tmu_port]
+			.deq_info.num_desc
+			 = num_desc;
+			dqm_port_info[tmu_port]
+			.deq_info.port_no
+			= tmu_port;
+			dqm_port_info[tmu_port]
+			.deq_info.dma_tx_chan
+			= dma_chan;
+			dqm_port_info[tmu_port]
+			.cbm_buf_free_base
+			= NULL;
+			dqm_port_info[tmu_port]
+			.num_free_entries
+			= 0;
+			if (!get_matching_flag(&flags, tmu_port)) {
+				dqm_port_info[tmu_port].egp_type
+				= flags;
+			}
+			/*config cbm/dma port*/
+			init_cbm_dqm_scpu_port(tmu_port);
+			/*config the tmu queue and scheduler*/
+			tmu_create_flat_egress_path(
+			1,
+			tmu_port,
+			tmu_queue - SBID_START,
+			tmu_queue,
+			1);
+			/*LRO*/
+			qidt_set.flowidh = 1;
+			qidt_mask.mpe1_mask = 1;
+			qidt_mask.mpe2_mask = 1;
+			qidt_mask.enc_mask = 1;
+			qidt_mask.dec_mask = 1;
+			qidt_mask.flowid_lmask = 1;
+			/*to receive packets with any classid*/
+			qidt_mask.classid_mask = 1;
+			cbm_qidt_set(
+			&qidt_set,
+			&qidt_mask,
+			tmu_queue);
+			break;
+		case EQM_DMA_TYPE:
+			/*check if the EP is enabled and do the config*/
+			if (dma_chan) {
+				eqm_port_info[tmu_port]
+				.num_eq_ports = 2;
+				eqm_port_info[tmu_port].eq_info
+				.cbm_eq_port_base
+				= CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(tmu_port, 0, 1);
+				eqm_port_info[tmu_port].eq_info
+				.port_no
+				= tmu_port;
+				eqm_port_info[tmu_port]
+				.port_type = port_enable;
+				eqm_port_info[tmu_port].eq_info
+				.num_desc
+				= num_desc;
+				/*if a21, change the jumbo dma channel number.*/
+				if ((cbm_rev > CBM_SOC_REV_1) && (tmu_queue == 1)) {
+					LOGF_KLOG_INFO("%s %d %d %d %d %d %d\r\n", __func__,
+					config[0], config[1], config[2],
+					config[3], config[4], config[5]);
+					dma_ctrl = (dma_ctrl == 16) ? 6 : 11;
+				}
+				eqm_port_info[tmu_port]
+				.dma_dt_jum_ch
+				= dma_ctrl;
+				eqm_port_info[tmu_port]
+				.dma_dt_ctrl
+				= tmu_queue;
+				eqm_port_info[tmu_port]
+				.dma_dt_init_type
+				|= 2;
+				cbm_dma_port_enable(
+				tmu_port,
+				CBM_PORT_F_JUMBO_BUF);
+			} else {
+				eqm_port_info[tmu_port]
+				.num_eq_ports = 1;
+				eqm_port_info[tmu_port].eq_info
+				.cbm_eq_port_base
+				= CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(tmu_port, 0, 0);
+				eqm_port_info[tmu_port].eq_info
+				.port_no
+				= tmu_port;
+				eqm_port_info[tmu_port]
+				.port_type = port_enable;
+				eqm_port_info[tmu_port].eq_info
+				.num_desc
+				= num_desc;
+				/*if a21, change the standard dma channel number.*/
+				if ((cbm_rev > CBM_SOC_REV_1) && (tmu_queue == 1)) {
+					LOGF_KLOG_INFO("%s %d %d %d %d %d %d\r\n", __func__,
+					config[0], config[1], config[2],
+					config[3], config[4], config[5]);
+					dma_ctrl = (dma_ctrl == 0) ? 0 : 5;
+				}
+				eqm_port_info[tmu_port]
+				.dma_dt_std_ch
+				= dma_ctrl;
+				eqm_port_info[tmu_port]
+				.dma_dt_ctrl
+				= tmu_queue;
+				eqm_port_info[tmu_port]
+				.dma_dt_init_type
+				|= 4;
+				cbm_dma_port_enable(
+				tmu_port,
+				CBM_PORT_F_STANDARD_BUF);
+			}
+			break;
+		case EQM_CPU_TYPE:
+			eqm_port_info[tmu_port]
+			.num_eq_ports = 1;
+			eqm_port_info[tmu_port].eq_info
+			.cbm_eq_port_base
+			= CBM_EQM_BASE + CBM_EQM_CPU_PORT(tmu_port, desc0);
+			eqm_port_info[tmu_port].eq_info
+			.port_no
+			= tmu_port;
+			eqm_port_info[tmu_port]
+			.port_type = port_enable;
+			eqm_port_info[tmu_port].eq_info
+			.num_desc
+			= num_desc;
+			init_cbm_eqm_cpu_port(tmu_port);
+			break;
+		case EQM_TOE_TYPE:
+			eqm_port_info[tmu_port]
+			.num_eq_ports = 1;
+			eqm_port_info[tmu_port].eq_info
+			.cbm_eq_port_base
+			= CBM_DMADESC_BASE + CBM_EQM_DMA_DESC(tmu_port, 0, 0);
+			eqm_port_info[tmu_port].eq_info
+			.port_no
+			= tmu_port;
+			eqm_port_info[tmu_port]
+			.port_type = port_enable;
+			cbm_dma_toe_port_enable(tmu_port, CBM_PORT_F_STANDARD_BUF);
+			break;
+		case EQM_VRX318_TYPE:
+			/*VRX318 supports only std size packets at this time*/
+			eqm_port_info[tmu_port]
+			.num_eq_ports = 1;
+			eqm_port_info[tmu_port].eq_info
+			.cbm_eq_port_base
+			= CBM_EQM_BASE + CBM_EQM_CPU_PORT(tmu_port, desc0);
+			eqm_port_info[tmu_port].eq_info
+			.port_no
+			= tmu_port;
+			eqm_port_info[tmu_port].eq_info
+			.num_desc
+			= 32;
+			eqm_port_info[tmu_port]
+			.port_type = port_enable;
+			cbm_dma_vrx318_port_enable(tmu_port, CBM_PORT_F_STANDARD_BUF);
+			break;
+		default:
+			LOGF_KLOG_ERROR("%s wrong key", __func__);
+		}
+	}
+	return CBM_SUCCESS;
+}
+static int cbm_xrx500_probe(struct platform_device *pdev)
+{
+	int ret = 0;
+	struct resource irqres[CBM_NUM_INTERRUPTS];
+	struct device_node *node = pdev->dev.of_node, *child;
+	struct clk *clk;
+	struct resource *res[CBM_NUM_BASEADDR_IN_DTS];
+	int i;
+	int count;
+	unsigned long sys_flag;
+	struct clk *ppe_clk;
+
+
+	/** init spin lock */
+	spin_lock_init(&cbm_qidt_lock);
+	spin_lock_init(&cbm_buff_lock);
+	spin_lock_init(&cbm_queue_flush_lock);
+	spin_lock_init(&cbm_port_mapping);
+
+
+	#if 1
+	/* load the memory ranges */
+	for (i = 0; i < CBM_NUM_BASEADDR_IN_DTS; i++) {
+		res[i] = platform_get_resource(pdev, IORESOURCE_MEM, i);
+		if (!res[i]) {
+			LOGF_KLOG_DEV_ERROR(&pdev->dev, "failed to get resources %d\n", i);
+			return -ENOENT;
+		}
+	}
+	#endif
+	g_cbm_ctrl.id = pdev->id;
+	g_cbm_ctrl.dev = &pdev->dev;
+	g_cbm_ctrl.jumbo_size_mask = (CONFIG_CBM_JBO_PKT_SIZE == 0x2000) ? 0xffffe000 : 0xffffc000;
+
+	g_base_addr.tmu_addr_base = devm_ioremap_resource(&pdev->dev, res[0]);
+	g_base_addr.cbm_addr_base = devm_ioremap_resource(&pdev->dev, res[1]);
+	g_base_addr.cbm_qidt_addr_base = devm_ioremap_resource(&pdev->dev, res[2]);
+	g_base_addr.cbm_qeqcnt_addr_base = devm_ioremap_resource(&pdev->dev, res[4]);
+	g_base_addr.cbm_qdqcnt_addr_base = devm_ioremap_resource(&pdev->dev, res[5]);
+	g_base_addr.cbm_ls_addr_base = devm_ioremap_resource(&pdev->dev, res[6]);
+	g_base_addr.cbm_eqm_addr_base = devm_ioremap_resource(&pdev->dev, res[7]);
+	g_base_addr.cbm_dqm_addr_base = devm_ioremap_resource(&pdev->dev, res[8]);
+	g_base_addr.fsqm0_addr_base = devm_ioremap_resource(&pdev->dev, res[9]);
+	g_base_addr.fsqm1_addr_base = devm_ioremap_resource(&pdev->dev, res[10]);
+	g_base_addr.cbm_dmadesc_addr_base = devm_ioremap_resource(&pdev->dev, res[11]);
+
+	if (!g_base_addr.tmu_addr_base || !g_base_addr.cbm_addr_base  || !g_base_addr.cbm_qidt_addr_base ||
+			!g_base_addr.cbm_qeqcnt_addr_base  || !g_base_addr.cbm_qdqcnt_addr_base ||
+			!g_base_addr.cbm_ls_addr_base || !g_base_addr.cbm_eqm_addr_base ||
+			!g_base_addr.cbm_dqm_addr_base || !g_base_addr.fsqm0_addr_base ||
+			!g_base_addr.fsqm1_addr_base || !g_base_addr.cbm_dmadesc_addr_base)  {
+		LOGF_KLOG_DEV_ERROR(&pdev->dev, "failed to request and remap io ranges\n");
+		return -ENOMEM;
+	}
+	store_bufreq_baseaddr();
+	ret = of_irq_to_resource_table(node, irqres, CBM_NUM_INTERRUPTS);
+	if (ret != CBM_NUM_INTERRUPTS) {
+				LOGF_KLOG_DEV_ERROR(&pdev->dev,
+						"failed to get irq for CBM");
+				return -ENODEV;
+	}
+	g_cbm_irq[0] = irqres[0].start;
+	#ifdef ENABLE_LL_DEBUG
+	g_cbm_irq[2] = irqres[2].start;
+	#endif
+	for_each_present_cpu(i) {
+		if (cpu_online(i)) {
+			set_bit(i, &g_cpu_port_alloc);
+			g_cbm_irq[i+1] = irqres[i+1].start;
+		}
+	}
+#ifndef CONFIG_USE_EMULATOR
+	/* get the clock */
+	clk = clk_get(&pdev->dev, NULL);
+	if (IS_ERR(clk)) {
+		LOGF_KLOG_DEV_ERROR(&pdev->dev, "Failed to get clock\n");
+		return PTR_ERR(clk);
+	}
+	clk_enable(clk);
+#endif
+
+	spin_lock_irqsave(&cbm_qidt_lock, sys_flag);
+	for (i = 0; i < 0x1000; i++) {
+		g_cbm_qidt_mirror[i].qidt_shadow = 0xFFFFFFFF;
+		xrx500_cbm_w32((CBM_QIDT_BASE + i * 4), 0xFFFFFFFF);
+	}
+	spin_unlock_irqrestore(&cbm_qidt_lock, sys_flag);
+#ifdef CONFIG_SOC_GRX500_A21
+	cbm_rev = 2;
+#endif
+	LOGF_KLOG_INFO("%d\r\n", cbm_rev);	/* Init the TMU first*/
+	tmu_ll_init((long unsigned int)g_base_addr.tmu_addr_base);
+
+	cbm_hw_init();
+/*configure p2p channels*/
+	setup_DMA_p2p();
+	#if 1
+	count = of_get_child_count(node);
+	if (count) {
+		LOGF_KLOG_DEBUG("node count %d\r\n", count);
+		for_each_child_of_node(node, child) {
+			configure_ports(child);
+		}
+	}
+	#endif
+	/*Initialise the DQ port 0 as the cbm buffer free API uses DQ port 0 for freeing,
+	but do not initialise the TMU queue or look up table for this.
+	The CPU traffic id redirected to DQ2 via device tree entry*/
+	for_each_online_cpu(i)
+		init_cbm_dqm_cpu_port(i);
+	/*Enable the EQM and DQM contollers*/
+	xrx500_cbm_w32((CBM_DQM_BASE + CBM_DQM_CTRL), 0x11);
+	for (i = 0; i < DEFAULT_WAIT_CYCLES; i++) {
+		if ((xrx500_cbm_r32(CBM_DQM_BASE + CBM_DQM_CTRL)
+		& CBM_DQM_CTRL_DQM_ACT_MASK) != 0)
+			LOGF_KLOG_DEBUG("cbm dqm init successfully\n");
+	}
+	init_cbm_ls();
+	xrx500_cbm_w32((CBM_EQM_BASE + CBM_EQM_CTRL), 0x11);
+	for (i = 0; i < DEFAULT_WAIT_CYCLES; i++) {
+		if ((xrx500_cbm_r32(CBM_EQM_BASE + CBM_EQM_CTRL)
+		& CBM_EQM_CTRL_EQM_ACT_MASK) != 0) {
+			LOGF_KLOG_DEBUG("cbm eqm init successfully\n");
+			break;
+		}
+	}
+#if 1
+	for_each_online_cpu(i)
+		tasklet_init(&cbm_tasklet[i],
+			do_cbm_tasklet, (unsigned long) i);
+#endif
+#ifdef ENABLE_LL_DEBUG
+		tasklet_init(&cbm_debug_tasklet,
+			do_cbm_debug_tasklet, (unsigned long) i);
+#endif
+#ifdef CONFIG_CBM_LS_ENABLE
+	init_dummy_netdev(&g_cbm_ctrl.dummy_dev);
+	netif_napi_add(&g_cbm_ctrl.dummy_dev,
+				&g_cbm_ctrl.napi, do_dq_cbm_poll, 20);
+	napi_enable(&g_cbm_ctrl.napi);
+#endif
+	/* Disable all the EQM and DQM interrupts */
+	eqm_intr_ctrl(0);
+#ifndef CONFIG_CBM_LS_ENABLE
+	dqm_intr_ctrl(0);
+#endif
+	/* Enable all the LS interrupts */
+	ls_intr_ctrl(0xFF0000);
+	cbm_proc_install(NULL);
+	store_rcnt_baseaddr();
+	/*set the Ingress port delay before enqueue*/
+	ppe_clk = clk_get_ppe();
+	pr_info("CBM Clock: %ldHz \n",
+	clk_get_rate(ppe_clk));
+	if ((cbm_rev > CBM_SOC_REV_1) /*&& (clk_get_rate(ppe_clk) > 300000000)*/) {
+		pr_info("EQM delay Enabled\n");
+		cbm_queue_delay_enable_set(1, 0);
+	}
+	/*setup the DMA channels*/
+	#if 1
+	for (i = 0; i < CBM_PORT_MAX; i++) {
+		switch (dqm_port_info[i].dma_dt_init_type) {
+		case 1:
+		cbm_dequeue_dma_port_init(i,
+		dqm_port_info[i].dma_dt_ctrl,
+		dqm_port_info[i].dma_dt_ch,
+		0);
+		break;
+		default:
+		break;
+		}
+	}
+	for (i = 0; i < CBM_EQM_PORT_MAX; i++) {
+		switch (eqm_port_info[i].dma_dt_init_type) {
+		case 2:
+		cbm_enqueue_dma_port_init(
+			i,
+			eqm_port_info[i].dma_dt_ctrl,
+			0,
+			eqm_port_info[i].dma_dt_jum_ch,
+			CBM_PORT_F_JUMBO_BUF);
+			/*cbm_dma_port_enable(
+			i,
+			CBM_PORT_F_JUMBO_BUF);*/
+		break;
+		case 4:
+		cbm_enqueue_dma_port_init(
+			i,
+			eqm_port_info[i].dma_dt_ctrl,
+			eqm_port_info[i].dma_dt_std_ch,
+			0,
+			CBM_PORT_F_STANDARD_BUF);
+			/*cbm_dma_port_enable(
+			i,
+			CBM_PORT_F_STANDARD_BUF);*/
+		break;
+		case 6:
+		cbm_enqueue_dma_port_init(
+			i,
+			eqm_port_info[i].dma_dt_ctrl,
+			0,
+			eqm_port_info[i].dma_dt_jum_ch,
+			CBM_PORT_F_JUMBO_BUF);
+			/*cbm_dma_port_enable(
+			i,
+			CBM_PORT_F_JUMBO_BUF);*/
+		cbm_enqueue_dma_port_init(
+			i,
+			eqm_port_info[i].dma_dt_ctrl,
+			eqm_port_info[i].dma_dt_std_ch,
+			0,
+			CBM_PORT_F_STANDARD_BUF);
+			/*cbm_dma_port_enable(
+			i,
+			CBM_PORT_F_STANDARD_BUF);*/
+		break;
+		default:
+		break;
+		}
+	}
+	#endif
+	LOGF_KLOG_INFO("%s", "CBM: Init Done !!");
+	return 0;
+
+
+}
+
+static int	cbm_xrx500_release(struct platform_device *pdev)
+{
+	return 0;
+}
+static const struct of_device_id cbm_xrx500_match[] = {
+	{ .compatible = "lantiq,cbm-xrx500" },
+	{},
+};
+
+static struct platform_driver cbm_xrx500_driver = {
+	.probe = cbm_xrx500_probe,
+	.remove = cbm_xrx500_release,
+	.driver = {
+				.name = "cbm-xrx500",
+				.owner = THIS_MODULE,
+				.of_match_table = cbm_xrx500_match,
+		},
+};
+#if 0
+module_platform_driver(cbm_xrx500_driver);
+#else
+
+int __init cbm_xrx500_init(void)
+{
+	return platform_driver_register(&cbm_xrx500_driver);
+}
+
+arch_initcall(cbm_xrx500_init);
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/cbm.h b/drivers/net/ethernet/lantiq/cbm/cbm.h
new file mode 100755
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/cbm.h
@@ -0,0 +1,681 @@
+#ifndef __CBM_COMMON_H__
+#define __CBM_COMMON_H__
+#include <linux/unistd.h>
+#include <linux/interrupt.h>
+#include <linux/module.h>
+#include <linux/io.h>
+#include <linux/platform_device.h>
+#include <linux/string.h>
+#include <linux/slab.h>
+#include <linux/proc_fs.h>
+#include <linux/init.h>
+#include <linux/sched.h>
+#include <linux/kthread.h>
+#include <linux/err.h>
+#include <linux/types.h>
+#include <linux/kernel.h>
+#include <linux/sysctl.h>
+#include <linux/delay.h>
+#include <linux/err.h>
+#include <linux/clk.h>
+#include <linux/of.h>
+#include <linux/of_irq.h>
+#include <linux/irq.h>
+#include <linux/seq_file.h>
+#include <linux/semaphore.h>
+
+
+#include <lantiq.h>
+#include <lantiq_soc.h>
+#include <net/lantiq_cbm.h>
+#include <linux/netdevice.h>
+#include <net/lantiq_cbm_api.h>
+#include <net/datapath_api.h>
+#include "cbm.h"
+#include "reg/cbm_ls.h"
+#include "reg/cbm.h"
+#include "reg/cbm_dqm.h"
+#include "reg/cbm_eqm.h"
+#include "reg/cbm_desc64b.h"
+#include "reg/fsqm.h"
+#include <net/drv_tmu_ll.h>
+
+//#define CBM_DEBUG 1
+//#define CBM_DEBUG_LVL_1 1
+
+/************************
+* ENUM
+***********************/
+enum {
+	SPREAD_WRR = 0,
+	SPREAD_FLOWID = 1,
+	SPREAD_MAX,
+};
+
+enum {
+	CBM1_INT_VPE0 = 174,
+	CBM1_INT_VPE1 = 175,
+	CBM1_INT_VPE2 = 176,
+	CBM1_INT_VPE3 = 177,
+	CBM2_INT_VPE0 = 178,
+	CBM2_INT_VPE1 = 179,
+	CBM2_INT_VPE2 = 180,
+	CBM2_INT_VPE3 = 181,
+};
+enum {
+	DQM_DMA = 1,
+	EQM_DMA = 2
+};
+enum {
+	SBA0_STD = 1,
+	SBA0_JBO = 2,
+	SBA1_STD = 3,
+	SBA1_JBO = 4,
+};
+enum CBM_EGP_TYPE {
+	CPU_EG_PORT = 0,
+	MPE_EG_PORT,
+	WAVE500_PORT,
+	LRO_PORT,
+	GSWIPL_LP_P1,
+	GSWIPL_LP_P2,
+	GSWIPL_LP_P3,
+	GSWIPL_LP_P4,
+	GSWIPL_LP_P5,
+	GSWIPL_LP_P6,
+	GSWIPL_HP_P1,
+	GSWIPL_HP_P2,
+	GSWIPL_HP_P3,
+	GSWIPL_HP_P4,
+	GSWIPL_HP_P5,
+	GSWIPL_HP_P6,
+	/*    GSWIPR_VRX318,*/
+	GSWIPR_REDIRECT,
+	GSWIPR_ETHWAN,
+	VRX318_PORT,
+	MAX_DQM_PORT,
+};
+
+/*! PMAC port flag */
+enum FREE_FLAG {
+	P_FREE = 0,         /*! The port is free */
+	P_ALLOCATED,      /*! the port is already allocated to some driver, but not registered or no need to register at all.\n
+							 for example, LRO/CAPWA, only need to allocate, but no need to register */
+	P_REGISTERED,     /*! Registered already. */
+
+	P_FLAG_NO_VALID   /*! Not valid flag */
+};
+
+enum DQM_PORT_TYPE {
+	DQM_CPU_START_ID = 0,
+	DQM_CPU_END_ID = 4,
+	DQM_SCPU_START_ID = 5,
+	DQM_SCPU_END_ID = 5,
+	DQM_DMA_START_ID = 6,
+	DQM_DMA_END_ID = 22,
+	DQM_LDMA_START_ID = 23,
+	DQM_LDMA_END_ID = 23,
+	DQM_WAVE_START_ID = 24,
+	DQM_WAVE_END_ID = 26,
+	DQM_CHECKSUM_ID = 20,
+	DQM_DIRECTPATH_RX = 21
+};
+enum EQM_PORT_TYPE {
+	EQM_CPU_START_ID = 0,
+	EQM_CPU_END_ID = 3,
+	EQM_DMA_START_ID = 5,
+	EQM_DMA_END_ID = 8,
+};
+enum EQM_DQM_PORT_TYPE {
+	DQM_CPU_TYPE = 0,
+	DQM_SCPU_TYPE = 5,
+	DQM_DMA_TYPE = 6,
+	DQM_LDMA_TYPE = 23,
+	DQM_WAVE_TYPE = 24,
+	EQM_CPU_TYPE = 100,
+	EQM_DMA_TYPE = 200,
+	EQM_TOE_TYPE = 9,
+	EQM_VRX318_TYPE = 15,
+};
+#if 0
+enum EQM_DQM_TYPE {
+	DQM_CPU = 0,
+	DQM_SCPU,
+	DQM_DMA,
+	DQM_LDMA,
+	EQM_CPU,
+	EQM_DMA,
+	EQM_CPU,
+};
+#endif
+
+
+
+/**************************************************
+*
+* Macros
+*
+***************************************************/
+
+#define CONFIG_BRONZE_RTL307 1
+#if 0
+#define CONFIG_CBM_JBO_BUF_BASE 0x21F00000
+#define CONFIG_CBM_JBO_BUF_SIZE 0x100000
+#endif
+/**************************
+*Address Calculation
+ **************************/
+#define FSQM_LLT_RAM(fsqm_base, idx)    ((volatile uint32_t *)((fsqm_base) + RAM + ((idx) << 2)))
+#define FSQM_RCNT(fsqm_base, idx)       ((volatile uint32_t *)((fsqm_base) + RCNT + ((idx) << 2)))
+#define CBM_EQM_CPU_PORT(idx, reg)      (CFG_CPU_IGP_0 + (idx)*0x1000 + (offsetof(struct cbm_eqm_cpu_igp_reg, reg)))
+#define CBM_EQM_DMA_PORT(idx, reg)       (CFG_DMA_IGP_5 + (idx)*0x1000 + (offsetof(struct cbm_eqm_dma_igp_reg, reg)))
+#define CBM_DQM_CPU_PORT(idx, reg)       (CFG_CPU_EGP_0 + (idx)*0x1000 + (offsetof(struct cbm_dqm_cpu_egp_reg, reg)))
+#define CBM_DQM_DMA_PORT(idx, reg)       (CFG_DMA_EGP_6 + (idx)*0x1000 + (offsetof(struct cbm_dqm_dma_egp_reg, reg)))
+#define CBM_LS_PORT(idx, reg)            (LS_DESC_DW0_PORT0 + (idx)*0x100 + (offsetof(struct cbm_ls_reg, reg)))
+#define CBM_IOCU_ADDR(addr)             (((addr) & 0x1FFFFFFF) | 0xC0000000)
+#define CBM_INT_LINE(idx, reg)           ((idx)*0x40 + offsetof(struct cbm_int_reg, reg))
+#define CBM_INT_LINE_DQM(idx, reg)           ((idx)*0x40 + offsetof(struct cbm_int_reg, reg))
+#define CBM_EQM_DMA_DESC(pid, des_idx, jbo_flag)  (SDESC0_0_IGP_5 + ((pid)-5)*0x1000 + (des_idx)*16 + (jbo_flag)*0x800)
+#define CBM_DQM_DMA_DESC(pid, des_idx)            (DESC0_0_EGP_5  + ((pid)-5)*0x1000 + (des_idx)*16)
+#define CBM_EQM_LDMA_DESC(des_idx)	(SDESC0_0_IGP_15 + (des_idx) * 8)
+
+
+/***********************
+  * Default  Value Definition
+  **********************/
+#define DEFAULT_CPU_HWM         256
+#define DEFAULT_DMA_HWM         128
+#define DEFAULT_LS_QTHH         7
+#define DEFAULT_LS_OVFL_CNT     0x2000
+#define DEFAULT_LS_PORT_WEIGHT  2
+
+#define CPU_EQM_PORT_NUM        4
+#define SCPU_EQM_PORT_NUM       1
+#define DMA_EQM_PORT_NUM        10
+#define CPU_DQM_PORT_NUM        4
+#define SCPU_DQM_PORT_NUM       1
+#define DMA_DQM_PORT_NUM        17
+#define LS_PORT_NUM             4
+#define CBM_MAX_INT_LINES       8
+#define CBM_DMA_DESC_OWN        1/*belong to DMA*/
+#define CBM_DMA_DATA_OFFSET     128
+#define DEFAULT_WAIT_CYCLES     20
+#if 0
+#define CBM_QIDT_MODULE_BASE    0x1E720000
+#if defined(BRONZE_RTL307)
+#define CBM_QEQCNTR_BASE        0x1E750000/*0x1E781000  //0x1E750000*/
+#define CBM_QDQCNTR_BASE        0x1E750800/*0x1E7C1000  //0x1E750800*/
+#else
+#define CBM_QEQCNTR_BASE        0x1E781000/*0x1E750000*/
+#define CBM_QDQCNTR_BASE        0x1E7C1000/*0x1E750800*/
+#endif
+#endif
+#define CBM_QEQCNTR_SIZE        0x400
+#define CBM_QDQCNTR_SIZE        0x400
+#define CBM_BASIC_JBO_NUM       100
+#define CBM_BASIC_STD_NUM       600
+#define SBID_START 16
+#define CBM_SUCCESS             0
+#define CBM_FAILURE             -1
+#define CBM_NOTFOUND             2
+#define CBM_RESCHEDULE          4
+#define CBM_PORT_MAX			64
+#define CBM_EQM_PORT_MAX		16
+#define CBM_DQM_DMA		1
+#define PMAC_MAX_NUM 16
+#define CBM_JUMBO_BUF_SPLIT_GUARD_BAND	16
+#define CBM_MAX_RCNT 7
+#define MAX_TMU_QUEUES 256
+
+/*************************
+  * Structure definition
+ *************************/
+#ifdef CONFIG_CPU_BIG_ENDIAN
+struct flowid_desc {
+	uint8_t row:5;
+	uint8_t col:3;
+};
+#else
+struct flowid_desc {
+	uint8_t col:3;
+	uint8_t row:5;
+};
+#endif
+
+
+#ifdef CONFIG_CPU_LITTLE_ENDIAN
+struct dma_desc{
+	/* DWORD 0 */
+	uint32_t dest_sub_if_id:15;
+	uint32_t eth_type:2;
+	uint32_t flow_id:8;
+	uint32_t tunnel_id:4;
+	uint32_t resv0:3;
+
+	/* DWORD 1 */
+	uint32_t classid:4;
+	uint32_t resv1:4;
+	uint32_t ep:4;
+	uint32_t color:2;
+	uint32_t mpe1:1;
+	uint32_t mpe2:1;
+	uint32_t enc:1;
+	uint32_t dec:1;
+	uint32_t nat:1;
+	uint32_t tcp_err:1;
+	uint32_t session_id:12;
+
+	/*DWORD 2 */
+	uint32_t data_ptr;
+
+	/*DWORD 3*/
+	uint32_t data_len:16;
+	uint32_t mpoa_mode:2;
+	uint32_t mpoa_pt:1;
+	uint32_t qid:4;
+	uint32_t byte_offset:3;
+	uint32_t pdu_type:1;
+	uint32_t dic:1;
+	uint32_t eop:1;
+	uint32_t sop:1;
+	uint32_t c:1;
+	uint32_t own:1;
+
+};
+
+#else
+struct dma_desc{
+	/* DWORD 1 */
+	uint32_t session_id:12;
+	uint32_t tcp_err:1;
+	uint32_t nat:1;
+	uint32_t dec:1;
+	uint32_t enc:1;
+	uint32_t mpe2:1;
+	uint32_t mpe1:1;
+	uint32_t color:2;
+	uint32_t ep:4;
+	uint32_t resv1:4;
+	uint32_t classid:4;
+
+	/* DWORD 0 */
+	uint32_t resv0:3;
+	uint32_t tunnel_id:4;
+	uint32_t flow_id:8;
+	uint32_t eth_type:2;
+	uint32_t dest_sub_if_id:15;
+
+
+
+	/*DWORD 3*/
+	uint32_t own:1;
+	uint32_t c:1;
+	uint32_t sop:1;
+	uint32_t eop:1;
+	uint32_t dic:1;
+	uint32_t pdu_type:1;
+	uint32_t byte_offset:3;
+	uint32_t qid:4;
+	uint32_t mpoa_pt:1;
+	uint32_t mpoa_mode:2;
+	uint32_t data_len:16;
+
+	/*DWORD 2 */
+	uint32_t data_ptr;
+
+};
+
+struct cbm_ctrl {
+	int id;
+	struct device *dev;
+	struct net_device dummy_dev;
+	struct napi_struct napi;
+	u32 jumbo_size_mask;
+};
+
+#endif
+
+
+struct cbm_desc_list{
+	struct cbm_desc desc;
+	struct cbm_desc_list *next;
+};
+
+struct cbm_qidt_mask {
+	uint32_t classid_mask;
+	uint32_t ep_mask;
+	uint32_t mpe1_mask;
+	uint32_t mpe2_mask;
+	uint32_t enc_mask;
+	uint32_t dec_mask;
+	uint32_t flowid_lmask;
+	uint32_t flowid_hmask;
+};
+
+struct cbm_qidt_elm {
+	uint32_t clsid;
+	uint32_t ep;
+	uint32_t mpe1;
+	uint32_t mpe2;
+	uint32_t enc;
+	uint32_t dec;
+	uint32_t flowidl;
+	uint32_t flowidh;
+};
+struct cbm_eqm_cpu_igp_reg{
+	uint32_t cfg;
+	uint32_t wm;
+	uint32_t pocc;
+	uint32_t eqpc;
+	struct cbm_desc disc;
+	uint32_t irncr;  /*Interrupt Capture :  Status + Clear */
+	uint32_t irnicr;
+	uint32_t irnen;  /*Interrupt Enable Mask */
+	uint32_t resv0[2];
+	uint32_t rcnt;
+	uint32_t dicc;
+	uint32_t rcntc;
+	uint32_t nsbpc;
+	uint32_t njbpc;
+	uint32_t resv1[1];
+	uint32_t dcntr;
+	uint32_t resv2[12];
+	uint32_t new_sptr;
+	uint32_t resv3[3];
+	uint32_t new_jptr;
+	uint32_t resv4[27];
+
+	struct cbm_desc desc0;
+	struct cbm_desc desc1;
+};
+
+struct cbm_eqm_dma_igp_reg{
+	uint32_t cfg;
+	uint32_t wm;
+	uint32_t pocc;
+	uint32_t eqpc;
+	struct cbm_desc disc;
+	uint32_t irncr;
+	uint32_t irnicr;
+	uint32_t irnen;
+	uint32_t resv0;
+	uint32_t dptr;
+	uint32_t resv1;
+	uint32_t dicc;
+};
+
+struct cbm_dqm_cpu_egp_reg{
+	uint32_t cfg;
+	uint32_t dqpc;
+	uint32_t resv0[6];
+	uint32_t irncr;
+	uint32_t irnicr;
+	uint32_t irnen;
+	uint32_t resv1;
+	uint32_t dptr;
+	uint32_t bprc;
+	uint32_t resv2[18];
+	uint32_t ptr_rtn;
+	uint32_t resv3[31];
+	struct cbm_desc desc0;
+	struct cbm_desc desc1;
+};
+
+struct cbm_dqm_dma_egp_reg{
+	uint32_t cfg;
+	uint32_t dqpc;
+	uint32_t resv0[6];
+	uint32_t irncr;
+	uint32_t irnicr;
+	uint32_t irnen;
+	uint32_t resv1;
+	uint32_t dptr;
+};
+
+struct cbm_ls_reg{
+	struct cbm_desc desc;
+	uint32_t ctrl;
+	uint32_t status;
+	uint32_t resv0[2];
+	struct cbm_desc qdesc[7];
+};
+
+struct cbm_int_reg{
+	uint32_t cbm_irncr;
+	uint32_t cbm_irnicr;
+	uint32_t cbm_irnen;
+	uint32_t resv0[1];
+	uint32_t igp_irncr;
+	uint32_t igp_irnicr;
+	uint32_t igp_irnen;
+	uint32_t resv1[1];
+	uint32_t egp_irncr;
+	uint32_t egp_irnicr;
+	uint32_t egp_irnen;
+};
+
+struct flowID {
+#ifdef CONFIG_CPU_LITTLE_ENDIAN
+
+	uint32_t q0:4;
+	uint32_t q1:4;
+	uint32_t q2:4;
+	uint32_t q3:4;
+	uint32_t q4:4;
+	uint32_t q5:4;
+	uint32_t q6:4;
+	uint32_t q7:4;
+
+#else
+
+	uint32_t q7:4;
+	uint32_t q6:4;
+	uint32_t q5:4;
+	uint32_t q4:4;
+	uint32_t q3:4;
+	uint32_t q2:4;
+	uint32_t q1:4;
+	uint32_t q0:4;
+};
+#endif
+struct cbm_egp_tmu_map {
+	uint32_t egp_type;
+	uint32_t qid;/* qid value*/
+	/*uint32_t q_num;*//*total queue number*/
+	uint32_t inc;/*increase qid with class id*/
+	struct cbm_qidt_elm qidt_elm;
+	struct cbm_qidt_mask qidt_mask;
+};
+struct cbm_egp_map {
+	uint32_t epg;
+	uint32_t pmac;
+	uint32_t port_type;
+};
+/*! CBM port information*/
+struct cbm_dqm_port_info {
+	uint32_t dma_ch;
+	uint32_t dma_dt_ch;
+	uint32_t dma_dt_ctrl;
+	uint32_t dma_dt_init_type;
+	uint32_t def_qid;
+	uint32_t def_schd;
+	uint32_t def_tmu_pid;
+	void		*cbm_buf_free_base;
+	uint32_t	num_free_entries;/*!< Number of Free Port entries */
+	cbm_dq_info_t	deq_info;
+	uint32_t egp_type;
+};
+
+struct cbm_eqm_port_info {
+	uint32_t port_type;
+	int		num_eq_ports;/*!< Number of Enqueue Ports */
+	cbm_eq_info_t	eq_info;/*!<  EQ port info */
+	uint32_t dma_dt_std_ch;
+	uint32_t dma_dt_jum_ch;
+	uint32_t dma_dt_ctrl;
+	uint32_t dma_dt_init_type;
+};
+
+struct cbm_pmac_port_map{
+	enum FREE_FLAG  flags;/*! port flag */
+	struct module *owner;
+	struct net_device *dev;
+	uint32_t dev_port;
+	uint32_t pmac;
+	uint32_t egp_port_map;/*bit map to egp port*/
+	uint32_t qid_num;/*queue numbers allocated to that pmac port*/
+	uint32_t qids[16];/*qid array*/
+	uint32_t egp_type;/* e.g. DP_F_FAST_ETH_LAN/DP_F_FAST_ETH_WAN/DP_F_DIRECT/High priority/Low priority*/
+	struct list_head list;
+
+};
+struct rcnt_idx {
+	uint32_t fsqm_idx;
+	uint32_t frm_size;
+	uint32_t rcnt_base;
+	uint32_t buf_addr;
+};
+
+struct cbm_cntr_mode {
+void __iomem *reg;
+uint32_t msel_mask;
+uint32_t msel_pos;
+uint32_t qen_mask;
+uint32_t qen_pos;
+void (*reset_counter)(void);
+};
+
+struct cbm_base_addr {
+	void __iomem *tmu_addr_base;
+	void __iomem *cbm_addr_base;
+	void __iomem *fsqm0_addr_base;
+	void __iomem *fsqm1_addr_base;
+	void __iomem *cbm_eqm_addr_base;
+	void __iomem *cbm_dqm_addr_base;
+	void __iomem *cbm_ls_addr_base;
+	void __iomem *cbm_qidt_addr_base;
+	void __iomem *cbm_qeqcnt_addr_base;
+	void __iomem *cbm_qdqcnt_addr_base;
+	void __iomem *cbm_dmadesc_addr_base;
+};
+
+struct cbm_buff_info {
+	unsigned int std_buf_addr;
+	unsigned int jbo_buf_addr;
+	unsigned int std_buf_size;
+	unsigned int jbo_buf_size;
+	unsigned int std_frm_num;
+	unsigned int jbo_frm_num;
+	unsigned int std_frm_size;
+	unsigned int jbo_frm_size;
+	unsigned int std_fsqm_idx;
+	unsigned int jbo_fsqm_idx;
+};
+
+struct cbm_jumbo_divide {
+int32_t jumbo_buf_used;
+void *curr_jumbo_buf;
+int32_t curr_jumbo_buf_bytes_used;
+int32_t curr_jumbo_buf_alloc_no;
+};
+
+struct cbm_qidt_shadow {
+uint32_t qidt_shadow;
+uint32_t qidt_drop_flag;
+};
+
+struct cbm_qlink_get {
+uint32_t qid[EGRESS_QUEUE_ID_MAX];
+uint32_t qlink_sbin[EGRESS_QUEUE_ID_MAX];
+};
+
+struct cbm_q_info {
+uint16_t      refcnt; /* No of Queue Map table entries pointing to this q */
+uint16_t       qmap_idx_start; /* First index of Queue Map table pointing to q */
+uint16_t       qmap_idx_end; /* last index of Queue Map table pointing to q */
+};
+
+/************************
+ * Function prototypes
+ ************************/
+#define cbm_assert(cond, fmt, arg...)  do { if (!(cond)) printk("%d:%s:" fmt "\n", __LINE__, __func__, ##arg); } while (0)
+#define cbm_err(fmt, arg...)          do { printk("%d:%s:"fmt "\n", __LINE__, __func__, ##arg); } while (0)
+
+#ifdef CBM_DEBUG
+#define cbm_debug(fmt, arg...)        do { pr_info(fmt, ##arg); } while (0)
+#else
+#define cbm_debug(fmt, arg...)
+#endif
+
+#ifdef CBM_DEBUG_LVL_1
+#define cbm_debug_1(fmt, arg...)        do { pr_info(fmt, ##arg); } while (0)
+#else
+#define cbm_debug_1(fmt, arg...)
+#endif
+
+
+int cbm_set_cpu_alloc_offset(uint32_t pid, uint32_t jbo, unsigned int offset);
+void dump_fsqm_regs(int idx);
+void dump_cbm_basic_regs(uint32_t flag);
+uint32_t cbm_get_total_buf_num(uint32_t flag);
+extern void dump_fsqm_regs(int);
+extern uint32_t cbm_get_total_buf_num(uint32_t);
+extern void dump_fsqm_llt(uint32_t);
+extern void cbm_hw_init(void);
+
+void cbm_eqm_enable_bkpr(uint32_t pid, uint32_t enable);
+void ls_intr_ctrl(uint32_t val);
+void fsqm_intr_ctrl(uint32_t idx, uint32_t val);
+void eqm_intr_ctrl(uint32_t val);
+void dqm_intr_ctrl(uint32_t val);
+uint32_t get_violation_ptr(uint32_t fsqm_idx);
+void enable_rcnt_bkpr(uint32_t pid, uint32_t enable);
+void cbm_ls_spread_alg_set(uint32_t alg);
+void cbm_ls_port_weight_set(uint32_t port_id, uint32_t weight);
+uint32_t cbm_ls_port_weight_get(uint32_t port_id);
+void cbm_ls_flowId_map_set(uint32_t col, uint32_t val);
+uint32_t cbm_ls_flowId_map_get(uint32_t col);
+void dump_cbm_ls_regs(void);
+void dump_cbm_desc(struct cbm_desc *desc, int detail);
+int cbm_interrupt_init(void);
+void cbm_fsqm_check_wm(uint32_t flag);
+int cbm_ptr_refcnt_incr(uint32_t pid, uint32_t buf_ptr);
+
+void dump_cbm_iqm_cpu_regs(int pid);
+int32_t get_cnt_of_ptr(uint32_t buf_addr);
+
+void init_fsqm_buf_jumbo(unsigned int jbo_base_addr, unsigned int size);
+void init_fsqm_buf_standard(unsigned int std_base_addr, unsigned int size);
+void buf_addr_adjust(unsigned int buf_base_addr, unsigned int buf_size, unsigned int *adjusted_buf_base, unsigned int *adjusted_buf_size, unsigned int align);
+void cbm_intr_mapping_init(void);
+void cbm_intr_mapping_uninit(void);
+int cbm_clear_cpu_eqm_cnt(uint32_t pid);
+void dump_cbm_cpu_eqm_cnt(uint32_t pid);
+void cbm_dw_memset(uint32_t *base, int val, uint32_t size);
+void cbm_qidt_set(const struct cbm_qidt_elm *qid_set, const struct cbm_qidt_mask *qid_mask, uint8_t qid_val);
+int cbm_ptr_refcnt_incr(uint32_t pid, uint32_t buf_ptr);
+/*int cbm_setup_desc(struct cbm_desc *desc, uint32_t data_ptr, uint32_t data_len, uint32_t ep,
+				uint32_t classid, uint32_t mpe1, uint32_t mpe2, uint32_t enc, uint32_t dec, uint8_t flow_id, uint32_t dic,
+						uint32_t color, uint32_t tunnel_id);*/
+extern void cbm_enable_port(int pid);
+extern int check_ptr_validation(uint32_t);
+
+struct cbm_pmac_port_map *add_to_list(
+struct cbm_pmac_port_map *value
+);
+
+
+struct cbm_pmac_port_map *is_port_allocated(
+int32_t pmac, uint32_t flags);
+
+struct cbm_pmac_port_map *search_in_list(
+int32_t pmac, uint32_t flags,
+struct cbm_pmac_port_map **prev);
+
+int delete_from_list(
+int32_t pmac, uint32_t flags);
+int get_budget(void);
+void cbm_restore_qmap(int enable);
+
+#endif /* __CBM_COMMON_H__ */
+
diff --git a/drivers/net/ethernet/lantiq/cbm/cbm_proc.c b/drivers/net/ethernet/lantiq/cbm/cbm_proc.c
new file mode 100755
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/cbm_proc.c
@@ -0,0 +1,1335 @@
+#include <linux/klogging.h>
+#include "cbm_proc.h"
+#include "cbm.h"
+#include <net/datapath_proc_api.h>
+#include <net/drv_tmu_ll.h>
+
+static struct dp_proc_entry cbm_proc_entries[] = {
+/*name single_callback_t multi_callback_t/_start write_callback_t */
+	{PROC_FILE_CBM_ENQ, cbm_enqueue_dump, NULL, NULL,
+	 NULL},
+	{PROC_FILE_CBM_DEQ, cbm_dequeue_dump, NULL, NULL,
+	 NULL},
+	{PROC_FILE_CBM_LS, cbm_ls_dump, NULL, NULL,
+	 NULL},
+	{PROC_FILE_CBM_SBA_JBA, cbm_sba_jba_dump, NULL, NULL,
+	 NULL},
+	{PROC_FILE_CBM_STAT_REG, cbm_status_reg_dump, NULL, NULL,
+	 NULL},
+	{PROC_FILE_CBM_DES64_INGRESS_REG, cbm_des64_ingress_dump, NULL,
+	 NULL, NULL},
+	{PROC_FILE_CBM_DES64_EGRESS_REG, cbm_des64_egress_dump, NULL,
+	 NULL, NULL},
+	/*{PROC_FILE_RCNT_REG, NULL, NULL, NULL,
+	 fsqm_rnt_read},*/
+	{PROC_FILE_FSC_FSQT_REG, NULL, NULL, NULL,
+	 fsqm_freesegment_read},
+	{PROC_FILE_CBM_ENQ_OVH_BYTES, cbm_enq_ovh_bytes_read, NULL, NULL,
+	 cbm_enq_ovh_bytes_write},
+	{PROC_FILE_CBM_COUNTER_MODE, cbm_counter_mode_get_proc, NULL, NULL,
+	 cbm_counter_mode_set_proc},
+	 {PROC_FILE_CBM_Q_THRES, cbm_q_thres_get_proc, NULL, NULL,
+	 cbm_q_thres_set_proc},
+	{PROC_FILE_CBM_Q_DELAY, NULL, NULL, NULL,
+	 cbm_eqm_delay_set_proc},
+	 #ifdef QOCC_TEST
+	{PROC_FILE_CBM_QOCC_TEST, NULL, NULL, NULL, cbm_qocc_test_steps},
+	#endif
+	{NULL, NULL, NULL, NULL, NULL}
+};
+
+/**
+   Initialize and install the proc entry
+
+   \return
+   -1 or 0 on success
+
+   \remarks
+   Called by the kernel.
+*/
+int cbm_proc_install(struct proc_dir_entry *parent)
+{
+	struct proc_dir_entry *driver_proc_node;
+	driver_proc_node = proc_mkdir(CBM_PROC_PARENT CBM_PROC_NAME, parent);
+	if (driver_proc_node != NULL) {
+		int i;
+		for (i = 0; i < ARRAY_SIZE(cbm_proc_entries); i++)
+			dp_proc_entry_create(driver_proc_node,
+					     &cbm_proc_entries[i]);
+	} else {
+		LOGF_KLOG_ERROR("cannot create proc entry");
+		return -1;
+	}
+	return 0;
+}
+EXPORT_SYMBOL(cbm_proc_install);
+
+/*! Register Offset (relative)*/
+#define CBM_STAT 0x210
+/*! Register Offset (absolute) for 1st Instance CBM*/
+#define CBM_CBM_STAT 0x1E710210u
+
+/*! Register Reset Value*/
+#define CBM_STAT_RST 0x00000000u
+
+/*! Field ACT - CBM Activity Status*/
+#define CBM_STAT_ACT_POS 0
+/*! Field ACT - CBM Activity Status*/
+#define CBM_STAT_ACT_MASK 0x1u
+/*! Constant INACTIVE - Inactive*/
+#define CONST_CBM_STAT_ACT_INACTIVE 0x0
+/*! Constant ACTIVE - Active*/
+#define CONST_CBM_STAT_ACT_ACTIVE 0x1
+
+/*! Field LSBYP - Hardware SMS lightspeed mode*/
+#define CBM_STAT_LSBYP_POS 16
+/*! Field LSBYP - Hardware SMS lightspeed mode*/
+#define CBM_STAT_LSBYP_MASK 0x10000u
+/*! Constant LS - Lightspeed mode enable*/
+#define CONST_CBM_STAT_LSBYP_LS 0x0
+/*! Constant BYP - Lightspeed mode bypass*/
+#define CONST_CBM_STAT_LSBYP_BYP 0x1
+
+/*! Field JSEL - Jumbo Select*/
+#define CBM_STAT_JSEL_POS 17
+/*! Field JSEL - Jumbo Select*/
+#define CBM_STAT_JSEL_MASK 0x20000u
+/*! Constant JSEL0 - Jumbo frame size 8 KBytes*/
+#define CONST_CBM_STAT_JSEL_JSEL0 0x0
+/*! Constant JSEL1 - Jumbo frame size 16 KBytes*/
+#define CONST_CBM_STAT_JSEL_JSEL1 0x1
+
+#define REG64(addr)      (*((volatile uint64_t *)(addr)))
+
+void print_reg64(char *name, uint32_t addr)
+{
+	uint32_t reg1, reg2;
+	uint64_t reg;
+
+	reg = REG64(addr);
+	reg1 = (uint32_t) (reg >> 32);
+	reg2 = (reg & 0xFFFFFFFF);
+
+	LOGF_KLOG_CONT("%s: addr:0x%8x, val[32-63]: 0x%8x, val[0-31]: 0x%8x\n",
+		  name, addr, reg1, reg2);
+}
+
+static uint32_t cbm_eqm_addr_base_d = KSEG1ADDR(CBM_EQM_MODULE_BASE);
+#define CBM_ENQ_BASE_D				cbm_eqm_addr_base_d
+
+void cbm_enqueue_dump(struct seq_file *s)
+{
+	seq_printf(s, "CBM_ENQ_BASEe=0x%x\n", CBM_ENQ_BASE_D);
+
+	seq_printf(s, "%8s,%8s,%8s,%8s,%8s,%8s\n", "portno :", "pocc", "eqpc",
+	"disc_desc1", "disc_desc2", "disc_desc3");
+	seq_printf(s, "cpu_p0: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_CPU_IGP_0),
+	REG32(CBM_ENQ_BASE_D + EQPC_CPU_IGP_0),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_CPU_IGP_0),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_CPU_IGP_0),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_CPU_IGP_0));
+
+	seq_printf(s, "cpu_p1: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_CPU_IGP_1),
+	REG32(CBM_ENQ_BASE_D + EQPC_CPU_IGP_1),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_CPU_IGP_1),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_CPU_IGP_1),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_CPU_IGP_1));
+
+	seq_printf(s, "cpu_p2: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_CPU_IGP_2),
+	REG32(CBM_ENQ_BASE_D + EQPC_CPU_IGP_2),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_CPU_IGP_2),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_CPU_IGP_2),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_CPU_IGP_2));
+
+	seq_printf(s, "cpu_p3: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_CPU_IGP_3),
+	REG32(CBM_ENQ_BASE_D + EQPC_CPU_IGP_3),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_CPU_IGP_3),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_CPU_IGP_3),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_CPU_IGP_3));
+
+	seq_printf(s, "cpu_p4: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_CPU_IGP_4),
+	REG32(CBM_ENQ_BASE_D + EQPC_CPU_IGP_4),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_CPU_IGP_4),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_CPU_IGP_4),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_CPU_IGP_4));
+
+	seq_printf(s, "dma_p5: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_5),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_5),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_5),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_5),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_5));
+
+	seq_printf(s, "dma_p6: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_6),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_6),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_6),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_6),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_6));
+
+	seq_printf(s, "dma_p7: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_7),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_7),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_7),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_7),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_7));
+
+	seq_printf(s, "dma_p8: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_8),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_8),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_8),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_8),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_8));
+
+	seq_printf(s, "dma_p9: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_9),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_9),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_9),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_9),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_9));
+
+	seq_printf(s, "dma_p10: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_10),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_10),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_10),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_10),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_10));
+
+	seq_printf(s, "dma_p11: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_11),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_11),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_11),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_11),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_11));
+
+	seq_printf(s, "dma_p12: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_12),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_12),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_12),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_12),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_12));
+
+	seq_printf(s, "dma_p13: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_13),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_13),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_13),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_13),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_13));
+
+	seq_printf(s, "dma_p14: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_14),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_14),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_14),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_14),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_14));
+
+	seq_printf(s, "dma_p15: 0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+	REG32(CBM_ENQ_BASE_D + POCC_DMA_IGP_15),
+	REG32(CBM_ENQ_BASE_D + EQPC_DMA_IGP_15),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC1_DMA_IGP_15),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC2_DMA_IGP_15),
+	REG32(CBM_ENQ_BASE_D + DISC_DESC3_DMA_IGP_15));
+}
+
+static uint32_t cbm_deqm_addr_base_d = KSEG1ADDR(CBM_DQM_MODULE_BASE);
+#define CBM_DEQ_BASE_D				cbm_deqm_addr_base_d
+
+void cbm_dequeue_dump(struct seq_file *s)
+{
+
+	seq_printf(s, "CBM_DEQ_BASEe=0x%x\n", CBM_DEQ_BASE_D);
+
+	seq_printf(s, "%8s\n", "cpu_p0_dqpc");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_CPU_EGP_0));
+
+	seq_printf(s, "%8s\n", "cpu_p1_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_CPU_EGP_1));
+
+	seq_printf(s, "%8s\n", "cpu_p2_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_CPU_EGP_2));
+
+	seq_printf(s, "%8s\n", "cpu_p3_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_CPU_EGP_3));
+
+	seq_printf(s, "%8s\n", "cpu_p4_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_CPU_EGP_4));
+
+	seq_printf(s, "%8s\n", "cpu_p5_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_CPU_EGP_5));
+
+	seq_printf(s, "%8s\n", "dma_p6_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_6));
+
+	seq_printf(s, "%8s\n", "dma_p7_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_7));
+
+	seq_printf(s, "%8s\n", "dma_p8_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_8));
+
+	seq_printf(s, "%8s\n", "dma_p9_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_9));
+
+	seq_printf(s, "%8s\n", "dma_p10_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_10));
+
+	seq_printf(s, "%8s\n", "dma_p11_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_11));
+
+	seq_printf(s, "%8s\n", "dma_p12_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_12));
+
+	seq_printf(s, "%8s\n", "dma_p13_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_13));
+
+	seq_printf(s, "%8s\n", "dma_p14_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_14));
+
+	seq_printf(s, "%8s\n", "dma_p15_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_15));
+
+	seq_printf(s, "%8s\n", "dma_p16_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_16));
+
+	seq_printf(s, "%8s\n", "dma_p17_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_17));
+
+	seq_printf(s, "%8s\n", "dma_p18_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_18));
+
+	seq_printf(s, "%8s\n", "dma_p19_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_19));
+
+	seq_printf(s, "%8s\n", "dma_p20_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_20));
+
+	seq_printf(s, "%8s\n", "dma_p21_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_21));
+
+	seq_printf(s, "%8s\n", "dma_p22_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_22));
+
+	seq_printf(s, "%8s\n", "dma_p23_DQPC");
+	seq_printf(s, "0x%08x\n", REG32(CBM_DEQ_BASE_D + DQPC_DMA_EGP_23));
+
+}
+
+static uint32_t cbm_ls_status_port0_base_d =
+KSEG1ADDR(CBM_LS_LS_STATUS_PORT0);
+static uint32_t cbm_ls_status_port1_base_d =
+KSEG1ADDR(CBM_LS_LS_STATUS_PORT1);
+static uint32_t cbm_ls_status_port2_base_d =
+KSEG1ADDR(CBM_LS_LS_STATUS_PORT2);
+static uint32_t cbm_ls_status_port3_base_d =
+KSEG1ADDR(CBM_LS_LS_STATUS_PORT3);
+
+#define CBM_LS_P0_D					cbm_ls_status_port0_base_d
+#define CBM_LS_P1_D					cbm_ls_status_port1_base_d
+#define CBM_LS_P2_D					cbm_ls_status_port2_base_d
+#define CBM_LS_P3_D					cbm_ls_status_port3_base_d
+
+void cbm_ls_dump(struct seq_file *s)
+{
+	unsigned int reg_r_data, q_len0 = 0, q_full0 = 0, q_empty0 =
+	0, q_cnt0 = 0, q_len1 = 0, q_full1 = 0, q_empty1 = 0, q_cnt1 = 0;
+	unsigned int q_len2 = 0, q_full2 = 0, q_empty2 = 0, q_cnt2 =
+	0, q_len3 = 0, q_full3 = 0, q_empty3 = 0, q_cnt3 = 0;
+
+	seq_printf(s, "%8s,%8s,%8s,%8s,%8s\n", "portno:", "qlen", "qfull",
+	"qempty", "cntval");
+	reg_r_data = 0;
+	reg_r_data = REG32(CBM_LS_P0_D);
+	q_len0 =
+	get_val(reg_r_data, LS_STATUS_PORT0_QUEUE_LEN_MASK,
+	LS_STATUS_PORT0_QUEUE_LEN_POS);
+	q_full0 =
+	get_val(reg_r_data, LS_STATUS_PORT0_QUEUE_FULL_MASK,
+	LS_STATUS_PORT0_QUEUE_FULL_POS);
+	q_empty0 =
+	get_val(reg_r_data, LS_STATUS_PORT0_QUEUE_EMPTY_MASK,
+	LS_STATUS_PORT0_QUEUE_EMPTY_POS);
+	q_cnt0 =
+	get_val(reg_r_data, LS_STATUS_PORT0_CNT_VAL_MASK,
+	LS_STATUS_PORT0_CNT_VAL_POS);
+	seq_printf(s, "port0:%08d,%08d,%08d,0x%08x\n", q_len0, q_full0,
+	q_empty0, q_cnt0);
+
+	reg_r_data = 0;
+	reg_r_data = REG32(CBM_LS_P1_D);
+	q_len1 =
+	get_val(reg_r_data, LS_STATUS_PORT1_QUEUE_LEN_MASK,
+	LS_STATUS_PORT1_QUEUE_LEN_POS);
+	q_full1 =
+	get_val(reg_r_data, LS_STATUS_PORT1_QUEUE_FULL_MASK,
+	LS_STATUS_PORT1_QUEUE_FULL_POS);
+	q_empty1 =
+	get_val(reg_r_data, LS_STATUS_PORT1_QUEUE_EMPTY_MASK,
+	LS_STATUS_PORT1_QUEUE_EMPTY_POS);
+	q_cnt1 =
+	get_val(reg_r_data, LS_STATUS_PORT1_CNT_VAL_MASK,
+	LS_STATUS_PORT1_CNT_VAL_POS);
+	seq_printf(s, "port1:%08d,%08d,%08d,0x%08x\n", q_len1, q_full1,
+	q_empty1, q_cnt1);
+
+	reg_r_data = 0;
+	reg_r_data = REG32(CBM_LS_P2_D);
+	q_len2 =
+	get_val(reg_r_data, LS_STATUS_PORT2_QUEUE_LEN_MASK,
+	LS_STATUS_PORT2_QUEUE_LEN_POS);
+	q_full2 =
+	get_val(reg_r_data, LS_STATUS_PORT2_QUEUE_FULL_MASK,
+	LS_STATUS_PORT2_QUEUE_FULL_POS);
+	q_empty2 =
+	get_val(reg_r_data, LS_STATUS_PORT2_QUEUE_EMPTY_MASK,
+	LS_STATUS_PORT2_QUEUE_EMPTY_POS);
+	q_cnt2 =
+	get_val(reg_r_data, LS_STATUS_PORT2_CNT_VAL_MASK,
+	LS_STATUS_PORT2_CNT_VAL_POS);
+	seq_printf(s, "port2:%08d,%08d,%08d,0x%08x\n", q_len2, q_full2,
+	q_empty2, q_cnt2);
+
+	reg_r_data = 0;
+	reg_r_data = REG32(CBM_LS_P3_D);
+	q_len3 =
+	get_val(reg_r_data, LS_STATUS_PORT3_QUEUE_LEN_MASK,
+	LS_STATUS_PORT3_QUEUE_LEN_POS);
+	q_full3 =
+	get_val(reg_r_data, LS_STATUS_PORT3_QUEUE_FULL_MASK,
+	LS_STATUS_PORT3_QUEUE_FULL_POS);
+	q_empty3 =
+	get_val(reg_r_data, LS_STATUS_PORT3_QUEUE_EMPTY_MASK,
+	LS_STATUS_PORT3_QUEUE_EMPTY_POS);
+	q_cnt3 =
+	get_val(reg_r_data, LS_STATUS_PORT3_CNT_VAL_MASK,
+	LS_STATUS_PORT3_CNT_VAL_POS);
+	seq_printf(s, "port3:%08d,%08d,%08d,0x%08x\n", q_len3, q_full3,
+	q_empty3, q_cnt3);
+}
+
+static uint32_t cbm_sba0_base_d = KSEG1ADDR(CBM_CBM_SBA_0);
+static uint32_t cbm_sba1_base_d = KSEG1ADDR(CBM_CBM_SBA_1);
+static uint32_t cbm_jba0_base_d = KSEG1ADDR(CBM_CBM_JBA_0);
+static uint32_t cbm_jba1_base_d = KSEG1ADDR(CBM_CBM_JBA_1);
+
+#define CBM_SBA0_D			cbm_sba0_base_d
+#define CBM_SBA1_D			cbm_sba1_base_d
+#define CBM_JBA0_D			cbm_jba0_base_d
+#define CBM_JBA1_D			cbm_jba1_base_d
+
+void cbm_sba_jba_dump(struct seq_file *s)
+{
+	unsigned int sba0 = 0, sba1 = 0, jba0 = 0, jba1 = 0;
+
+	sba0 = REG32(CBM_SBA0_D);
+	sba1 = REG32(CBM_SBA1_D);
+	jba0 = REG32(CBM_JBA0_D);
+	jba1 = REG32(CBM_JBA1_D);
+
+	seq_printf(s, "%8s,%8s,%8s,%8s\n", "sba0", "sba1", "jba0", "jba1");
+	seq_printf(s, "0x%08x,0x%08x,0x%08x,0x%08x\n", sba0, sba1, jba0,
+		jba1);
+}
+
+static uint32_t cbm_status_base_d = KSEG1ADDR(CBM_CBM_STAT);
+#define CBM_STAT_D				cbm_status_base_d
+
+void cbm_status_reg_dump(struct seq_file *s)
+{
+	unsigned int reg_r_data, act_stat = 0, lsbyp = 0, jsel = 0;
+	reg_r_data = 0;
+	reg_r_data = REG32(CBM_STAT_D);
+	act_stat = get_val(reg_r_data, CBM_STAT_ACT_MASK, CBM_STAT_ACT_POS);
+	lsbyp = get_val(reg_r_data, CBM_STAT_LSBYP_MASK, CBM_STAT_LSBYP_POS);
+	jsel = get_val(reg_r_data, CBM_STAT_JSEL_MASK, CBM_STAT_JSEL_POS);
+	seq_printf(s, "%8s,%8s,%8s\n", "activity_status", "LSBYP", "JSEL");
+	seq_printf(s, "0x%08x,0x%08x,0x%08x\n", act_stat, lsbyp, jsel);
+}
+#if 0
+static unsigned int cbm_std_frame_size = 0x800;	/*  2k    */
+static unsigned int cbm_jbo_frame_size_8k = 0x2000;	/*  16k  */
+static unsigned int cbm_jbo_frame_size_16k = 0x4000;	/*  16k  */
+#endif
+static uint32_t fsqm0_base_d = KSEG1ADDR(FSQM0_MODULE_BASE);
+static uint32_t fsqm1_base_d = KSEG1ADDR(FSQM1_MODULE_BASE);
+#define FSQM0_BASE_D			fsqm0_base_d
+#define FSQM1_BASE_D			fsqm1_base_d
+#define FSQM_BASE_D(idx)		(idx == 0 ? fsqm0_base_d : fsqm1_base_d)
+
+ssize_t cbm_enq_ovh_bytes_write(struct file *file, const char *buf,
+			size_t count, loff_t *ppos)
+{
+	uint32_t port;
+	int8_t ovh_bytes;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[5] = { 0 };
+	int num = 0;
+
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+
+	if (num == 2) {
+		port = dp_atoi(param_list[0]);
+		ovh_bytes = dp_atoi(param_list[1]);
+		if ((port <= 15)
+		&& ((ovh_bytes <= 127) && (ovh_bytes >= -127)))
+			cbm_enqueue_port_overhead_set(port, ovh_bytes);
+	} else if (num == 1) {
+		port = dp_atoi(param_list[0]);
+		if (port <= 15) {
+			cbm_enqueue_port_overhead_get(port, &ovh_bytes);
+			LOGF_KLOG_CONT("%d\n", ovh_bytes);
+		}
+	} else {
+		LOGF_KLOG_CONT("Wrong Parameter(try): echo fsqmbase_index >  fsqmfsc\n");
+		return count;
+	}
+	return count;
+}
+
+void  cbm_enq_ovh_bytes_read(struct seq_file *s)
+{
+	int i;
+	int8_t ovh_bytes;
+
+	for (i = 0; i <= 15; i++) {
+		cbm_enqueue_port_overhead_get(i, &ovh_bytes);
+		LOGF_KLOG_CONT("%d \t", ovh_bytes);
+	}
+	LOGF_KLOG_CONT("\n");
+}
+
+void  cbm_q_thres_get_proc(struct seq_file *s)
+{
+	uint32_t length;
+	cbm_q_thres_get(&length);
+	LOGF_KLOG_CONT("EQM QUEUE THRESHOLD %d\n", length);
+}
+ssize_t cbm_q_thres_set_proc(struct file *file, const char *buf,
+			size_t count, loff_t *ppos)
+{
+	uint8_t length;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[1] = { 0 };
+	int num = 0;
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+	if (num == 1) {
+		length = dp_atoi(param_list[0]);
+		if (length <= 7) {
+			cbm_q_thres_set(length);
+		} else {
+			LOGF_KLOG_CONT("invalid Queue Length\n");
+		}
+	} else {
+		LOGF_KLOG_CONT("Wrong command\n");
+		LOGF_KLOG_CONT("Usage: \n");
+		LOGF_KLOG_CONT
+		    ("Set Queue Threshold:  echo queue-length > /proc/cbm/cbmqthres\n");
+		return count;
+	}
+	return count;
+}
+ssize_t cbm_eqm_delay_set_proc(struct file *file, const char *buf,
+			size_t count, loff_t *ppos)
+{
+	int delay, port_id;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[3] = { 0 };
+	int num = 0;
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+	if (num == 3) {
+		port_id = dp_atoi(param_list[1]);
+		delay = dp_atoi(param_list[2]);
+		if (dp_strcmpi(param_list[0], "set") == 0)
+			cbm_igp_delay_set(port_id, delay);
+	} else if (num == 2) {
+		port_id = dp_atoi(param_list[1]);
+		if (dp_strcmpi(param_list[0], "get") == 0) {
+			cbm_igp_delay_get(port_id, &delay);
+			LOGF_KLOG_CONT("Delay %d\n", delay);
+		}
+	} else {
+		LOGF_KLOG_CONT("Wrong command\n");
+		LOGF_KLOG_CONT("Usage: \n");
+		LOGF_KLOG_CONT
+		    ("Set Delay:  echo set port-id  delay > /proc/cbm/cbmqdelay\n");
+		LOGF_KLOG_CONT
+		    ("Get Delay:  echo get port-id > /proc/cbm/cbmqdelay\n");
+	}
+	return count;
+}
+void  cbm_counter_mode_get_proc(struct seq_file *s)
+{
+	int mode;
+	cbm_counter_mode_get(0, &mode);
+	LOGF_KLOG_CONT("EQM MSEL %s\n", (mode > 0) ? "BYTE" : "PKT");
+	cbm_counter_mode_get(1, &mode);
+	LOGF_KLOG_CONT("DQM MSEL %s\n", (mode > 0) ? "BYTE" : "PKT");
+}
+
+ssize_t cbm_counter_mode_set_proc(struct file *file, const char *buf,
+			size_t count, loff_t *ppos)
+{
+	uint8_t eqm;
+	uint8_t mode;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[2] = { 0 };
+	int num = 0;
+
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+
+	if (num == 2) {
+		eqm = dp_atoi(param_list[0]);
+		mode = dp_atoi(param_list[1]);
+		if ((eqm <= 1)
+		&& (mode <= 1))
+			cbm_counter_mode_set(eqm, mode);
+	} else {
+		LOGF_KLOG_CONT("Wrong Parameter\n");
+		return count;
+	}
+	return count;
+}
+#ifdef QOCC_TEST
+void tmu_set_wfq(const uint32_t sbin, const uint16_t weight)
+{
+	struct tmu_sched_blk_in_link ilink;
+	tmu_sched_blk_in_link_get(sbin, &ilink);
+	ilink.iwgt = weight;
+	tmu_sched_blk_in_link_set(sbin, &ilink);
+}
+
+int tmu_shaper_cfg_set(uint32_t index, int32_t enable, uint32_t mode,
+		       uint32_t cir, uint32_t pir, uint32_t cbs, uint32_t pbs)
+{
+	struct tmu_token_bucket_shaper_params tbs;
+	uint32_t tmp_pir = 0, tmp_cir = 0, tmp_pbs = 0;
+	uint32_t tmp_cbs = 0;
+	/*TMU_DEBUG_ASSERT(index >= EGRESS_QUEUE_ID_MAX);*/
+	/*TMU_PRINT("write  tbs:%u_%u_%u_%u\n", pir, pbs, cir, cbs); */
+	/* The default value 0 accepts the TMU's factory default policy */
+	tmp_pir = (pir == 0) ? TMU_TBS_PIR_DEF : pir;
+	/* The default value 0 accepts the TMU's factory default policy */
+	tmp_pbs = (pbs == 0) ? TMU_TBS_PBS_DEF : pbs;
+	/*sgh add this line for default cbs */
+	tmp_cbs = (cbs == 0) ? TMU_TBS_CBS_DEF : cbs;
+	/* Treat values < TMU_TBS_PIR_MIN as TMU_TBS_PIR_MIN */
+	tmp_pir = (tmp_pir < TMU_TBS_PIR_MIN) ? TMU_TBS_PIR_MIN : tmp_pir;
+	/* Treat values < TMU_TBS_CIR_MIN as TMU_TBS_CIR_MIN */
+	tmp_cir = cir < TMU_TBS_CIR_MIN ? TMU_TBS_CIR_MIN : cir;
+	/*TMU_PRINT("tmp_pir=%u. TMU_TBS_PIR_MAX=%u\n", (unsigned int)tmp_pir,
+		(unsigned int)TMU_TBS_PIR_MAX);
+	TMU_DEBUG_ASSERT(tmp_pir > TMU_TBS_PIR_MAX);
+	TMU_DEBUG_ASSERT(tmp_pbs > TMU_TBS_PBS_MAX);
+	TMU_DEBUG_ASSERT(tmp_cir > TMU_TBS_CIR_MAX);
+	TMU_DEBUG_ASSERT(tmp_cbs > TMU_TBS_CBS_MAX);*/
+	tbs.tbe0 = enable;
+	tbs.tbe1 = enable;
+	tbs.mod = mode;
+	tbs.pir = tmp_pir;
+	tbs.pbs = tmp_pbs;
+	tbs.cir = tmp_cir;
+	tbs.cbs = tmp_cbs;
+	/*TMU_DEBUG(TMU_DEBUG_MSG,
+		"pir=%d, pbs=%d, cir=%d, cbs=%d for tbid %u\n", tbs.pir,
+		tbs.pbs, tbs.cir, tbs.cbs, index);*/
+	tmu_token_bucket_shaper_cfg_set(index, &tbs);
+	tmu_token_bucket_shaper_cfg_get(index, &tbs);
+	/*TMU_DEBUG(TMU_DEBUG_MSG, "read  tbs:%u_%u_%u_%u for tbid %u\n",
+		tbs.pir, tbs.pbs, tbs.cir, tbs.cbs, index);*/
+	return true;
+}
+void create_queue(uint32_t qid, uint32_t egress_port, int *sbit, int *leaf, uint32_t level)
+{
+	unsigned int LINK_A = 0, LINK_B = 0, LEAF;
+	unsigned int num = 0, i;
+	num = level + 3;
+
+	for (i = 2; ((num - 1) > i && i < 10); i++) {
+		LINK_B = sbit[i - 2];
+		LEAF = leaf[i - 2];
+		if (i == 2) {
+			LINK_A = qid;
+			/*pr_info("QID %d->SB %d:LEAF %d->", LINK_A,
+			LINK_B, LEAF);*/
+			tmu_egress_queue_create(LINK_A,
+			((LINK_B << 3) +
+			LEAF), egress_port);
+			tmu_set_wfq(((LINK_B << 3) + LEAF), 1);
+			level--;
+		} else if (i != 2) {
+			/*pr_info("SB %d:LEAF %d->", LINK_B, LEAF);*/
+			tmu_sched_blk_create(LINK_A, level,
+			((LINK_B << 3) + LEAF),
+			1, 0);
+			level--;
+		}
+		LINK_A = LINK_B;
+	}
+	/*pr_info("EP %d\n", egress_port);*/
+	tmu_sched_blk_create(LINK_A, level, egress_port, 0, 0);
+	tmu_egress_port_enable(egress_port, true);
+}
+ssize_t cbm_qocc_test_steps(struct file *file, const char *buf,
+			size_t count, loff_t *ppos)
+{
+	uint8_t step;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[2] = { 0 };
+	int num = 0;
+    int sbit[8];
+    int leaf[8];
+	int j, i, k;
+	uint32_t queues[8] = {28, 100, 101, 102, 103, 104, 105, 106};
+	uint32_t tbids[8] = {200, 201, 202, 203, 204, 205, 206, 207};
+	uint32_t class[8] = {1, 0, 2, 3, 4, 5, 6, 7};
+	unsigned int LINK_B = 0, LEAF;
+	unsigned int tb = 0;
+	cbm_queue_map_entry_t entry;
+	cbm_queue_map_entry_t *temp_entry;
+	int32_t num_entries = 0;
+	static uint32_t class_deleted[8];
+	static int class_count;
+	uint32_t l, sbin;
+	struct tmu_sched_blk_in_link ilink = {0};
+	struct tmu_sched_blk_out_link olink = {0};
+	uint32_t tbid, cir, pir, cbs, pbs, mode;
+	uint32_t temp_qmap;
+	uint32_t qmap_flags = CBM_QUEUE_MAP_F_MPE2_DONTCARE
+		| CBM_QUEUE_MAP_F_MPE1_DONTCARE
+		| CBM_QUEUE_MAP_F_DE_DONTCARE
+		| CBM_QUEUE_MAP_F_EN_DONTCARE
+		| CBM_QUEUE_MAP_F_FLOWID_H_DONTCARE
+		| CBM_QUEUE_MAP_F_FLOWID_L_DONTCARE;
+
+	temp_qmap = qmap_flags;
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+
+	if (num == 1) {
+		step = dp_atoi(param_list[0]);
+		switch (step) {
+		case 0:
+			for (j = 0; j <= step; j++) {
+				/*pr_info("delete %d\n", queues[j]);*/
+				cbm_dp_q_enable (15, queues[j], 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+				tmu_egress_queue_delete(queues[j]);
+			}
+			LEAF = step + 1;
+			for (j = 0; j <= step+1; j++) {
+				sbit[0] = 12; leaf[0] = LEAF; sbit[1] = 100; leaf[1] = 0;
+				create_queue (queues[j], 19, sbit, leaf, 2);
+				tbid = tbids[j];	cir = 1250000; pir = 1250000; cbs = 4000; pbs = 4000; mode = 0;
+				tmu_shaper_cfg_set(tbid, 1, mode, cir, pir, cbs, pbs);
+				tmu_token_bucket_shaper_create(tbids[j], ((sbit[0] << 3) + LEAF));
+				LEAF--;
+				entry.tc = class[j]; entry.ep = 15;
+				/*pr_info("map set class %d queue %d\n", entry.tc, queues[j]);*/
+				cbm_queue_map_set(queues[j], &entry, qmap_flags);
+			}
+			memset(&entry, 0, sizeof(cbm_queue_map_entry_t));
+			entry.ep = 15;
+			qmap_flags |= CBM_QUEUE_MAP_F_TC_DONTCARE;
+			cbm_queue_map_set(queues[1], &entry, qmap_flags);
+			/*echo cfg_tb 100 1250000 1250000 4000 4000 0 >/proc/tmu/cascade*/
+			tbid = 100;	cir = 1250000; pir = 1250000; cbs = 4000; pbs = 4000; mode = 0;
+			tmu_shaper_cfg_set(tbid, 1, mode, cir, pir, cbs, pbs);
+			/*echo attach_tb 100 100:0 > /proc/tmu/cascade*/
+			LINK_B = 100; LEAF = 0; tb = 100;
+			tmu_token_bucket_shaper_create(tb, ((LINK_B << 3) + LEAF));
+		break;
+		case 1:
+		case 2:
+		case 3:
+		case 4:
+		case 5:
+		case 6:
+			LEAF = step + 1;
+			for (j = 0; j <= step; j++) {
+				qmap_flags = temp_qmap;
+				/*pr_info("delete %d\n", queues[j]);*/
+				cbm_dp_q_enable (15, queues[j], 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+				sbit[0] = 12; leaf[0] = LEAF; sbit[1] = 100; leaf[1] = 0;
+				tmu_token_bucket_shaper_delete(tbids[j], ((sbit[0] << 3) + (step - j)));
+				tmu_egress_queue_delete(queues[j]);
+				create_queue (queues[j], 19, sbit, leaf, 2);
+				tbid = tbids[j]; cir = 1250000; pir = 1250000; cbs = 4000; pbs = 4000; mode = 0;
+				tmu_shaper_cfg_set(tbid, 1, mode, cir, pir, cbs, pbs);
+				tmu_token_bucket_shaper_create(tbids[j], ((sbit[0] << 3) + LEAF));
+				LEAF--;
+				entry.tc = class[j]; entry.ep = 15;
+				/*pr_info("map set class %d queue %d\n", entry.tc, queues[j]);*/
+				udelay(20000);
+				if (j == 1) {
+					qmap_flags |= CBM_QUEUE_MAP_F_TC_DONTCARE;
+				}
+				cbm_queue_map_set(queues[j], &entry, qmap_flags);
+			}
+			qmap_flags = temp_qmap;
+			/*LEAF = step + 1;
+			/for (j = 0; j <= step+1; j++) {*/
+				sbit[0] = 12; leaf[0] = LEAF; sbit[1] = 100; leaf[1] = 0;
+				create_queue (queues[step+1], 19, sbit, leaf, 2);
+			tbid = tbids[j];	cir = 1250000; pir = 1250000; cbs = 4000; pbs = 4000; mode = 0;
+			tmu_shaper_cfg_set(tbid, 1, mode, cir, pir, cbs, pbs);
+			tmu_token_bucket_shaper_create(tbids[j], ((sbit[0] << 3) + LEAF));
+				LEAF--;
+				entry.tc = class[j]; entry.ep = 15;
+			/*pr_info("map set class %d queue %d\n", entry.tc, queues[j]);*/
+			udelay(20000);
+				cbm_queue_map_set(queues[j], &entry, qmap_flags);
+			/*}*/
+		break;
+		case 7:
+		case 8:
+		case 9:
+		case 10:
+		case 11:
+		case 12:
+			step -= 7;
+			LEAF = 0;
+			i = 0;
+			/*pr_info("delete %d\n", queues[7 - step]);*/
+			cbm_dp_q_enable (15, queues[7 - step], 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			class_deleted[class_count] = class[7 - step];
+			class_count++;
+			memset(&entry, 0, sizeof(cbm_queue_map_entry_t));
+			entry.tc = class[7 - step]; entry.ep = 15;
+			udelay(20000);
+			cbm_queue_map_set(100, &entry, qmap_flags);
+			sbit[0] = 12;
+			tmu_token_bucket_shaper_delete(tbids[7 - step], ((sbit[0] << 3) + (i)));
+			i++;
+			tmu_egress_queue_delete(queues[7 - step]);
+			for (j = 7 - step - 1; j >= 0; j--) {
+				/*pr_info("delete %d\n", queues[j]);*/
+				cbm_dp_q_enable (15, queues[j], 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+				sbit[0] = 12;
+				tmu_token_bucket_shaper_delete(tbids[j], ((sbit[0] << 3) + (i)));
+				i++;
+				tmu_egress_queue_delete(queues[j]);
+				sbit[0] = 12; leaf[0] = LEAF; sbit[1] = 100; leaf[1] = 0;
+				create_queue (queues[j], 19, sbit, leaf, 2);
+				tbid = tbids[j];	cir = 1250000; pir = 1250000; cbs = 4000; pbs = 4000; mode = 0;
+				tmu_shaper_cfg_set(tbid, 1, mode, cir, pir, cbs, pbs);
+				tmu_token_bucket_shaper_create(tbids[j], ((sbit[0] << 3) + LEAF));
+				LEAF++;
+				entry.tc = class[j]; entry.ep = 15;
+				/*pr_info("map set class %d queue %d\n", entry.tc, queues[j]);*/
+				udelay(20000);
+				if (j != 1)
+					cbm_queue_map_set(queues[j], &entry, qmap_flags);
+				else {
+					cbm_queue_map_set(queues[j], &entry, qmap_flags);
+					for (k = 0; k < class_count; k++) {
+						memset(&entry, 0, sizeof(cbm_queue_map_entry_t));
+						entry.tc = class_deleted[k]; entry.ep = 15;
+						udelay(20000);
+						cbm_queue_map_set(100, &entry, qmap_flags);
+					}
+				}
+			}
+		break;
+		case 13:
+		/*echo del_q 100 > /proc/tmu/cascade*/
+			step -= 7;
+		cbm_dp_q_enable (15, 100, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			sbit[0] = 12;
+			tmu_token_bucket_shaper_delete(tbids[1], ((sbit[0] << 3) + 0));
+		tmu_egress_queue_delete(100);
+		/*echo del_q 28 > /proc/tmu/cascade*/
+		cbm_dp_q_enable (15, 28, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			tmu_token_bucket_shaper_delete(tbids[0], ((sbit[0] << 3) + (1)));
+		tmu_egress_queue_delete(28);
+		/*echo attach_tb 100 100:0 > /proc/tmu/cascade*/
+		LINK_B = 100; LEAF = 0; tb = 100;
+		tmu_token_bucket_shaper_delete(tb, ((LINK_B << 3) + LEAF));
+		/*echo create 28 12:0 100:0 19 > /proc/tmu/cascade*/
+		sbit[0] = 12; leaf[0] = 0; /*sbit[1] = 100; leaf[1] = 0;*/
+		create_queue (28, 19, sbit, leaf, 1);
+		/*echo set 0 28 > /proc/tmu/lookup*/
+		entry.tc = 0; entry.ep = 15;
+			udelay(20000);
+		cbm_queue_map_set(28, &entry, qmap_flags);
+		break;
+		case 14:
+			cbm_dp_q_enable (15, 100, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			tmu_egress_queue_delete(100);
+			cbm_dp_q_enable (15, 28, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			tmu_egress_queue_delete(28);
+			LINK_B = 100; LEAF = 0; tb = 100;
+			sbit[0] = 12; leaf[0] = 0; /*sbit[1] = 100; leaf[1] = 0;*/
+			create_queue (28, 19, sbit, leaf, 1);
+			entry.tc = 0; entry.ep = 15;
+			udelay(20000);
+			cbm_queue_map_set(28, &entry, qmap_flags);
+			break;
+		case 15:
+			cbm_dp_q_enable (15, -1, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			udelay(20000);
+			cbm_dp_q_enable (15, -1, 19, -1, 100000, 1, 0);
+			udelay(20000);
+			num_entries = 0;
+			cbm_queue_map_get(28, &num_entries, &temp_entry, 0);
+			pr_info("num entries 28 %d\n", num_entries);
+			if (num_entries)
+				kfree(temp_entry);
+			cbm_queue_map_get(100, &num_entries, &temp_entry, 0);
+			pr_info("num entries 100 %d\n", num_entries);
+			if (num_entries)
+				kfree(temp_entry);
+			break;
+		case 16:
+			cbm_dp_q_enable (15, -1, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			udelay(20000);
+			printk("Delete Port rate shaper\n");
+			tmu_token_bucket_shaper_delete(100, ((100 << 3)));
+			printk("Disable scheduler id 100 output\n");
+			olink.soe  = 0;/*disable scheduler output*/
+			olink.lvl  = 0;
+			olink.omid = 0xFF;
+			olink.v    = 0;
+			tmu_sched_blk_out_link_set(100, &olink);
+			printk("Disable scheduler id 100 intput\n");
+			for (l = 0; l < 8; l++) {
+				sbin = (100 << 3) + l;
+				ilink.sie  = 0;/* disable the input */
+				ilink.sit  = 0;
+				ilink.qsid = 0xFF;
+				ilink.iwgt = 0;
+				tmu_sched_blk_in_link_set(sbin, &ilink);
+			}
+			printk("Connect ouput of 12 to Port 19\n");
+			olink.soe  = 1;/* enable scheduler output */
+			olink.lvl  = 0;
+			olink.omid = 19;
+			olink.v    = 0;
+			tmu_sched_blk_out_link_set(12, &olink);
+			ilink.sie  = 1;/* enable next level input */
+			ilink.sit  = 1;
+			ilink.qsid = 12;
+			ilink.iwgt = 0;
+			printk("<%s>Port Link Set: Omid: 19   sbid: 12  \n", __FUNCTION__);
+			tmu_egress_port_link_set(19, 12);
+			cbm_dp_q_enable (15, -1, 19, -1, 100000, 1, 0);
+			udelay(20000);
+			break;
+		case 17:
+			cbm_dp_q_enable (15, -1, 19, -1, 100000, 0, (CBM_Q_F_DISABLE | CBM_Q_F_FLUSH));
+			udelay(20000);
+			printk("Add Port rate shaper\n");
+			tmu_sched_blk_create(100, 0, 19, 0, 0);
+			tmu_egress_port_enable(19, true);
+			printk("Connect ouput of 12 to Scheduler 100\n");
+			olink.soe  = 1;
+			olink.lvl  = 1;
+			olink.omid = 100 << 3;
+			olink.v    = 1;
+			tmu_sched_blk_out_link_set(12, &olink);
+			ilink.sie  = 1;/* enable next level input */
+			ilink.sit  = 1;
+			ilink.qsid = 12;
+			ilink.iwgt = 0;
+			printk("<%s>SB Link Set: Omid: 100 sbid: 12  \n", __FUNCTION__);
+			tmu_sched_blk_in_link_set(100 << 3, &ilink);
+			tbid = 100;	cir = 1250000; pir = 1250000; cbs = 4000; pbs = 4000; mode = 0;
+			tmu_shaper_cfg_set(tbid, 1, mode, cir, pir, cbs, pbs);
+			LINK_B = 100; LEAF = 0; tb = 100;
+			tmu_token_bucket_shaper_create(tb, ((LINK_B << 3) + LEAF));
+			cbm_dp_q_enable (15, -1, 19, -1, 100000, 1, 0);
+			udelay(20000);
+			break;
+		default:
+		break;
+		};
+	} else {
+		LOGF_KLOG_CONT("Wrong Parameter\n");
+		return count;
+	}
+	return count;
+}
+#endif
+ssize_t fsqm_freesegment_read(struct file *file, const char *buf,
+			size_t count, loff_t *ppos)
+{
+	uint32_t index;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[5] = { 0 };
+	int num = 0;
+
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+
+	if (num == 1) {
+		index = dp_atoi(param_list[0]);
+		LOGF_KLOG_CONT("%8s,%8s,%8s,%8s,%8s,%8s\n", "FSC", "FSQT0",
+			  "FSQT1", "FSQT2", "FSQT3", "FSQT4");
+		LOGF_KLOG_CONT("0x%08x,0x%08x,0x%08x,0x%08x,0x%08x,0x%08x\n",
+			  REG32(FSQM_BASE_D(index)
+				+ OFSC), REG32(FSQM_BASE_D(index) + FSQT0),
+			  REG32(FSQM_BASE_D(index) + FSQT1),
+			  REG32(FSQM_BASE_D(index) + FSQT2),
+			  REG32(FSQM_BASE_D(index) + FSQT3),
+			  REG32(FSQM_BASE_D(index) + FSQT4));
+	} else {
+		LOGF_KLOG_CONT("Wrong Parameter(try): echo fsqmbase_index >  fsqmfsc\n");
+		return count;
+	}
+		return count;
+}
+#if 0
+ssize_t fsqm_rnt_read(struct file *file, const char *buf, size_t count,
+		loff_t *ppos)
+{
+	uint32_t buf_type, idx, reg_r_data, jsel = 0;
+	static unsigned int std_buffer_addr_base;
+	static unsigned int jbo_buffer_addr_base;
+	uint32_t buf_addr;
+	int len;
+	char str[64];
+	char *p = (char *)str;
+	char *param_list[20] = { 0 };
+	int num = 0;
+
+	len = (sizeof(str) > count) ? count : sizeof(str) - 1;
+	len -= copy_from_user(str, buf, len);
+	str[len] = 0;
+	if (!len)
+		return count;
+
+	num = dp_split_buffer(p, param_list, ARRAY_SIZE(param_list));
+
+	if (num == 1) {
+		buf_addr = dp_atoi(param_list[0]);
+		LOGF_KLOG_CONT("buf_addr: 0x%08x\n", buf_addr);
+		std_buffer_addr_base = REG32(CBM_SBA0_D);
+		LOGF_KLOG_CONT("std_buffer_addr_base: 0x%08x\n",
+			  std_buffer_addr_base);
+		jbo_buffer_addr_base = REG32(CBM_JBA0_D);
+		LOGF_KLOG_CONT("jbo_buffer_addr_base: 0x%08x\n",
+			  jbo_buffer_addr_base);
+		buf_type = check_ptr_validation(buf_addr);
+		LOGF_KLOG_CONT("buf_type: 0x%08x\n", buf_type);
+
+		if (buf_type == SBA0_STD || buf_type == SBA1_STD) {
+			idx =
+			    (buf_addr -
+			     std_buffer_addr_base) / cbm_std_frame_size;
+		} else if (buf_type == SBA0_JBO || buf_type == SBA1_JBO) {
+			reg_r_data = 0;
+			reg_r_data = REG32(CBM_STAT_D);
+			jsel =
+			    get_val(reg_r_data, CBM_STAT_JSEL_MASK,
+				    CBM_STAT_JSEL_POS);
+			LOGF_KLOG_CONT("jsel: %d\n", jsel);
+
+			if (jsel)
+				idx =
+				    (buf_addr -
+				     jbo_buffer_addr_base) /
+				    cbm_jbo_frame_size_16k;
+			else
+				idx =
+				    (buf_addr -
+				     jbo_buffer_addr_base) /
+				    cbm_jbo_frame_size_8k;
+
+		} else {
+			LOGF_KLOG_CONT("ERROR: buffer type not found\n");
+			return count;
+
+		}
+		LOGF_KLOG_CONT("idx: %d\n", idx);
+		LOGF_KLOG_CONT("RCNT: 0x%08x\n",
+			  REG32(FSQM_BASE_D(idx) + RCNT + (idx * 4)));
+	} else {
+		LOGF_KLOG_CONT("Wrong Parameter(try): echo buffer_address > fsqmrnt\n");
+		return count;
+	}
+		return count;
+}
+#endif
+static uint32_t cbm_desc64_base_d = KSEG1ADDR(CBM_DESC64B_MODULE_BASE);
+#define CBM_DES64_D				cbm_desc64_base_d
+
+void cbm_des64_ingress_dump(struct seq_file *s)
+{
+	print_reg64("SDESC0_0_IGP_5:	", CBM_DES64_D + SDESC0_0_IGP_5);
+	print_reg64("SDESC1_0_IGP_5:	", CBM_DES64_D + SDESC1_0_IGP_5);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_5:	", CBM_DES64_D + SDESC0_1_IGP_5);
+	print_reg64("SDESC0_1_IGP_5:	", CBM_DES64_D + SDESC1_1_IGP_5);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_5:	", CBM_DES64_D + JDESC0_0_IGP_5);
+	print_reg64("JDESC1_0_IGP_5:	", CBM_DES64_D + JDESC1_0_IGP_5);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_5:	", CBM_DES64_D + JDESC0_1_IGP_5);
+	print_reg64("JDESC1_1_IGP_5:	", CBM_DES64_D + JDESC1_1_IGP_5);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_6:	", CBM_DES64_D + SDESC0_0_IGP_6);
+	print_reg64("SDESC1_0_IGP_6:	", CBM_DES64_D + SDESC1_0_IGP_6);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_6:	", CBM_DES64_D + SDESC0_1_IGP_6);
+	print_reg64("SDESC1_1_IGP_6:	", CBM_DES64_D + SDESC1_1_IGP_6);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_6:	", CBM_DES64_D + JDESC0_0_IGP_6);
+	print_reg64("JDESC1_0_IGP_6:	", CBM_DES64_D + JDESC1_0_IGP_6);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_6:	", CBM_DES64_D + JDESC0_1_IGP_6);
+	print_reg64("JDESC1_1_IGP_6:	", CBM_DES64_D + JDESC1_1_IGP_6);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_7:	", CBM_DES64_D + SDESC0_0_IGP_7);
+	print_reg64("SDESC1_0_IGP_7:	", CBM_DES64_D + SDESC1_0_IGP_7);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_7:	", CBM_DES64_D + SDESC0_1_IGP_7);
+	print_reg64("SDESC1_1_IGP_7:	", CBM_DES64_D + SDESC1_1_IGP_7);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_7:	", CBM_DES64_D + JDESC0_0_IGP_7);
+	print_reg64("JDESC1_0_IGP_7:	", CBM_DES64_D + JDESC1_0_IGP_7);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_7:	", CBM_DES64_D + JDESC0_1_IGP_7);
+	print_reg64("JDESC1_1_IGP_7:	", CBM_DES64_D + JDESC1_1_IGP_7);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_8:	", CBM_DES64_D + SDESC0_0_IGP_8);
+	print_reg64("SDESC1_0_IGP_8:	", CBM_DES64_D + SDESC1_0_IGP_8);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_8:	", CBM_DES64_D + SDESC0_1_IGP_8);
+	print_reg64("SDESC1_1_IGP_8:	", CBM_DES64_D + SDESC1_1_IGP_8);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_8:	", CBM_DES64_D + JDESC0_0_IGP_8);
+	print_reg64("JDESC1_0_IGP_8:	", CBM_DES64_D + JDESC1_0_IGP_8);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_8:	", CBM_DES64_D + JDESC0_1_IGP_8);
+	print_reg64("JDESC1_1_IGP_8:	", CBM_DES64_D + JDESC1_1_IGP_8);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_9:	", CBM_DES64_D + SDESC0_0_IGP_9);
+	print_reg64("SDESC1_0_IGP_9:	", CBM_DES64_D + SDESC1_0_IGP_9);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_9:	", CBM_DES64_D + SDESC0_1_IGP_9);
+	print_reg64("SDESC1_1_IGP_9:	", CBM_DES64_D + SDESC1_1_IGP_9);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_9:	", CBM_DES64_D + JDESC0_0_IGP_9);
+	print_reg64("JDESC1_0_IGP_9:	", CBM_DES64_D + JDESC1_0_IGP_9);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_9:	", CBM_DES64_D + JDESC0_1_IGP_9);
+	print_reg64("JDESC1_1_IGP_9:	", CBM_DES64_D + JDESC1_1_IGP_9);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_10:	", CBM_DES64_D + SDESC0_0_IGP_10);
+	print_reg64("SDESC1_0_IGP_10:	", CBM_DES64_D + SDESC1_0_IGP_10);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_10:	", CBM_DES64_D + SDESC0_1_IGP_10);
+	print_reg64("SDESC1_1_IGP_10:	", CBM_DES64_D + SDESC1_1_IGP_10);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_10:	", CBM_DES64_D + JDESC0_0_IGP_10);
+	print_reg64("JDESC1_0_IGP_10:	", CBM_DES64_D + JDESC1_0_IGP_10);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_10:	", CBM_DES64_D + JDESC0_1_IGP_10);
+	print_reg64("JDESC1_1_IGP_10:	", CBM_DES64_D + JDESC1_1_IGP_10);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_11:	", CBM_DES64_D + SDESC0_0_IGP_11);
+	print_reg64("SDESC1_0_IGP_11:	", CBM_DES64_D + SDESC1_0_IGP_11);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_11:	", CBM_DES64_D + SDESC0_1_IGP_11);
+	print_reg64("SDESC1_1_IGP_11:	", CBM_DES64_D + SDESC1_1_IGP_11);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_11:	", CBM_DES64_D + JDESC0_0_IGP_11);
+	print_reg64("JDESC1_0_IGP_11:	", CBM_DES64_D + JDESC1_0_IGP_11);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_11:	", CBM_DES64_D + JDESC0_1_IGP_11);
+	print_reg64("JDESC1_1_IGP_11:	", CBM_DES64_D + JDESC1_1_IGP_11);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_12:	", CBM_DES64_D + SDESC0_0_IGP_12);
+	print_reg64("SDESC1_0_IGP_12:	", CBM_DES64_D + SDESC1_0_IGP_12);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_12:	", CBM_DES64_D + SDESC0_1_IGP_12);
+	print_reg64("SDESC1_1_IGP_12:	", CBM_DES64_D + SDESC1_1_IGP_12);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_12:	", CBM_DES64_D + JDESC0_0_IGP_12);
+	print_reg64("JDESC1_0_IGP_12:	", CBM_DES64_D + JDESC1_0_IGP_12);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_12:	", CBM_DES64_D + JDESC0_1_IGP_12);
+	print_reg64("JDESC1_1_IGP_12:	", CBM_DES64_D + JDESC1_1_IGP_12);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_13:	", CBM_DES64_D + SDESC0_0_IGP_13);
+	print_reg64("SDESC1_0_IGP_13:	", CBM_DES64_D + SDESC1_0_IGP_13);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_13:	", CBM_DES64_D + SDESC0_1_IGP_13);
+	print_reg64("SDESC1_1_IGP_13:	", CBM_DES64_D + SDESC1_1_IGP_13);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_13:	", CBM_DES64_D + JDESC0_0_IGP_13);
+	print_reg64("JDESC1_0_IGP_13:	", CBM_DES64_D + JDESC1_0_IGP_13);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_13:	", CBM_DES64_D + JDESC0_1_IGP_13);
+	print_reg64("JDESC1_1_IGP_13:	", CBM_DES64_D + JDESC1_1_IGP_13);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_0_IGP_14:	", CBM_DES64_D + SDESC0_0_IGP_14);
+	print_reg64("SDESC1_0_IGP_14:	", CBM_DES64_D + SDESC1_0_IGP_14);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("SDESC0_1_IGP_14:	", CBM_DES64_D + SDESC0_1_IGP_14);
+	print_reg64("SDESC1_1_IGP_14:	", CBM_DES64_D + SDESC1_1_IGP_14);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_0_IGP_14:	", CBM_DES64_D + JDESC0_0_IGP_14);
+	print_reg64("JDESC1_0_IGP_14:	", CBM_DES64_D + JDESC1_0_IGP_14);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("JDESC0_1_IGP_14:	", CBM_DES64_D + JDESC0_1_IGP_14);
+	print_reg64("JDESC1_1_IGP_14:	", CBM_DES64_D + JDESC1_1_IGP_14);
+	LOGF_KLOG_CONT("\n");
+}
+
+void cbm_des64_egress_dump(struct seq_file *s)
+{
+	print_reg64("DESC0_0_EGP_5:	", CBM_DES64_D + DESC0_0_EGP_5);
+	print_reg64("DESC1_0_EGP_5:	", CBM_DES64_D + DESC1_0_EGP_5);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_5:	", CBM_DES64_D + DESC0_1_EGP_5);
+	print_reg64("DESC1_1_EGP_5:	", CBM_DES64_D + DESC1_1_EGP_5);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_6:	", CBM_DES64_D + DESC0_0_EGP_6);
+	print_reg64("DESC1_0_EGP_6:	", CBM_DES64_D + DESC1_0_EGP_6);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_6:	", CBM_DES64_D + DESC0_1_EGP_6);
+	print_reg64("DESC1_1_EGP_6:	", CBM_DES64_D + DESC1_1_EGP_6);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_7:	", CBM_DES64_D + DESC0_0_EGP_7);
+	print_reg64("DESC1_0_EGP_7:	", CBM_DES64_D + DESC1_0_EGP_7);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_7:	", CBM_DES64_D + DESC0_1_EGP_7);
+	print_reg64("DESC1_1_EGP_7:	", CBM_DES64_D + DESC1_1_EGP_7);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_8:	", CBM_DES64_D + DESC0_0_EGP_8);
+	print_reg64("DESC1_0_EGP_8:	", CBM_DES64_D + DESC1_0_EGP_8);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_8:	", CBM_DES64_D + DESC0_1_EGP_8);
+	print_reg64("DESC1_1_EGP_8:	", CBM_DES64_D + DESC1_1_EGP_8);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_9:	", CBM_DES64_D + DESC0_0_EGP_9);
+	print_reg64("DESC1_0_EGP_9:	", CBM_DES64_D + DESC1_0_EGP_9);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_9:	", CBM_DES64_D + DESC0_1_EGP_9);
+	print_reg64("DESC1_1_EGP_9:	", CBM_DES64_D + DESC1_1_EGP_9);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_10:	", CBM_DES64_D + DESC0_0_EGP_10);
+	print_reg64("DESC1_0_EGP_10:	", CBM_DES64_D + DESC1_0_EGP_10);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_10:	", CBM_DES64_D + DESC0_1_EGP_10);
+	print_reg64("DESC1_1_EGP_10:	", CBM_DES64_D + DESC1_1_EGP_10);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_11:	", CBM_DES64_D + DESC0_0_EGP_11);
+	print_reg64("DESC1_0_EGP_11:	", CBM_DES64_D + DESC1_0_EGP_11);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_11:	", CBM_DES64_D + DESC0_1_EGP_11);
+	print_reg64("DESC1_1_EGP_11:	", CBM_DES64_D + DESC1_1_EGP_11);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_12:	", CBM_DES64_D + DESC0_0_EGP_12);
+	print_reg64("DESC1_0_EGP_12:	", CBM_DES64_D + DESC1_0_EGP_12);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_12:	", CBM_DES64_D + DESC0_1_EGP_12);
+	print_reg64("DESC1_1_EGP_12:	", CBM_DES64_D + DESC1_1_EGP_12);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_13:	", CBM_DES64_D + DESC0_0_EGP_13);
+	print_reg64("DESC1_0_EGP_13:	", CBM_DES64_D + DESC1_0_EGP_13);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_13:	", CBM_DES64_D + DESC0_1_EGP_13);
+	print_reg64("DESC1_1_EGP_13:	", CBM_DES64_D + DESC1_1_EGP_13);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_14:	", CBM_DES64_D + DESC0_0_EGP_14);
+	print_reg64("DESC1_0_EGP_14:	", CBM_DES64_D + DESC1_0_EGP_14);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_14:	", CBM_DES64_D + DESC0_1_EGP_14);
+	print_reg64("DESC1_1_EGP_14:	", CBM_DES64_D + DESC1_1_EGP_14);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_15:	", CBM_DES64_D + DESC0_0_EGP_15);
+	print_reg64("DESC1_0_EGP_15:	", CBM_DES64_D + DESC1_0_EGP_15);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_15:	", CBM_DES64_D + DESC0_1_EGP_15);
+	print_reg64("DESC1_1_EGP_15:	", CBM_DES64_D + DESC1_1_EGP_15);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_16:	", CBM_DES64_D + DESC0_0_EGP_16);
+	print_reg64("DESC1_0_EGP_16:	", CBM_DES64_D + DESC1_0_EGP_16);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_16:	", CBM_DES64_D + DESC0_1_EGP_16);
+	print_reg64("DESC1_1_EGP_16:	", CBM_DES64_D + DESC1_1_EGP_16);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_17:	", CBM_DES64_D + DESC0_0_EGP_17);
+	print_reg64("DESC1_0_EGP_17:	", CBM_DES64_D + DESC1_0_EGP_17);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_17:	", CBM_DES64_D + DESC0_1_EGP_17);
+	print_reg64("DESC1_1_EGP_17:	", CBM_DES64_D + DESC1_1_EGP_17);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_18:	", CBM_DES64_D + DESC0_0_EGP_18);
+	print_reg64("DESC1_0_EGP_18:	", CBM_DES64_D + DESC1_0_EGP_18);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_18:	", CBM_DES64_D + DESC0_1_EGP_18);
+	print_reg64("DESC1_1_EGP_18:	", CBM_DES64_D + DESC1_1_EGP_18);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_19:	", CBM_DES64_D + DESC0_0_EGP_19);
+	print_reg64("DESC1_0_EGP_19:	", CBM_DES64_D + DESC1_0_EGP_19);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_19:	", CBM_DES64_D + DESC0_1_EGP_19);
+	print_reg64("DESC1_1_EGP_19:	", CBM_DES64_D + DESC1_1_EGP_19);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_20:	", CBM_DES64_D + DESC0_0_EGP_20);
+	print_reg64("DESC1_0_EGP_20:	", CBM_DES64_D + DESC1_0_EGP_20);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_20:	", CBM_DES64_D + DESC0_1_EGP_20);
+	print_reg64("DESC1_1_EGP_20:	", CBM_DES64_D + DESC1_1_EGP_20);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_21:	", CBM_DES64_D + DESC0_0_EGP_21);
+	print_reg64("DESC1_0_EGP_21:	", CBM_DES64_D + DESC1_0_EGP_21);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_21:	", CBM_DES64_D + DESC0_1_EGP_21);
+	print_reg64("DESC1_1_EGP_21:	", CBM_DES64_D + DESC1_1_EGP_21);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_0_EGP_22:	", CBM_DES64_D + DESC0_0_EGP_22);
+	print_reg64("DESC1_0_EGP_22:	", CBM_DES64_D + DESC1_0_EGP_22);
+	LOGF_KLOG_CONT("\n");
+	print_reg64("DESC0_1_EGP_22:	", CBM_DES64_D + DESC0_1_EGP_22);
+	print_reg64("DESC1_1_EGP_22:	", CBM_DES64_D + DESC1_1_EGP_22);
+	LOGF_KLOG_CONT("\n");
+}
diff --git a/drivers/net/ethernet/lantiq/cbm/cbm_proc.h b/drivers/net/ethernet/lantiq/cbm/cbm_proc.h
new file mode 100755
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/cbm_proc.h
@@ -0,0 +1,85 @@
+/******************************************************************************
+
+	Copyright (c) 2012
+	Lantiq Deutschland GmbH
+
+	For licensing information, see the file 'LICENSE' in the root folder of
+	this software module.
+
+******************************************************************************/
+
+#ifndef _DRV_CBM_API_H_
+#define _DRV_CBM_API_H_
+
+#include <asm/div64.h>
+#include <linux/ctype.h>
+#include <linux/time.h>
+#include <linux/jiffies.h>
+#include <linux/seq_file.h>
+#include <linux/uaccess.h>
+#include <linux/fs.h>
+#include <linux/sort.h>
+#include <linux/version.h>
+#include <net/datapath_proc_api.h>
+#include <net/lantiq_cbm.h>
+#include "reg/cbm_ls.h"
+#include "reg/cbm.h"
+#include "reg/cbm_dqm.h"
+#include "reg/cbm_eqm.h"
+#include "reg/cbm_desc64b.h"
+#include "reg/fsqm.h"
+#include "asm/gic.h"
+
+#define QOCC_TEST 1
+
+#define CBM_PROC_NAME    "cbm"
+#define PROC_BASE        " /proc/"CBM_PROC_NAME"/"
+#define CBM_PROC_PARENT ""
+#define PROC_FILE_CBM_ENQ "cbmenq"
+#define PROC_FILE_CBM_DEQ "cbmdeq"
+#define PROC_FILE_CBM_LS "cbmls"
+#define PROC_FILE_CBM_SBA_JBA "cbmsbajba"
+#define PROC_FILE_CBM_STAT_REG "cbmstat"
+#define PROC_FILE_CBM_DES64_INGRESS_REG "cbmdes64ingress"
+#define PROC_FILE_CBM_DES64_EGRESS_REG "cbmdes64egress"
+#define PROC_FILE_RCNT_REG "fsqmrnt"
+#define PROC_FILE_FSC_FSQT_REG "fsqmfsc"
+#define PROC_FILE_CBM_ENQ_OVH_BYTES "cbmenqovh"
+#define PROC_FILE_CBM_COUNTER_MODE "cbmcntrmode"
+#define PROC_FILE_CBM_Q_THRES "cbmqthres"
+#define PROC_FILE_CBM_Q_DELAY "cbmqdelay"
+#ifdef QOCC_TEST
+#define PROC_FILE_CBM_QOCC_TEST "cbmqocctest"
+#endif
+
+#define get_val(val, mask, offset) (((val) & (mask)) >> (offset))
+
+#define cbm_memset  memset
+
+typedef void (*proc_single_callback_t) (struct seq_file *);
+typedef int (*proc_callback_t) (struct seq_file *, int);
+typedef int (*proc_init_callback_t) (void);
+typedef ssize_t(*proc_write_callback_t) (struct file *file,
+					 const char __user *input, size_t size,
+					 loff_t *loff);
+void cbm_enqueue_dump(struct seq_file *s);
+void cbm_dequeue_dump(struct seq_file *s);
+void cbm_ls_dump(struct seq_file *s);
+void cbm_sba_jba_dump(struct seq_file *s);
+void cbm_status_reg_dump(struct seq_file *s);
+void cbm_des64_ingress_dump(struct seq_file *s);
+void cbm_des64_egress_dump(struct seq_file *s);
+ssize_t fsqm_rnt_read(struct file *file, const char *buf, size_t count, loff_t *ppos);
+ssize_t fsqm_freesegment_read(struct file *file, const char *buf, size_t count, loff_t *ppos);
+void cbm_enq_ovh_bytes_read(struct seq_file *s);
+ssize_t cbm_enq_ovh_bytes_write(struct file *file, const char *buf, size_t count, loff_t *ppos);
+void cbm_counter_mode_get_proc(struct seq_file *s);
+ssize_t cbm_counter_mode_set_proc(struct file *file, const char *buf, size_t count, loff_t *ppos);
+void cbm_q_thres_get_proc(struct seq_file *s);
+ssize_t cbm_q_thres_set_proc(struct file *file, const char *buf, size_t count, loff_t *ppos);
+ssize_t cbm_eqm_delay_set_proc(struct file *file, const char *buf, size_t count, loff_t *ppos);
+#ifdef QOCC_TEST
+ssize_t cbm_qocc_test_steps(struct file *file, const char *buf, size_t count, loff_t *ppos);
+#endif
+#define CBM_PRINT printk
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/reg/cbm.h b/drivers/net/ethernet/lantiq/cbm/reg/cbm.h
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/reg/cbm.h
@@ -0,0 +1,2821 @@
+//-----------------------------------------------------------------------------
+// LSD Generator
+//-----------------------------------------------------------------------------
+// Perl Package        : LSD::generator::targetC (v1.1)
+// LSD Source          : D:/Users/shij/Perforce/l1033.grx500.win.v_shij.priv.dfv.grx500.dfv/ipg_lsd/lsd_sys/source/xml/reg_files/CBM.xml
+// Register File Name  : CBM
+// Register File Title : Central Buffer Manager Register Description
+// Register Width      : 32
+// Note                : Doxygen compliant comments
+//-----------------------------------------------------------------------------
+
+#ifndef _CBM_H
+#define _CBM_H
+
+//! \defgroup CBM Register File CBM - Central Buffer Manager Register Description
+//! @{
+
+//! Base Address of CBM
+#define CBM_MODULE_BASE 0x1E710000u
+
+//! \defgroup CBM_IRNCR_0 Register CBM_IRNCR_0 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_0 0x0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_0 0x1E710000u
+
+//! Register Reset Value
+#define CBM_IRNCR_0_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_0_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_0_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_0_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_0_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_0_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_0_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_0_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_0_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_0_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_0_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_0_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_0_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_0_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_0_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_0_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_0_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_0_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_0_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_0_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_0_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_0_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_0_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_0_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_0_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_0_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_0_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_0_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_0_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_0 Register CBM_IRNICR_0 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_0 0x4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_0 0x1E710004u
+
+//! Register Reset Value
+#define CBM_IRNICR_0_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_0_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_0_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_0_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_0_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_0_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_0_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_0_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_0_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_0_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_0_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_0_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_0_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_0_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_0_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_0_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_0_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_0 Register CBM_IRNEN_0 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_0 0x8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_0 0x1E710008u
+
+//! Register Reset Value
+#define CBM_IRNEN_0_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_0_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_0_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_0_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_0_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_0_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_0_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_0_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_0_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_0_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_0_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_0_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_0_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_0_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_0_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_0_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_0_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_0_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_0_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_0_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_0_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_0_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_0_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_0_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_0_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_0_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_0_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_0_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_0_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_0 Register IGP_IRNCR_0 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_0 0x10
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_0 0x1E710010u
+
+//! Register Reset Value
+#define IGP_IRNCR_0_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_0_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_0_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_0 Register IGP_IRNICR_0 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_0 0x14
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_0 0x1E710014u
+
+//! Register Reset Value
+#define IGP_IRNICR_0_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_0_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_0_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_0 Register IGP_IRNEN_0 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_0 0x18
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_0 0x1E710018u
+
+//! Register Reset Value
+#define IGP_IRNEN_0_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_0_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_0_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_0 Register EGP_IRNCR_0 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_0 0x20
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_0 0x1E710020u
+
+//! Register Reset Value
+#define EGP_IRNCR_0_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_0_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_0_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_0 Register EGP_IRNICR_0 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_0 0x24
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_0 0x1E710024u
+
+//! Register Reset Value
+#define EGP_IRNICR_0_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_0_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_0_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_0 Register EGP_IRNEN_0 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_0 0x28
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_0 0x1E710028u
+
+//! Register Reset Value
+#define EGP_IRNEN_0_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_0_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_0_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_1 Register CBM_IRNCR_1 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_1 0x40
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_1 0x1E710040u
+
+//! Register Reset Value
+#define CBM_IRNCR_1_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_1_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_1_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_1_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_1_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_1_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_1_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_1_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_1_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_1_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_1_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_1_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_1_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_1_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_1_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_1_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_1_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_1_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_1_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_1_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_1_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_1_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_1_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_1_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_1_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_1_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_1_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_1_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_1_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_1 Register CBM_IRNICR_1 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_1 0x44
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_1 0x1E710044u
+
+//! Register Reset Value
+#define CBM_IRNICR_1_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_1_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_1_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_1_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_1_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_1_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_1_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_1_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_1_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_1_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_1_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_1_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_1_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_1_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_1_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_1_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_1_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_1 Register CBM_IRNEN_1 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_1 0x48
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_1 0x1E710048u
+
+//! Register Reset Value
+#define CBM_IRNEN_1_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_1_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_1_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_1_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_1_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_1_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_1_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_1_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_1_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_1_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_1_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_1_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_1_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_1_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_1_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_1_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_1_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_1_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_1_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_1_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_1_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_1_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_1_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_1_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_1_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_1_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_1_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_1_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_1_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_1 Register IGP_IRNCR_1 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_1 0x50
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_1 0x1E710050u
+
+//! Register Reset Value
+#define IGP_IRNCR_1_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_1_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_1_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_1 Register IGP_IRNICR_1 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_1 0x54
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_1 0x1E710054u
+
+//! Register Reset Value
+#define IGP_IRNICR_1_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_1_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_1_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_1 Register IGP_IRNEN_1 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_1 0x58
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_1 0x1E710058u
+
+//! Register Reset Value
+#define IGP_IRNEN_1_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_1_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_1_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_1 Register EGP_IRNCR_1 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_1 0x60
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_1 0x1E710060u
+
+//! Register Reset Value
+#define EGP_IRNCR_1_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_1_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_1_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_1 Register EGP_IRNICR_1 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_1 0x64
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_1 0x1E710064u
+
+//! Register Reset Value
+#define EGP_IRNICR_1_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_1_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_1_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_1 Register EGP_IRNEN_1 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_1 0x68
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_1 0x1E710068u
+
+//! Register Reset Value
+#define EGP_IRNEN_1_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_1_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_1_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_2 Register CBM_IRNCR_2 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_2 0x80
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_2 0x1E710080u
+
+//! Register Reset Value
+#define CBM_IRNCR_2_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_2_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_2_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_2_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_2_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_2_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_2_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_2_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_2_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_2_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_2_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_2_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_2_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_2_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_2_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_2_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_2_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_2_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_2_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_2_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_2_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_2_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_2_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_2_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_2_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_2_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_2_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_2_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_2_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_2 Register CBM_IRNICR_2 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_2 0x84
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_2 0x1E710084u
+
+//! Register Reset Value
+#define CBM_IRNICR_2_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_2_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_2_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_2_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_2_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_2_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_2_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_2_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_2_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_2_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_2_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_2_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_2_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_2_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_2_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_2_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_2_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_2 Register CBM_IRNEN_2 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_2 0x88
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_2 0x1E710088u
+
+//! Register Reset Value
+#define CBM_IRNEN_2_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_2_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_2_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_2_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_2_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_2_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_2_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_2_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_2_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_2_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_2_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_2_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_2_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_2_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_2_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_2_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_2_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_2_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_2_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_2_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_2_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_2_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_2_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_2_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_2_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_2_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_2_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_2_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_2_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_2 Register IGP_IRNCR_2 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_2 0x90
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_2 0x1E710090u
+
+//! Register Reset Value
+#define IGP_IRNCR_2_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_2_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_2_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_2 Register IGP_IRNICR_2 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_2 0x94
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_2 0x1E710094u
+
+//! Register Reset Value
+#define IGP_IRNICR_2_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_2_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_2_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_2 Register IGP_IRNEN_2 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_2 0x98
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_2 0x1E710098u
+
+//! Register Reset Value
+#define IGP_IRNEN_2_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_2_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_2_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_2 Register EGP_IRNCR_2 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_2 0xA0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_2 0x1E7100A0u
+
+//! Register Reset Value
+#define EGP_IRNCR_2_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_2_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_2_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_2 Register EGP_IRNICR_2 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_2 0xA4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_2 0x1E7100A4u
+
+//! Register Reset Value
+#define EGP_IRNICR_2_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_2_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_2_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_2 Register EGP_IRNEN_2 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_2 0xA8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_2 0x1E7100A8u
+
+//! Register Reset Value
+#define EGP_IRNEN_2_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_2_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_2_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_3 Register CBM_IRNCR_3 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_3 0xC0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_3 0x1E7100C0u
+
+//! Register Reset Value
+#define CBM_IRNCR_3_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_3_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_3_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_3_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_3_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_3_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_3_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_3_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_3_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_3_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_3_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_3_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_3_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_3_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_3_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_3_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_3_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_3_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_3_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_3_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_3_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_3_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_3_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_3_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_3_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_3_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_3_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_3_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_3_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_3 Register CBM_IRNICR_3 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_3 0xC4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_3 0x1E7100C4u
+
+//! Register Reset Value
+#define CBM_IRNICR_3_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_3_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_3_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_3_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_3_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_3_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_3_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_3_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_3_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_3_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_3_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_3_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_3_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_3_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_3_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_3_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_3_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_3 Register CBM_IRNEN_3 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_3 0xC8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_3 0x1E7100C8u
+
+//! Register Reset Value
+#define CBM_IRNEN_3_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_3_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_3_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_3_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_3_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_3_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_3_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_3_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_3_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_3_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_3_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_3_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_3_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_3_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_3_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_3_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_3_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_3_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_3_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_3_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_3_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_3_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_3_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_3_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_3_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_3_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_3_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_3_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_3_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_3 Register IGP_IRNCR_3 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_3 0xD0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_3 0x1E7100D0u
+
+//! Register Reset Value
+#define IGP_IRNCR_3_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_3_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_3_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_3 Register IGP_IRNICR_3 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_3 0xD4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_3 0x1E7100D4u
+
+//! Register Reset Value
+#define IGP_IRNICR_3_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_3_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_3_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_3 Register IGP_IRNEN_3 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_3 0xD8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_3 0x1E7100D8u
+
+//! Register Reset Value
+#define IGP_IRNEN_3_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_3_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_3_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_3 Register EGP_IRNCR_3 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_3 0xE0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_3 0x1E7100E0u
+
+//! Register Reset Value
+#define EGP_IRNCR_3_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_3_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_3_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_3 Register EGP_IRNICR_3 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_3 0xE4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_3 0x1E7100E4u
+
+//! Register Reset Value
+#define EGP_IRNICR_3_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_3_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_3_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_3 Register EGP_IRNEN_3 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_3 0xE8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_3 0x1E7100E8u
+
+//! Register Reset Value
+#define EGP_IRNEN_3_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_3_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_3_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_4 Register CBM_IRNCR_4 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_4 0x100
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_4 0x1E710100u
+
+//! Register Reset Value
+#define CBM_IRNCR_4_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_4_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_4_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_4_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_4_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_4_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_4_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_4_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_4_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_4_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_4_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_4_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_4_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_4_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_4_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_4_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_4_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_4_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_4_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_4_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_4_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_4_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_4_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_4_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_4_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_4_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_4_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_4_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_4_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_4 Register CBM_IRNICR_4 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_4 0x104
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_4 0x1E710104u
+
+//! Register Reset Value
+#define CBM_IRNICR_4_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_4_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_4_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_4_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_4_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_4_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_4_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_4_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_4_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_4_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_4_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_4_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_4_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_4_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_4_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_4_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_4_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_4 Register CBM_IRNEN_4 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_4 0x108
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_4 0x1E710108u
+
+//! Register Reset Value
+#define CBM_IRNEN_4_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_4_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_4_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_4_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_4_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_4_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_4_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_4_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_4_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_4_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_4_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_4_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_4_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_4_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_4_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_4_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_4_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_4_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_4_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_4_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_4_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_4_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_4_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_4_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_4_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_4_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_4_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_4_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_4_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_4 Register IGP_IRNCR_4 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_4 0x110
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_4 0x1E710110u
+
+//! Register Reset Value
+#define IGP_IRNCR_4_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_4_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_4_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_4 Register IGP_IRNICR_4 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_4 0x114
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_4 0x1E710114u
+
+//! Register Reset Value
+#define IGP_IRNICR_4_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_4_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_4_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_4 Register IGP_IRNEN_4 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_4 0x118
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_4 0x1E710118u
+
+//! Register Reset Value
+#define IGP_IRNEN_4_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_4_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_4_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_4 Register EGP_IRNCR_4 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_4 0x120
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_4 0x1E710120u
+
+//! Register Reset Value
+#define EGP_IRNCR_4_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_4_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_4_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_4 Register EGP_IRNICR_4 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_4 0x124
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_4 0x1E710124u
+
+//! Register Reset Value
+#define EGP_IRNICR_4_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_4_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_4_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_4 Register EGP_IRNEN_4 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_4 0x128
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_4 0x1E710128u
+
+//! Register Reset Value
+#define EGP_IRNEN_4_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_4_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_4_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_5 Register CBM_IRNCR_5 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_5 0x140
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_5 0x1E710140u
+
+//! Register Reset Value
+#define CBM_IRNCR_5_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_5_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_5_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_5_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_5_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_5_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_5_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_5_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_5_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_5_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_5_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_5_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_5_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_5_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_5_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_5_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_5_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_5_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_5_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_5_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_5_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_5_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_5_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_5_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_5_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_5_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_5_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_5_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_5_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_5 Register CBM_IRNICR_5 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_5 0x144
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_5 0x1E710144u
+
+//! Register Reset Value
+#define CBM_IRNICR_5_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_5_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_5_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_5_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_5_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_5_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_5_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_5_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_5_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_5_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_5_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_5_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_5_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_5_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_5_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_5_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_5_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_5 Register CBM_IRNEN_5 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_5 0x148
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_5 0x1E710148u
+
+//! Register Reset Value
+#define CBM_IRNEN_5_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_5_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_5_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_5_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_5_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_5_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_5_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_5_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_5_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_5_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_5_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_5_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_5_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_5_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_5_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_5_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_5_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_5_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_5_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_5_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_5_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_5_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_5_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_5_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_5_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_5_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_5_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_5_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_5_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_5 Register IGP_IRNCR_5 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_5 0x150
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_5 0x1E710150u
+
+//! Register Reset Value
+#define IGP_IRNCR_5_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_5_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_5_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_5 Register IGP_IRNICR_5 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_5 0x154
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_5 0x1E710154u
+
+//! Register Reset Value
+#define IGP_IRNICR_5_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_5_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_5_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_5 Register IGP_IRNEN_5 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_5 0x158
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_5 0x1E710158u
+
+//! Register Reset Value
+#define IGP_IRNEN_5_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_5_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_5_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_5 Register EGP_IRNCR_5 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_5 0x160
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_5 0x1E710160u
+
+//! Register Reset Value
+#define EGP_IRNCR_5_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_5_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_5_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_5 Register EGP_IRNICR_5 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_5 0x164
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_5 0x1E710164u
+
+//! Register Reset Value
+#define EGP_IRNICR_5_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_5_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_5_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_5 Register EGP_IRNEN_5 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_5 0x168
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_5 0x1E710168u
+
+//! Register Reset Value
+#define EGP_IRNEN_5_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_5_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_5_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_6 Register CBM_IRNCR_6 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_6 0x180
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_6 0x1E710180u
+
+//! Register Reset Value
+#define CBM_IRNCR_6_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_6_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_6_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_6_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_6_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_6_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_6_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_6_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_6_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_6_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_6_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_6_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_6_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_6_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_6_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_6_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_6_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_6_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_6_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_6_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_6_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_6_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_6_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_6_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_6_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_6_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_6_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_6_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_6_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_6 Register CBM_IRNICR_6 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_6 0x184
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_6 0x1E710184u
+
+//! Register Reset Value
+#define CBM_IRNICR_6_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_6_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_6_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_6_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_6_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_6_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_6_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_6_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_6_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_6_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_6_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_6_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_6_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_6_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_6_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_6_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_6_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_6 Register CBM_IRNEN_6 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_6 0x188
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_6 0x1E710188u
+
+//! Register Reset Value
+#define CBM_IRNEN_6_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_6_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_6_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_6_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_6_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_6_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_6_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_6_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_6_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_6_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_6_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_6_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_6_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_6_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_6_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_6_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_6_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_6_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_6_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_6_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_6_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_6_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_6_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_6_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_6_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_6_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_6_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_6_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_6_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_6 Register IGP_IRNCR_6 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_6 0x190
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_6 0x1E710190u
+
+//! Register Reset Value
+#define IGP_IRNCR_6_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_6_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_6_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_6 Register IGP_IRNICR_6 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_6 0x194
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_6 0x1E710194u
+
+//! Register Reset Value
+#define IGP_IRNICR_6_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_6_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_6_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_6 Register IGP_IRNEN_6 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_6 0x198
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_6 0x1E710198u
+
+//! Register Reset Value
+#define IGP_IRNEN_6_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_6_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_6_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_6 Register EGP_IRNCR_6 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_6 0x1A0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_6 0x1E7101A0u
+
+//! Register Reset Value
+#define EGP_IRNCR_6_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_6_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_6_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_6 Register EGP_IRNICR_6 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_6 0x1A4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_6 0x1E7101A4u
+
+//! Register Reset Value
+#define EGP_IRNICR_6_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_6_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_6_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_6 Register EGP_IRNEN_6 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_6 0x1A8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_6 0x1E7101A8u
+
+//! Register Reset Value
+#define EGP_IRNEN_6_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_6_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_6_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_IRNCR_7 Register CBM_IRNCR_7 - CBM IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNCR_7 0x1C0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNCR_7 0x1E7101C0u
+
+//! Register Reset Value
+#define CBM_IRNCR_7_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_7_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNCR_7_TMUI_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_7_TMUI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_7_TMUI_INTACK 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_7_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNCR_7_TMUERRI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_7_TMUERRI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_7_TMUERRI_INTACK 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_7_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNCR_7_FSQMI0_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_7_FSQMI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_7_FSQMI0_INTACK 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_7_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNCR_7_FSQMERRI0_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_7_FSQMERRI0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_7_FSQMERRI0_INTACK 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_7_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNCR_7_FSQMI1_MASK 0x40u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_7_FSQMI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_7_FSQMI1_INTACK 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_7_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNCR_7_FSQMERRI1_MASK 0x80u
+//! Constant NUL - NULL
+#define CONST_CBM_IRNCR_7_FSQMERRI1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_CBM_IRNCR_7_FSQMERRI1_INTACK 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_7_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNCR_7_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_7_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNCR_7_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNICR_7 Register CBM_IRNICR_7 - CBM IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNICR_7 0x1C4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNICR_7 0x1E7101C4u
+
+//! Register Reset Value
+#define CBM_IRNICR_7_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_7_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNICR_7_TMUI_MASK 0x1u
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_7_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNICR_7_TMUERRI_MASK 0x2u
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_7_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNICR_7_FSQMI0_MASK 0x10u
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_7_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNICR_7_FSQMERRI0_MASK 0x20u
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_7_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNICR_7_FSQMI1_MASK 0x40u
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_7_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNICR_7_FSQMERRI1_MASK 0x80u
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_7_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNICR_7_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_7_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNICR_7_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup CBM_IRNEN_7 Register CBM_IRNEN_7 - CBM IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_IRNEN_7 0x1C8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_IRNEN_7 0x1E7101C8u
+
+//! Register Reset Value
+#define CBM_IRNEN_7_RST 0x00000000u
+
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_7_TMUI_POS 0
+//! Field TMUI - TMU Interrupt
+#define CBM_IRNEN_7_TMUI_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_7_TMUI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_7_TMUI_EN 0x1
+
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_7_TMUERRI_POS 1
+//! Field TMUERRI - TMU Error Interrupt
+#define CBM_IRNEN_7_TMUERRI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_7_TMUERRI_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_7_TMUERRI_EN 0x1
+
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_7_FSQMI0_POS 4
+//! Field FSQMI0 - FSQM Interrupt 0
+#define CBM_IRNEN_7_FSQMI0_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_7_FSQMI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_7_FSQMI0_EN 0x1
+
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_7_FSQMERRI0_POS 5
+//! Field FSQMERRI0 - FSQM Error Interrupt 0
+#define CBM_IRNEN_7_FSQMERRI0_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_7_FSQMERRI0_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_7_FSQMERRI0_EN 0x1
+
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_7_FSQMI1_POS 6
+//! Field FSQMI1 - FSQM Interrupt 1
+#define CBM_IRNEN_7_FSQMI1_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_7_FSQMI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_7_FSQMI1_EN 0x1
+
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_7_FSQMERRI1_POS 7
+//! Field FSQMERRI1 - FSQM Error Interrupt 1
+#define CBM_IRNEN_7_FSQMERRI1_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CBM_IRNEN_7_FSQMERRI1_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_IRNEN_7_FSQMERRI1_EN 0x1
+
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_7_LSI_POS 8
+//! Field LSI - Load Spreader Interrupt
+#define CBM_IRNEN_7_LSI_MASK 0xF00u
+
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_7_LLI_POS 16
+//! Field LLI - Linked List Interrupt
+#define CBM_IRNEN_7_LLI_MASK 0x30000u
+
+//! @}
+
+//! \defgroup IGP_IRNCR_7 Register IGP_IRNCR_7 - Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNCR_7 0x1D0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNCR_7 0x1E7101D0u
+
+//! Register Reset Value
+#define IGP_IRNCR_7_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_7_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNCR_7_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNICR_7 Register IGP_IRNICR_7 - Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNICR_7 0x1D4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNICR_7 0x1E7101D4u
+
+//! Register Reset Value
+#define IGP_IRNICR_7_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_7_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNICR_7_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup IGP_IRNEN_7 Register IGP_IRNEN_7 - Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IGP_IRNEN_7 0x1D8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_IGP_IRNEN_7 0x1E7101D8u
+
+//! Register Reset Value
+#define IGP_IRNEN_7_RST 0x00000000u
+
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_7_IGPI_POS 0
+//! Field IGPI - Ingress Port Interrupt
+#define IGP_IRNEN_7_IGPI_MASK 0xFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNCR_7 Register EGP_IRNCR_7 - Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNCR_7 0x1E0
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNCR_7 0x1E7101E0u
+
+//! Register Reset Value
+#define EGP_IRNCR_7_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_7_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNCR_7_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNICR_7 Register EGP_IRNICR_7 - Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNICR_7 0x1E4
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNICR_7 0x1E7101E4u
+
+//! Register Reset Value
+#define EGP_IRNICR_7_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_7_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNICR_7_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup EGP_IRNEN_7 Register EGP_IRNEN_7 - Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define EGP_IRNEN_7 0x1E8
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_EGP_IRNEN_7 0x1E7101E8u
+
+//! Register Reset Value
+#define EGP_IRNEN_7_RST 0x00000000u
+
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_7_EGPI_POS 0
+//! Field EGPI - Egress Port Interrupt
+#define EGP_IRNEN_7_EGPI_MASK 0x7FFFFFFu
+
+//! @}
+
+//! \defgroup CBM_SBA_0 Register CBM_SBA_0 - Standard Base Address
+//! @{
+
+//! Register Offset (relative)
+#define CBM_SBA_0 0x200
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_SBA_0 0x1E710200u
+
+//! Register Reset Value
+#define CBM_SBA_0_RST 0x00000000u
+
+//! Field BA - Base Address
+#define CBM_SBA_0_BA_POS 11
+//! Field BA - Base Address
+#define CBM_SBA_0_BA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup CBM_SBA_1 Register CBM_SBA_1 - Standard Base Address
+//! @{
+
+//! Register Offset (relative)
+#define CBM_SBA_1 0x204
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_SBA_1 0x1E710204u
+
+//! Register Reset Value
+#define CBM_SBA_1_RST 0x00000000u
+
+//! Field BA - Base Address
+#define CBM_SBA_1_BA_POS 11
+//! Field BA - Base Address
+#define CBM_SBA_1_BA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup CBM_JBA_0 Register CBM_JBA_0 - Jumbo Base Address
+//! @{
+
+//! Register Offset (relative)
+#define CBM_JBA_0 0x208
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_JBA_0 0x1E710208u
+
+//! Register Reset Value
+#define CBM_JBA_0_RST 0x00000000u
+
+//! Field BA - Base Address
+#define CBM_JBA_0_BA_POS 11
+//! Field BA - Base Address
+#define CBM_JBA_0_BA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup CBM_JBA_1 Register CBM_JBA_1 - Jumbo Base Address
+//! @{
+
+//! Register Offset (relative)
+#define CBM_JBA_1 0x20C
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_JBA_1 0x1E71020Cu
+
+//! Register Reset Value
+#define CBM_JBA_1_RST 0x00000000u
+
+//! Field BA - Base Address
+#define CBM_JBA_1_BA_POS 11
+//! Field BA - Base Address
+#define CBM_JBA_1_BA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup CBM_CTRL Register CBM_CTRL - CBM Control
+//! @{
+
+//! Register Offset (relative)
+#define CBM_CTRL 0x210
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_CTRL 0x1E710210u
+
+//! Register Reset Value
+#define CBM_CTRL_RST 0x00000000u
+
+//! Field ACT - CBM Activity Status
+#define CBM_CTRL_ACT_POS 0
+//! Field ACT - CBM Activity Status
+#define CBM_CTRL_ACT_MASK 0x1u
+//! Constant INACTIVE - Inactive
+#define CONST_CBM_CTRL_ACT_INACTIVE 0x0
+//! Constant ACTIVE - Active
+#define CONST_CBM_CTRL_ACT_ACTIVE 0x1
+
+//! Field WLAN_EP3 - WLAN EP 3
+#define CBM_CTRL_WLAN_EP3_POS 4
+//! Field WLAN_EP3 - WLAN EP 3
+#define CBM_CTRL_WLAN_EP3_MASK 0xF0u
+
+//! Field WLAN_EP2 - WLAN EP 2
+#define CBM_CTRL_WLAN_EP2_POS 8
+//! Field WLAN_EP2 - WLAN EP 2
+#define CBM_CTRL_WLAN_EP2_MASK 0xF00u
+
+//! Field WLAN_EP1 - WLAN EP 1
+#define CBM_CTRL_WLAN_EP1_POS 12
+//! Field WLAN_EP1 - WLAN EP 1
+#define CBM_CTRL_WLAN_EP1_MASK 0xF000u
+
+//! Field LSBYP - Hardware SMS lightspeed mode
+#define CBM_CTRL_LSBYP_POS 16
+//! Field LSBYP - Hardware SMS lightspeed mode
+#define CBM_CTRL_LSBYP_MASK 0x10000u
+//! Constant BYP - Lightspeed mode bypass
+#define CONST_CBM_CTRL_LSBYP_BYP 0x0
+//! Constant LS - Lightspeed mode enable
+#define CONST_CBM_CTRL_LSBYP_LS 0x1
+
+//! Field JSEL - Jumbo Select
+#define CBM_CTRL_JSEL_POS 17
+//! Field JSEL - Jumbo Select
+#define CBM_CTRL_JSEL_MASK 0x20000u
+//! Constant JSEL0 - Jumbo frame size 8 KBytes
+#define CONST_CBM_CTRL_JSEL_JSEL0 0x0
+//! Constant JSEL1 - Jumbo frame size 16 KBytes
+#define CONST_CBM_CTRL_JSEL_JSEL1 0x1
+
+//! Field WLAN_EP0 - WLAN EP 0
+#define CBM_CTRL_WLAN_EP0_POS 20
+//! Field WLAN_EP0 - WLAN EP 0
+#define CBM_CTRL_WLAN_EP0_MASK 0xF00000u
+
+//! Field LL_DBG - Linked List Debug
+#define CBM_CTRL_LL_DBG_POS 24
+//! Field LL_DBG - Linked List Debug
+#define CBM_CTRL_LL_DBG_MASK 0x1000000u
+//! Constant DIS - Disable
+#define CONST_CBM_CTRL_LL_DBG_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CBM_CTRL_LL_DBG_EN 0x1
+
+//! Field DESC64B_RST - 64-bit Descriptor Reset
+#define CBM_CTRL_DESC64B_RST_POS 25
+//! Field DESC64B_RST - 64-bit Descriptor Reset
+#define CBM_CTRL_DESC64B_RST_MASK 0x2000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_DESC64B_RST_NORMAL 0x0
+//! Constant RESET - Reset the 64-bit descriptors
+#define CONST_CBM_CTRL_DESC64B_RST_RESET 0x1
+
+//! Field LS_RST - Load Spreader Reset
+#define CBM_CTRL_LS_RST_POS 26
+//! Field LS_RST - Load Spreader Reset
+#define CBM_CTRL_LS_RST_MASK 0x4000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_LS_RST_NORMAL 0x0
+//! Constant RESET - Reset the Load Spreader
+#define CONST_CBM_CTRL_LS_RST_RESET 0x1
+
+//! Field TMU_RST - TMU Reset
+#define CBM_CTRL_TMU_RST_POS 27
+//! Field TMU_RST - TMU Reset
+#define CBM_CTRL_TMU_RST_MASK 0x8000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_TMU_RST_NORMAL 0x0
+//! Constant RESET - Reset the TMU
+#define CONST_CBM_CTRL_TMU_RST_RESET 0x1
+
+//! Field FSQM1_RST - FSQM1 Reset
+#define CBM_CTRL_FSQM1_RST_POS 28
+//! Field FSQM1_RST - FSQM1 Reset
+#define CBM_CTRL_FSQM1_RST_MASK 0x10000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_FSQM1_RST_NORMAL 0x0
+//! Constant RESET - Reset the FSQM1
+#define CONST_CBM_CTRL_FSQM1_RST_RESET 0x1
+
+//! Field FSQM0_RST - FSQM0 Reset
+#define CBM_CTRL_FSQM0_RST_POS 29
+//! Field FSQM0_RST - FSQM0 Reset
+#define CBM_CTRL_FSQM0_RST_MASK 0x20000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_FSQM0_RST_NORMAL 0x0
+//! Constant RESET - Reset the FSQM0
+#define CONST_CBM_CTRL_FSQM0_RST_RESET 0x1
+
+//! Field DQM_RST - DQM Reset
+#define CBM_CTRL_DQM_RST_POS 30
+//! Field DQM_RST - DQM Reset
+#define CBM_CTRL_DQM_RST_MASK 0x40000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_DQM_RST_NORMAL 0x0
+//! Constant RESET - Reset the Dequeue Manager
+#define CONST_CBM_CTRL_DQM_RST_RESET 0x1
+
+//! Field EQM_RST - EQM Reset
+#define CBM_CTRL_EQM_RST_POS 31
+//! Field EQM_RST - EQM Reset
+#define CBM_CTRL_EQM_RST_MASK 0x80000000u
+//! Constant NORMAL - Normal Operation
+#define CONST_CBM_CTRL_EQM_RST_NORMAL 0x0
+//! Constant RESET - Reset the Enqueue Manager
+#define CONST_CBM_CTRL_EQM_RST_RESET 0x1
+
+//! @}
+
+//! \defgroup CBM_LL_DBG_0 Register CBM_LL_DBG_0 - CBM Linked List Debug
+//! @{
+
+//! Register Offset (relative)
+#define CBM_LL_DBG_0 0x214
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_LL_DBG_0 0x1E710214u
+
+//! Register Reset Value
+#define CBM_LL_DBG_0_RST 0x7FFF0000u
+
+//! Field ERR_PORT - Error Port Type
+#define CBM_LL_DBG_0_ERR_PORT_POS 1
+//! Field ERR_PORT - Error Port Type
+#define CBM_LL_DBG_0_ERR_PORT_MASK 0x2u
+//! Constant IGP - Ingress Port
+#define CONST_CBM_LL_DBG_0_ERR_PORT_IGP 0x0
+//! Constant EGP - Egress Port
+#define CONST_CBM_LL_DBG_0_ERR_PORT_EGP 0x1
+
+//! Field ERR_EGPID - Error Egress Port ID
+#define CBM_LL_DBG_0_ERR_EGPID_POS 4
+//! Field ERR_EGPID - Error Egress Port ID
+#define CBM_LL_DBG_0_ERR_EGPID_MASK 0x1F0u
+
+//! Field ERR_IGPID - Error Ingress Port ID
+#define CBM_LL_DBG_0_ERR_IGPID_POS 10
+//! Field ERR_IGPID - Error Ingress Port ID
+#define CBM_LL_DBG_0_ERR_IGPID_MASK 0xC00u
+
+//! Field ERR_LSA - Error LSA
+#define CBM_LL_DBG_0_ERR_LSA_POS 16
+//! Field ERR_LSA - Error LSA
+#define CBM_LL_DBG_0_ERR_LSA_MASK 0x7FFF0000u
+
+//! @}
+
+//! \defgroup CBM_LL_DBG_1 Register CBM_LL_DBG_1 - CBM Linked List Debug
+//! @{
+
+//! Register Offset (relative)
+#define CBM_LL_DBG_1 0x218
+//! Register Offset (absolute) for 1st Instance CBM
+#define CBM_CBM_LL_DBG_1 0x1E710218u
+
+//! Register Reset Value
+#define CBM_LL_DBG_1_RST 0x7FFF0000u
+
+//! Field ERR_PORT - Error Port Type
+#define CBM_LL_DBG_1_ERR_PORT_POS 1
+//! Field ERR_PORT - Error Port Type
+#define CBM_LL_DBG_1_ERR_PORT_MASK 0x2u
+//! Constant IGP - Ingress Port
+#define CONST_CBM_LL_DBG_1_ERR_PORT_IGP 0x0
+//! Constant EGP - Egress Port
+#define CONST_CBM_LL_DBG_1_ERR_PORT_EGP 0x1
+
+//! Field ERR_EGPID - Error Egress Port ID
+#define CBM_LL_DBG_1_ERR_EGPID_POS 4
+//! Field ERR_EGPID - Error Egress Port ID
+#define CBM_LL_DBG_1_ERR_EGPID_MASK 0x1F0u
+
+//! Field ERR_IGPID - Error Ingress Port ID
+#define CBM_LL_DBG_1_ERR_IGPID_POS 10
+//! Field ERR_IGPID - Error Ingress Port ID
+#define CBM_LL_DBG_1_ERR_IGPID_MASK 0xC00u
+
+//! Field ERR_LSA - Error LSA
+#define CBM_LL_DBG_1_ERR_LSA_POS 16
+//! Field ERR_LSA - Error LSA
+#define CBM_LL_DBG_1_ERR_LSA_MASK 0x7FFF0000u
+
+//! @}
+
+//! @}
+
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/reg/cbm_desc64b.h b/drivers/net/ethernet/lantiq/cbm/reg/cbm_desc64b.h
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/reg/cbm_desc64b.h
@@ -0,0 +1,2759 @@
+//-----------------------------------------------------------------------------
+// LSD Generator
+//-----------------------------------------------------------------------------
+// Perl Package        : LSD::generator::targetC (v1.1)
+// LSD Source          : D:/Users/shij/Perforce/l1033.grx500.win.v_shij.priv.dfv.grx500.dfv/ipg_lsd/lsd_sys/source/xml/reg_files/CBM_Desc64b.xml
+// Register File Name  : CBM_DESC64B
+// Register File Title : Central Buffer Manager 64-Bit Descriptor Register Description
+// Register Width      : 64
+// Note                : Doxygen compliant comments
+//-----------------------------------------------------------------------------
+
+#ifndef _CBM_DESC64B_H
+#define _CBM_DESC64B_H
+
+//! \defgroup CBM_DESC64B Register File CBM_DESC64B - Central Buffer Manager 64-Bit Descriptor Register Description
+//! @{
+
+//! Base Address of CBM_DESC64B
+#define CBM_DESC64B_MODULE_BASE 0x1E500000u
+
+//! \defgroup SDESC0_0_IGP_5 Register SDESC0_0_IGP_5 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_5 0x0
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_5 0x1E500000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_5 Register SDESC1_0_IGP_5 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_5 0x8
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_5 0x1E500008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_5_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_5 Register SDESC0_1_IGP_5 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_5 0x10
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_5 0x1E500010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_5 Register SDESC1_1_IGP_5 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_5 0x18
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_5 0x1E500018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_5_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_5 Register JDESC0_0_IGP_5 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_5 0x800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_5 0x1E500800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_5 Register JDESC1_0_IGP_5 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_5 0x808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_5 0x1E500808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_5_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_5 Register JDESC0_1_IGP_5 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_5 0x810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_5 0x1E500810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_5 Register JDESC1_1_IGP_5 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_5 0x818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_5 0x1E500818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_5_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_6 Register SDESC0_0_IGP_6 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_6 0x1000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_6 0x1E501000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_6 Register SDESC1_0_IGP_6 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_6 0x1008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_6 0x1E501008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_6_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_6 Register SDESC0_1_IGP_6 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_6 0x1010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_6 0x1E501010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_6 Register SDESC1_1_IGP_6 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_6 0x1018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_6 0x1E501018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_6_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_6 Register JDESC0_0_IGP_6 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_6 0x1800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_6 0x1E501800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_6 Register JDESC1_0_IGP_6 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_6 0x1808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_6 0x1E501808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_6_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_6 Register JDESC0_1_IGP_6 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_6 0x1810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_6 0x1E501810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_6 Register JDESC1_1_IGP_6 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_6 0x1818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_6 0x1E501818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_6_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_7 Register SDESC0_0_IGP_7 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_7 0x2000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_7 0x1E502000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_7 Register SDESC1_0_IGP_7 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_7 0x2008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_7 0x1E502008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_7_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_7 Register SDESC0_1_IGP_7 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_7 0x2010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_7 0x1E502010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_7 Register SDESC1_1_IGP_7 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_7 0x2018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_7 0x1E502018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_7_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_7 Register JDESC0_0_IGP_7 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_7 0x2800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_7 0x1E502800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_7 Register JDESC1_0_IGP_7 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_7 0x2808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_7 0x1E502808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_7_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_7 Register JDESC0_1_IGP_7 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_7 0x2810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_7 0x1E502810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_7 Register JDESC1_1_IGP_7 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_7 0x2818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_7 0x1E502818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_7_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_8 Register SDESC0_0_IGP_8 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_8 0x3000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_8 0x1E503000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_8 Register SDESC1_0_IGP_8 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_8 0x3008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_8 0x1E503008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_8_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_8 Register SDESC0_1_IGP_8 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_8 0x3010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_8 0x1E503010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_8 Register SDESC1_1_IGP_8 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_8 0x3018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_8 0x1E503018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_8_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_8 Register JDESC0_0_IGP_8 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_8 0x3800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_8 0x1E503800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_8 Register JDESC1_0_IGP_8 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_8 0x3808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_8 0x1E503808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_8_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_8 Register JDESC0_1_IGP_8 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_8 0x3810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_8 0x1E503810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_8 Register JDESC1_1_IGP_8 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_8 0x3818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_8 0x1E503818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_8_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_9 Register SDESC0_0_IGP_9 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_9 0x4000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_9 0x1E504000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_9 Register SDESC1_0_IGP_9 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_9 0x4008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_9 0x1E504008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_9_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_9 Register SDESC0_1_IGP_9 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_9 0x4010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_9 0x1E504010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_9 Register SDESC1_1_IGP_9 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_9 0x4018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_9 0x1E504018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_9_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_9 Register JDESC0_0_IGP_9 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_9 0x4800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_9 0x1E504800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_9 Register JDESC1_0_IGP_9 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_9 0x4808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_9 0x1E504808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_9_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_9 Register JDESC0_1_IGP_9 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_9 0x4810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_9 0x1E504810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_9 Register JDESC1_1_IGP_9 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_9 0x4818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_9 0x1E504818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_9_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_10 Register SDESC0_0_IGP_10 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_10 0x5000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_10 0x1E505000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_10 Register SDESC1_0_IGP_10 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_10 0x5008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_10 0x1E505008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_10_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_10 Register SDESC0_1_IGP_10 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_10 0x5010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_10 0x1E505010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_10 Register SDESC1_1_IGP_10 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_10 0x5018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_10 0x1E505018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_10_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_10 Register JDESC0_0_IGP_10 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_10 0x5800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_10 0x1E505800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_10 Register JDESC1_0_IGP_10 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_10 0x5808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_10 0x1E505808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_10_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_10 Register JDESC0_1_IGP_10 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_10 0x5810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_10 0x1E505810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_10 Register JDESC1_1_IGP_10 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_10 0x5818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_10 0x1E505818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_10_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_11 Register SDESC0_0_IGP_11 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_11 0x6000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_11 0x1E506000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_11 Register SDESC1_0_IGP_11 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_11 0x6008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_11 0x1E506008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_11_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_11 Register SDESC0_1_IGP_11 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_11 0x6010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_11 0x1E506010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_11 Register SDESC1_1_IGP_11 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_11 0x6018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_11 0x1E506018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_11_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_11 Register JDESC0_0_IGP_11 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_11 0x6800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_11 0x1E506800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_11 Register JDESC1_0_IGP_11 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_11 0x6808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_11 0x1E506808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_11_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_11 Register JDESC0_1_IGP_11 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_11 0x6810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_11 0x1E506810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_11 Register JDESC1_1_IGP_11 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_11 0x6818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_11 0x1E506818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_11_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_12 Register SDESC0_0_IGP_12 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_12 0x7000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_12 0x1E507000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_12 Register SDESC1_0_IGP_12 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_12 0x7008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_12 0x1E507008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_12_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_12 Register SDESC0_1_IGP_12 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_12 0x7010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_12 0x1E507010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_12 Register SDESC1_1_IGP_12 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_12 0x7018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_12 0x1E507018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_12_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_12 Register JDESC0_0_IGP_12 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_12 0x7800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_12 0x1E507800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_12 Register JDESC1_0_IGP_12 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_12 0x7808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_12 0x1E507808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_12_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_12 Register JDESC0_1_IGP_12 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_12 0x7810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_12 0x1E507810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_12 Register JDESC1_1_IGP_12 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_12 0x7818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_12 0x1E507818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_12_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_13 Register SDESC0_0_IGP_13 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_13 0x8000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_13 0x1E508000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_13 Register SDESC1_0_IGP_13 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_13 0x8008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_13 0x1E508008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_13_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_13 Register SDESC0_1_IGP_13 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_13 0x8010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_13 0x1E508010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_13 Register SDESC1_1_IGP_13 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_13 0x8018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_13 0x1E508018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_13_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_13 Register JDESC0_0_IGP_13 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_13 0x8800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_13 0x1E508800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_13 Register JDESC1_0_IGP_13 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_13 0x8808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_13 0x1E508808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_13_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_13 Register JDESC0_1_IGP_13 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_13 0x8810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_13 0x1E508810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_13 Register JDESC1_1_IGP_13 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_13 0x8818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_13 0x1E508818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_13_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_14 Register SDESC0_0_IGP_14 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_14 0x9000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_0_IGP_14 0x1E509000u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_0_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_14 Register SDESC1_0_IGP_14 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_14 0x9008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_0_IGP_14 0x1E509008u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_14_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_0_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_14 Register SDESC0_1_IGP_14 - Ingress Port 64 Bit Standard Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_14 0x9010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC0_1_IGP_14 0x1E509010u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define SDESC0_1_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_14 Register SDESC1_1_IGP_14 - Ingress Port 64 Bit Standard Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_14 0x9018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_SDESC1_1_IGP_14 0x1E509018u
+
+//! Register Reset Value
+#define SDESC1_1_IGP_14_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define SDESC1_1_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_14 Register JDESC0_0_IGP_14 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_14 0x9800
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_0_IGP_14 0x1E509800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_0_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_14 Register JDESC1_0_IGP_14 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_14 0x9808
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_0_IGP_14 0x1E509808u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_14_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_0_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_14 Register JDESC0_1_IGP_14 - Ingress Port 64 Bit Jumbo Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_14 0x9810
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC0_1_IGP_14 0x1E509810u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define JDESC0_1_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_14 Register JDESC1_1_IGP_14 - Ingress Port 64 Bit Jumbo Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_14 0x9818
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_JDESC1_1_IGP_14 0x1E509818u
+
+//! Register Reset Value
+#define JDESC1_1_IGP_14_RST 0x8000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define JDESC1_1_IGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_5 Register DESC0_0_EGP_5 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_5 0x40000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_5 0x1E540000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_5 Register DESC1_0_EGP_5 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_5 0x40008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_5 0x1E540008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_5 Register DESC0_1_EGP_5 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_5 0x40010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_5 0x1E540010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_5 Register DESC1_1_EGP_5 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_5 0x40018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_5 0x1E540018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_5_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_5_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_6 Register DESC0_0_EGP_6 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_6 0x41000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_6 0x1E541000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_6 Register DESC1_0_EGP_6 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_6 0x41008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_6 0x1E541008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_6 Register DESC0_1_EGP_6 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_6 0x41010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_6 0x1E541010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_6 Register DESC1_1_EGP_6 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_6 0x41018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_6 0x1E541018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_6_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_6_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_7 Register DESC0_0_EGP_7 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_7 0x42000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_7 0x1E542000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_7 Register DESC1_0_EGP_7 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_7 0x42008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_7 0x1E542008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_7 Register DESC0_1_EGP_7 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_7 0x42010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_7 0x1E542010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_7 Register DESC1_1_EGP_7 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_7 0x42018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_7 0x1E542018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_7_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_7_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_8 Register DESC0_0_EGP_8 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_8 0x43000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_8 0x1E543000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_8 Register DESC1_0_EGP_8 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_8 0x43008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_8 0x1E543008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_8 Register DESC0_1_EGP_8 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_8 0x43010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_8 0x1E543010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_8 Register DESC1_1_EGP_8 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_8 0x43018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_8 0x1E543018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_8_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_8_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_9 Register DESC0_0_EGP_9 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_9 0x44000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_9 0x1E544000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_9 Register DESC1_0_EGP_9 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_9 0x44008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_9 0x1E544008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_9 Register DESC0_1_EGP_9 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_9 0x44010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_9 0x1E544010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_9 Register DESC1_1_EGP_9 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_9 0x44018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_9 0x1E544018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_9_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_9_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_10 Register DESC0_0_EGP_10 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_10 0x45000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_10 0x1E545000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_10 Register DESC1_0_EGP_10 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_10 0x45008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_10 0x1E545008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_10 Register DESC0_1_EGP_10 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_10 0x45010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_10 0x1E545010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_10 Register DESC1_1_EGP_10 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_10 0x45018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_10 0x1E545018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_10_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_10_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_11 Register DESC0_0_EGP_11 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_11 0x46000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_11 0x1E546000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_11 Register DESC1_0_EGP_11 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_11 0x46008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_11 0x1E546008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_11 Register DESC0_1_EGP_11 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_11 0x46010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_11 0x1E546010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_11 Register DESC1_1_EGP_11 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_11 0x46018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_11 0x1E546018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_11_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_11_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_12 Register DESC0_0_EGP_12 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_12 0x47000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_12 0x1E547000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_12 Register DESC1_0_EGP_12 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_12 0x47008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_12 0x1E547008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_12 Register DESC0_1_EGP_12 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_12 0x47010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_12 0x1E547010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_12 Register DESC1_1_EGP_12 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_12 0x47018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_12 0x1E547018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_12_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_12_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_13 Register DESC0_0_EGP_13 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_13 0x48000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_13 0x1E548000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_13 Register DESC1_0_EGP_13 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_13 0x48008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_13 0x1E548008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_13 Register DESC0_1_EGP_13 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_13 0x48010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_13 0x1E548010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_13 Register DESC1_1_EGP_13 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_13 0x48018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_13 0x1E548018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_13_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_13_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_14 Register DESC0_0_EGP_14 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_14 0x49000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_14 0x1E549000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_14 Register DESC1_0_EGP_14 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_14 0x49008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_14 0x1E549008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_14 Register DESC0_1_EGP_14 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_14 0x49010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_14 0x1E549010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_14 Register DESC1_1_EGP_14 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_14 0x49018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_14 0x1E549018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_14_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_14_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_15 Register DESC0_0_EGP_15 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_15 0x4A000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_15 0x1E54A000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_15_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_15_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_15 Register DESC1_0_EGP_15 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_15 0x4A008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_15 0x1E54A008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_15_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_15_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_15 Register DESC0_1_EGP_15 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_15 0x4A010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_15 0x1E54A010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_15_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_15_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_15 Register DESC1_1_EGP_15 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_15 0x4A018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_15 0x1E54A018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_15_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_15_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_16 Register DESC0_0_EGP_16 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_16 0x4B000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_16 0x1E54B000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_16_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_16_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_16_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_16 Register DESC1_0_EGP_16 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_16 0x4B008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_16 0x1E54B008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_16_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_16_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_16_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_16 Register DESC0_1_EGP_16 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_16 0x4B010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_16 0x1E54B010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_16_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_16_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_16_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_16 Register DESC1_1_EGP_16 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_16 0x4B018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_16 0x1E54B018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_16_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_16_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_16_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_17 Register DESC0_0_EGP_17 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_17 0x4C000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_17 0x1E54C000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_17_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_17_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_17_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_17 Register DESC1_0_EGP_17 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_17 0x4C008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_17 0x1E54C008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_17_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_17_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_17_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_17 Register DESC0_1_EGP_17 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_17 0x4C010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_17 0x1E54C010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_17_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_17_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_17_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_17 Register DESC1_1_EGP_17 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_17 0x4C018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_17 0x1E54C018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_17_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_17_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_17_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_18 Register DESC0_0_EGP_18 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_18 0x4D000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_18 0x1E54D000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_18_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_18_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_18_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_18 Register DESC1_0_EGP_18 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_18 0x4D008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_18 0x1E54D008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_18_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_18_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_18_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_18 Register DESC0_1_EGP_18 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_18 0x4D010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_18 0x1E54D010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_18_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_18_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_18_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_18 Register DESC1_1_EGP_18 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_18 0x4D018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_18 0x1E54D018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_18_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_18_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_18_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_19 Register DESC0_0_EGP_19 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_19 0x4E000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_19 0x1E54E000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_19_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_19_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_19_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_19 Register DESC1_0_EGP_19 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_19 0x4E008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_19 0x1E54E008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_19_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_19_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_19_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_19 Register DESC0_1_EGP_19 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_19 0x4E010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_19 0x1E54E010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_19_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_19_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_19_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_19 Register DESC1_1_EGP_19 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_19 0x4E018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_19 0x1E54E018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_19_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_19_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_19_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_20 Register DESC0_0_EGP_20 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_20 0x4F000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_20 0x1E54F000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_20_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_20_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_20_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_20 Register DESC1_0_EGP_20 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_20 0x4F008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_20 0x1E54F008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_20_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_20_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_20_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_20 Register DESC0_1_EGP_20 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_20 0x4F010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_20 0x1E54F010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_20_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_20_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_20_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_20 Register DESC1_1_EGP_20 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_20 0x4F018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_20 0x1E54F018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_20_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_20_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_20_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_21 Register DESC0_0_EGP_21 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_21 0x50000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_21 0x1E550000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_21_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_21_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_21_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_21 Register DESC1_0_EGP_21 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_21 0x50008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_21 0x1E550008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_21_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_21_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_21_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_21 Register DESC0_1_EGP_21 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_21 0x50010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_21 0x1E550010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_21_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_21_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_21_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_21 Register DESC1_1_EGP_21 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_21 0x50018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_21 0x1E550018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_21_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_21_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_21_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_0_EGP_22 Register DESC0_0_EGP_22 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_EGP_22 0x51000
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_0_EGP_22 0x1E551000u
+
+//! Register Reset Value
+#define DESC0_0_EGP_22_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_22_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_0_EGP_22_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_EGP_22 Register DESC1_0_EGP_22 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_EGP_22 0x51008
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_0_EGP_22 0x1E551008u
+
+//! Register Reset Value
+#define DESC1_0_EGP_22_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_22_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_0_EGP_22_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_EGP_22 Register DESC0_1_EGP_22 - Egress Port 64 Bit Descriptor DDW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_EGP_22 0x51010
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC0_1_EGP_22 0x1E551010u
+
+//! Register Reset Value
+#define DESC0_1_EGP_22_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_22_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 0
+#define DESC0_1_EGP_22_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_EGP_22 Register DESC1_1_EGP_22 - Egress Port 64 Bit Descriptor DDW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_EGP_22 0x51018
+//! Register Offset (absolute) for 1st Instance CBM_DESC64B
+#define CBM_DESC64B_DESC1_1_EGP_22 0x1E551018u
+
+//! Register Reset Value
+#define DESC1_1_EGP_22_RST 0x0000000000000000u
+
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_22_DESC_POS 0
+//! Field DESC - Descriptor Double Double Word 1
+#define DESC1_1_EGP_22_DESC_MASK 0xFFFFFFFFFFFFFFFFu
+
+//! @}
+
+//! @}
+
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/reg/cbm_dqm.h b/drivers/net/ethernet/lantiq/cbm/reg/cbm_dqm.h
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/reg/cbm_dqm.h
@@ -0,0 +1,17824 @@
+//-----------------------------------------------------------------------------
+// LSD Generator
+//-----------------------------------------------------------------------------
+// Perl Package        : LSD::generator::targetC (v1.1)
+// LSD Source          : D:/Users/shij/Perforce/l1033.grx500.win.v_shij.priv.dfv.grx500.dfv/ipg_lsd/lsd_sys/source/xml/reg_files/CBM_DQM.xml
+// Register File Name  : CBM_DQM
+// Register File Title : Central Buffer Manager Dequeue Manager Register Description
+// Register Width      : 32
+// Note                : Doxygen compliant comments
+//-----------------------------------------------------------------------------
+
+#ifndef _CBM_DQM_H
+#define _CBM_DQM_H
+
+//! \defgroup CBM_DQM Register File CBM_DQM - Central Buffer Manager Dequeue Manager Register Description
+//! @{
+
+//! Base Address of CBM_DQM
+#define CBM_DQM_MODULE_BASE 0x1E7C0000u
+
+//! \defgroup CBM_DQM_CTRL Register CBM_DQM_CTRL - CBM Dequeue Manager Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_DQM_CTRL 0x0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CBM_DQM_CTRL 0x1E7C0000u
+
+//! Register Reset Value
+#define CBM_DQM_CTRL_RST 0x00000000u
+
+//! Field DQM_EN - Enable Dequeue Manager Core State Machine
+#define CBM_DQM_CTRL_DQM_EN_POS 0
+//! Field DQM_EN - Enable Dequeue Manager Core State Machine
+#define CBM_DQM_CTRL_DQM_EN_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_DQM_CTRL_DQM_EN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_DQM_CTRL_DQM_EN_EN 0x1
+
+//! Field DQM_FRZ - Freeze Dequeue Manager Core State Machine
+#define CBM_DQM_CTRL_DQM_FRZ_POS 1
+//! Field DQM_FRZ - Freeze Dequeue Manager Core State Machine
+#define CBM_DQM_CTRL_DQM_FRZ_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_DQM_CTRL_DQM_FRZ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_DQM_CTRL_DQM_FRZ_EN 0x1
+
+//! Field DQM_ACT - Dequeue Manager Activity Status
+#define CBM_DQM_CTRL_DQM_ACT_POS 2
+//! Field DQM_ACT - Dequeue Manager Activity Status
+#define CBM_DQM_CTRL_DQM_ACT_MASK 0x4u
+//! Constant INACTIVE - Inactive
+#define CONST_CBM_DQM_CTRL_DQM_ACT_INACTIVE 0x0
+//! Constant ACTIVE - Active
+#define CONST_CBM_DQM_CTRL_DQM_ACT_ACTIVE 0x1
+
+//! Field DQQCEN - Dequeue Queue Counter Enable
+#define CBM_DQM_CTRL_DQQCEN_POS 4
+//! Field DQQCEN - Dequeue Queue Counter Enable
+#define CBM_DQM_CTRL_DQQCEN_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_DQM_CTRL_DQQCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_DQM_CTRL_DQQCEN_EN 0x1
+
+//! Field MSEL - Counter Mode Select
+#define CBM_DQM_CTRL_MSEL_POS 5
+//! Field MSEL - Counter Mode Select
+#define CBM_DQM_CTRL_MSEL_MASK 0x20u
+//! Constant PKT - Packet counter
+#define CONST_CBM_DQM_CTRL_MSEL_PKT 0x0
+//! Constant BYTE - Byte counter
+#define CONST_CBM_DQM_CTRL_MSEL_BYTE 0x1
+
+//! @}
+
+//! \defgroup DBG_DQM_0 Register DBG_DQM_0 - Hardware Debug Register
+//! @{
+
+//! Register Offset (relative)
+#define DBG_DQM_0 0x10
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DBG_DQM_0 0x1E7C0010u
+
+//! Register Reset Value
+#define DBG_DQM_0_RST 0x00000000u
+
+//! Field DBG - Debug
+#define DBG_DQM_0_DBG_POS 0
+//! Field DBG - Debug
+#define DBG_DQM_0_DBG_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DBG_DQM_1 Register DBG_DQM_1 - Hardware Debug Register
+//! @{
+
+//! Register Offset (relative)
+#define DBG_DQM_1 0x14
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DBG_DQM_1 0x1E7C0014u
+
+//! Register Reset Value
+#define DBG_DQM_1_RST 0x00000000u
+
+//! Field DBG - Debug
+#define DBG_DQM_1_DBG_POS 0
+//! Field DBG - Debug
+#define DBG_DQM_1_DBG_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup TEST_DQM_0 Register TEST_DQM_0 - Hardware Test Register
+//! @{
+
+//! Register Offset (relative)
+#define TEST_DQM_0 0x20
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_TEST_DQM_0 0x1E7C0020u
+
+//! Register Reset Value
+#define TEST_DQM_0_RST 0x00000000u
+
+//! Field TEST - Test
+#define TEST_DQM_0_TEST_POS 0
+//! Field TEST - Test
+#define TEST_DQM_0_TEST_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup TEST_DQM_1 Register TEST_DQM_1 - Hardware Test Register
+//! @{
+
+//! Register Offset (relative)
+#define TEST_DQM_1 0x24
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_TEST_DQM_1 0x1E7C0024u
+
+//! Register Reset Value
+#define TEST_DQM_1_RST 0x00000000u
+
+//! Field TEST - Test
+#define TEST_DQM_1_TEST_POS 0
+//! Field TEST - Test
+#define TEST_DQM_1_TEST_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_0 Register CFG_CPU_EGP_0 - CPU Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_0 0x10000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_0 0x1E7D0000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_0_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_0_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_0_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_0_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_0_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_0_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_0_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_0_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_0_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_0_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_0_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_0_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_0_BFBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_0_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_0_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_0_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_0_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_0_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_0_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_0 Register DQPC_CPU_EGP_0 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_0 0x10004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_0 0x1E7D0004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_0_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_0_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_0_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_0 Register IRNCR_CPU_EGP_0 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_0 0x10020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_0 0x1E7D0020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_0_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_0_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_0_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_0_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_0_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_0_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_0_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_0_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_0_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_0 Register IRNICR_CPU_EGP_0 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_0 0x10024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_0 0x1E7D0024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_0_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_0_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_0_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_0_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_0_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_0 Register IRNEN_CPU_EGP_0 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_0 0x10028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_0 0x1E7D0028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_0_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_0_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_0_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_0_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_0_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_0_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_0_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_0_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_0_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_0 Register DPTR_CPU_EGP_0 - CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_0 0x10030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_0 0x1E7D0030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_0_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_0_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_0_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_0_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_0_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_0 Register BPRC_CPU_EGP_0 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_0 0x10034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_0 0x1E7D0034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_0_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_0_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_0_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup PTR_RTN_0_CPU_EGP_0 Register PTR_RTN_0_CPU_EGP_0 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_0_CPU_EGP_0 0x10080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_0_CPU_EGP_0 0x1E7D0080u
+
+//! Register Reset Value
+#define PTR_RTN_0_CPU_EGP_0_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_0_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_0_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_EGP_0 Register DESC0_0_CPU_EGP_0 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_EGP_0 0x10100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_0_CPU_EGP_0 0x1E7D0100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_EGP_0 Register DESC1_0_CPU_EGP_0 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_EGP_0 0x10104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_0_CPU_EGP_0 0x1E7D0104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_EGP_0 Register DESC2_0_CPU_EGP_0 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_EGP_0 0x10108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_0_CPU_EGP_0 0x1E7D0108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_EGP_0 Register DESC3_0_CPU_EGP_0 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_EGP_0 0x1010C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_0_CPU_EGP_0 0x1E7D010Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_EGP_0 Register DESC0_1_CPU_EGP_0 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_EGP_0 0x10110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_1_CPU_EGP_0 0x1E7D0110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_EGP_0 Register DESC1_1_CPU_EGP_0 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_EGP_0 0x10114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_1_CPU_EGP_0 0x1E7D0114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_EGP_0 Register DESC2_1_CPU_EGP_0 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_EGP_0 0x10118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_1_CPU_EGP_0 0x1E7D0118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_EGP_0 Register DESC3_1_CPU_EGP_0 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_EGP_0 0x1011C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_1_CPU_EGP_0 0x1E7D011Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_EGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_1 Register CFG_CPU_EGP_1 - CPU Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_1 0x11000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_1 0x1E7D1000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_1_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_1_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_1_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_1_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_1_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_1_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_1_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_1_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_1_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_1_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_1_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_1_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_1_BFBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_1_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_1_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_1_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_1_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_1_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_1_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_1 Register DQPC_CPU_EGP_1 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_1 0x11004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_1 0x1E7D1004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_1_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_1_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_1_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_1 Register IRNCR_CPU_EGP_1 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_1 0x11020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_1 0x1E7D1020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_1_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_1_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_1_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_1_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_1_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_1_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_1_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_1_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_1_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_1 Register IRNICR_CPU_EGP_1 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_1 0x11024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_1 0x1E7D1024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_1_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_1_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_1_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_1_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_1_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_1 Register IRNEN_CPU_EGP_1 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_1 0x11028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_1 0x1E7D1028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_1_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_1_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_1_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_1_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_1_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_1_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_1_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_1_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_1_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_1 Register DPTR_CPU_EGP_1 - CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_1 0x11030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_1 0x1E7D1030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_1_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_1_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_1_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_1_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_1_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_1 Register BPRC_CPU_EGP_1 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_1 0x11034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_1 0x1E7D1034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_1_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_1_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_1_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup PTR_RTN_0_CPU_EGP_1 Register PTR_RTN_0_CPU_EGP_1 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_0_CPU_EGP_1 0x11080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_0_CPU_EGP_1 0x1E7D1080u
+
+//! Register Reset Value
+#define PTR_RTN_0_CPU_EGP_1_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_1_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_1_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_EGP_1 Register DESC0_0_CPU_EGP_1 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_EGP_1 0x11100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_0_CPU_EGP_1 0x1E7D1100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_EGP_1 Register DESC1_0_CPU_EGP_1 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_EGP_1 0x11104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_0_CPU_EGP_1 0x1E7D1104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_EGP_1 Register DESC2_0_CPU_EGP_1 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_EGP_1 0x11108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_0_CPU_EGP_1 0x1E7D1108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_EGP_1 Register DESC3_0_CPU_EGP_1 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_EGP_1 0x1110C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_0_CPU_EGP_1 0x1E7D110Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_EGP_1 Register DESC0_1_CPU_EGP_1 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_EGP_1 0x11110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_1_CPU_EGP_1 0x1E7D1110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_EGP_1 Register DESC1_1_CPU_EGP_1 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_EGP_1 0x11114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_1_CPU_EGP_1 0x1E7D1114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_EGP_1 Register DESC2_1_CPU_EGP_1 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_EGP_1 0x11118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_1_CPU_EGP_1 0x1E7D1118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_EGP_1 Register DESC3_1_CPU_EGP_1 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_EGP_1 0x1111C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_1_CPU_EGP_1 0x1E7D111Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_EGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_2 Register CFG_CPU_EGP_2 - CPU Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_2 0x12000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_2 0x1E7D2000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_2_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_2_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_2_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_2_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_2_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_2_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_2_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_2_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_2_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_2_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_2_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_2_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_2_BFBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_2_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_2_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_2_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_2_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_2_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_2_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_2 Register DQPC_CPU_EGP_2 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_2 0x12004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_2 0x1E7D2004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_2_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_2_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_2_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_2 Register IRNCR_CPU_EGP_2 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_2 0x12020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_2 0x1E7D2020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_2_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_2_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_2_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_2_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_2_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_2_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_2_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_2_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_2_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_2 Register IRNICR_CPU_EGP_2 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_2 0x12024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_2 0x1E7D2024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_2_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_2_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_2_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_2_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_2_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_2 Register IRNEN_CPU_EGP_2 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_2 0x12028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_2 0x1E7D2028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_2_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_2_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_2_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_2_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_2_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_2_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_2_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_2_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_2_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_2 Register DPTR_CPU_EGP_2 - CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_2 0x12030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_2 0x1E7D2030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_2_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_2_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_2_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_2_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_2_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_2 Register BPRC_CPU_EGP_2 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_2 0x12034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_2 0x1E7D2034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_2_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_2_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_2_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup PTR_RTN_0_CPU_EGP_2 Register PTR_RTN_0_CPU_EGP_2 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_0_CPU_EGP_2 0x12080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_0_CPU_EGP_2 0x1E7D2080u
+
+//! Register Reset Value
+#define PTR_RTN_0_CPU_EGP_2_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_2_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_2_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_EGP_2 Register DESC0_0_CPU_EGP_2 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_EGP_2 0x12100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_0_CPU_EGP_2 0x1E7D2100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_EGP_2 Register DESC1_0_CPU_EGP_2 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_EGP_2 0x12104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_0_CPU_EGP_2 0x1E7D2104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_EGP_2 Register DESC2_0_CPU_EGP_2 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_EGP_2 0x12108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_0_CPU_EGP_2 0x1E7D2108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_EGP_2 Register DESC3_0_CPU_EGP_2 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_EGP_2 0x1210C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_0_CPU_EGP_2 0x1E7D210Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_EGP_2 Register DESC0_1_CPU_EGP_2 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_EGP_2 0x12110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_1_CPU_EGP_2 0x1E7D2110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_EGP_2 Register DESC1_1_CPU_EGP_2 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_EGP_2 0x12114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_1_CPU_EGP_2 0x1E7D2114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_EGP_2 Register DESC2_1_CPU_EGP_2 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_EGP_2 0x12118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_1_CPU_EGP_2 0x1E7D2118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_EGP_2 Register DESC3_1_CPU_EGP_2 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_EGP_2 0x1211C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_1_CPU_EGP_2 0x1E7D211Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_EGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_3 Register CFG_CPU_EGP_3 - CPU Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_3 0x13000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_3 0x1E7D3000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_3_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_3_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_3_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_3_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_3_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_3_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_3_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_3_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_3_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_3_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_3_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_3_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_3_BFBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_3_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_3_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_3_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_3_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_3_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_3_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_3 Register DQPC_CPU_EGP_3 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_3 0x13004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_3 0x1E7D3004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_3_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_3_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_3_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_3 Register IRNCR_CPU_EGP_3 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_3 0x13020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_3 0x1E7D3020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_3_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_3_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_3_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_3_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_3_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_3_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_3_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_3_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_3_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_3 Register IRNICR_CPU_EGP_3 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_3 0x13024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_3 0x1E7D3024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_3_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_3_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_3_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_3_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_3_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_3 Register IRNEN_CPU_EGP_3 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_3 0x13028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_3 0x1E7D3028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_3_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_3_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_3_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_3_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_3_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_3_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_3_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_3_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_3_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_3 Register DPTR_CPU_EGP_3 - CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_3 0x13030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_3 0x1E7D3030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_3_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_3_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_3_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_3_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_3_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_3 Register BPRC_CPU_EGP_3 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_3 0x13034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_3 0x1E7D3034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_3_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_3_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_3_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup PTR_RTN_0_CPU_EGP_3 Register PTR_RTN_0_CPU_EGP_3 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_0_CPU_EGP_3 0x13080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_0_CPU_EGP_3 0x1E7D3080u
+
+//! Register Reset Value
+#define PTR_RTN_0_CPU_EGP_3_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_3_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_3_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_EGP_3 Register DESC0_0_CPU_EGP_3 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_EGP_3 0x13100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_0_CPU_EGP_3 0x1E7D3100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_EGP_3 Register DESC1_0_CPU_EGP_3 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_EGP_3 0x13104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_0_CPU_EGP_3 0x1E7D3104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_EGP_3 Register DESC2_0_CPU_EGP_3 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_EGP_3 0x13108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_0_CPU_EGP_3 0x1E7D3108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_EGP_3 Register DESC3_0_CPU_EGP_3 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_EGP_3 0x1310C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_0_CPU_EGP_3 0x1E7D310Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_EGP_3 Register DESC0_1_CPU_EGP_3 - CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_EGP_3 0x13110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_1_CPU_EGP_3 0x1E7D3110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_EGP_3 Register DESC1_1_CPU_EGP_3 - CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_EGP_3 0x13114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_1_CPU_EGP_3 0x1E7D3114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_EGP_3 Register DESC2_1_CPU_EGP_3 - CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_EGP_3 0x13118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_1_CPU_EGP_3 0x1E7D3118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_EGP_3 Register DESC3_1_CPU_EGP_3 - CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_EGP_3 0x1311C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_1_CPU_EGP_3 0x1E7D311Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_EGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_4 Register CFG_CPU_EGP_4 - CPU WLAN Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_4 0x14000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_4 0x1E7D4000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_4_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_4_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_4_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_4_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_4_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_4_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_4_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_4_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_4_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_4_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_4_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_4_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_4_BFBPEN_EN 0x1
+
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_4_DQBPEN_POS 3
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_4_DQBPEN_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_4_DQBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_4_DQBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_4_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_4_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_4_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_4_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_4_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_4_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_4 Register DQPC_CPU_EGP_4 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_4 0x14004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_4 0x1E7D4004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_4_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_4_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_4_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_4 Register IRNCR_CPU_EGP_4 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_4 0x14020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_4 0x1E7D4020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_4_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_4_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_4_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_4_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_4_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_4_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_4_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_4_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_4_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_4 Register IRNICR_CPU_EGP_4 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_4 0x14024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_4 0x1E7D4024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_4_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_4_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_4_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_4_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_4_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_4 Register IRNEN_CPU_EGP_4 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_4 0x14028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_4 0x1E7D4028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_4_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_4_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_4_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_4_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_4_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_4_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_4_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_4_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_4_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_4 Register DPTR_CPU_EGP_4 - Special CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_4 0x14030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_4 0x1E7D4030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_4_RST 0x0000001Fu
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_4_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_4_ND_MASK 0x1Fu
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_4_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_4_DPTR_MASK 0x1F0000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_4 Register BPRC_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_4 0x14034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_4 0x1E7D4034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_4_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_4_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_4_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup BRPTR_SCPU_EGP_4 Register BRPTR_SCPU_EGP_4 - Special CPU Egress Port Buffer Return Pointer
+//! @{
+
+//! Register Offset (relative)
+#define BRPTR_SCPU_EGP_4 0x14038
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BRPTR_SCPU_EGP_4 0x1E7D4038u
+
+//! Register Reset Value
+#define BRPTR_SCPU_EGP_4_RST 0x00000000u
+
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_4_PTRBR_POS 0
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_4_PTRBR_MASK 0x1Fu
+
+//! @}
+
+//! \defgroup PTR_RTN_0_CPU_EGP_4 Register PTR_RTN_0_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_0_CPU_EGP_4 0x14080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_0_CPU_EGP_4 0x1E7D4080u
+
+//! Register Reset Value
+#define PTR_RTN_0_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_0_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_1_CPU_EGP_4 Register PTR_RTN_1_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_1_CPU_EGP_4 0x14084
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_1_CPU_EGP_4 0x1E7D4084u
+
+//! Register Reset Value
+#define PTR_RTN_1_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_1_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_1_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_2_CPU_EGP_4 Register PTR_RTN_2_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_2_CPU_EGP_4 0x14088
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_2_CPU_EGP_4 0x1E7D4088u
+
+//! Register Reset Value
+#define PTR_RTN_2_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_2_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_2_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_3_CPU_EGP_4 Register PTR_RTN_3_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_3_CPU_EGP_4 0x1408C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_3_CPU_EGP_4 0x1E7D408Cu
+
+//! Register Reset Value
+#define PTR_RTN_3_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_3_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_3_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_4_CPU_EGP_4 Register PTR_RTN_4_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_4_CPU_EGP_4 0x14090
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_4_CPU_EGP_4 0x1E7D4090u
+
+//! Register Reset Value
+#define PTR_RTN_4_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_4_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_4_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_5_CPU_EGP_4 Register PTR_RTN_5_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_5_CPU_EGP_4 0x14094
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_5_CPU_EGP_4 0x1E7D4094u
+
+//! Register Reset Value
+#define PTR_RTN_5_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_5_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_5_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_6_CPU_EGP_4 Register PTR_RTN_6_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_6_CPU_EGP_4 0x14098
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_6_CPU_EGP_4 0x1E7D4098u
+
+//! Register Reset Value
+#define PTR_RTN_6_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_6_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_6_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_7_CPU_EGP_4 Register PTR_RTN_7_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_7_CPU_EGP_4 0x1409C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_7_CPU_EGP_4 0x1E7D409Cu
+
+//! Register Reset Value
+#define PTR_RTN_7_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_7_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_7_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_8_CPU_EGP_4 Register PTR_RTN_8_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_8_CPU_EGP_4 0x140A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_8_CPU_EGP_4 0x1E7D40A0u
+
+//! Register Reset Value
+#define PTR_RTN_8_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_8_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_8_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_9_CPU_EGP_4 Register PTR_RTN_9_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_9_CPU_EGP_4 0x140A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_9_CPU_EGP_4 0x1E7D40A4u
+
+//! Register Reset Value
+#define PTR_RTN_9_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_9_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_9_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_10_CPU_EGP_4 Register PTR_RTN_10_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_10_CPU_EGP_4 0x140A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_10_CPU_EGP_4 0x1E7D40A8u
+
+//! Register Reset Value
+#define PTR_RTN_10_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_10_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_10_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_11_CPU_EGP_4 Register PTR_RTN_11_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_11_CPU_EGP_4 0x140AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_11_CPU_EGP_4 0x1E7D40ACu
+
+//! Register Reset Value
+#define PTR_RTN_11_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_11_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_11_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_12_CPU_EGP_4 Register PTR_RTN_12_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_12_CPU_EGP_4 0x140B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_12_CPU_EGP_4 0x1E7D40B0u
+
+//! Register Reset Value
+#define PTR_RTN_12_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_12_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_12_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_13_CPU_EGP_4 Register PTR_RTN_13_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_13_CPU_EGP_4 0x140B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_13_CPU_EGP_4 0x1E7D40B4u
+
+//! Register Reset Value
+#define PTR_RTN_13_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_13_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_13_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_14_CPU_EGP_4 Register PTR_RTN_14_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_14_CPU_EGP_4 0x140B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_14_CPU_EGP_4 0x1E7D40B8u
+
+//! Register Reset Value
+#define PTR_RTN_14_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_14_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_14_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_15_CPU_EGP_4 Register PTR_RTN_15_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_15_CPU_EGP_4 0x140BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_15_CPU_EGP_4 0x1E7D40BCu
+
+//! Register Reset Value
+#define PTR_RTN_15_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_15_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_15_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_16_CPU_EGP_4 Register PTR_RTN_16_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_16_CPU_EGP_4 0x140C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_16_CPU_EGP_4 0x1E7D40C0u
+
+//! Register Reset Value
+#define PTR_RTN_16_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_16_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_16_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_17_CPU_EGP_4 Register PTR_RTN_17_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_17_CPU_EGP_4 0x140C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_17_CPU_EGP_4 0x1E7D40C4u
+
+//! Register Reset Value
+#define PTR_RTN_17_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_17_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_17_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_18_CPU_EGP_4 Register PTR_RTN_18_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_18_CPU_EGP_4 0x140C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_18_CPU_EGP_4 0x1E7D40C8u
+
+//! Register Reset Value
+#define PTR_RTN_18_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_18_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_18_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_19_CPU_EGP_4 Register PTR_RTN_19_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_19_CPU_EGP_4 0x140CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_19_CPU_EGP_4 0x1E7D40CCu
+
+//! Register Reset Value
+#define PTR_RTN_19_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_19_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_19_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_20_CPU_EGP_4 Register PTR_RTN_20_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_20_CPU_EGP_4 0x140D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_20_CPU_EGP_4 0x1E7D40D0u
+
+//! Register Reset Value
+#define PTR_RTN_20_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_20_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_20_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_21_CPU_EGP_4 Register PTR_RTN_21_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_21_CPU_EGP_4 0x140D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_21_CPU_EGP_4 0x1E7D40D4u
+
+//! Register Reset Value
+#define PTR_RTN_21_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_21_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_21_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_22_CPU_EGP_4 Register PTR_RTN_22_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_22_CPU_EGP_4 0x140D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_22_CPU_EGP_4 0x1E7D40D8u
+
+//! Register Reset Value
+#define PTR_RTN_22_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_22_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_22_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_23_CPU_EGP_4 Register PTR_RTN_23_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_23_CPU_EGP_4 0x140DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_23_CPU_EGP_4 0x1E7D40DCu
+
+//! Register Reset Value
+#define PTR_RTN_23_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_23_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_23_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_24_CPU_EGP_4 Register PTR_RTN_24_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_24_CPU_EGP_4 0x140E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_24_CPU_EGP_4 0x1E7D40E0u
+
+//! Register Reset Value
+#define PTR_RTN_24_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_24_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_24_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_25_CPU_EGP_4 Register PTR_RTN_25_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_25_CPU_EGP_4 0x140E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_25_CPU_EGP_4 0x1E7D40E4u
+
+//! Register Reset Value
+#define PTR_RTN_25_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_25_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_25_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_26_CPU_EGP_4 Register PTR_RTN_26_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_26_CPU_EGP_4 0x140E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_26_CPU_EGP_4 0x1E7D40E8u
+
+//! Register Reset Value
+#define PTR_RTN_26_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_26_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_26_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_27_CPU_EGP_4 Register PTR_RTN_27_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_27_CPU_EGP_4 0x140EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_27_CPU_EGP_4 0x1E7D40ECu
+
+//! Register Reset Value
+#define PTR_RTN_27_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_27_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_27_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_28_CPU_EGP_4 Register PTR_RTN_28_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_28_CPU_EGP_4 0x140F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_28_CPU_EGP_4 0x1E7D40F0u
+
+//! Register Reset Value
+#define PTR_RTN_28_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_28_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_28_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_29_CPU_EGP_4 Register PTR_RTN_29_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_29_CPU_EGP_4 0x140F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_29_CPU_EGP_4 0x1E7D40F4u
+
+//! Register Reset Value
+#define PTR_RTN_29_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_29_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_29_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_30_CPU_EGP_4 Register PTR_RTN_30_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_30_CPU_EGP_4 0x140F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_30_CPU_EGP_4 0x1E7D40F8u
+
+//! Register Reset Value
+#define PTR_RTN_30_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_30_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_30_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_31_CPU_EGP_4 Register PTR_RTN_31_CPU_EGP_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_31_CPU_EGP_4 0x140FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_31_CPU_EGP_4 0x1E7D40FCu
+
+//! Register Reset Value
+#define PTR_RTN_31_CPU_EGP_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_31_CPU_EGP_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_31_CPU_EGP_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_EGP_4 Register DESC0_0_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_EGP_4 0x14100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_0_CPU_EGP_4 0x1E7D4100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_EGP_4 Register DESC1_0_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_EGP_4 0x14104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_0_CPU_EGP_4 0x1E7D4104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_EGP_4 Register DESC2_0_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_EGP_4 0x14108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_0_CPU_EGP_4 0x1E7D4108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_EGP_4 Register DESC3_0_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_EGP_4 0x1410C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_0_CPU_EGP_4 0x1E7D410Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_EGP_4 Register DESC0_1_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_EGP_4 0x14110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_1_CPU_EGP_4 0x1E7D4110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_EGP_4 Register DESC1_1_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_EGP_4 0x14114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_1_CPU_EGP_4 0x1E7D4114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_EGP_4 Register DESC2_1_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_EGP_4 0x14118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_1_CPU_EGP_4 0x1E7D4118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_EGP_4 Register DESC3_1_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_EGP_4 0x1411C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_1_CPU_EGP_4 0x1E7D411Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_2_CPU_EGP_4 Register DESC0_2_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_2_CPU_EGP_4 0x14120
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_2_CPU_EGP_4 0x1E7D4120u
+
+//! Register Reset Value
+#define DESC0_2_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_2_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_2_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_2_CPU_EGP_4 Register DESC1_2_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_2_CPU_EGP_4 0x14124
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_2_CPU_EGP_4 0x1E7D4124u
+
+//! Register Reset Value
+#define DESC1_2_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_2_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_2_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_2_CPU_EGP_4 Register DESC2_2_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_2_CPU_EGP_4 0x14128
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_2_CPU_EGP_4 0x1E7D4128u
+
+//! Register Reset Value
+#define DESC2_2_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_2_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_2_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_2_CPU_EGP_4 Register DESC3_2_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_2_CPU_EGP_4 0x1412C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_2_CPU_EGP_4 0x1E7D412Cu
+
+//! Register Reset Value
+#define DESC3_2_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_2_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_2_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_3_CPU_EGP_4 Register DESC0_3_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_3_CPU_EGP_4 0x14130
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_3_CPU_EGP_4 0x1E7D4130u
+
+//! Register Reset Value
+#define DESC0_3_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_3_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_3_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_3_CPU_EGP_4 Register DESC1_3_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_3_CPU_EGP_4 0x14134
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_3_CPU_EGP_4 0x1E7D4134u
+
+//! Register Reset Value
+#define DESC1_3_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_3_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_3_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_3_CPU_EGP_4 Register DESC2_3_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_3_CPU_EGP_4 0x14138
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_3_CPU_EGP_4 0x1E7D4138u
+
+//! Register Reset Value
+#define DESC2_3_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_3_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_3_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_3_CPU_EGP_4 Register DESC3_3_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_3_CPU_EGP_4 0x1413C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_3_CPU_EGP_4 0x1E7D413Cu
+
+//! Register Reset Value
+#define DESC3_3_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_3_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_3_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_4_CPU_EGP_4 Register DESC0_4_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_4_CPU_EGP_4 0x14140
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_4_CPU_EGP_4 0x1E7D4140u
+
+//! Register Reset Value
+#define DESC0_4_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_4_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_4_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_4_CPU_EGP_4 Register DESC1_4_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_4_CPU_EGP_4 0x14144
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_4_CPU_EGP_4 0x1E7D4144u
+
+//! Register Reset Value
+#define DESC1_4_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_4_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_4_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_4_CPU_EGP_4 Register DESC2_4_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_4_CPU_EGP_4 0x14148
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_4_CPU_EGP_4 0x1E7D4148u
+
+//! Register Reset Value
+#define DESC2_4_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_4_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_4_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_4_CPU_EGP_4 Register DESC3_4_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_4_CPU_EGP_4 0x1414C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_4_CPU_EGP_4 0x1E7D414Cu
+
+//! Register Reset Value
+#define DESC3_4_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_4_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_4_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_5_CPU_EGP_4 Register DESC0_5_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_5_CPU_EGP_4 0x14150
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_5_CPU_EGP_4 0x1E7D4150u
+
+//! Register Reset Value
+#define DESC0_5_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_5_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_5_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_5_CPU_EGP_4 Register DESC1_5_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_5_CPU_EGP_4 0x14154
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_5_CPU_EGP_4 0x1E7D4154u
+
+//! Register Reset Value
+#define DESC1_5_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_5_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_5_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_5_CPU_EGP_4 Register DESC2_5_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_5_CPU_EGP_4 0x14158
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_5_CPU_EGP_4 0x1E7D4158u
+
+//! Register Reset Value
+#define DESC2_5_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_5_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_5_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_5_CPU_EGP_4 Register DESC3_5_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_5_CPU_EGP_4 0x1415C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_5_CPU_EGP_4 0x1E7D415Cu
+
+//! Register Reset Value
+#define DESC3_5_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_5_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_5_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_6_CPU_EGP_4 Register DESC0_6_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_6_CPU_EGP_4 0x14160
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_6_CPU_EGP_4 0x1E7D4160u
+
+//! Register Reset Value
+#define DESC0_6_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_6_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_6_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_6_CPU_EGP_4 Register DESC1_6_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_6_CPU_EGP_4 0x14164
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_6_CPU_EGP_4 0x1E7D4164u
+
+//! Register Reset Value
+#define DESC1_6_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_6_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_6_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_6_CPU_EGP_4 Register DESC2_6_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_6_CPU_EGP_4 0x14168
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_6_CPU_EGP_4 0x1E7D4168u
+
+//! Register Reset Value
+#define DESC2_6_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_6_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_6_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_6_CPU_EGP_4 Register DESC3_6_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_6_CPU_EGP_4 0x1416C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_6_CPU_EGP_4 0x1E7D416Cu
+
+//! Register Reset Value
+#define DESC3_6_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_6_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_6_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_7_CPU_EGP_4 Register DESC0_7_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_7_CPU_EGP_4 0x14170
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_7_CPU_EGP_4 0x1E7D4170u
+
+//! Register Reset Value
+#define DESC0_7_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_7_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_7_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_7_CPU_EGP_4 Register DESC1_7_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_7_CPU_EGP_4 0x14174
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_7_CPU_EGP_4 0x1E7D4174u
+
+//! Register Reset Value
+#define DESC1_7_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_7_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_7_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_7_CPU_EGP_4 Register DESC2_7_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_7_CPU_EGP_4 0x14178
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_7_CPU_EGP_4 0x1E7D4178u
+
+//! Register Reset Value
+#define DESC2_7_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_7_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_7_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_7_CPU_EGP_4 Register DESC3_7_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_7_CPU_EGP_4 0x1417C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_7_CPU_EGP_4 0x1E7D417Cu
+
+//! Register Reset Value
+#define DESC3_7_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_7_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_7_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_8_CPU_EGP_4 Register DESC0_8_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_8_CPU_EGP_4 0x14180
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_8_CPU_EGP_4 0x1E7D4180u
+
+//! Register Reset Value
+#define DESC0_8_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_8_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_8_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_8_CPU_EGP_4 Register DESC1_8_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_8_CPU_EGP_4 0x14184
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_8_CPU_EGP_4 0x1E7D4184u
+
+//! Register Reset Value
+#define DESC1_8_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_8_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_8_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_8_CPU_EGP_4 Register DESC2_8_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_8_CPU_EGP_4 0x14188
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_8_CPU_EGP_4 0x1E7D4188u
+
+//! Register Reset Value
+#define DESC2_8_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_8_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_8_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_8_CPU_EGP_4 Register DESC3_8_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_8_CPU_EGP_4 0x1418C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_8_CPU_EGP_4 0x1E7D418Cu
+
+//! Register Reset Value
+#define DESC3_8_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_8_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_8_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_9_CPU_EGP_4 Register DESC0_9_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_9_CPU_EGP_4 0x14190
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_9_CPU_EGP_4 0x1E7D4190u
+
+//! Register Reset Value
+#define DESC0_9_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_9_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_9_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_9_CPU_EGP_4 Register DESC1_9_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_9_CPU_EGP_4 0x14194
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_9_CPU_EGP_4 0x1E7D4194u
+
+//! Register Reset Value
+#define DESC1_9_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_9_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_9_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_9_CPU_EGP_4 Register DESC2_9_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_9_CPU_EGP_4 0x14198
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_9_CPU_EGP_4 0x1E7D4198u
+
+//! Register Reset Value
+#define DESC2_9_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_9_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_9_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_9_CPU_EGP_4 Register DESC3_9_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_9_CPU_EGP_4 0x1419C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_9_CPU_EGP_4 0x1E7D419Cu
+
+//! Register Reset Value
+#define DESC3_9_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_9_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_9_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_10_CPU_EGP_4 Register DESC0_10_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_10_CPU_EGP_4 0x141A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_10_CPU_EGP_4 0x1E7D41A0u
+
+//! Register Reset Value
+#define DESC0_10_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_10_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_10_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_10_CPU_EGP_4 Register DESC1_10_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_10_CPU_EGP_4 0x141A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_10_CPU_EGP_4 0x1E7D41A4u
+
+//! Register Reset Value
+#define DESC1_10_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_10_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_10_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_10_CPU_EGP_4 Register DESC2_10_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_10_CPU_EGP_4 0x141A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_10_CPU_EGP_4 0x1E7D41A8u
+
+//! Register Reset Value
+#define DESC2_10_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_10_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_10_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_10_CPU_EGP_4 Register DESC3_10_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_10_CPU_EGP_4 0x141AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_10_CPU_EGP_4 0x1E7D41ACu
+
+//! Register Reset Value
+#define DESC3_10_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_10_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_10_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_11_CPU_EGP_4 Register DESC0_11_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_11_CPU_EGP_4 0x141B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_11_CPU_EGP_4 0x1E7D41B0u
+
+//! Register Reset Value
+#define DESC0_11_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_11_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_11_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_11_CPU_EGP_4 Register DESC1_11_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_11_CPU_EGP_4 0x141B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_11_CPU_EGP_4 0x1E7D41B4u
+
+//! Register Reset Value
+#define DESC1_11_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_11_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_11_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_11_CPU_EGP_4 Register DESC2_11_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_11_CPU_EGP_4 0x141B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_11_CPU_EGP_4 0x1E7D41B8u
+
+//! Register Reset Value
+#define DESC2_11_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_11_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_11_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_11_CPU_EGP_4 Register DESC3_11_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_11_CPU_EGP_4 0x141BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_11_CPU_EGP_4 0x1E7D41BCu
+
+//! Register Reset Value
+#define DESC3_11_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_11_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_11_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_12_CPU_EGP_4 Register DESC0_12_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_12_CPU_EGP_4 0x141C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_12_CPU_EGP_4 0x1E7D41C0u
+
+//! Register Reset Value
+#define DESC0_12_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_12_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_12_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_12_CPU_EGP_4 Register DESC1_12_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_12_CPU_EGP_4 0x141C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_12_CPU_EGP_4 0x1E7D41C4u
+
+//! Register Reset Value
+#define DESC1_12_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_12_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_12_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_12_CPU_EGP_4 Register DESC2_12_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_12_CPU_EGP_4 0x141C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_12_CPU_EGP_4 0x1E7D41C8u
+
+//! Register Reset Value
+#define DESC2_12_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_12_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_12_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_12_CPU_EGP_4 Register DESC3_12_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_12_CPU_EGP_4 0x141CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_12_CPU_EGP_4 0x1E7D41CCu
+
+//! Register Reset Value
+#define DESC3_12_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_12_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_12_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_13_CPU_EGP_4 Register DESC0_13_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_13_CPU_EGP_4 0x141D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_13_CPU_EGP_4 0x1E7D41D0u
+
+//! Register Reset Value
+#define DESC0_13_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_13_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_13_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_13_CPU_EGP_4 Register DESC1_13_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_13_CPU_EGP_4 0x141D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_13_CPU_EGP_4 0x1E7D41D4u
+
+//! Register Reset Value
+#define DESC1_13_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_13_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_13_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_13_CPU_EGP_4 Register DESC2_13_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_13_CPU_EGP_4 0x141D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_13_CPU_EGP_4 0x1E7D41D8u
+
+//! Register Reset Value
+#define DESC2_13_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_13_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_13_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_13_CPU_EGP_4 Register DESC3_13_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_13_CPU_EGP_4 0x141DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_13_CPU_EGP_4 0x1E7D41DCu
+
+//! Register Reset Value
+#define DESC3_13_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_13_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_13_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_14_CPU_EGP_4 Register DESC0_14_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_14_CPU_EGP_4 0x141E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_14_CPU_EGP_4 0x1E7D41E0u
+
+//! Register Reset Value
+#define DESC0_14_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_14_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_14_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_14_CPU_EGP_4 Register DESC1_14_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_14_CPU_EGP_4 0x141E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_14_CPU_EGP_4 0x1E7D41E4u
+
+//! Register Reset Value
+#define DESC1_14_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_14_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_14_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_14_CPU_EGP_4 Register DESC2_14_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_14_CPU_EGP_4 0x141E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_14_CPU_EGP_4 0x1E7D41E8u
+
+//! Register Reset Value
+#define DESC2_14_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_14_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_14_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_14_CPU_EGP_4 Register DESC3_14_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_14_CPU_EGP_4 0x141EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_14_CPU_EGP_4 0x1E7D41ECu
+
+//! Register Reset Value
+#define DESC3_14_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_14_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_14_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_15_CPU_EGP_4 Register DESC0_15_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_15_CPU_EGP_4 0x141F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_15_CPU_EGP_4 0x1E7D41F0u
+
+//! Register Reset Value
+#define DESC0_15_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_15_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_15_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_15_CPU_EGP_4 Register DESC1_15_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_15_CPU_EGP_4 0x141F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_15_CPU_EGP_4 0x1E7D41F4u
+
+//! Register Reset Value
+#define DESC1_15_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_15_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_15_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_15_CPU_EGP_4 Register DESC2_15_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_15_CPU_EGP_4 0x141F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_15_CPU_EGP_4 0x1E7D41F8u
+
+//! Register Reset Value
+#define DESC2_15_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_15_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_15_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_15_CPU_EGP_4 Register DESC3_15_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_15_CPU_EGP_4 0x141FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_15_CPU_EGP_4 0x1E7D41FCu
+
+//! Register Reset Value
+#define DESC3_15_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_15_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_15_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_16_CPU_EGP_4 Register DESC0_16_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_16_CPU_EGP_4 0x14200
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_16_CPU_EGP_4 0x1E7D4200u
+
+//! Register Reset Value
+#define DESC0_16_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_16_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_16_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_16_CPU_EGP_4 Register DESC1_16_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_16_CPU_EGP_4 0x14204
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_16_CPU_EGP_4 0x1E7D4204u
+
+//! Register Reset Value
+#define DESC1_16_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_16_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_16_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_16_CPU_EGP_4 Register DESC2_16_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_16_CPU_EGP_4 0x14208
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_16_CPU_EGP_4 0x1E7D4208u
+
+//! Register Reset Value
+#define DESC2_16_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_16_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_16_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_16_CPU_EGP_4 Register DESC3_16_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_16_CPU_EGP_4 0x1420C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_16_CPU_EGP_4 0x1E7D420Cu
+
+//! Register Reset Value
+#define DESC3_16_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_16_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_16_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_17_CPU_EGP_4 Register DESC0_17_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_17_CPU_EGP_4 0x14210
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_17_CPU_EGP_4 0x1E7D4210u
+
+//! Register Reset Value
+#define DESC0_17_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_17_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_17_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_17_CPU_EGP_4 Register DESC1_17_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_17_CPU_EGP_4 0x14214
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_17_CPU_EGP_4 0x1E7D4214u
+
+//! Register Reset Value
+#define DESC1_17_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_17_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_17_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_17_CPU_EGP_4 Register DESC2_17_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_17_CPU_EGP_4 0x14218
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_17_CPU_EGP_4 0x1E7D4218u
+
+//! Register Reset Value
+#define DESC2_17_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_17_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_17_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_17_CPU_EGP_4 Register DESC3_17_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_17_CPU_EGP_4 0x1421C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_17_CPU_EGP_4 0x1E7D421Cu
+
+//! Register Reset Value
+#define DESC3_17_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_17_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_17_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_18_CPU_EGP_4 Register DESC0_18_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_18_CPU_EGP_4 0x14220
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_18_CPU_EGP_4 0x1E7D4220u
+
+//! Register Reset Value
+#define DESC0_18_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_18_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_18_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_18_CPU_EGP_4 Register DESC1_18_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_18_CPU_EGP_4 0x14224
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_18_CPU_EGP_4 0x1E7D4224u
+
+//! Register Reset Value
+#define DESC1_18_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_18_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_18_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_18_CPU_EGP_4 Register DESC2_18_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_18_CPU_EGP_4 0x14228
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_18_CPU_EGP_4 0x1E7D4228u
+
+//! Register Reset Value
+#define DESC2_18_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_18_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_18_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_18_CPU_EGP_4 Register DESC3_18_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_18_CPU_EGP_4 0x1422C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_18_CPU_EGP_4 0x1E7D422Cu
+
+//! Register Reset Value
+#define DESC3_18_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_18_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_18_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_19_CPU_EGP_4 Register DESC0_19_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_19_CPU_EGP_4 0x14230
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_19_CPU_EGP_4 0x1E7D4230u
+
+//! Register Reset Value
+#define DESC0_19_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_19_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_19_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_19_CPU_EGP_4 Register DESC1_19_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_19_CPU_EGP_4 0x14234
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_19_CPU_EGP_4 0x1E7D4234u
+
+//! Register Reset Value
+#define DESC1_19_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_19_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_19_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_19_CPU_EGP_4 Register DESC2_19_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_19_CPU_EGP_4 0x14238
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_19_CPU_EGP_4 0x1E7D4238u
+
+//! Register Reset Value
+#define DESC2_19_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_19_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_19_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_19_CPU_EGP_4 Register DESC3_19_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_19_CPU_EGP_4 0x1423C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_19_CPU_EGP_4 0x1E7D423Cu
+
+//! Register Reset Value
+#define DESC3_19_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_19_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_19_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_20_CPU_EGP_4 Register DESC0_20_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_20_CPU_EGP_4 0x14240
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_20_CPU_EGP_4 0x1E7D4240u
+
+//! Register Reset Value
+#define DESC0_20_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_20_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_20_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_20_CPU_EGP_4 Register DESC1_20_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_20_CPU_EGP_4 0x14244
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_20_CPU_EGP_4 0x1E7D4244u
+
+//! Register Reset Value
+#define DESC1_20_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_20_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_20_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_20_CPU_EGP_4 Register DESC2_20_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_20_CPU_EGP_4 0x14248
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_20_CPU_EGP_4 0x1E7D4248u
+
+//! Register Reset Value
+#define DESC2_20_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_20_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_20_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_20_CPU_EGP_4 Register DESC3_20_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_20_CPU_EGP_4 0x1424C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_20_CPU_EGP_4 0x1E7D424Cu
+
+//! Register Reset Value
+#define DESC3_20_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_20_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_20_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_21_CPU_EGP_4 Register DESC0_21_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_21_CPU_EGP_4 0x14250
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_21_CPU_EGP_4 0x1E7D4250u
+
+//! Register Reset Value
+#define DESC0_21_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_21_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_21_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_21_CPU_EGP_4 Register DESC1_21_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_21_CPU_EGP_4 0x14254
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_21_CPU_EGP_4 0x1E7D4254u
+
+//! Register Reset Value
+#define DESC1_21_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_21_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_21_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_21_CPU_EGP_4 Register DESC2_21_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_21_CPU_EGP_4 0x14258
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_21_CPU_EGP_4 0x1E7D4258u
+
+//! Register Reset Value
+#define DESC2_21_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_21_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_21_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_21_CPU_EGP_4 Register DESC3_21_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_21_CPU_EGP_4 0x1425C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_21_CPU_EGP_4 0x1E7D425Cu
+
+//! Register Reset Value
+#define DESC3_21_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_21_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_21_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_22_CPU_EGP_4 Register DESC0_22_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_22_CPU_EGP_4 0x14260
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_22_CPU_EGP_4 0x1E7D4260u
+
+//! Register Reset Value
+#define DESC0_22_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_22_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_22_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_22_CPU_EGP_4 Register DESC1_22_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_22_CPU_EGP_4 0x14264
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_22_CPU_EGP_4 0x1E7D4264u
+
+//! Register Reset Value
+#define DESC1_22_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_22_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_22_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_22_CPU_EGP_4 Register DESC2_22_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_22_CPU_EGP_4 0x14268
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_22_CPU_EGP_4 0x1E7D4268u
+
+//! Register Reset Value
+#define DESC2_22_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_22_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_22_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_22_CPU_EGP_4 Register DESC3_22_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_22_CPU_EGP_4 0x1426C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_22_CPU_EGP_4 0x1E7D426Cu
+
+//! Register Reset Value
+#define DESC3_22_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_22_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_22_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_23_CPU_EGP_4 Register DESC0_23_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_23_CPU_EGP_4 0x14270
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_23_CPU_EGP_4 0x1E7D4270u
+
+//! Register Reset Value
+#define DESC0_23_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_23_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_23_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_23_CPU_EGP_4 Register DESC1_23_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_23_CPU_EGP_4 0x14274
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_23_CPU_EGP_4 0x1E7D4274u
+
+//! Register Reset Value
+#define DESC1_23_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_23_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_23_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_23_CPU_EGP_4 Register DESC2_23_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_23_CPU_EGP_4 0x14278
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_23_CPU_EGP_4 0x1E7D4278u
+
+//! Register Reset Value
+#define DESC2_23_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_23_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_23_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_23_CPU_EGP_4 Register DESC3_23_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_23_CPU_EGP_4 0x1427C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_23_CPU_EGP_4 0x1E7D427Cu
+
+//! Register Reset Value
+#define DESC3_23_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_23_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_23_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_24_CPU_EGP_4 Register DESC0_24_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_24_CPU_EGP_4 0x14280
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_24_CPU_EGP_4 0x1E7D4280u
+
+//! Register Reset Value
+#define DESC0_24_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_24_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_24_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_24_CPU_EGP_4 Register DESC1_24_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_24_CPU_EGP_4 0x14284
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_24_CPU_EGP_4 0x1E7D4284u
+
+//! Register Reset Value
+#define DESC1_24_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_24_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_24_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_24_CPU_EGP_4 Register DESC2_24_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_24_CPU_EGP_4 0x14288
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_24_CPU_EGP_4 0x1E7D4288u
+
+//! Register Reset Value
+#define DESC2_24_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_24_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_24_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_24_CPU_EGP_4 Register DESC3_24_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_24_CPU_EGP_4 0x1428C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_24_CPU_EGP_4 0x1E7D428Cu
+
+//! Register Reset Value
+#define DESC3_24_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_24_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_24_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_25_CPU_EGP_4 Register DESC0_25_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_25_CPU_EGP_4 0x14290
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_25_CPU_EGP_4 0x1E7D4290u
+
+//! Register Reset Value
+#define DESC0_25_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_25_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_25_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_25_CPU_EGP_4 Register DESC1_25_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_25_CPU_EGP_4 0x14294
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_25_CPU_EGP_4 0x1E7D4294u
+
+//! Register Reset Value
+#define DESC1_25_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_25_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_25_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_25_CPU_EGP_4 Register DESC2_25_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_25_CPU_EGP_4 0x14298
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_25_CPU_EGP_4 0x1E7D4298u
+
+//! Register Reset Value
+#define DESC2_25_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_25_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_25_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_25_CPU_EGP_4 Register DESC3_25_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_25_CPU_EGP_4 0x1429C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_25_CPU_EGP_4 0x1E7D429Cu
+
+//! Register Reset Value
+#define DESC3_25_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_25_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_25_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_26_CPU_EGP_4 Register DESC0_26_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_26_CPU_EGP_4 0x142A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_26_CPU_EGP_4 0x1E7D42A0u
+
+//! Register Reset Value
+#define DESC0_26_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_26_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_26_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_26_CPU_EGP_4 Register DESC1_26_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_26_CPU_EGP_4 0x142A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_26_CPU_EGP_4 0x1E7D42A4u
+
+//! Register Reset Value
+#define DESC1_26_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_26_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_26_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_26_CPU_EGP_4 Register DESC2_26_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_26_CPU_EGP_4 0x142A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_26_CPU_EGP_4 0x1E7D42A8u
+
+//! Register Reset Value
+#define DESC2_26_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_26_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_26_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_26_CPU_EGP_4 Register DESC3_26_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_26_CPU_EGP_4 0x142AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_26_CPU_EGP_4 0x1E7D42ACu
+
+//! Register Reset Value
+#define DESC3_26_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_26_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_26_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_27_CPU_EGP_4 Register DESC0_27_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_27_CPU_EGP_4 0x142B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_27_CPU_EGP_4 0x1E7D42B0u
+
+//! Register Reset Value
+#define DESC0_27_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_27_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_27_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_27_CPU_EGP_4 Register DESC1_27_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_27_CPU_EGP_4 0x142B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_27_CPU_EGP_4 0x1E7D42B4u
+
+//! Register Reset Value
+#define DESC1_27_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_27_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_27_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_27_CPU_EGP_4 Register DESC2_27_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_27_CPU_EGP_4 0x142B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_27_CPU_EGP_4 0x1E7D42B8u
+
+//! Register Reset Value
+#define DESC2_27_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_27_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_27_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_27_CPU_EGP_4 Register DESC3_27_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_27_CPU_EGP_4 0x142BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_27_CPU_EGP_4 0x1E7D42BCu
+
+//! Register Reset Value
+#define DESC3_27_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_27_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_27_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_28_CPU_EGP_4 Register DESC0_28_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_28_CPU_EGP_4 0x142C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_28_CPU_EGP_4 0x1E7D42C0u
+
+//! Register Reset Value
+#define DESC0_28_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_28_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_28_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_28_CPU_EGP_4 Register DESC1_28_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_28_CPU_EGP_4 0x142C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_28_CPU_EGP_4 0x1E7D42C4u
+
+//! Register Reset Value
+#define DESC1_28_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_28_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_28_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_28_CPU_EGP_4 Register DESC2_28_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_28_CPU_EGP_4 0x142C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_28_CPU_EGP_4 0x1E7D42C8u
+
+//! Register Reset Value
+#define DESC2_28_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_28_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_28_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_28_CPU_EGP_4 Register DESC3_28_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_28_CPU_EGP_4 0x142CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_28_CPU_EGP_4 0x1E7D42CCu
+
+//! Register Reset Value
+#define DESC3_28_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_28_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_28_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_29_CPU_EGP_4 Register DESC0_29_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_29_CPU_EGP_4 0x142D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_29_CPU_EGP_4 0x1E7D42D0u
+
+//! Register Reset Value
+#define DESC0_29_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_29_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_29_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_29_CPU_EGP_4 Register DESC1_29_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_29_CPU_EGP_4 0x142D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_29_CPU_EGP_4 0x1E7D42D4u
+
+//! Register Reset Value
+#define DESC1_29_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_29_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_29_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_29_CPU_EGP_4 Register DESC2_29_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_29_CPU_EGP_4 0x142D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_29_CPU_EGP_4 0x1E7D42D8u
+
+//! Register Reset Value
+#define DESC2_29_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_29_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_29_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_29_CPU_EGP_4 Register DESC3_29_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_29_CPU_EGP_4 0x142DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_29_CPU_EGP_4 0x1E7D42DCu
+
+//! Register Reset Value
+#define DESC3_29_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_29_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_29_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_30_CPU_EGP_4 Register DESC0_30_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_30_CPU_EGP_4 0x142E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_30_CPU_EGP_4 0x1E7D42E0u
+
+//! Register Reset Value
+#define DESC0_30_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_30_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_30_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_30_CPU_EGP_4 Register DESC1_30_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_30_CPU_EGP_4 0x142E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_30_CPU_EGP_4 0x1E7D42E4u
+
+//! Register Reset Value
+#define DESC1_30_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_30_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_30_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_30_CPU_EGP_4 Register DESC2_30_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_30_CPU_EGP_4 0x142E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_30_CPU_EGP_4 0x1E7D42E8u
+
+//! Register Reset Value
+#define DESC2_30_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_30_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_30_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_30_CPU_EGP_4 Register DESC3_30_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_30_CPU_EGP_4 0x142EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_30_CPU_EGP_4 0x1E7D42ECu
+
+//! Register Reset Value
+#define DESC3_30_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_30_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_30_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_31_CPU_EGP_4 Register DESC0_31_CPU_EGP_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_31_CPU_EGP_4 0x142F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_31_CPU_EGP_4 0x1E7D42F0u
+
+//! Register Reset Value
+#define DESC0_31_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_31_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_31_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_31_CPU_EGP_4 Register DESC1_31_CPU_EGP_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_31_CPU_EGP_4 0x142F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_31_CPU_EGP_4 0x1E7D42F4u
+
+//! Register Reset Value
+#define DESC1_31_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_31_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_31_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_31_CPU_EGP_4 Register DESC2_31_CPU_EGP_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_31_CPU_EGP_4 0x142F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_31_CPU_EGP_4 0x1E7D42F8u
+
+//! Register Reset Value
+#define DESC2_31_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_31_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_31_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_31_CPU_EGP_4 Register DESC3_31_CPU_EGP_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_31_CPU_EGP_4 0x142FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_31_CPU_EGP_4 0x1E7D42FCu
+
+//! Register Reset Value
+#define DESC3_31_CPU_EGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_31_CPU_EGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_31_CPU_EGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_5 Register CFG_CPU_EGP_5 - Special CPU Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_5 0x15000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_5 0x1E7D5000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_5_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_5_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_5_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_5_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_5_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_5_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_5_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_5_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_5_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_5_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_5_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_5 Register DQPC_CPU_EGP_5 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_5 0x15004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_5 0x1E7D5004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_5_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_5_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_5_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_5 Register IRNCR_CPU_EGP_5 - Special CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_5 0x15020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_5 0x1E7D5020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_5_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_5_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_5_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_5_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_5_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_5 Register IRNICR_CPU_EGP_5 - Special CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_5 0x15024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_5 0x1E7D5024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_5_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_5_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_5_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_5 Register IRNEN_CPU_EGP_5 - Special CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_5 0x15028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_5 0x1E7D5028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_5_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_5_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_5_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_5_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_5_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_5 Register DPTR_CPU_EGP_5 - CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_5 0x15030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_5 0x1E7D5030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_5_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_5_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_5_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_5_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_5_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_6 Register CFG_DMA_EGP_6 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_6 0x16000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_6 0x1E7D6000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_6_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_6_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_6_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_6_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_6_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_6_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_6_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_6_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_6_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_6_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_6_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_6 Register DQPC_DMA_EGP_6 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_6 0x16004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_6 0x1E7D6004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_6_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_6_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_6_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_6 Register IRNCR_DMA_EGP_6 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_6 0x16020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_6 0x1E7D6020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_6_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_6_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_6_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_6_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_6_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_6 Register IRNICR_DMA_EGP_6 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_6 0x16024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_6 0x1E7D6024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_6_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_6_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_6_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_6 Register IRNEN_DMA_EGP_6 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_6 0x16028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_6 0x1E7D6028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_6_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_6_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_6_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_6_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_6_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_6 Register DPTR_DMA_EGP_6 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_6 0x16030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_6 0x1E7D6030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_6_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_6_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_6_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_6_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_6_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_7 Register CFG_DMA_EGP_7 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_7 0x17000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_7 0x1E7D7000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_7_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_7_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_7_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_7_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_7_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_7_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_7_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_7_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_7_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_7_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_7_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_7 Register DQPC_DMA_EGP_7 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_7 0x17004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_7 0x1E7D7004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_7_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_7_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_7_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_7 Register IRNCR_DMA_EGP_7 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_7 0x17020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_7 0x1E7D7020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_7_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_7_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_7_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_7_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_7_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_7 Register IRNICR_DMA_EGP_7 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_7 0x17024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_7 0x1E7D7024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_7_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_7_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_7_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_7 Register IRNEN_DMA_EGP_7 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_7 0x17028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_7 0x1E7D7028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_7_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_7_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_7_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_7_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_7_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_7 Register DPTR_DMA_EGP_7 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_7 0x17030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_7 0x1E7D7030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_7_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_7_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_7_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_7_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_7_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_8 Register CFG_DMA_EGP_8 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_8 0x18000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_8 0x1E7D8000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_8_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_8_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_8_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_8_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_8_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_8_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_8_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_8_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_8_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_8_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_8_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_8 Register DQPC_DMA_EGP_8 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_8 0x18004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_8 0x1E7D8004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_8_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_8_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_8_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_8 Register IRNCR_DMA_EGP_8 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_8 0x18020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_8 0x1E7D8020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_8_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_8_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_8_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_8_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_8_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_8 Register IRNICR_DMA_EGP_8 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_8 0x18024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_8 0x1E7D8024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_8_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_8_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_8_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_8 Register IRNEN_DMA_EGP_8 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_8 0x18028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_8 0x1E7D8028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_8_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_8_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_8_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_8_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_8_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_8 Register DPTR_DMA_EGP_8 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_8 0x18030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_8 0x1E7D8030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_8_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_8_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_8_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_8_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_8_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_9 Register CFG_DMA_EGP_9 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_9 0x19000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_9 0x1E7D9000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_9_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_9_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_9_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_9_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_9_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_9_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_9_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_9_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_9_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_9_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_9_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_9 Register DQPC_DMA_EGP_9 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_9 0x19004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_9 0x1E7D9004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_9_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_9_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_9_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_9 Register IRNCR_DMA_EGP_9 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_9 0x19020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_9 0x1E7D9020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_9_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_9_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_9_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_9_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_9_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_9 Register IRNICR_DMA_EGP_9 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_9 0x19024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_9 0x1E7D9024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_9_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_9_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_9_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_9 Register IRNEN_DMA_EGP_9 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_9 0x19028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_9 0x1E7D9028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_9_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_9_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_9_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_9_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_9_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_9 Register DPTR_DMA_EGP_9 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_9 0x19030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_9 0x1E7D9030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_9_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_9_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_9_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_9_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_9_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_10 Register CFG_DMA_EGP_10 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_10 0x1A000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_10 0x1E7DA000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_10_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_10_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_10_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_10_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_10_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_10_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_10_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_10_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_10_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_10_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_10_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_10 Register DQPC_DMA_EGP_10 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_10 0x1A004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_10 0x1E7DA004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_10_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_10_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_10_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_10 Register IRNCR_DMA_EGP_10 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_10 0x1A020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_10 0x1E7DA020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_10_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_10_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_10_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_10_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_10_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_10 Register IRNICR_DMA_EGP_10 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_10 0x1A024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_10 0x1E7DA024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_10_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_10_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_10_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_10 Register IRNEN_DMA_EGP_10 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_10 0x1A028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_10 0x1E7DA028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_10_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_10_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_10_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_10_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_10_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_10 Register DPTR_DMA_EGP_10 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_10 0x1A030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_10 0x1E7DA030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_10_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_10_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_10_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_10_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_10_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_11 Register CFG_DMA_EGP_11 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_11 0x1B000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_11 0x1E7DB000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_11_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_11_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_11_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_11_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_11_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_11_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_11_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_11_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_11_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_11_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_11_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_11 Register DQPC_DMA_EGP_11 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_11 0x1B004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_11 0x1E7DB004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_11_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_11_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_11_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_11 Register IRNCR_DMA_EGP_11 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_11 0x1B020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_11 0x1E7DB020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_11_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_11_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_11_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_11_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_11_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_11 Register IRNICR_DMA_EGP_11 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_11 0x1B024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_11 0x1E7DB024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_11_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_11_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_11_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_11 Register IRNEN_DMA_EGP_11 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_11 0x1B028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_11 0x1E7DB028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_11_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_11_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_11_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_11_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_11_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_11 Register DPTR_DMA_EGP_11 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_11 0x1B030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_11 0x1E7DB030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_11_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_11_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_11_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_11_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_11_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_12 Register CFG_DMA_EGP_12 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_12 0x1C000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_12 0x1E7DC000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_12_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_12_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_12_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_12_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_12_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_12_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_12_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_12_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_12_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_12_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_12_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_12 Register DQPC_DMA_EGP_12 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_12 0x1C004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_12 0x1E7DC004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_12_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_12_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_12_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_12 Register IRNCR_DMA_EGP_12 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_12 0x1C020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_12 0x1E7DC020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_12_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_12_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_12_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_12_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_12_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_12 Register IRNICR_DMA_EGP_12 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_12 0x1C024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_12 0x1E7DC024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_12_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_12_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_12_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_12 Register IRNEN_DMA_EGP_12 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_12 0x1C028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_12 0x1E7DC028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_12_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_12_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_12_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_12_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_12_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_12 Register DPTR_DMA_EGP_12 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_12 0x1C030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_12 0x1E7DC030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_12_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_12_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_12_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_12_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_12_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_13 Register CFG_DMA_EGP_13 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_13 0x1D000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_13 0x1E7DD000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_13_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_13_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_13_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_13_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_13_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_13_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_13_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_13_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_13_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_13_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_13_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_13 Register DQPC_DMA_EGP_13 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_13 0x1D004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_13 0x1E7DD004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_13_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_13_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_13_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_13 Register IRNCR_DMA_EGP_13 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_13 0x1D020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_13 0x1E7DD020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_13_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_13_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_13_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_13_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_13_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_13 Register IRNICR_DMA_EGP_13 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_13 0x1D024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_13 0x1E7DD024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_13_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_13_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_13_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_13 Register IRNEN_DMA_EGP_13 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_13 0x1D028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_13 0x1E7DD028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_13_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_13_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_13_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_13_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_13_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_13 Register DPTR_DMA_EGP_13 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_13 0x1D030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_13 0x1E7DD030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_13_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_13_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_13_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_13_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_13_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_14 Register CFG_DMA_EGP_14 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_14 0x1E000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_14 0x1E7DE000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_14_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_14_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_14_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_14_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_14_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_14_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_14_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_14_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_14_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_14_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_14_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_14 Register DQPC_DMA_EGP_14 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_14 0x1E004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_14 0x1E7DE004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_14_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_14_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_14_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_14 Register IRNCR_DMA_EGP_14 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_14 0x1E020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_14 0x1E7DE020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_14_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_14_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_14_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_14_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_14_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_14 Register IRNICR_DMA_EGP_14 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_14 0x1E024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_14 0x1E7DE024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_14_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_14_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_14_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_14 Register IRNEN_DMA_EGP_14 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_14 0x1E028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_14 0x1E7DE028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_14_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_14_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_14_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_14_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_14_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_14 Register DPTR_DMA_EGP_14 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_14 0x1E030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_14 0x1E7DE030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_14_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_14_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_14_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_14_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_14_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_15 Register CFG_DMA_EGP_15 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_15 0x1F000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_15 0x1E7DF000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_15_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_15_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_15_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_15_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_15_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_15_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_15_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_15_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_15_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_15_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_15_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_15 Register DQPC_DMA_EGP_15 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_15 0x1F004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_15 0x1E7DF004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_15_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_15_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_15_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_15 Register IRNCR_DMA_EGP_15 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_15 0x1F020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_15 0x1E7DF020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_15_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_15_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_15_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_15_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_15_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_15 Register IRNICR_DMA_EGP_15 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_15 0x1F024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_15 0x1E7DF024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_15_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_15_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_15_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_15 Register IRNEN_DMA_EGP_15 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_15 0x1F028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_15 0x1E7DF028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_15_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_15_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_15_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_15_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_15_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_15 Register DPTR_DMA_EGP_15 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_15 0x1F030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_15 0x1E7DF030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_15_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_15_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_15_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_15_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_15_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_16 Register CFG_DMA_EGP_16 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_16 0x20000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_16 0x1E7E0000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_16_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_16_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_16_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_16_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_16_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_16_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_16_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_16_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_16_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_16_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_16_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_16 Register DQPC_DMA_EGP_16 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_16 0x20004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_16 0x1E7E0004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_16_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_16_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_16_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_16 Register IRNCR_DMA_EGP_16 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_16 0x20020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_16 0x1E7E0020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_16_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_16_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_16_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_16_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_16_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_16 Register IRNICR_DMA_EGP_16 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_16 0x20024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_16 0x1E7E0024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_16_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_16_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_16_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_16 Register IRNEN_DMA_EGP_16 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_16 0x20028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_16 0x1E7E0028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_16_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_16_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_16_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_16_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_16_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_16 Register DPTR_DMA_EGP_16 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_16 0x20030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_16 0x1E7E0030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_16_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_16_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_16_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_16_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_16_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_17 Register CFG_DMA_EGP_17 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_17 0x21000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_17 0x1E7E1000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_17_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_17_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_17_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_17_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_17_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_17_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_17_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_17_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_17_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_17_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_17_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_17 Register DQPC_DMA_EGP_17 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_17 0x21004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_17 0x1E7E1004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_17_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_17_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_17_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_17 Register IRNCR_DMA_EGP_17 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_17 0x21020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_17 0x1E7E1020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_17_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_17_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_17_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_17_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_17_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_17 Register IRNICR_DMA_EGP_17 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_17 0x21024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_17 0x1E7E1024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_17_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_17_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_17_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_17 Register IRNEN_DMA_EGP_17 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_17 0x21028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_17 0x1E7E1028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_17_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_17_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_17_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_17_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_17_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_17 Register DPTR_DMA_EGP_17 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_17 0x21030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_17 0x1E7E1030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_17_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_17_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_17_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_17_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_17_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_18 Register CFG_DMA_EGP_18 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_18 0x22000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_18 0x1E7E2000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_18_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_18_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_18_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_18_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_18_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_18_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_18_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_18_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_18_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_18_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_18_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_18 Register DQPC_DMA_EGP_18 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_18 0x22004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_18 0x1E7E2004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_18_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_18_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_18_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_18 Register IRNCR_DMA_EGP_18 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_18 0x22020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_18 0x1E7E2020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_18_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_18_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_18_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_18_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_18_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_18 Register IRNICR_DMA_EGP_18 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_18 0x22024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_18 0x1E7E2024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_18_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_18_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_18_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_18 Register IRNEN_DMA_EGP_18 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_18 0x22028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_18 0x1E7E2028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_18_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_18_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_18_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_18_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_18_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_18 Register DPTR_DMA_EGP_18 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_18 0x22030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_18 0x1E7E2030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_18_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_18_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_18_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_18_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_18_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_19 Register CFG_DMA_EGP_19 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_19 0x23000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_19 0x1E7E3000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_19_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_19_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_19_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_19_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_19_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_19_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_19_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_19_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_19_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_19_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_19_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_19 Register DQPC_DMA_EGP_19 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_19 0x23004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_19 0x1E7E3004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_19_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_19_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_19_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_19 Register IRNCR_DMA_EGP_19 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_19 0x23020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_19 0x1E7E3020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_19_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_19_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_19_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_19_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_19_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_19 Register IRNICR_DMA_EGP_19 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_19 0x23024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_19 0x1E7E3024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_19_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_19_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_19_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_19 Register IRNEN_DMA_EGP_19 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_19 0x23028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_19 0x1E7E3028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_19_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_19_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_19_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_19_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_19_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_19 Register DPTR_DMA_EGP_19 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_19 0x23030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_19 0x1E7E3030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_19_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_19_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_19_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_19_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_19_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_20 Register CFG_DMA_EGP_20 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_20 0x24000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_20 0x1E7E4000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_20_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_20_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_20_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_20_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_20_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_20_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_20_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_20_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_20_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_20_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_20_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_20 Register DQPC_DMA_EGP_20 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_20 0x24004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_20 0x1E7E4004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_20_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_20_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_20_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_20 Register IRNCR_DMA_EGP_20 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_20 0x24020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_20 0x1E7E4020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_20_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_20_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_20_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_20_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_20_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_20 Register IRNICR_DMA_EGP_20 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_20 0x24024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_20 0x1E7E4024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_20_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_20_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_20_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_20 Register IRNEN_DMA_EGP_20 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_20 0x24028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_20 0x1E7E4028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_20_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_20_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_20_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_20_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_20_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_20 Register DPTR_DMA_EGP_20 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_20 0x24030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_20 0x1E7E4030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_20_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_20_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_20_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_20_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_20_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_21 Register CFG_DMA_EGP_21 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_21 0x25000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_21 0x1E7E5000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_21_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_21_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_21_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_21_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_21_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_21_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_21_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_21_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_21_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_21_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_21_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_21 Register DQPC_DMA_EGP_21 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_21 0x25004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_21 0x1E7E5004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_21_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_21_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_21_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_21 Register IRNCR_DMA_EGP_21 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_21 0x25020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_21 0x1E7E5020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_21_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_21_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_21_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_21_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_21_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_21 Register IRNICR_DMA_EGP_21 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_21 0x25024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_21 0x1E7E5024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_21_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_21_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_21_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_21 Register IRNEN_DMA_EGP_21 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_21 0x25028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_21 0x1E7E5028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_21_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_21_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_21_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_21_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_21_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_21 Register DPTR_DMA_EGP_21 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_21 0x25030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_21 0x1E7E5030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_21_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_21_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_21_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_21_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_21_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_22 Register CFG_DMA_EGP_22 - DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_22 0x26000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_22 0x1E7E6000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_22_RST 0x00000000u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_22_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_22_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_22_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_22_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_22_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_22_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_22_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_22_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_22_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_22_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_22 Register DQPC_DMA_EGP_22 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_22 0x26004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_22 0x1E7E6004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_22_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_22_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_22_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_22 Register IRNCR_DMA_EGP_22 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_22 0x26020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_22 0x1E7E6020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_22_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_22_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_22_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_22_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_22_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_22 Register IRNICR_DMA_EGP_22 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_22 0x26024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_22 0x1E7E6024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_22_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_22_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_22_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_22 Register IRNEN_DMA_EGP_22 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_22 0x26028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_22 0x1E7E6028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_22_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_22_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_22_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_22_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_22_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_22 Register DPTR_DMA_EGP_22 - DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_22 0x26030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_22 0x1E7E6030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_22_RST 0x00000001u
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_22_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_22_ND_MASK 0x1u
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_22_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_22_DPTR_MASK 0x10000u
+
+//! @}
+
+//! \defgroup CFG_DMA_EGP_23 Register CFG_DMA_EGP_23 - Legacy DMA Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_EGP_23 0x27000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_DMA_EGP_23 0x1E7E7000u
+
+//! Register Reset Value
+#define CFG_DMA_EGP_23_RST 0x00001800u
+
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_23_DQREQ_POS 0
+//! Field DQREQ - Enable DMA Dequeue Request
+#define CFG_DMA_EGP_23_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_23_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_23_DQREQ_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_23_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_DMA_EGP_23_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_EGP_23_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_EGP_23_DQPCEN_EN 0x1
+
+//! Field DESC_INV - Descriptor Invert
+#define CFG_DMA_EGP_23_DESC_INV_POS 11
+//! Field DESC_INV - Descriptor Invert
+#define CFG_DMA_EGP_23_DESC_INV_MASK 0x800u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_EGP_23_DESC_INV_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_EGP_23_DESC_INV_EN 0x1
+
+//! Field LDM - Legacy Descriptor Mode
+#define CFG_DMA_EGP_23_LDM_POS 12
+//! Field LDM - Legacy Descriptor Mode
+#define CFG_DMA_EGP_23_LDM_MASK 0x1000u
+//! Constant NORMAL - Normal mode
+#define CONST_CFG_DMA_EGP_23_LDM_NORMAL 0x0
+//! Constant LEGACY - Legacy mode
+#define CONST_CFG_DMA_EGP_23_LDM_LEGACY 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_23_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_DMA_EGP_23_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_DMA_EGP_23 Register DQPC_DMA_EGP_23 - DMA Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_DMA_EGP_23 0x27004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_DMA_EGP_23 0x1E7E7004u
+
+//! Register Reset Value
+#define DQPC_DMA_EGP_23_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_23_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_DMA_EGP_23_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_EGP_23 Register IRNCR_DMA_EGP_23 - DMA Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_EGP_23 0x27020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_DMA_EGP_23 0x1E7E7020u
+
+//! Register Reset Value
+#define IRNCR_DMA_EGP_23_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_23_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_DMA_EGP_23_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_EGP_23_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_EGP_23_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_EGP_23 Register IRNICR_DMA_EGP_23 - DMA Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_EGP_23 0x27024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_DMA_EGP_23 0x1E7E7024u
+
+//! Register Reset Value
+#define IRNICR_DMA_EGP_23_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_23_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_DMA_EGP_23_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_EGP_23 Register IRNEN_DMA_EGP_23 - DMA Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_EGP_23 0x27028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_DMA_EGP_23 0x1E7E7028u
+
+//! Register Reset Value
+#define IRNEN_DMA_EGP_23_RST 0x00000000u
+
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_23_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_DMA_EGP_23_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_EGP_23_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_EGP_23_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_EGP_23 Register DPTR_DMA_EGP_23 - Legacy DMA Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_EGP_23 0x27030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_DMA_EGP_23 0x1E7E7030u
+
+//! Register Reset Value
+#define DPTR_DMA_EGP_23_RST 0x0000001Fu
+
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_23_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_DMA_EGP_23_ND_MASK 0x1Fu
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_23_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_DMA_EGP_23_DPTR_MASK 0x1F0000u
+
+//! @}
+
+//! \defgroup LDESC0_0_DMA_EGP_23 Register LDESC0_0_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_0_DMA_EGP_23 0x27100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_0_DMA_EGP_23 0x1E7E7100u
+
+//! Register Reset Value
+#define LDESC0_0_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_0_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_0_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_0_DMA_EGP_23 Register LDESC1_0_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_0_DMA_EGP_23 0x27104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_0_DMA_EGP_23 0x1E7E7104u
+
+//! Register Reset Value
+#define LDESC1_0_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_0_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_0_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_1_DMA_EGP_23 Register LDESC0_1_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_1_DMA_EGP_23 0x27108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_1_DMA_EGP_23 0x1E7E7108u
+
+//! Register Reset Value
+#define LDESC0_1_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_1_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_1_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_1_DMA_EGP_23 Register LDESC1_1_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_1_DMA_EGP_23 0x2710C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_1_DMA_EGP_23 0x1E7E710Cu
+
+//! Register Reset Value
+#define LDESC1_1_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_1_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_1_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_2_DMA_EGP_23 Register LDESC0_2_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_2_DMA_EGP_23 0x27110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_2_DMA_EGP_23 0x1E7E7110u
+
+//! Register Reset Value
+#define LDESC0_2_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_2_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_2_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_2_DMA_EGP_23 Register LDESC1_2_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_2_DMA_EGP_23 0x27114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_2_DMA_EGP_23 0x1E7E7114u
+
+//! Register Reset Value
+#define LDESC1_2_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_2_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_2_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_3_DMA_EGP_23 Register LDESC0_3_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_3_DMA_EGP_23 0x27118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_3_DMA_EGP_23 0x1E7E7118u
+
+//! Register Reset Value
+#define LDESC0_3_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_3_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_3_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_3_DMA_EGP_23 Register LDESC1_3_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_3_DMA_EGP_23 0x2711C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_3_DMA_EGP_23 0x1E7E711Cu
+
+//! Register Reset Value
+#define LDESC1_3_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_3_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_3_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_4_DMA_EGP_23 Register LDESC0_4_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_4_DMA_EGP_23 0x27120
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_4_DMA_EGP_23 0x1E7E7120u
+
+//! Register Reset Value
+#define LDESC0_4_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_4_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_4_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_4_DMA_EGP_23 Register LDESC1_4_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_4_DMA_EGP_23 0x27124
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_4_DMA_EGP_23 0x1E7E7124u
+
+//! Register Reset Value
+#define LDESC1_4_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_4_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_4_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_5_DMA_EGP_23 Register LDESC0_5_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_5_DMA_EGP_23 0x27128
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_5_DMA_EGP_23 0x1E7E7128u
+
+//! Register Reset Value
+#define LDESC0_5_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_5_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_5_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_5_DMA_EGP_23 Register LDESC1_5_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_5_DMA_EGP_23 0x2712C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_5_DMA_EGP_23 0x1E7E712Cu
+
+//! Register Reset Value
+#define LDESC1_5_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_5_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_5_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_6_DMA_EGP_23 Register LDESC0_6_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_6_DMA_EGP_23 0x27130
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_6_DMA_EGP_23 0x1E7E7130u
+
+//! Register Reset Value
+#define LDESC0_6_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_6_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_6_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_6_DMA_EGP_23 Register LDESC1_6_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_6_DMA_EGP_23 0x27134
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_6_DMA_EGP_23 0x1E7E7134u
+
+//! Register Reset Value
+#define LDESC1_6_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_6_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_6_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_7_DMA_EGP_23 Register LDESC0_7_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_7_DMA_EGP_23 0x27138
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_7_DMA_EGP_23 0x1E7E7138u
+
+//! Register Reset Value
+#define LDESC0_7_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_7_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_7_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_7_DMA_EGP_23 Register LDESC1_7_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_7_DMA_EGP_23 0x2713C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_7_DMA_EGP_23 0x1E7E713Cu
+
+//! Register Reset Value
+#define LDESC1_7_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_7_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_7_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_8_DMA_EGP_23 Register LDESC0_8_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_8_DMA_EGP_23 0x27140
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_8_DMA_EGP_23 0x1E7E7140u
+
+//! Register Reset Value
+#define LDESC0_8_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_8_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_8_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_8_DMA_EGP_23 Register LDESC1_8_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_8_DMA_EGP_23 0x27144
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_8_DMA_EGP_23 0x1E7E7144u
+
+//! Register Reset Value
+#define LDESC1_8_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_8_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_8_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_9_DMA_EGP_23 Register LDESC0_9_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_9_DMA_EGP_23 0x27148
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_9_DMA_EGP_23 0x1E7E7148u
+
+//! Register Reset Value
+#define LDESC0_9_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_9_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_9_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_9_DMA_EGP_23 Register LDESC1_9_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_9_DMA_EGP_23 0x2714C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_9_DMA_EGP_23 0x1E7E714Cu
+
+//! Register Reset Value
+#define LDESC1_9_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_9_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_9_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_10_DMA_EGP_23 Register LDESC0_10_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_10_DMA_EGP_23 0x27150
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_10_DMA_EGP_23 0x1E7E7150u
+
+//! Register Reset Value
+#define LDESC0_10_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_10_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_10_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_10_DMA_EGP_23 Register LDESC1_10_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_10_DMA_EGP_23 0x27154
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_10_DMA_EGP_23 0x1E7E7154u
+
+//! Register Reset Value
+#define LDESC1_10_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_10_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_10_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_11_DMA_EGP_23 Register LDESC0_11_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_11_DMA_EGP_23 0x27158
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_11_DMA_EGP_23 0x1E7E7158u
+
+//! Register Reset Value
+#define LDESC0_11_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_11_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_11_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_11_DMA_EGP_23 Register LDESC1_11_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_11_DMA_EGP_23 0x2715C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_11_DMA_EGP_23 0x1E7E715Cu
+
+//! Register Reset Value
+#define LDESC1_11_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_11_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_11_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_12_DMA_EGP_23 Register LDESC0_12_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_12_DMA_EGP_23 0x27160
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_12_DMA_EGP_23 0x1E7E7160u
+
+//! Register Reset Value
+#define LDESC0_12_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_12_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_12_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_12_DMA_EGP_23 Register LDESC1_12_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_12_DMA_EGP_23 0x27164
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_12_DMA_EGP_23 0x1E7E7164u
+
+//! Register Reset Value
+#define LDESC1_12_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_12_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_12_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_13_DMA_EGP_23 Register LDESC0_13_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_13_DMA_EGP_23 0x27168
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_13_DMA_EGP_23 0x1E7E7168u
+
+//! Register Reset Value
+#define LDESC0_13_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_13_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_13_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_13_DMA_EGP_23 Register LDESC1_13_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_13_DMA_EGP_23 0x2716C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_13_DMA_EGP_23 0x1E7E716Cu
+
+//! Register Reset Value
+#define LDESC1_13_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_13_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_13_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_14_DMA_EGP_23 Register LDESC0_14_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_14_DMA_EGP_23 0x27170
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_14_DMA_EGP_23 0x1E7E7170u
+
+//! Register Reset Value
+#define LDESC0_14_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_14_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_14_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_14_DMA_EGP_23 Register LDESC1_14_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_14_DMA_EGP_23 0x27174
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_14_DMA_EGP_23 0x1E7E7174u
+
+//! Register Reset Value
+#define LDESC1_14_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_14_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_14_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_15_DMA_EGP_23 Register LDESC0_15_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_15_DMA_EGP_23 0x27178
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_15_DMA_EGP_23 0x1E7E7178u
+
+//! Register Reset Value
+#define LDESC0_15_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_15_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_15_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_15_DMA_EGP_23 Register LDESC1_15_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_15_DMA_EGP_23 0x2717C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_15_DMA_EGP_23 0x1E7E717Cu
+
+//! Register Reset Value
+#define LDESC1_15_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_15_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_15_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_16_DMA_EGP_23 Register LDESC0_16_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_16_DMA_EGP_23 0x27180
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_16_DMA_EGP_23 0x1E7E7180u
+
+//! Register Reset Value
+#define LDESC0_16_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_16_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_16_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_16_DMA_EGP_23 Register LDESC1_16_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_16_DMA_EGP_23 0x27184
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_16_DMA_EGP_23 0x1E7E7184u
+
+//! Register Reset Value
+#define LDESC1_16_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_16_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_16_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_17_DMA_EGP_23 Register LDESC0_17_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_17_DMA_EGP_23 0x27188
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_17_DMA_EGP_23 0x1E7E7188u
+
+//! Register Reset Value
+#define LDESC0_17_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_17_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_17_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_17_DMA_EGP_23 Register LDESC1_17_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_17_DMA_EGP_23 0x2718C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_17_DMA_EGP_23 0x1E7E718Cu
+
+//! Register Reset Value
+#define LDESC1_17_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_17_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_17_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_18_DMA_EGP_23 Register LDESC0_18_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_18_DMA_EGP_23 0x27190
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_18_DMA_EGP_23 0x1E7E7190u
+
+//! Register Reset Value
+#define LDESC0_18_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_18_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_18_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_18_DMA_EGP_23 Register LDESC1_18_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_18_DMA_EGP_23 0x27194
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_18_DMA_EGP_23 0x1E7E7194u
+
+//! Register Reset Value
+#define LDESC1_18_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_18_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_18_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_19_DMA_EGP_23 Register LDESC0_19_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_19_DMA_EGP_23 0x27198
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_19_DMA_EGP_23 0x1E7E7198u
+
+//! Register Reset Value
+#define LDESC0_19_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_19_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_19_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_19_DMA_EGP_23 Register LDESC1_19_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_19_DMA_EGP_23 0x2719C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_19_DMA_EGP_23 0x1E7E719Cu
+
+//! Register Reset Value
+#define LDESC1_19_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_19_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_19_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_20_DMA_EGP_23 Register LDESC0_20_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_20_DMA_EGP_23 0x271A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_20_DMA_EGP_23 0x1E7E71A0u
+
+//! Register Reset Value
+#define LDESC0_20_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_20_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_20_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_20_DMA_EGP_23 Register LDESC1_20_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_20_DMA_EGP_23 0x271A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_20_DMA_EGP_23 0x1E7E71A4u
+
+//! Register Reset Value
+#define LDESC1_20_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_20_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_20_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_21_DMA_EGP_23 Register LDESC0_21_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_21_DMA_EGP_23 0x271A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_21_DMA_EGP_23 0x1E7E71A8u
+
+//! Register Reset Value
+#define LDESC0_21_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_21_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_21_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_21_DMA_EGP_23 Register LDESC1_21_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_21_DMA_EGP_23 0x271AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_21_DMA_EGP_23 0x1E7E71ACu
+
+//! Register Reset Value
+#define LDESC1_21_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_21_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_21_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_22_DMA_EGP_23 Register LDESC0_22_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_22_DMA_EGP_23 0x271B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_22_DMA_EGP_23 0x1E7E71B0u
+
+//! Register Reset Value
+#define LDESC0_22_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_22_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_22_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_22_DMA_EGP_23 Register LDESC1_22_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_22_DMA_EGP_23 0x271B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_22_DMA_EGP_23 0x1E7E71B4u
+
+//! Register Reset Value
+#define LDESC1_22_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_22_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_22_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_23_DMA_EGP_23 Register LDESC0_23_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_23_DMA_EGP_23 0x271B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_23_DMA_EGP_23 0x1E7E71B8u
+
+//! Register Reset Value
+#define LDESC0_23_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_23_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_23_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_23_DMA_EGP_23 Register LDESC1_23_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_23_DMA_EGP_23 0x271BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_23_DMA_EGP_23 0x1E7E71BCu
+
+//! Register Reset Value
+#define LDESC1_23_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_23_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_23_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_24_DMA_EGP_23 Register LDESC0_24_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_24_DMA_EGP_23 0x271C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_24_DMA_EGP_23 0x1E7E71C0u
+
+//! Register Reset Value
+#define LDESC0_24_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_24_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_24_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_24_DMA_EGP_23 Register LDESC1_24_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_24_DMA_EGP_23 0x271C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_24_DMA_EGP_23 0x1E7E71C4u
+
+//! Register Reset Value
+#define LDESC1_24_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_24_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_24_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_25_DMA_EGP_23 Register LDESC0_25_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_25_DMA_EGP_23 0x271C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_25_DMA_EGP_23 0x1E7E71C8u
+
+//! Register Reset Value
+#define LDESC0_25_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_25_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_25_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_25_DMA_EGP_23 Register LDESC1_25_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_25_DMA_EGP_23 0x271CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_25_DMA_EGP_23 0x1E7E71CCu
+
+//! Register Reset Value
+#define LDESC1_25_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_25_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_25_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_26_DMA_EGP_23 Register LDESC0_26_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_26_DMA_EGP_23 0x271D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_26_DMA_EGP_23 0x1E7E71D0u
+
+//! Register Reset Value
+#define LDESC0_26_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_26_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_26_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_26_DMA_EGP_23 Register LDESC1_26_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_26_DMA_EGP_23 0x271D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_26_DMA_EGP_23 0x1E7E71D4u
+
+//! Register Reset Value
+#define LDESC1_26_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_26_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_26_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_27_DMA_EGP_23 Register LDESC0_27_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_27_DMA_EGP_23 0x271D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_27_DMA_EGP_23 0x1E7E71D8u
+
+//! Register Reset Value
+#define LDESC0_27_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_27_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_27_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_27_DMA_EGP_23 Register LDESC1_27_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_27_DMA_EGP_23 0x271DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_27_DMA_EGP_23 0x1E7E71DCu
+
+//! Register Reset Value
+#define LDESC1_27_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_27_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_27_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_28_DMA_EGP_23 Register LDESC0_28_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_28_DMA_EGP_23 0x271E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_28_DMA_EGP_23 0x1E7E71E0u
+
+//! Register Reset Value
+#define LDESC0_28_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_28_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_28_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_28_DMA_EGP_23 Register LDESC1_28_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_28_DMA_EGP_23 0x271E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_28_DMA_EGP_23 0x1E7E71E4u
+
+//! Register Reset Value
+#define LDESC1_28_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_28_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_28_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_29_DMA_EGP_23 Register LDESC0_29_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_29_DMA_EGP_23 0x271E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_29_DMA_EGP_23 0x1E7E71E8u
+
+//! Register Reset Value
+#define LDESC0_29_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_29_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_29_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_29_DMA_EGP_23 Register LDESC1_29_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_29_DMA_EGP_23 0x271EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_29_DMA_EGP_23 0x1E7E71ECu
+
+//! Register Reset Value
+#define LDESC1_29_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_29_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_29_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_30_DMA_EGP_23 Register LDESC0_30_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_30_DMA_EGP_23 0x271F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_30_DMA_EGP_23 0x1E7E71F0u
+
+//! Register Reset Value
+#define LDESC0_30_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_30_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_30_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_30_DMA_EGP_23 Register LDESC1_30_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_30_DMA_EGP_23 0x271F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_30_DMA_EGP_23 0x1E7E71F4u
+
+//! Register Reset Value
+#define LDESC1_30_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_30_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_30_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC0_31_DMA_EGP_23 Register LDESC0_31_DMA_EGP_23 - DMA Egress Port Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define LDESC0_31_DMA_EGP_23 0x271F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC0_31_DMA_EGP_23 0x1E7E71F8u
+
+//! Register Reset Value
+#define LDESC0_31_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_31_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define LDESC0_31_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LDESC1_31_DMA_EGP_23 Register LDESC1_31_DMA_EGP_23 - DMA egress Port Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define LDESC1_31_DMA_EGP_23 0x271FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_LDESC1_31_DMA_EGP_23 0x1E7E71FCu
+
+//! Register Reset Value
+#define LDESC1_31_DMA_EGP_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_31_DMA_EGP_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define LDESC1_31_DMA_EGP_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_24 Register CFG_CPU_EGP_24 - CPU WLAN Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_24 0x28000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_24 0x1E7E8000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_24_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_24_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_24_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_24_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_24_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_24_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_24_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_24_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_24_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_24_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_24_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_24_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_24_BFBPEN_EN 0x1
+
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_24_DQBPEN_POS 3
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_24_DQBPEN_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_24_DQBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_24_DQBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_24_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_24_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_24_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_24_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_24_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_24_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_24 Register DQPC_CPU_EGP_24 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_24 0x28004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_24 0x1E7E8004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_24_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_24_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_24_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_24 Register IRNCR_CPU_EGP_24 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_24 0x28020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_24 0x1E7E8020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_24_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_24_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_24_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_24_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_24_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_24_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_24_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_24_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_24_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_24 Register IRNICR_CPU_EGP_24 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_24 0x28024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_24 0x1E7E8024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_24_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_24_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_24_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_24_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_24_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_24 Register IRNEN_CPU_EGP_24 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_24 0x28028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_24 0x1E7E8028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_24_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_24_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_24_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_24_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_24_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_24_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_24_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_24_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_24_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_24 Register DPTR_CPU_EGP_24 - Special CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_24 0x28030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_24 0x1E7E8030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_24_RST 0x0000001Fu
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_24_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_24_ND_MASK 0x1Fu
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_24_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_24_DPTR_MASK 0x1F0000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_24 Register BPRC_CPU_EGP_24 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_24 0x28034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_24 0x1E7E8034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_24_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_24_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_24_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup BRPTR_SCPU_EGP_24 Register BRPTR_SCPU_EGP_24 - Special CPU Egress Port Buffer Return Pointer
+//! @{
+
+//! Register Offset (relative)
+#define BRPTR_SCPU_EGP_24 0x28038
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BRPTR_SCPU_EGP_24 0x1E7E8038u
+
+//! Register Reset Value
+#define BRPTR_SCPU_EGP_24_RST 0x00000000u
+
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_24_PTRBR_POS 0
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_24_PTRBR_MASK 0x1Fu
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_0 Register PTR_RTN_CPU_EGP_24_0 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_0 0x28080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_0 0x1E7E8080u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_0_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_0_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_0_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_1 Register PTR_RTN_CPU_EGP_24_1 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_1 0x28084
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_1 0x1E7E8084u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_1_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_1_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_1_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_2 Register PTR_RTN_CPU_EGP_24_2 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_2 0x28088
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_2 0x1E7E8088u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_2_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_2_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_2_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_3 Register PTR_RTN_CPU_EGP_24_3 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_3 0x2808C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_3 0x1E7E808Cu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_3_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_3_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_3_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_4 Register PTR_RTN_CPU_EGP_24_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_4 0x28090
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_4 0x1E7E8090u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_5 Register PTR_RTN_CPU_EGP_24_5 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_5 0x28094
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_5 0x1E7E8094u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_5_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_5_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_5_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_6 Register PTR_RTN_CPU_EGP_24_6 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_6 0x28098
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_6 0x1E7E8098u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_6_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_6_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_6_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_7 Register PTR_RTN_CPU_EGP_24_7 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_7 0x2809C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_7 0x1E7E809Cu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_7_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_7_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_7_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_8 Register PTR_RTN_CPU_EGP_24_8 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_8 0x280A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_8 0x1E7E80A0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_8_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_8_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_8_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_9 Register PTR_RTN_CPU_EGP_24_9 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_9 0x280A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_9 0x1E7E80A4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_9_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_9_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_9_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_10 Register PTR_RTN_CPU_EGP_24_10 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_10 0x280A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_10 0x1E7E80A8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_10_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_10_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_10_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_11 Register PTR_RTN_CPU_EGP_24_11 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_11 0x280AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_11 0x1E7E80ACu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_11_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_11_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_11_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_12 Register PTR_RTN_CPU_EGP_24_12 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_12 0x280B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_12 0x1E7E80B0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_12_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_12_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_12_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_13 Register PTR_RTN_CPU_EGP_24_13 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_13 0x280B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_13 0x1E7E80B4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_13_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_13_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_13_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_14 Register PTR_RTN_CPU_EGP_24_14 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_14 0x280B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_14 0x1E7E80B8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_14_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_14_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_14_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_15 Register PTR_RTN_CPU_EGP_24_15 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_15 0x280BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_15 0x1E7E80BCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_15_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_15_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_15_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_16 Register PTR_RTN_CPU_EGP_24_16 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_16 0x280C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_16 0x1E7E80C0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_16_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_16_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_16_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_17 Register PTR_RTN_CPU_EGP_24_17 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_17 0x280C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_17 0x1E7E80C4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_17_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_17_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_17_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_18 Register PTR_RTN_CPU_EGP_24_18 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_18 0x280C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_18 0x1E7E80C8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_18_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_18_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_18_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_19 Register PTR_RTN_CPU_EGP_24_19 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_19 0x280CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_19 0x1E7E80CCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_19_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_19_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_19_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_20 Register PTR_RTN_CPU_EGP_24_20 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_20 0x280D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_20 0x1E7E80D0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_20_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_20_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_20_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_21 Register PTR_RTN_CPU_EGP_24_21 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_21 0x280D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_21 0x1E7E80D4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_21_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_21_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_21_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_22 Register PTR_RTN_CPU_EGP_24_22 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_22 0x280D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_22 0x1E7E80D8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_22_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_22_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_22_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_23 Register PTR_RTN_CPU_EGP_24_23 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_23 0x280DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_23 0x1E7E80DCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_23_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_23_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_23_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_24 Register PTR_RTN_CPU_EGP_24_24 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_24 0x280E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_24 0x1E7E80E0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_24_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_24_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_24_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_25 Register PTR_RTN_CPU_EGP_24_25 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_25 0x280E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_25 0x1E7E80E4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_25_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_25_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_25_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_26 Register PTR_RTN_CPU_EGP_24_26 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_26 0x280E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_26 0x1E7E80E8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_26_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_26_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_26_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_27 Register PTR_RTN_CPU_EGP_24_27 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_27 0x280EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_27 0x1E7E80ECu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_27_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_27_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_27_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_28 Register PTR_RTN_CPU_EGP_24_28 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_28 0x280F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_28 0x1E7E80F0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_28_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_28_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_28_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_29 Register PTR_RTN_CPU_EGP_24_29 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_29 0x280F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_29 0x1E7E80F4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_29_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_29_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_29_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_30 Register PTR_RTN_CPU_EGP_24_30 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_30 0x280F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_30 0x1E7E80F8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_30_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_30_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_30_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_24_31 Register PTR_RTN_CPU_EGP_24_31 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_24_31 0x280FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_24_31 0x1E7E80FCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_24_31_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_31_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_24_31_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_0 Register DESC0_CPU_EGP_24_0 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_0 0x28100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_0 0x1E7E8100u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_0 Register DESC1_CPU_EGP_24_0 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_0 0x28104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_0 0x1E7E8104u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_0 Register DESC2_CPU_EGP_24_0 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_0 0x28108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_0 0x1E7E8108u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_0 Register DESC3_CPU_EGP_24_0 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_0 0x2810C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_0 0x1E7E810Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_1 Register DESC0_CPU_EGP_24_1 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_1 0x28110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_1 0x1E7E8110u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_1 Register DESC1_CPU_EGP_24_1 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_1 0x28114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_1 0x1E7E8114u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_1 Register DESC2_CPU_EGP_24_1 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_1 0x28118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_1 0x1E7E8118u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_1 Register DESC3_CPU_EGP_24_1 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_1 0x2811C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_1 0x1E7E811Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_2 Register DESC0_CPU_EGP_24_2 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_2 0x28120
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_2 0x1E7E8120u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_2 Register DESC1_CPU_EGP_24_2 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_2 0x28124
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_2 0x1E7E8124u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_2 Register DESC2_CPU_EGP_24_2 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_2 0x28128
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_2 0x1E7E8128u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_2 Register DESC3_CPU_EGP_24_2 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_2 0x2812C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_2 0x1E7E812Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_3 Register DESC0_CPU_EGP_24_3 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_3 0x28130
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_3 0x1E7E8130u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_3 Register DESC1_CPU_EGP_24_3 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_3 0x28134
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_3 0x1E7E8134u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_3 Register DESC2_CPU_EGP_24_3 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_3 0x28138
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_3 0x1E7E8138u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_3 Register DESC3_CPU_EGP_24_3 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_3 0x2813C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_3 0x1E7E813Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_4 Register DESC0_CPU_EGP_24_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_4 0x28140
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_4 0x1E7E8140u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_4 Register DESC1_CPU_EGP_24_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_4 0x28144
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_4 0x1E7E8144u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_4 Register DESC2_CPU_EGP_24_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_4 0x28148
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_4 0x1E7E8148u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_4 Register DESC3_CPU_EGP_24_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_4 0x2814C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_4 0x1E7E814Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_5 Register DESC0_CPU_EGP_24_5 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_5 0x28150
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_5 0x1E7E8150u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_5 Register DESC1_CPU_EGP_24_5 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_5 0x28154
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_5 0x1E7E8154u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_5 Register DESC2_CPU_EGP_24_5 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_5 0x28158
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_5 0x1E7E8158u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_5 Register DESC3_CPU_EGP_24_5 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_5 0x2815C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_5 0x1E7E815Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_6 Register DESC0_CPU_EGP_24_6 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_6 0x28160
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_6 0x1E7E8160u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_6 Register DESC1_CPU_EGP_24_6 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_6 0x28164
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_6 0x1E7E8164u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_6 Register DESC2_CPU_EGP_24_6 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_6 0x28168
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_6 0x1E7E8168u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_6 Register DESC3_CPU_EGP_24_6 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_6 0x2816C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_6 0x1E7E816Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_7 Register DESC0_CPU_EGP_24_7 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_7 0x28170
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_7 0x1E7E8170u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_7 Register DESC1_CPU_EGP_24_7 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_7 0x28174
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_7 0x1E7E8174u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_7 Register DESC2_CPU_EGP_24_7 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_7 0x28178
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_7 0x1E7E8178u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_7 Register DESC3_CPU_EGP_24_7 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_7 0x2817C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_7 0x1E7E817Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_8 Register DESC0_CPU_EGP_24_8 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_8 0x28180
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_8 0x1E7E8180u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_8 Register DESC1_CPU_EGP_24_8 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_8 0x28184
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_8 0x1E7E8184u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_8 Register DESC2_CPU_EGP_24_8 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_8 0x28188
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_8 0x1E7E8188u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_8 Register DESC3_CPU_EGP_24_8 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_8 0x2818C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_8 0x1E7E818Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_9 Register DESC0_CPU_EGP_24_9 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_9 0x28190
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_9 0x1E7E8190u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_9 Register DESC1_CPU_EGP_24_9 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_9 0x28194
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_9 0x1E7E8194u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_9 Register DESC2_CPU_EGP_24_9 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_9 0x28198
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_9 0x1E7E8198u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_9 Register DESC3_CPU_EGP_24_9 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_9 0x2819C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_9 0x1E7E819Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_10 Register DESC0_CPU_EGP_24_10 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_10 0x281A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_10 0x1E7E81A0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_10 Register DESC1_CPU_EGP_24_10 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_10 0x281A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_10 0x1E7E81A4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_10 Register DESC2_CPU_EGP_24_10 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_10 0x281A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_10 0x1E7E81A8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_10 Register DESC3_CPU_EGP_24_10 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_10 0x281AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_10 0x1E7E81ACu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_11 Register DESC0_CPU_EGP_24_11 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_11 0x281B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_11 0x1E7E81B0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_11 Register DESC1_CPU_EGP_24_11 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_11 0x281B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_11 0x1E7E81B4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_11 Register DESC2_CPU_EGP_24_11 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_11 0x281B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_11 0x1E7E81B8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_11 Register DESC3_CPU_EGP_24_11 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_11 0x281BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_11 0x1E7E81BCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_12 Register DESC0_CPU_EGP_24_12 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_12 0x281C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_12 0x1E7E81C0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_12 Register DESC1_CPU_EGP_24_12 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_12 0x281C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_12 0x1E7E81C4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_12 Register DESC2_CPU_EGP_24_12 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_12 0x281C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_12 0x1E7E81C8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_12 Register DESC3_CPU_EGP_24_12 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_12 0x281CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_12 0x1E7E81CCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_13 Register DESC0_CPU_EGP_24_13 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_13 0x281D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_13 0x1E7E81D0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_13 Register DESC1_CPU_EGP_24_13 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_13 0x281D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_13 0x1E7E81D4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_13 Register DESC2_CPU_EGP_24_13 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_13 0x281D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_13 0x1E7E81D8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_13 Register DESC3_CPU_EGP_24_13 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_13 0x281DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_13 0x1E7E81DCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_14 Register DESC0_CPU_EGP_24_14 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_14 0x281E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_14 0x1E7E81E0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_14 Register DESC1_CPU_EGP_24_14 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_14 0x281E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_14 0x1E7E81E4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_14 Register DESC2_CPU_EGP_24_14 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_14 0x281E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_14 0x1E7E81E8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_14 Register DESC3_CPU_EGP_24_14 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_14 0x281EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_14 0x1E7E81ECu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_15 Register DESC0_CPU_EGP_24_15 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_15 0x281F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_15 0x1E7E81F0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_15 Register DESC1_CPU_EGP_24_15 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_15 0x281F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_15 0x1E7E81F4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_15 Register DESC2_CPU_EGP_24_15 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_15 0x281F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_15 0x1E7E81F8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_15 Register DESC3_CPU_EGP_24_15 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_15 0x281FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_15 0x1E7E81FCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_16 Register DESC0_CPU_EGP_24_16 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_16 0x28200
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_16 0x1E7E8200u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_16 Register DESC1_CPU_EGP_24_16 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_16 0x28204
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_16 0x1E7E8204u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_16 Register DESC2_CPU_EGP_24_16 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_16 0x28208
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_16 0x1E7E8208u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_16 Register DESC3_CPU_EGP_24_16 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_16 0x2820C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_16 0x1E7E820Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_17 Register DESC0_CPU_EGP_24_17 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_17 0x28210
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_17 0x1E7E8210u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_17 Register DESC1_CPU_EGP_24_17 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_17 0x28214
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_17 0x1E7E8214u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_17 Register DESC2_CPU_EGP_24_17 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_17 0x28218
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_17 0x1E7E8218u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_17 Register DESC3_CPU_EGP_24_17 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_17 0x2821C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_17 0x1E7E821Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_18 Register DESC0_CPU_EGP_24_18 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_18 0x28220
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_18 0x1E7E8220u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_18 Register DESC1_CPU_EGP_24_18 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_18 0x28224
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_18 0x1E7E8224u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_18 Register DESC2_CPU_EGP_24_18 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_18 0x28228
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_18 0x1E7E8228u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_18 Register DESC3_CPU_EGP_24_18 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_18 0x2822C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_18 0x1E7E822Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_19 Register DESC0_CPU_EGP_24_19 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_19 0x28230
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_19 0x1E7E8230u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_19 Register DESC1_CPU_EGP_24_19 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_19 0x28234
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_19 0x1E7E8234u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_19 Register DESC2_CPU_EGP_24_19 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_19 0x28238
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_19 0x1E7E8238u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_19 Register DESC3_CPU_EGP_24_19 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_19 0x2823C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_19 0x1E7E823Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_20 Register DESC0_CPU_EGP_24_20 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_20 0x28240
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_20 0x1E7E8240u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_20 Register DESC1_CPU_EGP_24_20 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_20 0x28244
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_20 0x1E7E8244u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_20 Register DESC2_CPU_EGP_24_20 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_20 0x28248
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_20 0x1E7E8248u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_20 Register DESC3_CPU_EGP_24_20 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_20 0x2824C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_20 0x1E7E824Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_21 Register DESC0_CPU_EGP_24_21 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_21 0x28250
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_21 0x1E7E8250u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_21 Register DESC1_CPU_EGP_24_21 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_21 0x28254
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_21 0x1E7E8254u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_21 Register DESC2_CPU_EGP_24_21 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_21 0x28258
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_21 0x1E7E8258u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_21 Register DESC3_CPU_EGP_24_21 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_21 0x2825C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_21 0x1E7E825Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_22 Register DESC0_CPU_EGP_24_22 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_22 0x28260
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_22 0x1E7E8260u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_22 Register DESC1_CPU_EGP_24_22 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_22 0x28264
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_22 0x1E7E8264u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_22 Register DESC2_CPU_EGP_24_22 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_22 0x28268
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_22 0x1E7E8268u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_22 Register DESC3_CPU_EGP_24_22 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_22 0x2826C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_22 0x1E7E826Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_23 Register DESC0_CPU_EGP_24_23 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_23 0x28270
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_23 0x1E7E8270u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_23 Register DESC1_CPU_EGP_24_23 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_23 0x28274
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_23 0x1E7E8274u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_23 Register DESC2_CPU_EGP_24_23 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_23 0x28278
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_23 0x1E7E8278u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_23 Register DESC3_CPU_EGP_24_23 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_23 0x2827C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_23 0x1E7E827Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_24 Register DESC0_CPU_EGP_24_24 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_24 0x28280
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_24 0x1E7E8280u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_24 Register DESC1_CPU_EGP_24_24 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_24 0x28284
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_24 0x1E7E8284u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_24 Register DESC2_CPU_EGP_24_24 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_24 0x28288
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_24 0x1E7E8288u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_24 Register DESC3_CPU_EGP_24_24 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_24 0x2828C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_24 0x1E7E828Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_25 Register DESC0_CPU_EGP_24_25 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_25 0x28290
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_25 0x1E7E8290u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_25 Register DESC1_CPU_EGP_24_25 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_25 0x28294
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_25 0x1E7E8294u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_25 Register DESC2_CPU_EGP_24_25 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_25 0x28298
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_25 0x1E7E8298u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_25 Register DESC3_CPU_EGP_24_25 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_25 0x2829C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_25 0x1E7E829Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_26 Register DESC0_CPU_EGP_24_26 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_26 0x282A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_26 0x1E7E82A0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_26 Register DESC1_CPU_EGP_24_26 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_26 0x282A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_26 0x1E7E82A4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_26 Register DESC2_CPU_EGP_24_26 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_26 0x282A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_26 0x1E7E82A8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_26 Register DESC3_CPU_EGP_24_26 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_26 0x282AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_26 0x1E7E82ACu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_27 Register DESC0_CPU_EGP_24_27 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_27 0x282B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_27 0x1E7E82B0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_27 Register DESC1_CPU_EGP_24_27 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_27 0x282B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_27 0x1E7E82B4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_27 Register DESC2_CPU_EGP_24_27 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_27 0x282B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_27 0x1E7E82B8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_27 Register DESC3_CPU_EGP_24_27 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_27 0x282BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_27 0x1E7E82BCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_28 Register DESC0_CPU_EGP_24_28 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_28 0x282C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_28 0x1E7E82C0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_28 Register DESC1_CPU_EGP_24_28 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_28 0x282C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_28 0x1E7E82C4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_28 Register DESC2_CPU_EGP_24_28 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_28 0x282C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_28 0x1E7E82C8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_28 Register DESC3_CPU_EGP_24_28 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_28 0x282CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_28 0x1E7E82CCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_29 Register DESC0_CPU_EGP_24_29 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_29 0x282D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_29 0x1E7E82D0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_29 Register DESC1_CPU_EGP_24_29 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_29 0x282D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_29 0x1E7E82D4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_29 Register DESC2_CPU_EGP_24_29 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_29 0x282D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_29 0x1E7E82D8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_29 Register DESC3_CPU_EGP_24_29 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_29 0x282DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_29 0x1E7E82DCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_30 Register DESC0_CPU_EGP_24_30 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_30 0x282E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_30 0x1E7E82E0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_30 Register DESC1_CPU_EGP_24_30 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_30 0x282E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_30 0x1E7E82E4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_30 Register DESC2_CPU_EGP_24_30 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_30 0x282E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_30 0x1E7E82E8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_30 Register DESC3_CPU_EGP_24_30 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_30 0x282EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_30 0x1E7E82ECu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_24_31 Register DESC0_CPU_EGP_24_31 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_24_31 0x282F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_24_31 0x1E7E82F0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_24_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_24_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_24_31 Register DESC1_CPU_EGP_24_31 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_24_31 0x282F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_24_31 0x1E7E82F4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_24_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_24_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_24_31 Register DESC2_CPU_EGP_24_31 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_24_31 0x282F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_24_31 0x1E7E82F8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_24_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_24_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_24_31 Register DESC3_CPU_EGP_24_31 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_24_31 0x282FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_24_31 0x1E7E82FCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_24_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_24_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_25 Register CFG_CPU_EGP_25 - CPU WLAN Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_25 0x29000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_25 0x1E7E9000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_25_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_25_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_25_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_25_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_25_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_25_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_25_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_25_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_25_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_25_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_25_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_25_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_25_BFBPEN_EN 0x1
+
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_25_DQBPEN_POS 3
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_25_DQBPEN_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_25_DQBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_25_DQBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_25_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_25_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_25_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_25_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_25_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_25_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_25 Register DQPC_CPU_EGP_25 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_25 0x29004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_25 0x1E7E9004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_25_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_25_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_25_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_25 Register IRNCR_CPU_EGP_25 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_25 0x29020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_25 0x1E7E9020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_25_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_25_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_25_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_25_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_25_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_25_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_25_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_25_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_25_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_25 Register IRNICR_CPU_EGP_25 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_25 0x29024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_25 0x1E7E9024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_25_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_25_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_25_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_25_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_25_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_25 Register IRNEN_CPU_EGP_25 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_25 0x29028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_25 0x1E7E9028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_25_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_25_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_25_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_25_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_25_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_25_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_25_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_25_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_25_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_25 Register DPTR_CPU_EGP_25 - Special CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_25 0x29030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_25 0x1E7E9030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_25_RST 0x0000001Fu
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_25_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_25_ND_MASK 0x1Fu
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_25_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_25_DPTR_MASK 0x1F0000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_25 Register BPRC_CPU_EGP_25 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_25 0x29034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_25 0x1E7E9034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_25_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_25_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_25_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup BRPTR_SCPU_EGP_25 Register BRPTR_SCPU_EGP_25 - Special CPU Egress Port Buffer Return Pointer
+//! @{
+
+//! Register Offset (relative)
+#define BRPTR_SCPU_EGP_25 0x29038
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BRPTR_SCPU_EGP_25 0x1E7E9038u
+
+//! Register Reset Value
+#define BRPTR_SCPU_EGP_25_RST 0x00000000u
+
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_25_PTRBR_POS 0
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_25_PTRBR_MASK 0x1Fu
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_0 Register PTR_RTN_CPU_EGP_25_0 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_0 0x29080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_0 0x1E7E9080u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_0_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_0_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_0_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_1 Register PTR_RTN_CPU_EGP_25_1 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_1 0x29084
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_1 0x1E7E9084u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_1_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_1_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_1_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_2 Register PTR_RTN_CPU_EGP_25_2 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_2 0x29088
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_2 0x1E7E9088u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_2_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_2_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_2_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_3 Register PTR_RTN_CPU_EGP_25_3 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_3 0x2908C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_3 0x1E7E908Cu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_3_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_3_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_3_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_4 Register PTR_RTN_CPU_EGP_25_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_4 0x29090
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_4 0x1E7E9090u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_5 Register PTR_RTN_CPU_EGP_25_5 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_5 0x29094
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_5 0x1E7E9094u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_5_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_5_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_5_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_6 Register PTR_RTN_CPU_EGP_25_6 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_6 0x29098
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_6 0x1E7E9098u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_6_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_6_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_6_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_7 Register PTR_RTN_CPU_EGP_25_7 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_7 0x2909C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_7 0x1E7E909Cu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_7_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_7_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_7_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_8 Register PTR_RTN_CPU_EGP_25_8 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_8 0x290A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_8 0x1E7E90A0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_8_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_8_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_8_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_9 Register PTR_RTN_CPU_EGP_25_9 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_9 0x290A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_9 0x1E7E90A4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_9_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_9_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_9_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_10 Register PTR_RTN_CPU_EGP_25_10 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_10 0x290A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_10 0x1E7E90A8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_10_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_10_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_10_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_11 Register PTR_RTN_CPU_EGP_25_11 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_11 0x290AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_11 0x1E7E90ACu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_11_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_11_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_11_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_12 Register PTR_RTN_CPU_EGP_25_12 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_12 0x290B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_12 0x1E7E90B0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_12_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_12_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_12_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_13 Register PTR_RTN_CPU_EGP_25_13 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_13 0x290B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_13 0x1E7E90B4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_13_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_13_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_13_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_14 Register PTR_RTN_CPU_EGP_25_14 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_14 0x290B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_14 0x1E7E90B8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_14_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_14_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_14_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_15 Register PTR_RTN_CPU_EGP_25_15 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_15 0x290BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_15 0x1E7E90BCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_15_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_15_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_15_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_16 Register PTR_RTN_CPU_EGP_25_16 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_16 0x290C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_16 0x1E7E90C0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_16_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_16_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_16_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_17 Register PTR_RTN_CPU_EGP_25_17 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_17 0x290C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_17 0x1E7E90C4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_17_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_17_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_17_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_18 Register PTR_RTN_CPU_EGP_25_18 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_18 0x290C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_18 0x1E7E90C8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_18_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_18_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_18_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_19 Register PTR_RTN_CPU_EGP_25_19 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_19 0x290CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_19 0x1E7E90CCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_19_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_19_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_19_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_20 Register PTR_RTN_CPU_EGP_25_20 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_20 0x290D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_20 0x1E7E90D0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_20_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_20_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_20_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_21 Register PTR_RTN_CPU_EGP_25_21 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_21 0x290D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_21 0x1E7E90D4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_21_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_21_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_21_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_22 Register PTR_RTN_CPU_EGP_25_22 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_22 0x290D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_22 0x1E7E90D8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_22_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_22_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_22_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_23 Register PTR_RTN_CPU_EGP_25_23 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_23 0x290DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_23 0x1E7E90DCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_23_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_23_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_23_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_24 Register PTR_RTN_CPU_EGP_25_24 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_24 0x290E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_24 0x1E7E90E0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_24_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_24_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_24_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_25 Register PTR_RTN_CPU_EGP_25_25 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_25 0x290E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_25 0x1E7E90E4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_25_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_25_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_25_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_26 Register PTR_RTN_CPU_EGP_25_26 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_26 0x290E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_26 0x1E7E90E8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_26_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_26_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_26_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_27 Register PTR_RTN_CPU_EGP_25_27 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_27 0x290EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_27 0x1E7E90ECu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_27_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_27_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_27_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_28 Register PTR_RTN_CPU_EGP_25_28 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_28 0x290F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_28 0x1E7E90F0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_28_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_28_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_28_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_29 Register PTR_RTN_CPU_EGP_25_29 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_29 0x290F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_29 0x1E7E90F4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_29_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_29_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_29_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_30 Register PTR_RTN_CPU_EGP_25_30 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_30 0x290F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_30 0x1E7E90F8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_30_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_30_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_30_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_25_31 Register PTR_RTN_CPU_EGP_25_31 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_25_31 0x290FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_25_31 0x1E7E90FCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_25_31_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_31_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_25_31_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_0 Register DESC0_CPU_EGP_25_0 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_0 0x29100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_0 0x1E7E9100u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_0 Register DESC1_CPU_EGP_25_0 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_0 0x29104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_0 0x1E7E9104u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_0 Register DESC2_CPU_EGP_25_0 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_0 0x29108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_0 0x1E7E9108u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_0 Register DESC3_CPU_EGP_25_0 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_0 0x2910C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_0 0x1E7E910Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_1 Register DESC0_CPU_EGP_25_1 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_1 0x29110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_1 0x1E7E9110u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_1 Register DESC1_CPU_EGP_25_1 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_1 0x29114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_1 0x1E7E9114u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_1 Register DESC2_CPU_EGP_25_1 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_1 0x29118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_1 0x1E7E9118u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_1 Register DESC3_CPU_EGP_25_1 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_1 0x2911C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_1 0x1E7E911Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_2 Register DESC0_CPU_EGP_25_2 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_2 0x29120
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_2 0x1E7E9120u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_2 Register DESC1_CPU_EGP_25_2 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_2 0x29124
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_2 0x1E7E9124u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_2 Register DESC2_CPU_EGP_25_2 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_2 0x29128
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_2 0x1E7E9128u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_2 Register DESC3_CPU_EGP_25_2 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_2 0x2912C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_2 0x1E7E912Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_3 Register DESC0_CPU_EGP_25_3 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_3 0x29130
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_3 0x1E7E9130u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_3 Register DESC1_CPU_EGP_25_3 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_3 0x29134
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_3 0x1E7E9134u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_3 Register DESC2_CPU_EGP_25_3 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_3 0x29138
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_3 0x1E7E9138u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_3 Register DESC3_CPU_EGP_25_3 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_3 0x2913C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_3 0x1E7E913Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_4 Register DESC0_CPU_EGP_25_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_4 0x29140
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_4 0x1E7E9140u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_4 Register DESC1_CPU_EGP_25_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_4 0x29144
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_4 0x1E7E9144u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_4 Register DESC2_CPU_EGP_25_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_4 0x29148
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_4 0x1E7E9148u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_4 Register DESC3_CPU_EGP_25_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_4 0x2914C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_4 0x1E7E914Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_5 Register DESC0_CPU_EGP_25_5 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_5 0x29150
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_5 0x1E7E9150u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_5 Register DESC1_CPU_EGP_25_5 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_5 0x29154
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_5 0x1E7E9154u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_5 Register DESC2_CPU_EGP_25_5 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_5 0x29158
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_5 0x1E7E9158u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_5 Register DESC3_CPU_EGP_25_5 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_5 0x2915C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_5 0x1E7E915Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_6 Register DESC0_CPU_EGP_25_6 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_6 0x29160
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_6 0x1E7E9160u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_6 Register DESC1_CPU_EGP_25_6 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_6 0x29164
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_6 0x1E7E9164u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_6 Register DESC2_CPU_EGP_25_6 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_6 0x29168
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_6 0x1E7E9168u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_6 Register DESC3_CPU_EGP_25_6 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_6 0x2916C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_6 0x1E7E916Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_7 Register DESC0_CPU_EGP_25_7 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_7 0x29170
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_7 0x1E7E9170u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_7 Register DESC1_CPU_EGP_25_7 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_7 0x29174
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_7 0x1E7E9174u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_7 Register DESC2_CPU_EGP_25_7 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_7 0x29178
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_7 0x1E7E9178u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_7 Register DESC3_CPU_EGP_25_7 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_7 0x2917C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_7 0x1E7E917Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_8 Register DESC0_CPU_EGP_25_8 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_8 0x29180
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_8 0x1E7E9180u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_8 Register DESC1_CPU_EGP_25_8 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_8 0x29184
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_8 0x1E7E9184u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_8 Register DESC2_CPU_EGP_25_8 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_8 0x29188
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_8 0x1E7E9188u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_8 Register DESC3_CPU_EGP_25_8 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_8 0x2918C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_8 0x1E7E918Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_9 Register DESC0_CPU_EGP_25_9 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_9 0x29190
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_9 0x1E7E9190u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_9 Register DESC1_CPU_EGP_25_9 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_9 0x29194
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_9 0x1E7E9194u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_9 Register DESC2_CPU_EGP_25_9 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_9 0x29198
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_9 0x1E7E9198u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_9 Register DESC3_CPU_EGP_25_9 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_9 0x2919C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_9 0x1E7E919Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_10 Register DESC0_CPU_EGP_25_10 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_10 0x291A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_10 0x1E7E91A0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_10 Register DESC1_CPU_EGP_25_10 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_10 0x291A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_10 0x1E7E91A4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_10 Register DESC2_CPU_EGP_25_10 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_10 0x291A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_10 0x1E7E91A8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_10 Register DESC3_CPU_EGP_25_10 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_10 0x291AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_10 0x1E7E91ACu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_11 Register DESC0_CPU_EGP_25_11 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_11 0x291B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_11 0x1E7E91B0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_11 Register DESC1_CPU_EGP_25_11 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_11 0x291B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_11 0x1E7E91B4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_11 Register DESC2_CPU_EGP_25_11 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_11 0x291B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_11 0x1E7E91B8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_11 Register DESC3_CPU_EGP_25_11 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_11 0x291BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_11 0x1E7E91BCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_12 Register DESC0_CPU_EGP_25_12 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_12 0x291C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_12 0x1E7E91C0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_12 Register DESC1_CPU_EGP_25_12 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_12 0x291C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_12 0x1E7E91C4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_12 Register DESC2_CPU_EGP_25_12 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_12 0x291C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_12 0x1E7E91C8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_12 Register DESC3_CPU_EGP_25_12 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_12 0x291CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_12 0x1E7E91CCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_13 Register DESC0_CPU_EGP_25_13 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_13 0x291D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_13 0x1E7E91D0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_13 Register DESC1_CPU_EGP_25_13 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_13 0x291D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_13 0x1E7E91D4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_13 Register DESC2_CPU_EGP_25_13 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_13 0x291D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_13 0x1E7E91D8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_13 Register DESC3_CPU_EGP_25_13 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_13 0x291DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_13 0x1E7E91DCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_14 Register DESC0_CPU_EGP_25_14 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_14 0x291E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_14 0x1E7E91E0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_14 Register DESC1_CPU_EGP_25_14 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_14 0x291E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_14 0x1E7E91E4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_14 Register DESC2_CPU_EGP_25_14 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_14 0x291E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_14 0x1E7E91E8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_14 Register DESC3_CPU_EGP_25_14 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_14 0x291EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_14 0x1E7E91ECu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_15 Register DESC0_CPU_EGP_25_15 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_15 0x291F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_15 0x1E7E91F0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_15 Register DESC1_CPU_EGP_25_15 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_15 0x291F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_15 0x1E7E91F4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_15 Register DESC2_CPU_EGP_25_15 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_15 0x291F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_15 0x1E7E91F8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_15 Register DESC3_CPU_EGP_25_15 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_15 0x291FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_15 0x1E7E91FCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_16 Register DESC0_CPU_EGP_25_16 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_16 0x29200
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_16 0x1E7E9200u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_16 Register DESC1_CPU_EGP_25_16 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_16 0x29204
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_16 0x1E7E9204u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_16 Register DESC2_CPU_EGP_25_16 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_16 0x29208
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_16 0x1E7E9208u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_16 Register DESC3_CPU_EGP_25_16 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_16 0x2920C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_16 0x1E7E920Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_17 Register DESC0_CPU_EGP_25_17 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_17 0x29210
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_17 0x1E7E9210u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_17 Register DESC1_CPU_EGP_25_17 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_17 0x29214
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_17 0x1E7E9214u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_17 Register DESC2_CPU_EGP_25_17 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_17 0x29218
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_17 0x1E7E9218u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_17 Register DESC3_CPU_EGP_25_17 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_17 0x2921C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_17 0x1E7E921Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_18 Register DESC0_CPU_EGP_25_18 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_18 0x29220
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_18 0x1E7E9220u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_18 Register DESC1_CPU_EGP_25_18 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_18 0x29224
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_18 0x1E7E9224u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_18 Register DESC2_CPU_EGP_25_18 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_18 0x29228
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_18 0x1E7E9228u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_18 Register DESC3_CPU_EGP_25_18 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_18 0x2922C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_18 0x1E7E922Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_19 Register DESC0_CPU_EGP_25_19 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_19 0x29230
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_19 0x1E7E9230u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_19 Register DESC1_CPU_EGP_25_19 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_19 0x29234
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_19 0x1E7E9234u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_19 Register DESC2_CPU_EGP_25_19 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_19 0x29238
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_19 0x1E7E9238u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_19 Register DESC3_CPU_EGP_25_19 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_19 0x2923C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_19 0x1E7E923Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_20 Register DESC0_CPU_EGP_25_20 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_20 0x29240
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_20 0x1E7E9240u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_20 Register DESC1_CPU_EGP_25_20 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_20 0x29244
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_20 0x1E7E9244u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_20 Register DESC2_CPU_EGP_25_20 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_20 0x29248
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_20 0x1E7E9248u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_20 Register DESC3_CPU_EGP_25_20 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_20 0x2924C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_20 0x1E7E924Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_21 Register DESC0_CPU_EGP_25_21 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_21 0x29250
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_21 0x1E7E9250u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_21 Register DESC1_CPU_EGP_25_21 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_21 0x29254
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_21 0x1E7E9254u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_21 Register DESC2_CPU_EGP_25_21 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_21 0x29258
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_21 0x1E7E9258u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_21 Register DESC3_CPU_EGP_25_21 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_21 0x2925C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_21 0x1E7E925Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_22 Register DESC0_CPU_EGP_25_22 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_22 0x29260
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_22 0x1E7E9260u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_22 Register DESC1_CPU_EGP_25_22 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_22 0x29264
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_22 0x1E7E9264u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_22 Register DESC2_CPU_EGP_25_22 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_22 0x29268
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_22 0x1E7E9268u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_22 Register DESC3_CPU_EGP_25_22 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_22 0x2926C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_22 0x1E7E926Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_23 Register DESC0_CPU_EGP_25_23 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_23 0x29270
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_23 0x1E7E9270u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_23 Register DESC1_CPU_EGP_25_23 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_23 0x29274
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_23 0x1E7E9274u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_23 Register DESC2_CPU_EGP_25_23 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_23 0x29278
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_23 0x1E7E9278u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_23 Register DESC3_CPU_EGP_25_23 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_23 0x2927C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_23 0x1E7E927Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_24 Register DESC0_CPU_EGP_25_24 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_24 0x29280
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_24 0x1E7E9280u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_24 Register DESC1_CPU_EGP_25_24 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_24 0x29284
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_24 0x1E7E9284u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_24 Register DESC2_CPU_EGP_25_24 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_24 0x29288
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_24 0x1E7E9288u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_24 Register DESC3_CPU_EGP_25_24 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_24 0x2928C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_24 0x1E7E928Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_25 Register DESC0_CPU_EGP_25_25 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_25 0x29290
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_25 0x1E7E9290u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_25 Register DESC1_CPU_EGP_25_25 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_25 0x29294
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_25 0x1E7E9294u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_25 Register DESC2_CPU_EGP_25_25 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_25 0x29298
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_25 0x1E7E9298u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_25 Register DESC3_CPU_EGP_25_25 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_25 0x2929C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_25 0x1E7E929Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_26 Register DESC0_CPU_EGP_25_26 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_26 0x292A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_26 0x1E7E92A0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_26 Register DESC1_CPU_EGP_25_26 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_26 0x292A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_26 0x1E7E92A4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_26 Register DESC2_CPU_EGP_25_26 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_26 0x292A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_26 0x1E7E92A8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_26 Register DESC3_CPU_EGP_25_26 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_26 0x292AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_26 0x1E7E92ACu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_27 Register DESC0_CPU_EGP_25_27 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_27 0x292B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_27 0x1E7E92B0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_27 Register DESC1_CPU_EGP_25_27 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_27 0x292B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_27 0x1E7E92B4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_27 Register DESC2_CPU_EGP_25_27 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_27 0x292B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_27 0x1E7E92B8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_27 Register DESC3_CPU_EGP_25_27 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_27 0x292BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_27 0x1E7E92BCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_28 Register DESC0_CPU_EGP_25_28 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_28 0x292C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_28 0x1E7E92C0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_28 Register DESC1_CPU_EGP_25_28 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_28 0x292C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_28 0x1E7E92C4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_28 Register DESC2_CPU_EGP_25_28 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_28 0x292C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_28 0x1E7E92C8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_28 Register DESC3_CPU_EGP_25_28 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_28 0x292CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_28 0x1E7E92CCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_29 Register DESC0_CPU_EGP_25_29 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_29 0x292D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_29 0x1E7E92D0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_29 Register DESC1_CPU_EGP_25_29 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_29 0x292D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_29 0x1E7E92D4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_29 Register DESC2_CPU_EGP_25_29 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_29 0x292D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_29 0x1E7E92D8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_29 Register DESC3_CPU_EGP_25_29 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_29 0x292DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_29 0x1E7E92DCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_30 Register DESC0_CPU_EGP_25_30 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_30 0x292E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_30 0x1E7E92E0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_30 Register DESC1_CPU_EGP_25_30 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_30 0x292E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_30 0x1E7E92E4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_30 Register DESC2_CPU_EGP_25_30 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_30 0x292E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_30 0x1E7E92E8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_30 Register DESC3_CPU_EGP_25_30 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_30 0x292EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_30 0x1E7E92ECu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_25_31 Register DESC0_CPU_EGP_25_31 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_25_31 0x292F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_25_31 0x1E7E92F0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_25_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_25_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_25_31 Register DESC1_CPU_EGP_25_31 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_25_31 0x292F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_25_31 0x1E7E92F4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_25_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_25_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_25_31 Register DESC2_CPU_EGP_25_31 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_25_31 0x292F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_25_31 0x1E7E92F8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_25_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_25_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_25_31 Register DESC3_CPU_EGP_25_31 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_25_31 0x292FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_25_31 0x1E7E92FCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_25_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_25_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_CPU_EGP_26 Register CFG_CPU_EGP_26 - CPU WLAN Egress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_EGP_26 0x2A000
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_CFG_CPU_EGP_26 0x1E7EA000u
+
+//! Register Reset Value
+#define CFG_CPU_EGP_26_RST 0x00000000u
+
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_26_DQREQ_POS 0
+//! Field DQREQ - Enable CPU Dequeue Request
+#define CFG_CPU_EGP_26_DQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_26_DQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_26_DQREQ_EN 0x1
+
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_26_BUFRTN_POS 1
+//! Field BUFRTN - Enable CPU Buffer Return
+#define CFG_CPU_EGP_26_BUFRTN_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_26_BUFRTN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_26_BUFRTN_EN 0x1
+
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_26_BFBPEN_POS 2
+//! Field BFBPEN - Buffer Return Back Pressure Enable
+#define CFG_CPU_EGP_26_BFBPEN_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_26_BFBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_26_BFBPEN_EN 0x1
+
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_26_DQBPEN_POS 3
+//! Field DQBPEN - Dequeue Back Pressure Enable
+#define CFG_CPU_EGP_26_DQBPEN_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_26_DQBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_26_DQBPEN_EN 0x1
+
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_26_DQPCEN_POS 8
+//! Field DQPCEN - Dequeue Counter Enable
+#define CFG_CPU_EGP_26_DQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_EGP_26_DQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_EGP_26_DQPCEN_EN 0x1
+
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_26_EPMAP_POS 16
+//! Field EPMAP - Egress port mapping
+#define CFG_CPU_EGP_26_EPMAP_MASK 0x7F0000u
+
+//! @}
+
+//! \defgroup DQPC_CPU_EGP_26 Register DQPC_CPU_EGP_26 - CPU Egress Port dequeue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define DQPC_CPU_EGP_26 0x2A004
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DQPC_CPU_EGP_26 0x1E7EA004u
+
+//! Register Reset Value
+#define DQPC_CPU_EGP_26_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_26_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define DQPC_CPU_EGP_26_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_EGP_26 Register IRNCR_CPU_EGP_26 - CPU Egress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_EGP_26 0x2A020
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNCR_CPU_EGP_26 0x1E7EA020u
+
+//! Register Reset Value
+#define IRNCR_CPU_EGP_26_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_26_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNCR_CPU_EGP_26_PR_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_26_PR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_26_PR_INTOCC 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_26_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNCR_CPU_EGP_26_DR_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_EGP_26_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_EGP_26_DR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_EGP_26 Register IRNICR_CPU_EGP_26 - CPU Egress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_EGP_26 0x2A024
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNICR_CPU_EGP_26 0x1E7EA024u
+
+//! Register Reset Value
+#define IRNICR_CPU_EGP_26_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_26_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNICR_CPU_EGP_26_PR_MASK 0x1u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_26_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_EGP_26_DR_MASK 0x2u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_EGP_26 Register IRNEN_CPU_EGP_26 - CPU Egress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_EGP_26 0x2A028
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_IRNEN_CPU_EGP_26 0x1E7EA028u
+
+//! Register Reset Value
+#define IRNEN_CPU_EGP_26_RST 0x00000000u
+
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_26_PR_POS 0
+//! Field PR - Pointer Ready
+#define IRNEN_CPU_EGP_26_PR_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_26_PR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_26_PR_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_26_DR_POS 1
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_EGP_26_DR_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_EGP_26_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_EGP_26_DR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_EGP_26 Register DPTR_CPU_EGP_26 - Special CPU Egress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_EGP_26 0x2A030
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DPTR_CPU_EGP_26 0x1E7EA030u
+
+//! Register Reset Value
+#define DPTR_CPU_EGP_26_RST 0x0000001Fu
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_26_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_EGP_26_ND_MASK 0x1Fu
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_26_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_EGP_26_DPTR_MASK 0x1F0000u
+
+//! @}
+
+//! \defgroup BPRC_CPU_EGP_26 Register BPRC_CPU_EGP_26 - CPU Egress Port Buffer Pointer Return counter
+//! @{
+
+//! Register Offset (relative)
+#define BPRC_CPU_EGP_26 0x2A034
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BPRC_CPU_EGP_26 0x1E7EA034u
+
+//! Register Reset Value
+#define BPRC_CPU_EGP_26_RST 0x00000000u
+
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_26_BPRC_POS 0
+//! Field BPRC - Per Port Buffer Pointer Return Counter
+#define BPRC_CPU_EGP_26_BPRC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup BRPTR_SCPU_EGP_26 Register BRPTR_SCPU_EGP_26 - Special CPU Egress Port Buffer Return Pointer
+//! @{
+
+//! Register Offset (relative)
+#define BRPTR_SCPU_EGP_26 0x2A038
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_BRPTR_SCPU_EGP_26 0x1E7EA038u
+
+//! Register Reset Value
+#define BRPTR_SCPU_EGP_26_RST 0x00000000u
+
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_26_PTRBR_POS 0
+//! Field PTRBR - Pointer of Buffer Return
+#define BRPTR_SCPU_EGP_26_PTRBR_MASK 0x1Fu
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_0 Register PTR_RTN_CPU_EGP_26_0 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_0 0x2A080
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_0 0x1E7EA080u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_0_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_0_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_0_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_1 Register PTR_RTN_CPU_EGP_26_1 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_1 0x2A084
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_1 0x1E7EA084u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_1_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_1_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_1_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_2 Register PTR_RTN_CPU_EGP_26_2 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_2 0x2A088
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_2 0x1E7EA088u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_2_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_2_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_2_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_3 Register PTR_RTN_CPU_EGP_26_3 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_3 0x2A08C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_3 0x1E7EA08Cu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_3_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_3_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_3_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_4 Register PTR_RTN_CPU_EGP_26_4 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_4 0x2A090
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_4 0x1E7EA090u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_4_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_4_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_4_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_5 Register PTR_RTN_CPU_EGP_26_5 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_5 0x2A094
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_5 0x1E7EA094u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_5_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_5_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_5_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_6 Register PTR_RTN_CPU_EGP_26_6 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_6 0x2A098
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_6 0x1E7EA098u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_6_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_6_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_6_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_7 Register PTR_RTN_CPU_EGP_26_7 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_7 0x2A09C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_7 0x1E7EA09Cu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_7_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_7_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_7_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_8 Register PTR_RTN_CPU_EGP_26_8 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_8 0x2A0A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_8 0x1E7EA0A0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_8_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_8_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_8_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_9 Register PTR_RTN_CPU_EGP_26_9 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_9 0x2A0A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_9 0x1E7EA0A4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_9_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_9_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_9_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_10 Register PTR_RTN_CPU_EGP_26_10 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_10 0x2A0A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_10 0x1E7EA0A8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_10_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_10_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_10_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_11 Register PTR_RTN_CPU_EGP_26_11 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_11 0x2A0AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_11 0x1E7EA0ACu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_11_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_11_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_11_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_12 Register PTR_RTN_CPU_EGP_26_12 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_12 0x2A0B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_12 0x1E7EA0B0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_12_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_12_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_12_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_13 Register PTR_RTN_CPU_EGP_26_13 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_13 0x2A0B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_13 0x1E7EA0B4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_13_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_13_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_13_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_14 Register PTR_RTN_CPU_EGP_26_14 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_14 0x2A0B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_14 0x1E7EA0B8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_14_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_14_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_14_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_15 Register PTR_RTN_CPU_EGP_26_15 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_15 0x2A0BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_15 0x1E7EA0BCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_15_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_15_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_15_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_16 Register PTR_RTN_CPU_EGP_26_16 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_16 0x2A0C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_16 0x1E7EA0C0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_16_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_16_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_16_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_17 Register PTR_RTN_CPU_EGP_26_17 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_17 0x2A0C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_17 0x1E7EA0C4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_17_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_17_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_17_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_18 Register PTR_RTN_CPU_EGP_26_18 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_18 0x2A0C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_18 0x1E7EA0C8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_18_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_18_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_18_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_19 Register PTR_RTN_CPU_EGP_26_19 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_19 0x2A0CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_19 0x1E7EA0CCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_19_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_19_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_19_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_20 Register PTR_RTN_CPU_EGP_26_20 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_20 0x2A0D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_20 0x1E7EA0D0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_20_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_20_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_20_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_21 Register PTR_RTN_CPU_EGP_26_21 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_21 0x2A0D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_21 0x1E7EA0D4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_21_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_21_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_21_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_22 Register PTR_RTN_CPU_EGP_26_22 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_22 0x2A0D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_22 0x1E7EA0D8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_22_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_22_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_22_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_23 Register PTR_RTN_CPU_EGP_26_23 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_23 0x2A0DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_23 0x1E7EA0DCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_23_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_23_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_23_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_24 Register PTR_RTN_CPU_EGP_26_24 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_24 0x2A0E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_24 0x1E7EA0E0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_24_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_24_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_24_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_25 Register PTR_RTN_CPU_EGP_26_25 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_25 0x2A0E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_25 0x1E7EA0E4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_25_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_25_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_25_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_26 Register PTR_RTN_CPU_EGP_26_26 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_26 0x2A0E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_26 0x1E7EA0E8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_26_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_26_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_26_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_27 Register PTR_RTN_CPU_EGP_26_27 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_27 0x2A0EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_27 0x1E7EA0ECu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_27_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_27_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_27_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_28 Register PTR_RTN_CPU_EGP_26_28 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_28 0x2A0F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_28 0x1E7EA0F0u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_28_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_28_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_28_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_29 Register PTR_RTN_CPU_EGP_26_29 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_29 0x2A0F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_29 0x1E7EA0F4u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_29_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_29_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_29_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_30 Register PTR_RTN_CPU_EGP_26_30 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_30 0x2A0F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_30 0x1E7EA0F8u
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_30_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_30_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_30_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup PTR_RTN_CPU_EGP_26_31 Register PTR_RTN_CPU_EGP_26_31 - CPU Egress Port Buffer Pointer Return
+//! @{
+
+//! Register Offset (relative)
+#define PTR_RTN_CPU_EGP_26_31 0x2A0FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_PTR_RTN_CPU_EGP_26_31 0x1E7EA0FCu
+
+//! Register Reset Value
+#define PTR_RTN_CPU_EGP_26_31_RST 0xFFFFF800u
+
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_31_BPTR_POS 11
+//! Field BPTR - Buffer Pointer
+#define PTR_RTN_CPU_EGP_26_31_BPTR_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_0 Register DESC0_CPU_EGP_26_0 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_0 0x2A100
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_0 0x1E7EA100u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_0 Register DESC1_CPU_EGP_26_0 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_0 0x2A104
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_0 0x1E7EA104u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_0 Register DESC2_CPU_EGP_26_0 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_0 0x2A108
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_0 0x1E7EA108u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_0 Register DESC3_CPU_EGP_26_0 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_0 0x2A10C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_0 0x1E7EA10Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_1 Register DESC0_CPU_EGP_26_1 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_1 0x2A110
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_1 0x1E7EA110u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_1 Register DESC1_CPU_EGP_26_1 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_1 0x2A114
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_1 0x1E7EA114u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_1 Register DESC2_CPU_EGP_26_1 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_1 0x2A118
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_1 0x1E7EA118u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_1 Register DESC3_CPU_EGP_26_1 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_1 0x2A11C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_1 0x1E7EA11Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_2 Register DESC0_CPU_EGP_26_2 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_2 0x2A120
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_2 0x1E7EA120u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_2 Register DESC1_CPU_EGP_26_2 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_2 0x2A124
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_2 0x1E7EA124u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_2 Register DESC2_CPU_EGP_26_2 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_2 0x2A128
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_2 0x1E7EA128u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_2 Register DESC3_CPU_EGP_26_2 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_2 0x2A12C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_2 0x1E7EA12Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_3 Register DESC0_CPU_EGP_26_3 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_3 0x2A130
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_3 0x1E7EA130u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_3 Register DESC1_CPU_EGP_26_3 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_3 0x2A134
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_3 0x1E7EA134u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_3 Register DESC2_CPU_EGP_26_3 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_3 0x2A138
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_3 0x1E7EA138u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_3 Register DESC3_CPU_EGP_26_3 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_3 0x2A13C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_3 0x1E7EA13Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_4 Register DESC0_CPU_EGP_26_4 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_4 0x2A140
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_4 0x1E7EA140u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_4 Register DESC1_CPU_EGP_26_4 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_4 0x2A144
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_4 0x1E7EA144u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_4 Register DESC2_CPU_EGP_26_4 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_4 0x2A148
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_4 0x1E7EA148u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_4 Register DESC3_CPU_EGP_26_4 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_4 0x2A14C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_4 0x1E7EA14Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_5 Register DESC0_CPU_EGP_26_5 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_5 0x2A150
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_5 0x1E7EA150u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_5 Register DESC1_CPU_EGP_26_5 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_5 0x2A154
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_5 0x1E7EA154u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_5 Register DESC2_CPU_EGP_26_5 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_5 0x2A158
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_5 0x1E7EA158u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_5 Register DESC3_CPU_EGP_26_5 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_5 0x2A15C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_5 0x1E7EA15Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_6 Register DESC0_CPU_EGP_26_6 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_6 0x2A160
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_6 0x1E7EA160u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_6 Register DESC1_CPU_EGP_26_6 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_6 0x2A164
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_6 0x1E7EA164u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_6 Register DESC2_CPU_EGP_26_6 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_6 0x2A168
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_6 0x1E7EA168u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_6 Register DESC3_CPU_EGP_26_6 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_6 0x2A16C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_6 0x1E7EA16Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_7 Register DESC0_CPU_EGP_26_7 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_7 0x2A170
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_7 0x1E7EA170u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_7 Register DESC1_CPU_EGP_26_7 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_7 0x2A174
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_7 0x1E7EA174u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_7 Register DESC2_CPU_EGP_26_7 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_7 0x2A178
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_7 0x1E7EA178u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_7 Register DESC3_CPU_EGP_26_7 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_7 0x2A17C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_7 0x1E7EA17Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_8 Register DESC0_CPU_EGP_26_8 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_8 0x2A180
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_8 0x1E7EA180u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_8 Register DESC1_CPU_EGP_26_8 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_8 0x2A184
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_8 0x1E7EA184u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_8 Register DESC2_CPU_EGP_26_8 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_8 0x2A188
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_8 0x1E7EA188u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_8 Register DESC3_CPU_EGP_26_8 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_8 0x2A18C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_8 0x1E7EA18Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_9 Register DESC0_CPU_EGP_26_9 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_9 0x2A190
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_9 0x1E7EA190u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_9 Register DESC1_CPU_EGP_26_9 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_9 0x2A194
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_9 0x1E7EA194u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_9 Register DESC2_CPU_EGP_26_9 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_9 0x2A198
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_9 0x1E7EA198u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_9 Register DESC3_CPU_EGP_26_9 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_9 0x2A19C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_9 0x1E7EA19Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_10 Register DESC0_CPU_EGP_26_10 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_10 0x2A1A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_10 0x1E7EA1A0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_10 Register DESC1_CPU_EGP_26_10 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_10 0x2A1A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_10 0x1E7EA1A4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_10 Register DESC2_CPU_EGP_26_10 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_10 0x2A1A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_10 0x1E7EA1A8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_10 Register DESC3_CPU_EGP_26_10 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_10 0x2A1AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_10 0x1E7EA1ACu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_11 Register DESC0_CPU_EGP_26_11 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_11 0x2A1B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_11 0x1E7EA1B0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_11 Register DESC1_CPU_EGP_26_11 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_11 0x2A1B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_11 0x1E7EA1B4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_11 Register DESC2_CPU_EGP_26_11 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_11 0x2A1B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_11 0x1E7EA1B8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_11 Register DESC3_CPU_EGP_26_11 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_11 0x2A1BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_11 0x1E7EA1BCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_12 Register DESC0_CPU_EGP_26_12 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_12 0x2A1C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_12 0x1E7EA1C0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_12 Register DESC1_CPU_EGP_26_12 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_12 0x2A1C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_12 0x1E7EA1C4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_12 Register DESC2_CPU_EGP_26_12 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_12 0x2A1C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_12 0x1E7EA1C8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_12 Register DESC3_CPU_EGP_26_12 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_12 0x2A1CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_12 0x1E7EA1CCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_13 Register DESC0_CPU_EGP_26_13 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_13 0x2A1D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_13 0x1E7EA1D0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_13 Register DESC1_CPU_EGP_26_13 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_13 0x2A1D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_13 0x1E7EA1D4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_13 Register DESC2_CPU_EGP_26_13 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_13 0x2A1D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_13 0x1E7EA1D8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_13 Register DESC3_CPU_EGP_26_13 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_13 0x2A1DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_13 0x1E7EA1DCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_14 Register DESC0_CPU_EGP_26_14 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_14 0x2A1E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_14 0x1E7EA1E0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_14 Register DESC1_CPU_EGP_26_14 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_14 0x2A1E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_14 0x1E7EA1E4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_14 Register DESC2_CPU_EGP_26_14 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_14 0x2A1E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_14 0x1E7EA1E8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_14 Register DESC3_CPU_EGP_26_14 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_14 0x2A1EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_14 0x1E7EA1ECu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_15 Register DESC0_CPU_EGP_26_15 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_15 0x2A1F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_15 0x1E7EA1F0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_15 Register DESC1_CPU_EGP_26_15 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_15 0x2A1F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_15 0x1E7EA1F4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_15 Register DESC2_CPU_EGP_26_15 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_15 0x2A1F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_15 0x1E7EA1F8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_15 Register DESC3_CPU_EGP_26_15 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_15 0x2A1FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_15 0x1E7EA1FCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_16 Register DESC0_CPU_EGP_26_16 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_16 0x2A200
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_16 0x1E7EA200u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_16 Register DESC1_CPU_EGP_26_16 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_16 0x2A204
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_16 0x1E7EA204u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_16 Register DESC2_CPU_EGP_26_16 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_16 0x2A208
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_16 0x1E7EA208u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_16 Register DESC3_CPU_EGP_26_16 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_16 0x2A20C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_16 0x1E7EA20Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_16_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_16_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_16_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_17 Register DESC0_CPU_EGP_26_17 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_17 0x2A210
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_17 0x1E7EA210u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_17 Register DESC1_CPU_EGP_26_17 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_17 0x2A214
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_17 0x1E7EA214u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_17 Register DESC2_CPU_EGP_26_17 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_17 0x2A218
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_17 0x1E7EA218u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_17 Register DESC3_CPU_EGP_26_17 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_17 0x2A21C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_17 0x1E7EA21Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_17_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_17_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_17_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_18 Register DESC0_CPU_EGP_26_18 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_18 0x2A220
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_18 0x1E7EA220u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_18 Register DESC1_CPU_EGP_26_18 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_18 0x2A224
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_18 0x1E7EA224u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_18 Register DESC2_CPU_EGP_26_18 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_18 0x2A228
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_18 0x1E7EA228u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_18 Register DESC3_CPU_EGP_26_18 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_18 0x2A22C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_18 0x1E7EA22Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_18_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_18_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_18_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_19 Register DESC0_CPU_EGP_26_19 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_19 0x2A230
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_19 0x1E7EA230u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_19 Register DESC1_CPU_EGP_26_19 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_19 0x2A234
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_19 0x1E7EA234u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_19 Register DESC2_CPU_EGP_26_19 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_19 0x2A238
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_19 0x1E7EA238u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_19 Register DESC3_CPU_EGP_26_19 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_19 0x2A23C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_19 0x1E7EA23Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_19_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_19_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_19_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_20 Register DESC0_CPU_EGP_26_20 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_20 0x2A240
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_20 0x1E7EA240u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_20 Register DESC1_CPU_EGP_26_20 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_20 0x2A244
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_20 0x1E7EA244u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_20 Register DESC2_CPU_EGP_26_20 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_20 0x2A248
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_20 0x1E7EA248u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_20 Register DESC3_CPU_EGP_26_20 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_20 0x2A24C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_20 0x1E7EA24Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_20_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_20_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_20_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_21 Register DESC0_CPU_EGP_26_21 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_21 0x2A250
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_21 0x1E7EA250u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_21 Register DESC1_CPU_EGP_26_21 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_21 0x2A254
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_21 0x1E7EA254u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_21 Register DESC2_CPU_EGP_26_21 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_21 0x2A258
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_21 0x1E7EA258u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_21 Register DESC3_CPU_EGP_26_21 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_21 0x2A25C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_21 0x1E7EA25Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_21_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_21_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_21_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_22 Register DESC0_CPU_EGP_26_22 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_22 0x2A260
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_22 0x1E7EA260u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_22 Register DESC1_CPU_EGP_26_22 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_22 0x2A264
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_22 0x1E7EA264u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_22 Register DESC2_CPU_EGP_26_22 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_22 0x2A268
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_22 0x1E7EA268u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_22 Register DESC3_CPU_EGP_26_22 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_22 0x2A26C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_22 0x1E7EA26Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_22_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_22_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_22_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_23 Register DESC0_CPU_EGP_26_23 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_23 0x2A270
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_23 0x1E7EA270u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_23 Register DESC1_CPU_EGP_26_23 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_23 0x2A274
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_23 0x1E7EA274u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_23 Register DESC2_CPU_EGP_26_23 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_23 0x2A278
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_23 0x1E7EA278u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_23 Register DESC3_CPU_EGP_26_23 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_23 0x2A27C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_23 0x1E7EA27Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_23_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_23_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_23_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_24 Register DESC0_CPU_EGP_26_24 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_24 0x2A280
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_24 0x1E7EA280u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_24 Register DESC1_CPU_EGP_26_24 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_24 0x2A284
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_24 0x1E7EA284u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_24 Register DESC2_CPU_EGP_26_24 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_24 0x2A288
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_24 0x1E7EA288u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_24 Register DESC3_CPU_EGP_26_24 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_24 0x2A28C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_24 0x1E7EA28Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_24_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_24_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_24_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_25 Register DESC0_CPU_EGP_26_25 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_25 0x2A290
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_25 0x1E7EA290u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_25 Register DESC1_CPU_EGP_26_25 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_25 0x2A294
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_25 0x1E7EA294u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_25 Register DESC2_CPU_EGP_26_25 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_25 0x2A298
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_25 0x1E7EA298u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_25 Register DESC3_CPU_EGP_26_25 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_25 0x2A29C
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_25 0x1E7EA29Cu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_25_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_25_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_25_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_26 Register DESC0_CPU_EGP_26_26 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_26 0x2A2A0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_26 0x1E7EA2A0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_26 Register DESC1_CPU_EGP_26_26 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_26 0x2A2A4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_26 0x1E7EA2A4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_26 Register DESC2_CPU_EGP_26_26 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_26 0x2A2A8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_26 0x1E7EA2A8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_26 Register DESC3_CPU_EGP_26_26 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_26 0x2A2AC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_26 0x1E7EA2ACu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_26_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_26_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_26_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_27 Register DESC0_CPU_EGP_26_27 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_27 0x2A2B0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_27 0x1E7EA2B0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_27 Register DESC1_CPU_EGP_26_27 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_27 0x2A2B4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_27 0x1E7EA2B4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_27 Register DESC2_CPU_EGP_26_27 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_27 0x2A2B8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_27 0x1E7EA2B8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_27 Register DESC3_CPU_EGP_26_27 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_27 0x2A2BC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_27 0x1E7EA2BCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_27_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_27_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_27_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_28 Register DESC0_CPU_EGP_26_28 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_28 0x2A2C0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_28 0x1E7EA2C0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_28 Register DESC1_CPU_EGP_26_28 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_28 0x2A2C4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_28 0x1E7EA2C4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_28 Register DESC2_CPU_EGP_26_28 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_28 0x2A2C8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_28 0x1E7EA2C8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_28 Register DESC3_CPU_EGP_26_28 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_28 0x2A2CC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_28 0x1E7EA2CCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_28_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_28_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_28_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_29 Register DESC0_CPU_EGP_26_29 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_29 0x2A2D0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_29 0x1E7EA2D0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_29 Register DESC1_CPU_EGP_26_29 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_29 0x2A2D4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_29 0x1E7EA2D4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_29 Register DESC2_CPU_EGP_26_29 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_29 0x2A2D8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_29 0x1E7EA2D8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_29 Register DESC3_CPU_EGP_26_29 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_29 0x2A2DC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_29 0x1E7EA2DCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_29_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_29_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_29_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_30 Register DESC0_CPU_EGP_26_30 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_30 0x2A2E0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_30 0x1E7EA2E0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_30 Register DESC1_CPU_EGP_26_30 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_30 0x2A2E4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_30 0x1E7EA2E4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_30 Register DESC2_CPU_EGP_26_30 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_30 0x2A2E8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_30 0x1E7EA2E8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_30 Register DESC3_CPU_EGP_26_30 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_30 0x2A2EC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_30 0x1E7EA2ECu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_30_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_30_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_30_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_CPU_EGP_26_31 Register DESC0_CPU_EGP_26_31 - Special CPU Egress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_CPU_EGP_26_31 0x2A2F0
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC0_CPU_EGP_26_31 0x1E7EA2F0u
+
+//! Register Reset Value
+#define DESC0_CPU_EGP_26_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_CPU_EGP_26_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_CPU_EGP_26_31 Register DESC1_CPU_EGP_26_31 - Special CPU Egress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_CPU_EGP_26_31 0x2A2F4
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC1_CPU_EGP_26_31 0x1E7EA2F4u
+
+//! Register Reset Value
+#define DESC1_CPU_EGP_26_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_CPU_EGP_26_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_CPU_EGP_26_31 Register DESC2_CPU_EGP_26_31 - Special CPU Egress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_CPU_EGP_26_31 0x2A2F8
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC2_CPU_EGP_26_31 0x1E7EA2F8u
+
+//! Register Reset Value
+#define DESC2_CPU_EGP_26_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_CPU_EGP_26_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_CPU_EGP_26_31 Register DESC3_CPU_EGP_26_31 - Special CPU Egress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_CPU_EGP_26_31 0x2A2FC
+//! Register Offset (absolute) for 1st Instance CBM_DQM
+#define CBM_DQM_DESC3_CPU_EGP_26_31 0x1E7EA2FCu
+
+//! Register Reset Value
+#define DESC3_CPU_EGP_26_31_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_31_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_CPU_EGP_26_31_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! @}
+
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/reg/cbm_eqm.h b/drivers/net/ethernet/lantiq/cbm/reg/cbm_eqm.h
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/reg/cbm_eqm.h
@@ -0,0 +1,16145 @@
+//-----------------------------------------------------------------------------
+// LSD Generator
+//-----------------------------------------------------------------------------
+// Perl Package        : LSD::generator::targetC (v1.1)
+// LSD Source          : D:/Users/shij/Perforce/l1033.grx500.win.v_shij.priv.dfv.grx500.dfv/ipg_lsd/lsd_sys/source/xml/reg_files/CBM_EQM.xml
+// Register File Name  : CBM_EQM
+// Register File Title : Central Buffer Manager Enqueue Manager Register Description
+// Register Width      : 32
+// Note                : Doxygen compliant comments
+//-----------------------------------------------------------------------------
+
+#ifndef _CBM_EQM_H
+#define _CBM_EQM_H
+
+//! \defgroup CBM_EQM Register File CBM_EQM - Central Buffer Manager Enqueue Manager Register Description
+//! @{
+
+//! Base Address of CBM_EQM
+#define CBM_EQM_MODULE_BASE 0x1E780000u
+
+//! \defgroup CBM_EQM_CTRL Register CBM_EQM_CTRL - CBM Enqueue Manager Control Register
+//! @{
+
+//! Register Offset (relative)
+#define CBM_EQM_CTRL 0x0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CBM_EQM_CTRL 0x1E780000u
+
+//! Register Reset Value
+#define CBM_EQM_CTRL_RST 0x00000400u
+
+//! Field EQM_EN - Enable Enqueue Manager Core State Machine
+#define CBM_EQM_CTRL_EQM_EN_POS 0
+//! Field EQM_EN - Enable Enqueue Manager Core State Machine
+#define CBM_EQM_CTRL_EQM_EN_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CBM_EQM_CTRL_EQM_EN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_EQM_CTRL_EQM_EN_EN 0x1
+
+//! Field EQM_FRZ - Freeze Enqueue Manager Core State Machine
+#define CBM_EQM_CTRL_EQM_FRZ_POS 1
+//! Field EQM_FRZ - Freeze Enqueue Manager Core State Machine
+#define CBM_EQM_CTRL_EQM_FRZ_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CBM_EQM_CTRL_EQM_FRZ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_EQM_CTRL_EQM_FRZ_EN 0x1
+
+//! Field EQM_ACT - Enqueue Manager Activity Status
+#define CBM_EQM_CTRL_EQM_ACT_POS 2
+//! Field EQM_ACT - Enqueue Manager Activity Status
+#define CBM_EQM_CTRL_EQM_ACT_MASK 0x4u
+//! Constant INACTIVE - Inactive
+#define CONST_CBM_EQM_CTRL_EQM_ACT_INACTIVE 0x0
+//! Constant ACTIVE - Active
+#define CONST_CBM_EQM_CTRL_EQM_ACT_ACTIVE 0x1
+
+//! Field EQQCEN - Enqueue Queue Counter Enable
+#define CBM_EQM_CTRL_EQQCEN_POS 4
+//! Field EQQCEN - Enqueue Queue Counter Enable
+#define CBM_EQM_CTRL_EQQCEN_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_CBM_EQM_CTRL_EQQCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_EQM_CTRL_EQQCEN_EN 0x1
+
+//! Field MSEL - Counter Mode Select
+#define CBM_EQM_CTRL_MSEL_POS 5
+//! Field MSEL - Counter Mode Select
+#define CBM_EQM_CTRL_MSEL_MASK 0x20u
+//! Constant PKT - Packet counter
+#define CONST_CBM_EQM_CTRL_MSEL_PKT 0x0
+//! Constant BYTE - Byte counter
+#define CONST_CBM_EQM_CTRL_MSEL_BYTE 0x1
+
+//! Field SNOOPEN - Snoop Enable
+#define CBM_EQM_CTRL_SNOOPEN_POS 6
+//! Field SNOOPEN - Snoop Enable
+#define CBM_EQM_CTRL_SNOOPEN_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CBM_EQM_CTRL_SNOOPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_EQM_CTRL_SNOOPEN_EN 0x1
+
+//! Field PDEN - Programmable Delay Enable
+#define CBM_EQM_CTRL_PDEN_POS 8
+//! Field PDEN - Programmable Delay Enable
+#define CBM_EQM_CTRL_PDEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CBM_EQM_CTRL_PDEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CBM_EQM_CTRL_PDEN_EN 0x1
+
+//! Field L - Queue Length Threshold
+#define CBM_EQM_CTRL_L_POS 9
+//! Field L - Queue Length Threshold
+#define CBM_EQM_CTRL_L_MASK 0xE00u
+
+//! @}
+
+//! \defgroup DBG_EQM_0 Register DBG_EQM_0 - Hardware Debug Register
+//! @{
+
+//! Register Offset (relative)
+#define DBG_EQM_0 0x10
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DBG_EQM_0 0x1E780010u
+
+//! Register Reset Value
+#define DBG_EQM_0_RST 0x00000000u
+
+//! Field DBG - Debug
+#define DBG_EQM_0_DBG_POS 0
+//! Field DBG - Debug
+#define DBG_EQM_0_DBG_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DBG_EQM_1 Register DBG_EQM_1 - Hardware Debug Register
+//! @{
+
+//! Register Offset (relative)
+#define DBG_EQM_1 0x14
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DBG_EQM_1 0x1E780014u
+
+//! Register Reset Value
+#define DBG_EQM_1_RST 0xC0010000u
+
+//! Field DBG - Debug
+#define DBG_EQM_1_DBG_POS 0
+//! Field DBG - Debug
+#define DBG_EQM_1_DBG_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup TEST_EQM_0 Register TEST_EQM_0 - Hardware Test Register
+//! @{
+
+//! Register Offset (relative)
+#define TEST_EQM_0 0x20
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_TEST_EQM_0 0x1E780020u
+
+//! Register Reset Value
+#define TEST_EQM_0_RST 0x00000000u
+
+//! Field TEST - Test
+#define TEST_EQM_0_TEST_POS 0
+//! Field TEST - Test
+#define TEST_EQM_0_TEST_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup TEST_EQM_1 Register TEST_EQM_1 - Hardware Test Register
+//! @{
+
+//! Register Offset (relative)
+#define TEST_EQM_1 0x24
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_TEST_EQM_1 0x1E780024u
+
+//! Register Reset Value
+#define TEST_EQM_1_RST 0x00000000u
+
+//! Field TEST - Test
+#define TEST_EQM_1_TEST_POS 0
+//! Field TEST - Test
+#define TEST_EQM_1_TEST_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DEN_0 Register DEN_0 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_0 0x30
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_0 0x1E780030u
+
+//! Register Reset Value
+#define DEN_0_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_0_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_0_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_0_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_0_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_0_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_0_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_0_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_0_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_0_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_0_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_0_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_0_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_0_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_0_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_0_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_0_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_0_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_0_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_0_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_0_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_0_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_0_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_0_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_0_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_0_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_0_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_0_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_0_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_0_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_0_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_0_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_0_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_0_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_0_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_0_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_0_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_0_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_0_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_0_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_0_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_0_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_0_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_0_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_0_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_0_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_0_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_0_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_0_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_0_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_0_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_0_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_0_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_0_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_0_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_0_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_0_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_0_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_0_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_0_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_0_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_0_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_0_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_0_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_0_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_0_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_0_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_1 Register DEN_1 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_1 0x34
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_1 0x1E780034u
+
+//! Register Reset Value
+#define DEN_1_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_1_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_1_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_1_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_1_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_1_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_1_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_1_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_1_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_1_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_1_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_1_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_1_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_1_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_1_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_1_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_1_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_1_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_1_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_1_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_1_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_1_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_1_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_1_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_1_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_1_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_1_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_1_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_1_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_1_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_1_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_1_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_1_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_1_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_1_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_1_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_1_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_1_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_1_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_1_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_1_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_1_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_1_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_1_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_1_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_1_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_1_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_1_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_1_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_1_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_1_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_1_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_1_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_1_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_1_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_1_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_1_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_1_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_1_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_1_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_1_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_1_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_1_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_1_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_1_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_1_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_1_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_2 Register DEN_2 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_2 0x38
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_2 0x1E780038u
+
+//! Register Reset Value
+#define DEN_2_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_2_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_2_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_2_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_2_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_2_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_2_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_2_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_2_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_2_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_2_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_2_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_2_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_2_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_2_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_2_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_2_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_2_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_2_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_2_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_2_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_2_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_2_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_2_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_2_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_2_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_2_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_2_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_2_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_2_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_2_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_2_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_2_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_2_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_2_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_2_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_2_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_2_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_2_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_2_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_2_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_2_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_2_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_2_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_2_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_2_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_2_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_2_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_2_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_2_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_2_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_2_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_2_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_2_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_2_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_2_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_2_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_2_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_2_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_2_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_2_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_2_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_2_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_2_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_2_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_2_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_2_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_3 Register DEN_3 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_3 0x3C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_3 0x1E78003Cu
+
+//! Register Reset Value
+#define DEN_3_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_3_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_3_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_3_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_3_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_3_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_3_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_3_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_3_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_3_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_3_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_3_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_3_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_3_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_3_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_3_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_3_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_3_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_3_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_3_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_3_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_3_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_3_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_3_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_3_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_3_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_3_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_3_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_3_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_3_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_3_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_3_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_3_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_3_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_3_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_3_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_3_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_3_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_3_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_3_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_3_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_3_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_3_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_3_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_3_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_3_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_3_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_3_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_3_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_3_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_3_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_3_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_3_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_3_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_3_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_3_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_3_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_3_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_3_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_3_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_3_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_3_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_3_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_3_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_3_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_3_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_3_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_4 Register DEN_4 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_4 0x40
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_4 0x1E780040u
+
+//! Register Reset Value
+#define DEN_4_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_4_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_4_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_4_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_4_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_4_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_4_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_4_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_4_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_4_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_4_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_4_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_4_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_4_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_4_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_4_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_4_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_4_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_4_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_4_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_4_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_4_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_4_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_4_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_4_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_4_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_4_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_4_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_4_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_4_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_4_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_4_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_4_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_4_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_4_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_4_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_4_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_4_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_4_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_4_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_4_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_4_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_4_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_4_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_4_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_4_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_4_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_4_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_4_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_4_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_4_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_4_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_4_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_4_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_4_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_4_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_4_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_4_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_4_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_4_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_4_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_4_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_4_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_4_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_4_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_4_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_4_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_5 Register DEN_5 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_5 0x44
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_5 0x1E780044u
+
+//! Register Reset Value
+#define DEN_5_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_5_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_5_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_5_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_5_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_5_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_5_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_5_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_5_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_5_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_5_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_5_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_5_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_5_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_5_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_5_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_5_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_5_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_5_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_5_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_5_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_5_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_5_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_5_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_5_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_5_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_5_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_5_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_5_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_5_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_5_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_5_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_5_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_5_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_5_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_5_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_5_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_5_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_5_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_5_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_5_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_5_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_5_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_5_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_5_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_5_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_5_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_5_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_5_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_5_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_5_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_5_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_5_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_5_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_5_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_5_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_5_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_5_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_5_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_5_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_5_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_5_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_5_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_5_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_5_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_5_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_5_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_6 Register DEN_6 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_6 0x48
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_6 0x1E780048u
+
+//! Register Reset Value
+#define DEN_6_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_6_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_6_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_6_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_6_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_6_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_6_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_6_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_6_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_6_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_6_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_6_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_6_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_6_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_6_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_6_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_6_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_6_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_6_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_6_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_6_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_6_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_6_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_6_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_6_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_6_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_6_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_6_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_6_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_6_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_6_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_6_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_6_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_6_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_6_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_6_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_6_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_6_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_6_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_6_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_6_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_6_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_6_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_6_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_6_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_6_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_6_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_6_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_6_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_6_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_6_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_6_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_6_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_6_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_6_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_6_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_6_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_6_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_6_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_6_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_6_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_6_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_6_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_6_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_6_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_6_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_6_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup DEN_7 Register DEN_7 - Delay Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define DEN_7 0x4C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DEN_7 0x1E78004Cu
+
+//! Register Reset Value
+#define DEN_7_RST 0xFFFFFFFFu
+
+//! Field DEN0 - Delay Enable 0
+#define DEN_7_DEN0_POS 0
+//! Field DEN0 - Delay Enable 0
+#define DEN_7_DEN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN0_EN 0x1
+
+//! Field DEN1 - Delay Enable 1
+#define DEN_7_DEN1_POS 1
+//! Field DEN1 - Delay Enable 1
+#define DEN_7_DEN1_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN1_EN 0x1
+
+//! Field DEN2 - Delay Enable 2
+#define DEN_7_DEN2_POS 2
+//! Field DEN2 - Delay Enable 2
+#define DEN_7_DEN2_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN2_EN 0x1
+
+//! Field DEN3 - Delay Enable 3
+#define DEN_7_DEN3_POS 3
+//! Field DEN3 - Delay Enable 3
+#define DEN_7_DEN3_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN3_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN3_EN 0x1
+
+//! Field DEN4 - Delay Enable 4
+#define DEN_7_DEN4_POS 4
+//! Field DEN4 - Delay Enable 4
+#define DEN_7_DEN4_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN4_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN4_EN 0x1
+
+//! Field DEN5 - Delay Enable 5
+#define DEN_7_DEN5_POS 5
+//! Field DEN5 - Delay Enable 5
+#define DEN_7_DEN5_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN5_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN5_EN 0x1
+
+//! Field DEN6 - Delay Enable 6
+#define DEN_7_DEN6_POS 6
+//! Field DEN6 - Delay Enable 6
+#define DEN_7_DEN6_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN6_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN6_EN 0x1
+
+//! Field DEN7 - Delay Enable 7
+#define DEN_7_DEN7_POS 7
+//! Field DEN7 - Delay Enable 7
+#define DEN_7_DEN7_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN7_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN7_EN 0x1
+
+//! Field DEN8 - Delay Enable 8
+#define DEN_7_DEN8_POS 8
+//! Field DEN8 - Delay Enable 8
+#define DEN_7_DEN8_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN8_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN8_EN 0x1
+
+//! Field DEN9 - Delay Enable 9
+#define DEN_7_DEN9_POS 9
+//! Field DEN9 - Delay Enable 9
+#define DEN_7_DEN9_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN9_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN9_EN 0x1
+
+//! Field DEN10 - Delay Enable 10
+#define DEN_7_DEN10_POS 10
+//! Field DEN10 - Delay Enable 10
+#define DEN_7_DEN10_MASK 0x400u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN10_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN10_EN 0x1
+
+//! Field DEN11 - Delay Enable 11
+#define DEN_7_DEN11_POS 11
+//! Field DEN11 - Delay Enable 11
+#define DEN_7_DEN11_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN11_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN11_EN 0x1
+
+//! Field DEN12 - Delay Enable 12
+#define DEN_7_DEN12_POS 12
+//! Field DEN12 - Delay Enable 12
+#define DEN_7_DEN12_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN12_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN12_EN 0x1
+
+//! Field DEN13 - Delay Enable 13
+#define DEN_7_DEN13_POS 13
+//! Field DEN13 - Delay Enable 13
+#define DEN_7_DEN13_MASK 0x2000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN13_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN13_EN 0x1
+
+//! Field DEN14 - Delay Enable 14
+#define DEN_7_DEN14_POS 14
+//! Field DEN14 - Delay Enable 14
+#define DEN_7_DEN14_MASK 0x4000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN14_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN14_EN 0x1
+
+//! Field DEN15 - Delay Enable 15
+#define DEN_7_DEN15_POS 15
+//! Field DEN15 - Delay Enable 15
+#define DEN_7_DEN15_MASK 0x8000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN15_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN15_EN 0x1
+
+//! Field DEN16 - Delay Enable 16
+#define DEN_7_DEN16_POS 16
+//! Field DEN16 - Delay Enable 16
+#define DEN_7_DEN16_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN16_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN16_EN 0x1
+
+//! Field DEN17 - Delay Enable 17
+#define DEN_7_DEN17_POS 17
+//! Field DEN17 - Delay Enable 17
+#define DEN_7_DEN17_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN17_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN17_EN 0x1
+
+//! Field DEN18 - Delay Enable 18
+#define DEN_7_DEN18_POS 18
+//! Field DEN18 - Delay Enable 18
+#define DEN_7_DEN18_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN18_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN18_EN 0x1
+
+//! Field DEN19 - Delay Enable 19
+#define DEN_7_DEN19_POS 19
+//! Field DEN19 - Delay Enable 19
+#define DEN_7_DEN19_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN19_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN19_EN 0x1
+
+//! Field DEN20 - Delay Enable 20
+#define DEN_7_DEN20_POS 20
+//! Field DEN20 - Delay Enable 20
+#define DEN_7_DEN20_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN20_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN20_EN 0x1
+
+//! Field DEN21 - Delay Enable 21
+#define DEN_7_DEN21_POS 21
+//! Field DEN21 - Delay Enable 21
+#define DEN_7_DEN21_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN21_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN21_EN 0x1
+
+//! Field DEN22 - Delay Enable 22
+#define DEN_7_DEN22_POS 22
+//! Field DEN22 - Delay Enable 22
+#define DEN_7_DEN22_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN22_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN22_EN 0x1
+
+//! Field DEN23 - Delay Enable 23
+#define DEN_7_DEN23_POS 23
+//! Field DEN23 - Delay Enable 23
+#define DEN_7_DEN23_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN23_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN23_EN 0x1
+
+//! Field DEN24 - Delay Enable 24
+#define DEN_7_DEN24_POS 24
+//! Field DEN24 - Delay Enable 24
+#define DEN_7_DEN24_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN24_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN24_EN 0x1
+
+//! Field DEN25 - Delay Enable 25
+#define DEN_7_DEN25_POS 25
+//! Field DEN25 - Delay Enable 25
+#define DEN_7_DEN25_MASK 0x2000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN25_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN25_EN 0x1
+
+//! Field DEN26 - Delay Enable 26
+#define DEN_7_DEN26_POS 26
+//! Field DEN26 - Delay Enable 26
+#define DEN_7_DEN26_MASK 0x4000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN26_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN26_EN 0x1
+
+//! Field DEN27 - Delay Enable 27
+#define DEN_7_DEN27_POS 27
+//! Field DEN27 - Delay Enable 27
+#define DEN_7_DEN27_MASK 0x8000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN27_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN27_EN 0x1
+
+//! Field DEN28 - Delay Enable 28
+#define DEN_7_DEN28_POS 28
+//! Field DEN28 - Delay Enable 28
+#define DEN_7_DEN28_MASK 0x10000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN28_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN28_EN 0x1
+
+//! Field DEN29 - Delay Enable 29
+#define DEN_7_DEN29_POS 29
+//! Field DEN29 - Delay Enable 29
+#define DEN_7_DEN29_MASK 0x20000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN29_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN29_EN 0x1
+
+//! Field DEN30 - Delay Enable 30
+#define DEN_7_DEN30_POS 30
+//! Field DEN30 - Delay Enable 30
+#define DEN_7_DEN30_MASK 0x40000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN30_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN30_EN 0x1
+
+//! Field DEN31 - Delay Enable 31
+#define DEN_7_DEN31_POS 31
+//! Field DEN31 - Delay Enable 31
+#define DEN_7_DEN31_MASK 0x80000000u
+//! Constant DIS - DIS
+#define CONST_DEN_7_DEN31_DIS 0x0
+//! Constant EN - EN
+#define CONST_DEN_7_DEN31_EN 0x1
+
+//! @}
+
+//! \defgroup OVH_0 Register OVH_0 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_0 0x50
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_0 0x1E780050u
+
+//! Register Reset Value
+#define OVH_0_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_0_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_0_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_1 Register OVH_1 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_1 0x54
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_1 0x1E780054u
+
+//! Register Reset Value
+#define OVH_1_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_1_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_1_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_2 Register OVH_2 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_2 0x58
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_2 0x1E780058u
+
+//! Register Reset Value
+#define OVH_2_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_2_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_2_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_3 Register OVH_3 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_3 0x5C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_3 0x1E78005Cu
+
+//! Register Reset Value
+#define OVH_3_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_3_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_3_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_4 Register OVH_4 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_4 0x60
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_4 0x1E780060u
+
+//! Register Reset Value
+#define OVH_4_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_4_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_4_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_5 Register OVH_5 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_5 0x64
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_5 0x1E780064u
+
+//! Register Reset Value
+#define OVH_5_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_5_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_5_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_6 Register OVH_6 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_6 0x68
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_6 0x1E780068u
+
+//! Register Reset Value
+#define OVH_6_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_6_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_6_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_7 Register OVH_7 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_7 0x6C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_7 0x1E78006Cu
+
+//! Register Reset Value
+#define OVH_7_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_7_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_7_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_8 Register OVH_8 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_8 0x70
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_8 0x1E780070u
+
+//! Register Reset Value
+#define OVH_8_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_8_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_8_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_9 Register OVH_9 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_9 0x74
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_9 0x1E780074u
+
+//! Register Reset Value
+#define OVH_9_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_9_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_9_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_10 Register OVH_10 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_10 0x78
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_10 0x1E780078u
+
+//! Register Reset Value
+#define OVH_10_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_10_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_10_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_11 Register OVH_11 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_11 0x7C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_11 0x1E78007Cu
+
+//! Register Reset Value
+#define OVH_11_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_11_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_11_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_12 Register OVH_12 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_12 0x80
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_12 0x1E780080u
+
+//! Register Reset Value
+#define OVH_12_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_12_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_12_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_13 Register OVH_13 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_13 0x84
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_13 0x1E780084u
+
+//! Register Reset Value
+#define OVH_13_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_13_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_13_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_14 Register OVH_14 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_14 0x88
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_14 0x1E780088u
+
+//! Register Reset Value
+#define OVH_14_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_14_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_14_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup OVH_15 Register OVH_15 - Overhead Byte
+//! @{
+
+//! Register Offset (relative)
+#define OVH_15 0x8C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_OVH_15 0x1E78008Cu
+
+//! Register Reset Value
+#define OVH_15_RST 0x00000000u
+
+//! Field OVH - Overhead Bytes
+#define OVH_15_OVH_POS 0
+//! Field OVH - Overhead Bytes
+#define OVH_15_OVH_MASK 0xFFu
+
+//! @}
+
+//! \defgroup DMA_RDY_EN Register DMA_RDY_EN - DMA Ready Enable
+//! @{
+
+//! Register Offset (relative)
+#define DMA_RDY_EN 0x90
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DMA_RDY_EN 0x1E780090u
+
+//! Register Reset Value
+#define DMA_RDY_EN_RST 0x0000003Fu
+
+//! Field STD_EN0 - Standard Channel Ready Enable
+#define DMA_RDY_EN_STD_EN0_POS 0
+//! Field STD_EN0 - Standard Channel Ready Enable
+#define DMA_RDY_EN_STD_EN0_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_DMA_RDY_EN_STD_EN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DMA_RDY_EN_STD_EN0_EN 0x1
+
+//! Field JMB_EN0 - Jumbo Channel Ready Enable
+#define DMA_RDY_EN_JMB_EN0_POS 1
+//! Field JMB_EN0 - Jumbo Channel Ready Enable
+#define DMA_RDY_EN_JMB_EN0_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_DMA_RDY_EN_JMB_EN0_DIS 0x0
+//! Constant EN - EN
+#define CONST_DMA_RDY_EN_JMB_EN0_EN 0x1
+
+//! Field STD_EN1 - Ready Enable
+#define DMA_RDY_EN_STD_EN1_POS 2
+//! Field STD_EN1 - Ready Enable
+#define DMA_RDY_EN_STD_EN1_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_DMA_RDY_EN_STD_EN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DMA_RDY_EN_STD_EN1_EN 0x1
+
+//! Field JMB_EN1 - Jumbo Channel Ready Enable
+#define DMA_RDY_EN_JMB_EN1_POS 3
+//! Field JMB_EN1 - Jumbo Channel Ready Enable
+#define DMA_RDY_EN_JMB_EN1_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_DMA_RDY_EN_JMB_EN1_DIS 0x0
+//! Constant EN - EN
+#define CONST_DMA_RDY_EN_JMB_EN1_EN 0x1
+
+//! Field STD_EN2 - Ready Enable
+#define DMA_RDY_EN_STD_EN2_POS 4
+//! Field STD_EN2 - Ready Enable
+#define DMA_RDY_EN_STD_EN2_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_DMA_RDY_EN_STD_EN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DMA_RDY_EN_STD_EN2_EN 0x1
+
+//! Field JMB_EN2 - Jumbo Channel Ready Enable
+#define DMA_RDY_EN_JMB_EN2_POS 5
+//! Field JMB_EN2 - Jumbo Channel Ready Enable
+#define DMA_RDY_EN_JMB_EN2_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_DMA_RDY_EN_JMB_EN2_DIS 0x0
+//! Constant EN - EN
+#define CONST_DMA_RDY_EN_JMB_EN2_EN 0x1
+
+//! @}
+
+//! \defgroup CFG_CPU_IGP_0 Register CFG_CPU_IGP_0 - CPU Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_IGP_0 0x10000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_CPU_IGP_0 0x1E790000u
+
+//! Register Reset Value
+#define CFG_CPU_IGP_0_RST 0x00000000u
+
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_0_EQREQ_POS 0
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_0_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_EQREQ_EN 0x1
+
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_0_BUFREQS_POS 1
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_0_BUFREQS_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_BUFREQS_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_BUFREQS_EN 0x1
+
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_0_BUFREQJ_POS 2
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_0_BUFREQJ_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_BUFREQJ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_BUFREQJ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_0_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_0_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_0_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_0_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_CPU_IGP_0_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_CPU_IGP_0_BAS_BA1 0x1
+
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_0_BRBPEN_POS 5
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_0_BRBPEN_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_BRBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_BRBPEN_EN 0x1
+
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_0_EQDBPEN_POS 6
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_0_EQDBPEN_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_EQDBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_EQDBPEN_EN 0x1
+
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_0_RCNTBPEN_POS 7
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_0_RCNTBPEN_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_RCNTBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_RCNTBPEN_EN 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_0_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_0_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_0_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_0_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_0_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_0_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_CPU_IGP_0_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_CPU_IGP_0_BP_EN_EN 0x1
+
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_0_RCNTEN_POS 11
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_0_RCNTEN_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_0_RCNTEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_0_RCNTEN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_0_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_0_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_CPU_IGP_0_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_CPU_IGP_0_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_CPU_IGP_0_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_CPU_IGP_0_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_CPU_IGP_0_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_CPU_IGP_0_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_CPU_IGP_0_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_CPU_IGP_0_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_CPU_IGP_0_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_CPU_IGP_0_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_CPU_IGP_0_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_CPU_IGP_0_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_CPU_IGP_0_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_CPU_IGP_0_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_CPU_IGP_0_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_CPU_IGP_0_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_0_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_0_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_CPU_IGP_0 Register WM_CPU_IGP_0 - CPU Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_CPU_IGP_0 0x10004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_CPU_IGP_0 0x1E790004u
+
+//! Register Reset Value
+#define WM_CPU_IGP_0_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_0_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_0_LWM_MASK 0x3FFFu
+
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_0_HWM_POS 16
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_0_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_CPU_IGP_0 Register POCC_CPU_IGP_0 - CPU Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_CPU_IGP_0 0x10008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_CPU_IGP_0 0x1E790008u
+
+//! Register Reset Value
+#define POCC_CPU_IGP_0_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_0_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_0_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_CPU_IGP_0 Register EQPC_CPU_IGP_0 - CPU Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_CPU_IGP_0 0x1000C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_CPU_IGP_0 0x1E79000Cu
+
+//! Register Reset Value
+#define EQPC_CPU_IGP_0_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_0_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_0_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_CPU_IGP_0 Register DISC_DESC0_CPU_IGP_0 - CPU Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_CPU_IGP_0 0x10010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_CPU_IGP_0 0x1E790010u
+
+//! Register Reset Value
+#define DISC_DESC0_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_CPU_IGP_0 Register DISC_DESC1_CPU_IGP_0 - CPU Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_CPU_IGP_0 0x10014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_CPU_IGP_0 0x1E790014u
+
+//! Register Reset Value
+#define DISC_DESC1_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_CPU_IGP_0 Register DISC_DESC2_CPU_IGP_0 - CPU Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_CPU_IGP_0 0x10018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_CPU_IGP_0 0x1E790018u
+
+//! Register Reset Value
+#define DISC_DESC2_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_CPU_IGP_0 Register DISC_DESC3_CPU_IGP_0 - CPU Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_CPU_IGP_0 0x1001C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_CPU_IGP_0 0x1E79001Cu
+
+//! Register Reset Value
+#define DISC_DESC3_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_IGP_0 Register IRNCR_CPU_IGP_0 - CPU Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_IGP_0 0x10020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_CPU_IGP_0 0x1E790020u
+
+//! Register Reset Value
+#define IRNCR_CPU_IGP_0_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_0_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_0_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_0_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_0_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_0_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_0_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_0_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_0_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_0_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_0_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_0_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_0_HWMI_INTACK 0x1
+
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_0_DR_POS 3
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_0_DR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_0_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_0_DR_INTOCC 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_0_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_0_SPR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_0_SPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_0_SPR_INTOCC 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_0_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_0_JPR_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_0_JPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_0_JPR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_IGP_0 Register IRNICR_CPU_IGP_0 - CPU Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_IGP_0 0x10024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_CPU_IGP_0 0x1E790024u
+
+//! Register Reset Value
+#define IRNICR_CPU_IGP_0_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_0_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_0_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_0_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_0_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_0_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_0_HWMI_MASK 0x4u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_0_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_0_DR_MASK 0x8u
+
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_0_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_0_SPR_MASK 0x10u
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_0_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_0_JPR_MASK 0x20u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_IGP_0 Register IRNEN_CPU_IGP_0 - CPU Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_IGP_0 0x10028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_CPU_IGP_0 0x1E790028u
+
+//! Register Reset Value
+#define IRNEN_CPU_IGP_0_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_0_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_0_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_0_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_0_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_0_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_0_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_0_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_0_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_0_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_0_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_0_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_0_HWMI_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_0_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_0_DR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_0_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_0_DR_EN 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_0_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_0_SPR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_0_SPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_0_SPR_EN 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_0_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_0_JPR_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_0_JPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_0_JPR_EN 0x1
+
+//! @}
+
+//! \defgroup RCNT_INC_CPU_IGP_0 Register RCNT_INC_CPU_IGP_0 - CPU Ingress Port Repeat Count Increment
+//! @{
+
+//! Register Offset (relative)
+#define RCNT_INC_CPU_IGP_0 0x10034
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNT_INC_CPU_IGP_0 0x1E790034u
+
+//! Register Reset Value
+#define RCNT_INC_CPU_IGP_0_RST 0xFFFFF800u
+
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_0_DP_POS 11
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_0_DP_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DICC_IGP_0 Register DICC_IGP_0 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_0 0x10038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_0 0x1E790038u
+
+//! Register Reset Value
+#define DICC_IGP_0_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_0_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_0_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup RCNTC_CPU_IGP_0 Register RCNTC_CPU_IGP_0 - CPU Ingress Port enqueue repeat count counter
+//! @{
+
+//! Register Offset (relative)
+#define RCNTC_CPU_IGP_0 0x1003C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNTC_CPU_IGP_0 0x1E79003Cu
+
+//! Register Reset Value
+#define RCNTC_CPU_IGP_0_RST 0x00000000u
+
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_0_RCNTC_POS 0
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_0_RCNTC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NSBPC_CPU_IGP_0 Register NSBPC_CPU_IGP_0 - CPU Ingress Port new standard buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NSBPC_CPU_IGP_0 0x10040
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NSBPC_CPU_IGP_0 0x1E790040u
+
+//! Register Reset Value
+#define NSBPC_CPU_IGP_0_RST 0x00000000u
+
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_0_NSBPC_POS 0
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_0_NSBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NJBPC_CPU_IGP_0 Register NJBPC_CPU_IGP_0 - CPU Ingress Port new jumbo buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NJBPC_CPU_IGP_0 0x10044
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NJBPC_CPU_IGP_0 0x1E790044u
+
+//! Register Reset Value
+#define NJBPC_CPU_IGP_0_RST 0x00000000u
+
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_0_NJBPC_POS 0
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_0_NJBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_0 Register DCNTR_IGP_0 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_0 0x1004C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_0 0x1E79004Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_0_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_0_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_0_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_0_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_0_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup NEW_SPTR_CPU_IGP_0 Register NEW_SPTR_CPU_IGP_0 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR_CPU_IGP_0 0x10080
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR_CPU_IGP_0 0x1E790080u
+
+//! Register Reset Value
+#define NEW_SPTR_CPU_IGP_0_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_0_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_0_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_0_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_0_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_JPTR_CPU_IGP_0 Register NEW_JPTR_CPU_IGP_0 - CPU Ingress Port New Jumbo Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_JPTR_CPU_IGP_0 0x10090
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_JPTR_CPU_IGP_0 0x1E790090u
+
+//! Register Reset Value
+#define NEW_JPTR_CPU_IGP_0_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_0_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_0_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_0_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_0_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_IGP_0 Register DESC0_0_CPU_IGP_0 - CPU Ingress Port Descriptor 0 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_IGP_0 0x10100
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_0_CPU_IGP_0 0x1E790100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_IGP_0 Register DESC1_0_CPU_IGP_0 - CPU Ingress Port Descriptor 0 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_IGP_0 0x10104
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_0_CPU_IGP_0 0x1E790104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_IGP_0 Register DESC2_0_CPU_IGP_0 - CPU Ingress Port Descriptor 0 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_IGP_0 0x10108
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_0_CPU_IGP_0 0x1E790108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_IGP_0 Register DESC3_0_CPU_IGP_0 - CPU Ingress Port Descriptor 0 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_IGP_0 0x1010C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_0_CPU_IGP_0 0x1E79010Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_IGP_0_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_IGP_0 Register DESC0_1_CPU_IGP_0 - CPU Ingress Port Descriptor 1 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_IGP_0 0x10110
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_1_CPU_IGP_0 0x1E790110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_IGP_0 Register DESC1_1_CPU_IGP_0 - CPU Ingress Port Descriptor 1 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_IGP_0 0x10114
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_1_CPU_IGP_0 0x1E790114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_IGP_0 Register DESC2_1_CPU_IGP_0 - CPU Ingress Port Descriptor 1 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_IGP_0 0x10118
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_1_CPU_IGP_0 0x1E790118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_IGP_0_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_0_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_IGP_0 Register DESC3_1_CPU_IGP_0 - CPU Ingress Port Descriptor 1 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_IGP_0 0x1011C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_1_CPU_IGP_0 0x1E79011Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_IGP_0_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_0_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_0_DESC_MASK 0x7FFFFFFFu
+
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_0_OWN_POS 31
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_0_OWN_MASK 0x80000000u
+
+//! @}
+
+//! \defgroup CFG_CPU_IGP_1 Register CFG_CPU_IGP_1 - CPU Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_IGP_1 0x11000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_CPU_IGP_1 0x1E791000u
+
+//! Register Reset Value
+#define CFG_CPU_IGP_1_RST 0x00000000u
+
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_1_EQREQ_POS 0
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_1_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_EQREQ_EN 0x1
+
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_1_BUFREQS_POS 1
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_1_BUFREQS_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_BUFREQS_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_BUFREQS_EN 0x1
+
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_1_BUFREQJ_POS 2
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_1_BUFREQJ_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_BUFREQJ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_BUFREQJ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_1_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_1_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_1_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_1_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_CPU_IGP_1_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_CPU_IGP_1_BAS_BA1 0x1
+
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_1_BRBPEN_POS 5
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_1_BRBPEN_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_BRBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_BRBPEN_EN 0x1
+
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_1_EQDBPEN_POS 6
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_1_EQDBPEN_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_EQDBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_EQDBPEN_EN 0x1
+
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_1_RCNTBPEN_POS 7
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_1_RCNTBPEN_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_RCNTBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_RCNTBPEN_EN 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_1_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_1_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_1_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_1_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_1_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_1_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_CPU_IGP_1_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_CPU_IGP_1_BP_EN_EN 0x1
+
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_1_RCNTEN_POS 11
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_1_RCNTEN_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_1_RCNTEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_1_RCNTEN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_1_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_1_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_CPU_IGP_1_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_CPU_IGP_1_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_CPU_IGP_1_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_CPU_IGP_1_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_CPU_IGP_1_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_CPU_IGP_1_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_CPU_IGP_1_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_CPU_IGP_1_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_CPU_IGP_1_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_CPU_IGP_1_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_CPU_IGP_1_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_CPU_IGP_1_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_CPU_IGP_1_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_CPU_IGP_1_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_CPU_IGP_1_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_CPU_IGP_1_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_1_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_1_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_CPU_IGP_1 Register WM_CPU_IGP_1 - CPU Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_CPU_IGP_1 0x11004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_CPU_IGP_1 0x1E791004u
+
+//! Register Reset Value
+#define WM_CPU_IGP_1_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_1_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_1_LWM_MASK 0x3FFFu
+
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_1_HWM_POS 16
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_1_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_CPU_IGP_1 Register POCC_CPU_IGP_1 - CPU Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_CPU_IGP_1 0x11008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_CPU_IGP_1 0x1E791008u
+
+//! Register Reset Value
+#define POCC_CPU_IGP_1_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_1_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_1_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_CPU_IGP_1 Register EQPC_CPU_IGP_1 - CPU Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_CPU_IGP_1 0x1100C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_CPU_IGP_1 0x1E79100Cu
+
+//! Register Reset Value
+#define EQPC_CPU_IGP_1_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_1_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_1_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_CPU_IGP_1 Register DISC_DESC0_CPU_IGP_1 - CPU Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_CPU_IGP_1 0x11010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_CPU_IGP_1 0x1E791010u
+
+//! Register Reset Value
+#define DISC_DESC0_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_CPU_IGP_1 Register DISC_DESC1_CPU_IGP_1 - CPU Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_CPU_IGP_1 0x11014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_CPU_IGP_1 0x1E791014u
+
+//! Register Reset Value
+#define DISC_DESC1_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_CPU_IGP_1 Register DISC_DESC2_CPU_IGP_1 - CPU Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_CPU_IGP_1 0x11018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_CPU_IGP_1 0x1E791018u
+
+//! Register Reset Value
+#define DISC_DESC2_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_CPU_IGP_1 Register DISC_DESC3_CPU_IGP_1 - CPU Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_CPU_IGP_1 0x1101C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_CPU_IGP_1 0x1E79101Cu
+
+//! Register Reset Value
+#define DISC_DESC3_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_IGP_1 Register IRNCR_CPU_IGP_1 - CPU Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_IGP_1 0x11020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_CPU_IGP_1 0x1E791020u
+
+//! Register Reset Value
+#define IRNCR_CPU_IGP_1_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_1_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_1_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_1_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_1_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_1_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_1_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_1_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_1_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_1_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_1_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_1_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_1_HWMI_INTACK 0x1
+
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_1_DR_POS 3
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_1_DR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_1_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_1_DR_INTOCC 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_1_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_1_SPR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_1_SPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_1_SPR_INTOCC 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_1_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_1_JPR_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_1_JPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_1_JPR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_IGP_1 Register IRNICR_CPU_IGP_1 - CPU Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_IGP_1 0x11024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_CPU_IGP_1 0x1E791024u
+
+//! Register Reset Value
+#define IRNICR_CPU_IGP_1_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_1_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_1_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_1_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_1_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_1_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_1_HWMI_MASK 0x4u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_1_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_1_DR_MASK 0x8u
+
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_1_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_1_SPR_MASK 0x10u
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_1_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_1_JPR_MASK 0x20u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_IGP_1 Register IRNEN_CPU_IGP_1 - CPU Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_IGP_1 0x11028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_CPU_IGP_1 0x1E791028u
+
+//! Register Reset Value
+#define IRNEN_CPU_IGP_1_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_1_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_1_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_1_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_1_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_1_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_1_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_1_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_1_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_1_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_1_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_1_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_1_HWMI_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_1_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_1_DR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_1_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_1_DR_EN 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_1_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_1_SPR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_1_SPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_1_SPR_EN 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_1_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_1_JPR_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_1_JPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_1_JPR_EN 0x1
+
+//! @}
+
+//! \defgroup RCNT_INC_CPU_IGP_1 Register RCNT_INC_CPU_IGP_1 - CPU Ingress Port Repeat Count Increment
+//! @{
+
+//! Register Offset (relative)
+#define RCNT_INC_CPU_IGP_1 0x11034
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNT_INC_CPU_IGP_1 0x1E791034u
+
+//! Register Reset Value
+#define RCNT_INC_CPU_IGP_1_RST 0xFFFFF800u
+
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_1_DP_POS 11
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_1_DP_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DICC_IGP_1 Register DICC_IGP_1 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_1 0x11038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_1 0x1E791038u
+
+//! Register Reset Value
+#define DICC_IGP_1_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_1_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_1_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup RCNTC_CPU_IGP_1 Register RCNTC_CPU_IGP_1 - CPU Ingress Port enqueue repeat count counter
+//! @{
+
+//! Register Offset (relative)
+#define RCNTC_CPU_IGP_1 0x1103C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNTC_CPU_IGP_1 0x1E79103Cu
+
+//! Register Reset Value
+#define RCNTC_CPU_IGP_1_RST 0x00000000u
+
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_1_RCNTC_POS 0
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_1_RCNTC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NSBPC_CPU_IGP_1 Register NSBPC_CPU_IGP_1 - CPU Ingress Port new standard buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NSBPC_CPU_IGP_1 0x11040
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NSBPC_CPU_IGP_1 0x1E791040u
+
+//! Register Reset Value
+#define NSBPC_CPU_IGP_1_RST 0x00000000u
+
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_1_NSBPC_POS 0
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_1_NSBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NJBPC_CPU_IGP_1 Register NJBPC_CPU_IGP_1 - CPU Ingress Port new jumbo buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NJBPC_CPU_IGP_1 0x11044
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NJBPC_CPU_IGP_1 0x1E791044u
+
+//! Register Reset Value
+#define NJBPC_CPU_IGP_1_RST 0x00000000u
+
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_1_NJBPC_POS 0
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_1_NJBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_1 Register DCNTR_IGP_1 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_1 0x1104C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_1 0x1E79104Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_1_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_1_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_1_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_1_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_1_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup NEW_SPTR_CPU_IGP_1 Register NEW_SPTR_CPU_IGP_1 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR_CPU_IGP_1 0x11080
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR_CPU_IGP_1 0x1E791080u
+
+//! Register Reset Value
+#define NEW_SPTR_CPU_IGP_1_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_1_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_1_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_1_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_1_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_JPTR_CPU_IGP_1 Register NEW_JPTR_CPU_IGP_1 - CPU Ingress Port New Jumbo Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_JPTR_CPU_IGP_1 0x11090
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_JPTR_CPU_IGP_1 0x1E791090u
+
+//! Register Reset Value
+#define NEW_JPTR_CPU_IGP_1_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_1_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_1_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_1_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_1_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_IGP_1 Register DESC0_0_CPU_IGP_1 - CPU Ingress Port Descriptor 0 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_IGP_1 0x11100
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_0_CPU_IGP_1 0x1E791100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_IGP_1 Register DESC1_0_CPU_IGP_1 - CPU Ingress Port Descriptor 0 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_IGP_1 0x11104
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_0_CPU_IGP_1 0x1E791104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_IGP_1 Register DESC2_0_CPU_IGP_1 - CPU Ingress Port Descriptor 0 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_IGP_1 0x11108
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_0_CPU_IGP_1 0x1E791108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_IGP_1 Register DESC3_0_CPU_IGP_1 - CPU Ingress Port Descriptor 0 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_IGP_1 0x1110C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_0_CPU_IGP_1 0x1E79110Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_IGP_1_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_IGP_1 Register DESC0_1_CPU_IGP_1 - CPU Ingress Port Descriptor 1 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_IGP_1 0x11110
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_1_CPU_IGP_1 0x1E791110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_IGP_1 Register DESC1_1_CPU_IGP_1 - CPU Ingress Port Descriptor 1 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_IGP_1 0x11114
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_1_CPU_IGP_1 0x1E791114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_IGP_1 Register DESC2_1_CPU_IGP_1 - CPU Ingress Port Descriptor 1 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_IGP_1 0x11118
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_1_CPU_IGP_1 0x1E791118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_IGP_1_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_1_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_IGP_1 Register DESC3_1_CPU_IGP_1 - CPU Ingress Port Descriptor 1 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_IGP_1 0x1111C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_1_CPU_IGP_1 0x1E79111Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_IGP_1_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_1_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_1_DESC_MASK 0x7FFFFFFFu
+
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_1_OWN_POS 31
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_1_OWN_MASK 0x80000000u
+
+//! @}
+
+//! \defgroup CFG_CPU_IGP_2 Register CFG_CPU_IGP_2 - CPU Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_IGP_2 0x12000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_CPU_IGP_2 0x1E792000u
+
+//! Register Reset Value
+#define CFG_CPU_IGP_2_RST 0x00000000u
+
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_2_EQREQ_POS 0
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_2_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_EQREQ_EN 0x1
+
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_2_BUFREQS_POS 1
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_2_BUFREQS_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_BUFREQS_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_BUFREQS_EN 0x1
+
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_2_BUFREQJ_POS 2
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_2_BUFREQJ_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_BUFREQJ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_BUFREQJ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_2_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_2_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_2_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_2_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_CPU_IGP_2_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_CPU_IGP_2_BAS_BA1 0x1
+
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_2_BRBPEN_POS 5
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_2_BRBPEN_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_BRBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_BRBPEN_EN 0x1
+
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_2_EQDBPEN_POS 6
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_2_EQDBPEN_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_EQDBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_EQDBPEN_EN 0x1
+
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_2_RCNTBPEN_POS 7
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_2_RCNTBPEN_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_RCNTBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_RCNTBPEN_EN 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_2_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_2_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_2_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_2_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_2_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_2_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_CPU_IGP_2_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_CPU_IGP_2_BP_EN_EN 0x1
+
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_2_RCNTEN_POS 11
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_2_RCNTEN_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_2_RCNTEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_2_RCNTEN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_2_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_2_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_CPU_IGP_2_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_CPU_IGP_2_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_CPU_IGP_2_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_CPU_IGP_2_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_CPU_IGP_2_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_CPU_IGP_2_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_CPU_IGP_2_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_CPU_IGP_2_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_CPU_IGP_2_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_CPU_IGP_2_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_CPU_IGP_2_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_CPU_IGP_2_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_CPU_IGP_2_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_CPU_IGP_2_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_CPU_IGP_2_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_CPU_IGP_2_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_2_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_2_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_CPU_IGP_2 Register WM_CPU_IGP_2 - CPU Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_CPU_IGP_2 0x12004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_CPU_IGP_2 0x1E792004u
+
+//! Register Reset Value
+#define WM_CPU_IGP_2_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_2_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_2_LWM_MASK 0x3FFFu
+
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_2_HWM_POS 16
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_2_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_CPU_IGP_2 Register POCC_CPU_IGP_2 - CPU Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_CPU_IGP_2 0x12008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_CPU_IGP_2 0x1E792008u
+
+//! Register Reset Value
+#define POCC_CPU_IGP_2_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_2_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_2_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_CPU_IGP_2 Register EQPC_CPU_IGP_2 - CPU Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_CPU_IGP_2 0x1200C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_CPU_IGP_2 0x1E79200Cu
+
+//! Register Reset Value
+#define EQPC_CPU_IGP_2_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_2_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_2_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_CPU_IGP_2 Register DISC_DESC0_CPU_IGP_2 - CPU Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_CPU_IGP_2 0x12010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_CPU_IGP_2 0x1E792010u
+
+//! Register Reset Value
+#define DISC_DESC0_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_CPU_IGP_2 Register DISC_DESC1_CPU_IGP_2 - CPU Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_CPU_IGP_2 0x12014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_CPU_IGP_2 0x1E792014u
+
+//! Register Reset Value
+#define DISC_DESC1_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_CPU_IGP_2 Register DISC_DESC2_CPU_IGP_2 - CPU Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_CPU_IGP_2 0x12018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_CPU_IGP_2 0x1E792018u
+
+//! Register Reset Value
+#define DISC_DESC2_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_CPU_IGP_2 Register DISC_DESC3_CPU_IGP_2 - CPU Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_CPU_IGP_2 0x1201C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_CPU_IGP_2 0x1E79201Cu
+
+//! Register Reset Value
+#define DISC_DESC3_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_IGP_2 Register IRNCR_CPU_IGP_2 - CPU Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_IGP_2 0x12020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_CPU_IGP_2 0x1E792020u
+
+//! Register Reset Value
+#define IRNCR_CPU_IGP_2_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_2_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_2_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_2_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_2_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_2_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_2_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_2_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_2_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_2_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_2_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_2_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_2_HWMI_INTACK 0x1
+
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_2_DR_POS 3
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_2_DR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_2_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_2_DR_INTOCC 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_2_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_2_SPR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_2_SPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_2_SPR_INTOCC 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_2_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_2_JPR_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_2_JPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_2_JPR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_IGP_2 Register IRNICR_CPU_IGP_2 - CPU Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_IGP_2 0x12024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_CPU_IGP_2 0x1E792024u
+
+//! Register Reset Value
+#define IRNICR_CPU_IGP_2_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_2_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_2_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_2_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_2_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_2_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_2_HWMI_MASK 0x4u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_2_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_2_DR_MASK 0x8u
+
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_2_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_2_SPR_MASK 0x10u
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_2_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_2_JPR_MASK 0x20u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_IGP_2 Register IRNEN_CPU_IGP_2 - CPU Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_IGP_2 0x12028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_CPU_IGP_2 0x1E792028u
+
+//! Register Reset Value
+#define IRNEN_CPU_IGP_2_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_2_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_2_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_2_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_2_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_2_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_2_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_2_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_2_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_2_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_2_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_2_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_2_HWMI_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_2_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_2_DR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_2_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_2_DR_EN 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_2_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_2_SPR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_2_SPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_2_SPR_EN 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_2_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_2_JPR_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_2_JPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_2_JPR_EN 0x1
+
+//! @}
+
+//! \defgroup RCNT_INC_CPU_IGP_2 Register RCNT_INC_CPU_IGP_2 - CPU Ingress Port Repeat Count Increment
+//! @{
+
+//! Register Offset (relative)
+#define RCNT_INC_CPU_IGP_2 0x12034
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNT_INC_CPU_IGP_2 0x1E792034u
+
+//! Register Reset Value
+#define RCNT_INC_CPU_IGP_2_RST 0xFFFFF800u
+
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_2_DP_POS 11
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_2_DP_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DICC_IGP_2 Register DICC_IGP_2 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_2 0x12038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_2 0x1E792038u
+
+//! Register Reset Value
+#define DICC_IGP_2_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_2_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_2_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup RCNTC_CPU_IGP_2 Register RCNTC_CPU_IGP_2 - CPU Ingress Port enqueue repeat count counter
+//! @{
+
+//! Register Offset (relative)
+#define RCNTC_CPU_IGP_2 0x1203C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNTC_CPU_IGP_2 0x1E79203Cu
+
+//! Register Reset Value
+#define RCNTC_CPU_IGP_2_RST 0x00000000u
+
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_2_RCNTC_POS 0
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_2_RCNTC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NSBPC_CPU_IGP_2 Register NSBPC_CPU_IGP_2 - CPU Ingress Port new standard buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NSBPC_CPU_IGP_2 0x12040
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NSBPC_CPU_IGP_2 0x1E792040u
+
+//! Register Reset Value
+#define NSBPC_CPU_IGP_2_RST 0x00000000u
+
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_2_NSBPC_POS 0
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_2_NSBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NJBPC_CPU_IGP_2 Register NJBPC_CPU_IGP_2 - CPU Ingress Port new jumbo buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NJBPC_CPU_IGP_2 0x12044
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NJBPC_CPU_IGP_2 0x1E792044u
+
+//! Register Reset Value
+#define NJBPC_CPU_IGP_2_RST 0x00000000u
+
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_2_NJBPC_POS 0
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_2_NJBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_2 Register DCNTR_IGP_2 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_2 0x1204C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_2 0x1E79204Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_2_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_2_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_2_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_2_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_2_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup NEW_SPTR_CPU_IGP_2 Register NEW_SPTR_CPU_IGP_2 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR_CPU_IGP_2 0x12080
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR_CPU_IGP_2 0x1E792080u
+
+//! Register Reset Value
+#define NEW_SPTR_CPU_IGP_2_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_2_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_2_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_2_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_2_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_JPTR_CPU_IGP_2 Register NEW_JPTR_CPU_IGP_2 - CPU Ingress Port New Jumbo Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_JPTR_CPU_IGP_2 0x12090
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_JPTR_CPU_IGP_2 0x1E792090u
+
+//! Register Reset Value
+#define NEW_JPTR_CPU_IGP_2_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_2_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_2_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_2_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_2_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_IGP_2 Register DESC0_0_CPU_IGP_2 - CPU Ingress Port Descriptor 0 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_IGP_2 0x12100
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_0_CPU_IGP_2 0x1E792100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_IGP_2 Register DESC1_0_CPU_IGP_2 - CPU Ingress Port Descriptor 0 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_IGP_2 0x12104
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_0_CPU_IGP_2 0x1E792104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_IGP_2 Register DESC2_0_CPU_IGP_2 - CPU Ingress Port Descriptor 0 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_IGP_2 0x12108
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_0_CPU_IGP_2 0x1E792108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_IGP_2 Register DESC3_0_CPU_IGP_2 - CPU Ingress Port Descriptor 0 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_IGP_2 0x1210C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_0_CPU_IGP_2 0x1E79210Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_IGP_2_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_IGP_2 Register DESC0_1_CPU_IGP_2 - CPU Ingress Port Descriptor 1 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_IGP_2 0x12110
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_1_CPU_IGP_2 0x1E792110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_IGP_2 Register DESC1_1_CPU_IGP_2 - CPU Ingress Port Descriptor 1 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_IGP_2 0x12114
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_1_CPU_IGP_2 0x1E792114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_IGP_2 Register DESC2_1_CPU_IGP_2 - CPU Ingress Port Descriptor 1 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_IGP_2 0x12118
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_1_CPU_IGP_2 0x1E792118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_IGP_2_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_2_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_IGP_2 Register DESC3_1_CPU_IGP_2 - CPU Ingress Port Descriptor 1 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_IGP_2 0x1211C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_1_CPU_IGP_2 0x1E79211Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_IGP_2_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_2_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_2_DESC_MASK 0x7FFFFFFFu
+
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_2_OWN_POS 31
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_2_OWN_MASK 0x80000000u
+
+//! @}
+
+//! \defgroup CFG_CPU_IGP_3 Register CFG_CPU_IGP_3 - CPU Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_IGP_3 0x13000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_CPU_IGP_3 0x1E793000u
+
+//! Register Reset Value
+#define CFG_CPU_IGP_3_RST 0x00000000u
+
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_3_EQREQ_POS 0
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_3_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_EQREQ_EN 0x1
+
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_3_BUFREQS_POS 1
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_3_BUFREQS_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_BUFREQS_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_BUFREQS_EN 0x1
+
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_3_BUFREQJ_POS 2
+//! Field BUFREQJ - Enable CPU Buffer Request For Jumbo Size Packet
+#define CFG_CPU_IGP_3_BUFREQJ_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_BUFREQJ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_BUFREQJ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_3_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_3_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_3_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_3_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_CPU_IGP_3_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_CPU_IGP_3_BAS_BA1 0x1
+
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_3_BRBPEN_POS 5
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_3_BRBPEN_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_BRBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_BRBPEN_EN 0x1
+
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_3_EQDBPEN_POS 6
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_3_EQDBPEN_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_EQDBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_EQDBPEN_EN 0x1
+
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_3_RCNTBPEN_POS 7
+//! Field RCNTBPEN - Repeat Count Back Pressure Enable
+#define CFG_CPU_IGP_3_RCNTBPEN_MASK 0x80u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_RCNTBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_RCNTBPEN_EN 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_3_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_3_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_3_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_3_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_3_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_3_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_CPU_IGP_3_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_CPU_IGP_3_BP_EN_EN 0x1
+
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_3_RCNTEN_POS 11
+//! Field RCNTEN - Enable CPU Repeat Count Request
+#define CFG_CPU_IGP_3_RCNTEN_MASK 0x800u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_3_RCNTEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_3_RCNTEN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_3_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_3_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_CPU_IGP_3_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_CPU_IGP_3_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_CPU_IGP_3_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_CPU_IGP_3_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_CPU_IGP_3_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_CPU_IGP_3_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_CPU_IGP_3_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_CPU_IGP_3_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_CPU_IGP_3_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_CPU_IGP_3_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_CPU_IGP_3_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_CPU_IGP_3_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_CPU_IGP_3_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_CPU_IGP_3_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_CPU_IGP_3_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_CPU_IGP_3_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_3_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_3_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_CPU_IGP_3 Register WM_CPU_IGP_3 - CPU Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_CPU_IGP_3 0x13004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_CPU_IGP_3 0x1E793004u
+
+//! Register Reset Value
+#define WM_CPU_IGP_3_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_3_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_3_LWM_MASK 0x3FFFu
+
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_3_HWM_POS 16
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_3_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_CPU_IGP_3 Register POCC_CPU_IGP_3 - CPU Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_CPU_IGP_3 0x13008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_CPU_IGP_3 0x1E793008u
+
+//! Register Reset Value
+#define POCC_CPU_IGP_3_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_3_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_3_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_CPU_IGP_3 Register EQPC_CPU_IGP_3 - CPU Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_CPU_IGP_3 0x1300C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_CPU_IGP_3 0x1E79300Cu
+
+//! Register Reset Value
+#define EQPC_CPU_IGP_3_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_3_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_3_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_CPU_IGP_3 Register DISC_DESC0_CPU_IGP_3 - CPU Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_CPU_IGP_3 0x13010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_CPU_IGP_3 0x1E793010u
+
+//! Register Reset Value
+#define DISC_DESC0_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_CPU_IGP_3 Register DISC_DESC1_CPU_IGP_3 - CPU Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_CPU_IGP_3 0x13014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_CPU_IGP_3 0x1E793014u
+
+//! Register Reset Value
+#define DISC_DESC1_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_CPU_IGP_3 Register DISC_DESC2_CPU_IGP_3 - CPU Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_CPU_IGP_3 0x13018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_CPU_IGP_3 0x1E793018u
+
+//! Register Reset Value
+#define DISC_DESC2_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_CPU_IGP_3 Register DISC_DESC3_CPU_IGP_3 - CPU Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_CPU_IGP_3 0x1301C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_CPU_IGP_3 0x1E79301Cu
+
+//! Register Reset Value
+#define DISC_DESC3_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_IGP_3 Register IRNCR_CPU_IGP_3 - CPU Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_IGP_3 0x13020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_CPU_IGP_3 0x1E793020u
+
+//! Register Reset Value
+#define IRNCR_CPU_IGP_3_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_3_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_3_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_3_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_3_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_3_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_3_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_3_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_3_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_3_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_3_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_3_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_3_HWMI_INTACK 0x1
+
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_3_DR_POS 3
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_3_DR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_3_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_3_DR_INTOCC 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_3_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_3_SPR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_3_SPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_3_SPR_INTOCC 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_3_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNCR_CPU_IGP_3_JPR_MASK 0x20u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_3_JPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_3_JPR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_IGP_3 Register IRNICR_CPU_IGP_3 - CPU Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_IGP_3 0x13024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_CPU_IGP_3 0x1E793024u
+
+//! Register Reset Value
+#define IRNICR_CPU_IGP_3_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_3_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_3_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_3_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_3_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_3_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_3_HWMI_MASK 0x4u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_3_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_3_DR_MASK 0x8u
+
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_3_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_3_SPR_MASK 0x10u
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_3_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNICR_CPU_IGP_3_JPR_MASK 0x20u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_IGP_3 Register IRNEN_CPU_IGP_3 - CPU Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_IGP_3 0x13028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_CPU_IGP_3 0x1E793028u
+
+//! Register Reset Value
+#define IRNEN_CPU_IGP_3_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_3_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_3_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_3_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_3_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_3_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_3_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_3_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_3_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_3_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_3_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_3_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_3_HWMI_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_3_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_3_DR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_3_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_3_DR_EN 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_3_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_3_SPR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_3_SPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_3_SPR_EN 0x1
+
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_3_JPR_POS 5
+//! Field JPR - Jumbo Pointer Ready
+#define IRNEN_CPU_IGP_3_JPR_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_3_JPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_3_JPR_EN 0x1
+
+//! @}
+
+//! \defgroup RCNT_INC_CPU_IGP_3 Register RCNT_INC_CPU_IGP_3 - CPU Ingress Port Repeat Count Increment
+//! @{
+
+//! Register Offset (relative)
+#define RCNT_INC_CPU_IGP_3 0x13034
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNT_INC_CPU_IGP_3 0x1E793034u
+
+//! Register Reset Value
+#define RCNT_INC_CPU_IGP_3_RST 0xFFFFF800u
+
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_3_DP_POS 11
+//! Field DP - Data Pointer
+#define RCNT_INC_CPU_IGP_3_DP_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DICC_IGP_3 Register DICC_IGP_3 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_3 0x13038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_3 0x1E793038u
+
+//! Register Reset Value
+#define DICC_IGP_3_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_3_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_3_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup RCNTC_CPU_IGP_3 Register RCNTC_CPU_IGP_3 - CPU Ingress Port enqueue repeat count counter
+//! @{
+
+//! Register Offset (relative)
+#define RCNTC_CPU_IGP_3 0x1303C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_RCNTC_CPU_IGP_3 0x1E79303Cu
+
+//! Register Reset Value
+#define RCNTC_CPU_IGP_3_RST 0x00000000u
+
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_3_RCNTC_POS 0
+//! Field RCNTC - Per CPU Port Repeat Count Counter
+#define RCNTC_CPU_IGP_3_RCNTC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NSBPC_CPU_IGP_3 Register NSBPC_CPU_IGP_3 - CPU Ingress Port new standard buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NSBPC_CPU_IGP_3 0x13040
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NSBPC_CPU_IGP_3 0x1E793040u
+
+//! Register Reset Value
+#define NSBPC_CPU_IGP_3_RST 0x00000000u
+
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_3_NSBPC_POS 0
+//! Field NSBPC - Per CPU New Standard Buffer Pointer Counter
+#define NSBPC_CPU_IGP_3_NSBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup NJBPC_CPU_IGP_3 Register NJBPC_CPU_IGP_3 - CPU Ingress Port new jumbo buffer pointer counter
+//! @{
+
+//! Register Offset (relative)
+#define NJBPC_CPU_IGP_3 0x13044
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NJBPC_CPU_IGP_3 0x1E793044u
+
+//! Register Reset Value
+#define NJBPC_CPU_IGP_3_RST 0x00000000u
+
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_3_NJBPC_POS 0
+//! Field NJBPC - Per CPU New Jumbo Buffer Pointer Counter
+#define NJBPC_CPU_IGP_3_NJBPC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_3 Register DCNTR_IGP_3 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_3 0x1304C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_3 0x1E79304Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_3_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_3_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_3_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_3_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_3_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup NEW_SPTR_CPU_IGP_3 Register NEW_SPTR_CPU_IGP_3 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR_CPU_IGP_3 0x13080
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR_CPU_IGP_3 0x1E793080u
+
+//! Register Reset Value
+#define NEW_SPTR_CPU_IGP_3_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_3_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR_CPU_IGP_3_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_3_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR_CPU_IGP_3_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_JPTR_CPU_IGP_3 Register NEW_JPTR_CPU_IGP_3 - CPU Ingress Port New Jumbo Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_JPTR_CPU_IGP_3 0x13090
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_JPTR_CPU_IGP_3 0x1E793090u
+
+//! Register Reset Value
+#define NEW_JPTR_CPU_IGP_3_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_3_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_JPTR_CPU_IGP_3_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_3_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_JPTR_CPU_IGP_3_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_IGP_3 Register DESC0_0_CPU_IGP_3 - CPU Ingress Port Descriptor 0 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_IGP_3 0x13100
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_0_CPU_IGP_3 0x1E793100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_IGP_3 Register DESC1_0_CPU_IGP_3 - CPU Ingress Port Descriptor 0 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_IGP_3 0x13104
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_0_CPU_IGP_3 0x1E793104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_IGP_3 Register DESC2_0_CPU_IGP_3 - CPU Ingress Port Descriptor 0 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_IGP_3 0x13108
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_0_CPU_IGP_3 0x1E793108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_IGP_3 Register DESC3_0_CPU_IGP_3 - CPU Ingress Port Descriptor 0 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_IGP_3 0x1310C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_0_CPU_IGP_3 0x1E79310Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_IGP_3_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_IGP_3 Register DESC0_1_CPU_IGP_3 - CPU Ingress Port Descriptor 1 DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_IGP_3 0x13110
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_1_CPU_IGP_3 0x1E793110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_IGP_3 Register DESC1_1_CPU_IGP_3 - CPU Ingress Port Descriptor 1 DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_IGP_3 0x13114
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_1_CPU_IGP_3 0x1E793114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_IGP_3 Register DESC2_1_CPU_IGP_3 - CPU Ingress Port Descriptor 1 DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_IGP_3 0x13118
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_1_CPU_IGP_3 0x1E793118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_IGP_3_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_3_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_IGP_3 Register DESC3_1_CPU_IGP_3 - CPU Ingress Port Descriptor 1 DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_IGP_3 0x1311C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_1_CPU_IGP_3 0x1E79311Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_IGP_3_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_3_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_3_DESC_MASK 0x7FFFFFFFu
+
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_3_OWN_POS 31
+//! Field OWN - OWN bit
+#define DESC3_1_CPU_IGP_3_OWN_MASK 0x80000000u
+
+//! @}
+
+//! \defgroup CFG_CPU_IGP_4 Register CFG_CPU_IGP_4 - Special CPU Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_CPU_IGP_4 0x14000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_CPU_IGP_4 0x1E794000u
+
+//! Register Reset Value
+#define CFG_CPU_IGP_4_RST 0x00000000u
+
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_4_EQREQ_POS 0
+//! Field EQREQ - Enable CPU Enqueue Request
+#define CFG_CPU_IGP_4_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_EQREQ_EN 0x1
+
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_4_BUFREQS_POS 1
+//! Field BUFREQS - Enable CPU Buffer Request For Standard Size Packet
+#define CFG_CPU_IGP_4_BUFREQS_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_BUFREQS_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_BUFREQS_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_4_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_CPU_IGP_4_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_4_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_CPU_IGP_4_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_CPU_IGP_4_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_CPU_IGP_4_BAS_BA1 0x1
+
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_4_BRBPEN_POS 5
+//! Field BRBPEN - Buffer Request Back Pressure Enable
+#define CFG_CPU_IGP_4_BRBPEN_MASK 0x20u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_BRBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_BRBPEN_EN 0x1
+
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_4_EQDBPEN_POS 6
+//! Field EQDBPEN - Enqueue Descriptor Back Pressure Enable
+#define CFG_CPU_IGP_4_EQDBPEN_MASK 0x40u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_EQDBPEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_EQDBPEN_EN 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_4_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_CPU_IGP_4_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_4_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_CPU_IGP_4_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_CPU_IGP_4_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_CPU_IGP_4_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_4_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_CPU_IGP_4_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_CPU_IGP_4_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_CPU_IGP_4_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_4_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_CPU_IGP_4_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_CPU_IGP_4_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_CPU_IGP_4_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_CPU_IGP_4_DISC_REASON2 0x2
+//! Constant RES - Reserved
+#define CONST_CFG_CPU_IGP_4_DISC_RES 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_CPU_IGP_4_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_CPU_IGP_4_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_CPU_IGP_4_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_CPU_IGP_4_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_CPU_IGP_4_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_CPU_IGP_4_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_CPU_IGP_4_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_CPU_IGP_4_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_CPU_IGP_4_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_CPU_IGP_4_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_CPU_IGP_4_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_CPU_IGP_4_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_4_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_CPU_IGP_4_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_CPU_IGP_4 Register WM_CPU_IGP_4 - CPU Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_CPU_IGP_4 0x14004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_CPU_IGP_4 0x1E794004u
+
+//! Register Reset Value
+#define WM_CPU_IGP_4_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_4_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_CPU_IGP_4_LWM_MASK 0x3FFFu
+
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_4_HWM_POS 16
+//! Field HWM - High watermark threshold
+#define WM_CPU_IGP_4_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_CPU_IGP_4 Register POCC_CPU_IGP_4 - CPU Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_CPU_IGP_4 0x14008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_CPU_IGP_4 0x1E794008u
+
+//! Register Reset Value
+#define POCC_CPU_IGP_4_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_4_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_CPU_IGP_4_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_CPU_IGP_4 Register EQPC_CPU_IGP_4 - CPU Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_CPU_IGP_4 0x1400C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_CPU_IGP_4 0x1E79400Cu
+
+//! Register Reset Value
+#define EQPC_CPU_IGP_4_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_4_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_CPU_IGP_4_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_CPU_IGP_4 Register DISC_DESC0_CPU_IGP_4 - CPU Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_CPU_IGP_4 0x14010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_CPU_IGP_4 0x1E794010u
+
+//! Register Reset Value
+#define DISC_DESC0_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_CPU_IGP_4 Register DISC_DESC1_CPU_IGP_4 - CPU Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_CPU_IGP_4 0x14014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_CPU_IGP_4 0x1E794014u
+
+//! Register Reset Value
+#define DISC_DESC1_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_CPU_IGP_4 Register DISC_DESC2_CPU_IGP_4 - CPU Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_CPU_IGP_4 0x14018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_CPU_IGP_4 0x1E794018u
+
+//! Register Reset Value
+#define DISC_DESC2_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_CPU_IGP_4 Register DISC_DESC3_CPU_IGP_4 - CPU Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_CPU_IGP_4 0x1401C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_CPU_IGP_4 0x1E79401Cu
+
+//! Register Reset Value
+#define DISC_DESC3_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_CPU_IGP_4 Register IRNCR_CPU_IGP_4 - Special CPU Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_CPU_IGP_4 0x14020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_CPU_IGP_4 0x1E794020u
+
+//! Register Reset Value
+#define IRNCR_CPU_IGP_4_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_4_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_CPU_IGP_4_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_4_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_4_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_4_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_CPU_IGP_4_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_4_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_4_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_4_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_CPU_IGP_4_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_4_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_CPU_IGP_4_HWMI_INTACK 0x1
+
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_4_DR_POS 3
+//! Field DR - Descriptor ready
+#define IRNCR_CPU_IGP_4_DR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_4_DR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_4_DR_INTOCC 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_4_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNCR_CPU_IGP_4_SPR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_CPU_IGP_4_SPR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_CPU_IGP_4_SPR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_CPU_IGP_4 Register IRNICR_CPU_IGP_4 - Special CPU Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_CPU_IGP_4 0x14024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_CPU_IGP_4 0x1E794024u
+
+//! Register Reset Value
+#define IRNICR_CPU_IGP_4_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_4_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_CPU_IGP_4_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_4_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_CPU_IGP_4_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_4_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_CPU_IGP_4_HWMI_MASK 0x4u
+
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_4_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNICR_CPU_IGP_4_DR_MASK 0x8u
+
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_4_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNICR_CPU_IGP_4_SPR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_CPU_IGP_4 Register IRNEN_CPU_IGP_4 - Special CPU Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_CPU_IGP_4 0x14028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_CPU_IGP_4 0x1E794028u
+
+//! Register Reset Value
+#define IRNEN_CPU_IGP_4_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_4_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_CPU_IGP_4_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_4_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_4_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_4_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_CPU_IGP_4_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_4_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_4_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_4_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_CPU_IGP_4_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_4_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_4_HWMI_EN 0x1
+
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_4_DR_POS 3
+//! Field DR - Descriptor Ready
+#define IRNEN_CPU_IGP_4_DR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_4_DR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_4_DR_EN 0x1
+
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_4_SPR_POS 4
+//! Field SPR - Standard Pointer Ready
+#define IRNEN_CPU_IGP_4_SPR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_CPU_IGP_4_SPR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_CPU_IGP_4_SPR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_CPU_IGP_4 Register DPTR_CPU_IGP_4 - Special CPU Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_CPU_IGP_4 0x14030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_CPU_IGP_4 0x1E794030u
+
+//! Register Reset Value
+#define DPTR_CPU_IGP_4_RST 0x0000001Fu
+
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_IGP_4_ND_POS 0
+//! Field ND - Number of Descriptors
+#define DPTR_CPU_IGP_4_ND_MASK 0x1Fu
+
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_IGP_4_DPTR_POS 16
+//! Field DPTR - Descriptor Pointer
+#define DPTR_CPU_IGP_4_DPTR_MASK 0x1F0000u
+
+//! @}
+
+//! \defgroup NEW_SPTR0_CPU_IGP_4 Register NEW_SPTR0_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR0_CPU_IGP_4 0x14080
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR0_CPU_IGP_4 0x1E794080u
+
+//! Register Reset Value
+#define NEW_SPTR0_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR0_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR0_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR0_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR0_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR1_CPU_IGP_4 Register NEW_SPTR1_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR1_CPU_IGP_4 0x14084
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR1_CPU_IGP_4 0x1E794084u
+
+//! Register Reset Value
+#define NEW_SPTR1_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR1_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR1_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR1_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR1_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR2_CPU_IGP_4 Register NEW_SPTR2_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR2_CPU_IGP_4 0x14088
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR2_CPU_IGP_4 0x1E794088u
+
+//! Register Reset Value
+#define NEW_SPTR2_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR2_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR2_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR2_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR2_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR3_CPU_IGP_4 Register NEW_SPTR3_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR3_CPU_IGP_4 0x1408C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR3_CPU_IGP_4 0x1E79408Cu
+
+//! Register Reset Value
+#define NEW_SPTR3_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR3_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR3_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR3_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR3_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR4_CPU_IGP_4 Register NEW_SPTR4_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR4_CPU_IGP_4 0x14090
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR4_CPU_IGP_4 0x1E794090u
+
+//! Register Reset Value
+#define NEW_SPTR4_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR4_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR4_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR4_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR4_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR5_CPU_IGP_4 Register NEW_SPTR5_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR5_CPU_IGP_4 0x14094
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR5_CPU_IGP_4 0x1E794094u
+
+//! Register Reset Value
+#define NEW_SPTR5_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR5_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR5_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR5_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR5_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR6_CPU_IGP_4 Register NEW_SPTR6_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR6_CPU_IGP_4 0x14098
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR6_CPU_IGP_4 0x1E794098u
+
+//! Register Reset Value
+#define NEW_SPTR6_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR6_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR6_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR6_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR6_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR7_CPU_IGP_4 Register NEW_SPTR7_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR7_CPU_IGP_4 0x1409C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR7_CPU_IGP_4 0x1E79409Cu
+
+//! Register Reset Value
+#define NEW_SPTR7_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR7_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR7_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR7_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR7_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR8_CPU_IGP_4 Register NEW_SPTR8_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR8_CPU_IGP_4 0x140A0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR8_CPU_IGP_4 0x1E7940A0u
+
+//! Register Reset Value
+#define NEW_SPTR8_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR8_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR8_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR8_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR8_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR9_CPU_IGP_4 Register NEW_SPTR9_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR9_CPU_IGP_4 0x140A4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR9_CPU_IGP_4 0x1E7940A4u
+
+//! Register Reset Value
+#define NEW_SPTR9_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR9_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR9_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR9_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR9_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR10_CPU_IGP_4 Register NEW_SPTR10_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR10_CPU_IGP_4 0x140A8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR10_CPU_IGP_4 0x1E7940A8u
+
+//! Register Reset Value
+#define NEW_SPTR10_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR10_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR10_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR10_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR10_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR11_CPU_IGP_4 Register NEW_SPTR11_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR11_CPU_IGP_4 0x140AC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR11_CPU_IGP_4 0x1E7940ACu
+
+//! Register Reset Value
+#define NEW_SPTR11_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR11_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR11_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR11_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR11_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR12_CPU_IGP_4 Register NEW_SPTR12_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR12_CPU_IGP_4 0x140B0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR12_CPU_IGP_4 0x1E7940B0u
+
+//! Register Reset Value
+#define NEW_SPTR12_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR12_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR12_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR12_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR12_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR13_CPU_IGP_4 Register NEW_SPTR13_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR13_CPU_IGP_4 0x140B4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR13_CPU_IGP_4 0x1E7940B4u
+
+//! Register Reset Value
+#define NEW_SPTR13_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR13_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR13_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR13_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR13_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR14_CPU_IGP_4 Register NEW_SPTR14_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR14_CPU_IGP_4 0x140B8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR14_CPU_IGP_4 0x1E7940B8u
+
+//! Register Reset Value
+#define NEW_SPTR14_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR14_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR14_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR14_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR14_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR15_CPU_IGP_4 Register NEW_SPTR15_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR15_CPU_IGP_4 0x140BC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR15_CPU_IGP_4 0x1E7940BCu
+
+//! Register Reset Value
+#define NEW_SPTR15_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR15_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR15_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR15_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR15_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR16_CPU_IGP_4 Register NEW_SPTR16_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR16_CPU_IGP_4 0x140C0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR16_CPU_IGP_4 0x1E7940C0u
+
+//! Register Reset Value
+#define NEW_SPTR16_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR16_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR16_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR16_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR16_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR17_CPU_IGP_4 Register NEW_SPTR17_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR17_CPU_IGP_4 0x140C4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR17_CPU_IGP_4 0x1E7940C4u
+
+//! Register Reset Value
+#define NEW_SPTR17_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR17_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR17_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR17_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR17_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR18_CPU_IGP_4 Register NEW_SPTR18_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR18_CPU_IGP_4 0x140C8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR18_CPU_IGP_4 0x1E7940C8u
+
+//! Register Reset Value
+#define NEW_SPTR18_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR18_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR18_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR18_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR18_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR19_CPU_IGP_4 Register NEW_SPTR19_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR19_CPU_IGP_4 0x140CC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR19_CPU_IGP_4 0x1E7940CCu
+
+//! Register Reset Value
+#define NEW_SPTR19_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR19_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR19_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR19_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR19_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR20_CPU_IGP_4 Register NEW_SPTR20_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR20_CPU_IGP_4 0x140D0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR20_CPU_IGP_4 0x1E7940D0u
+
+//! Register Reset Value
+#define NEW_SPTR20_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR20_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR20_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR20_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR20_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR21_CPU_IGP_4 Register NEW_SPTR21_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR21_CPU_IGP_4 0x140D4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR21_CPU_IGP_4 0x1E7940D4u
+
+//! Register Reset Value
+#define NEW_SPTR21_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR21_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR21_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR21_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR21_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR22_CPU_IGP_4 Register NEW_SPTR22_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR22_CPU_IGP_4 0x140D8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR22_CPU_IGP_4 0x1E7940D8u
+
+//! Register Reset Value
+#define NEW_SPTR22_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR22_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR22_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR22_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR22_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR23_CPU_IGP_4 Register NEW_SPTR23_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR23_CPU_IGP_4 0x140DC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR23_CPU_IGP_4 0x1E7940DCu
+
+//! Register Reset Value
+#define NEW_SPTR23_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR23_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR23_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR23_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR23_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR24_CPU_IGP_4 Register NEW_SPTR24_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR24_CPU_IGP_4 0x140E0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR24_CPU_IGP_4 0x1E7940E0u
+
+//! Register Reset Value
+#define NEW_SPTR24_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR24_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR24_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR24_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR24_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR25_CPU_IGP_4 Register NEW_SPTR25_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR25_CPU_IGP_4 0x140E4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR25_CPU_IGP_4 0x1E7940E4u
+
+//! Register Reset Value
+#define NEW_SPTR25_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR25_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR25_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR25_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR25_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR26_CPU_IGP_4 Register NEW_SPTR26_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR26_CPU_IGP_4 0x140E8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR26_CPU_IGP_4 0x1E7940E8u
+
+//! Register Reset Value
+#define NEW_SPTR26_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR26_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR26_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR26_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR26_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR27_CPU_IGP_4 Register NEW_SPTR27_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR27_CPU_IGP_4 0x140EC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR27_CPU_IGP_4 0x1E7940ECu
+
+//! Register Reset Value
+#define NEW_SPTR27_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR27_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR27_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR27_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR27_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR28_CPU_IGP_4 Register NEW_SPTR28_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR28_CPU_IGP_4 0x140F0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR28_CPU_IGP_4 0x1E7940F0u
+
+//! Register Reset Value
+#define NEW_SPTR28_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR28_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR28_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR28_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR28_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR29_CPU_IGP_4 Register NEW_SPTR29_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR29_CPU_IGP_4 0x140F4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR29_CPU_IGP_4 0x1E7940F4u
+
+//! Register Reset Value
+#define NEW_SPTR29_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR29_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR29_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR29_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR29_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR30_CPU_IGP_4 Register NEW_SPTR30_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR30_CPU_IGP_4 0x140F8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR30_CPU_IGP_4 0x1E7940F8u
+
+//! Register Reset Value
+#define NEW_SPTR30_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR30_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR30_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR30_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR30_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup NEW_SPTR31_CPU_IGP_4 Register NEW_SPTR31_CPU_IGP_4 - CPU Ingress Port New Standard Buffer Pointer
+//! @{
+
+//! Register Offset (relative)
+#define NEW_SPTR31_CPU_IGP_4 0x140FC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_NEW_SPTR31_CPU_IGP_4 0x1E7940FCu
+
+//! Register Reset Value
+#define NEW_SPTR31_CPU_IGP_4_RST 0xFFFFF800u
+
+//! Field OFFSET - Offset
+#define NEW_SPTR31_CPU_IGP_4_OFFSET_POS 0
+//! Field OFFSET - Offset
+#define NEW_SPTR31_CPU_IGP_4_OFFSET_MASK 0x7FFu
+
+//! Field SA - Segment Address
+#define NEW_SPTR31_CPU_IGP_4_SA_POS 11
+//! Field SA - Segment Address
+#define NEW_SPTR31_CPU_IGP_4_SA_MASK 0xFFFFF800u
+
+//! @}
+
+//! \defgroup DESC0_0_CPU_IGP_4 Register DESC0_0_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_0_CPU_IGP_4 0x14100
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_0_CPU_IGP_4 0x1E794100u
+
+//! Register Reset Value
+#define DESC0_0_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_0_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_0_CPU_IGP_4 Register DESC1_0_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_0_CPU_IGP_4 0x14104
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_0_CPU_IGP_4 0x1E794104u
+
+//! Register Reset Value
+#define DESC1_0_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_0_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_0_CPU_IGP_4 Register DESC2_0_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_0_CPU_IGP_4 0x14108
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_0_CPU_IGP_4 0x1E794108u
+
+//! Register Reset Value
+#define DESC2_0_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_0_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_0_CPU_IGP_4 Register DESC3_0_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_0_CPU_IGP_4 0x1410C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_0_CPU_IGP_4 0x1E79410Cu
+
+//! Register Reset Value
+#define DESC3_0_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_0_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_1_CPU_IGP_4 Register DESC0_1_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_1_CPU_IGP_4 0x14110
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_1_CPU_IGP_4 0x1E794110u
+
+//! Register Reset Value
+#define DESC0_1_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_1_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_1_CPU_IGP_4 Register DESC1_1_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_1_CPU_IGP_4 0x14114
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_1_CPU_IGP_4 0x1E794114u
+
+//! Register Reset Value
+#define DESC1_1_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_1_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_1_CPU_IGP_4 Register DESC2_1_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_1_CPU_IGP_4 0x14118
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_1_CPU_IGP_4 0x1E794118u
+
+//! Register Reset Value
+#define DESC2_1_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_1_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_1_CPU_IGP_4 Register DESC3_1_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_1_CPU_IGP_4 0x1411C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_1_CPU_IGP_4 0x1E79411Cu
+
+//! Register Reset Value
+#define DESC3_1_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_1_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_2_CPU_IGP_4 Register DESC0_2_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_2_CPU_IGP_4 0x14120
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_2_CPU_IGP_4 0x1E794120u
+
+//! Register Reset Value
+#define DESC0_2_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_2_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_2_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_2_CPU_IGP_4 Register DESC1_2_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_2_CPU_IGP_4 0x14124
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_2_CPU_IGP_4 0x1E794124u
+
+//! Register Reset Value
+#define DESC1_2_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_2_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_2_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_2_CPU_IGP_4 Register DESC2_2_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_2_CPU_IGP_4 0x14128
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_2_CPU_IGP_4 0x1E794128u
+
+//! Register Reset Value
+#define DESC2_2_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_2_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_2_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_2_CPU_IGP_4 Register DESC3_2_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_2_CPU_IGP_4 0x1412C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_2_CPU_IGP_4 0x1E79412Cu
+
+//! Register Reset Value
+#define DESC3_2_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_2_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_2_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_3_CPU_IGP_4 Register DESC0_3_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_3_CPU_IGP_4 0x14130
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_3_CPU_IGP_4 0x1E794130u
+
+//! Register Reset Value
+#define DESC0_3_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_3_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_3_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_3_CPU_IGP_4 Register DESC1_3_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_3_CPU_IGP_4 0x14134
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_3_CPU_IGP_4 0x1E794134u
+
+//! Register Reset Value
+#define DESC1_3_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_3_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_3_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_3_CPU_IGP_4 Register DESC2_3_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_3_CPU_IGP_4 0x14138
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_3_CPU_IGP_4 0x1E794138u
+
+//! Register Reset Value
+#define DESC2_3_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_3_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_3_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_3_CPU_IGP_4 Register DESC3_3_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_3_CPU_IGP_4 0x1413C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_3_CPU_IGP_4 0x1E79413Cu
+
+//! Register Reset Value
+#define DESC3_3_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_3_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_3_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_4_CPU_IGP_4 Register DESC0_4_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_4_CPU_IGP_4 0x14140
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_4_CPU_IGP_4 0x1E794140u
+
+//! Register Reset Value
+#define DESC0_4_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_4_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_4_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_4_CPU_IGP_4 Register DESC1_4_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_4_CPU_IGP_4 0x14144
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_4_CPU_IGP_4 0x1E794144u
+
+//! Register Reset Value
+#define DESC1_4_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_4_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_4_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_4_CPU_IGP_4 Register DESC2_4_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_4_CPU_IGP_4 0x14148
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_4_CPU_IGP_4 0x1E794148u
+
+//! Register Reset Value
+#define DESC2_4_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_4_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_4_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_4_CPU_IGP_4 Register DESC3_4_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_4_CPU_IGP_4 0x1414C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_4_CPU_IGP_4 0x1E79414Cu
+
+//! Register Reset Value
+#define DESC3_4_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_4_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_4_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_5_CPU_IGP_4 Register DESC0_5_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_5_CPU_IGP_4 0x14150
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_5_CPU_IGP_4 0x1E794150u
+
+//! Register Reset Value
+#define DESC0_5_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_5_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_5_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_5_CPU_IGP_4 Register DESC1_5_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_5_CPU_IGP_4 0x14154
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_5_CPU_IGP_4 0x1E794154u
+
+//! Register Reset Value
+#define DESC1_5_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_5_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_5_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_5_CPU_IGP_4 Register DESC2_5_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_5_CPU_IGP_4 0x14158
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_5_CPU_IGP_4 0x1E794158u
+
+//! Register Reset Value
+#define DESC2_5_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_5_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_5_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_5_CPU_IGP_4 Register DESC3_5_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_5_CPU_IGP_4 0x1415C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_5_CPU_IGP_4 0x1E79415Cu
+
+//! Register Reset Value
+#define DESC3_5_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_5_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_5_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_6_CPU_IGP_4 Register DESC0_6_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_6_CPU_IGP_4 0x14160
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_6_CPU_IGP_4 0x1E794160u
+
+//! Register Reset Value
+#define DESC0_6_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_6_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_6_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_6_CPU_IGP_4 Register DESC1_6_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_6_CPU_IGP_4 0x14164
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_6_CPU_IGP_4 0x1E794164u
+
+//! Register Reset Value
+#define DESC1_6_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_6_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_6_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_6_CPU_IGP_4 Register DESC2_6_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_6_CPU_IGP_4 0x14168
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_6_CPU_IGP_4 0x1E794168u
+
+//! Register Reset Value
+#define DESC2_6_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_6_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_6_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_6_CPU_IGP_4 Register DESC3_6_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_6_CPU_IGP_4 0x1416C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_6_CPU_IGP_4 0x1E79416Cu
+
+//! Register Reset Value
+#define DESC3_6_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_6_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_6_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_7_CPU_IGP_4 Register DESC0_7_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_7_CPU_IGP_4 0x14170
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_7_CPU_IGP_4 0x1E794170u
+
+//! Register Reset Value
+#define DESC0_7_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_7_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_7_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_7_CPU_IGP_4 Register DESC1_7_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_7_CPU_IGP_4 0x14174
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_7_CPU_IGP_4 0x1E794174u
+
+//! Register Reset Value
+#define DESC1_7_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_7_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_7_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_7_CPU_IGP_4 Register DESC2_7_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_7_CPU_IGP_4 0x14178
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_7_CPU_IGP_4 0x1E794178u
+
+//! Register Reset Value
+#define DESC2_7_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_7_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_7_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_7_CPU_IGP_4 Register DESC3_7_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_7_CPU_IGP_4 0x1417C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_7_CPU_IGP_4 0x1E79417Cu
+
+//! Register Reset Value
+#define DESC3_7_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_7_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_7_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_8_CPU_IGP_4 Register DESC0_8_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_8_CPU_IGP_4 0x14180
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_8_CPU_IGP_4 0x1E794180u
+
+//! Register Reset Value
+#define DESC0_8_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_8_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_8_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_8_CPU_IGP_4 Register DESC1_8_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_8_CPU_IGP_4 0x14184
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_8_CPU_IGP_4 0x1E794184u
+
+//! Register Reset Value
+#define DESC1_8_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_8_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_8_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_8_CPU_IGP_4 Register DESC2_8_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_8_CPU_IGP_4 0x14188
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_8_CPU_IGP_4 0x1E794188u
+
+//! Register Reset Value
+#define DESC2_8_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_8_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_8_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_8_CPU_IGP_4 Register DESC3_8_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_8_CPU_IGP_4 0x1418C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_8_CPU_IGP_4 0x1E79418Cu
+
+//! Register Reset Value
+#define DESC3_8_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_8_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_8_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_9_CPU_IGP_4 Register DESC0_9_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_9_CPU_IGP_4 0x14190
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_9_CPU_IGP_4 0x1E794190u
+
+//! Register Reset Value
+#define DESC0_9_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_9_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_9_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_9_CPU_IGP_4 Register DESC1_9_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_9_CPU_IGP_4 0x14194
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_9_CPU_IGP_4 0x1E794194u
+
+//! Register Reset Value
+#define DESC1_9_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_9_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_9_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_9_CPU_IGP_4 Register DESC2_9_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_9_CPU_IGP_4 0x14198
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_9_CPU_IGP_4 0x1E794198u
+
+//! Register Reset Value
+#define DESC2_9_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_9_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_9_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_9_CPU_IGP_4 Register DESC3_9_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_9_CPU_IGP_4 0x1419C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_9_CPU_IGP_4 0x1E79419Cu
+
+//! Register Reset Value
+#define DESC3_9_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_9_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_9_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_10_CPU_IGP_4 Register DESC0_10_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_10_CPU_IGP_4 0x141A0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_10_CPU_IGP_4 0x1E7941A0u
+
+//! Register Reset Value
+#define DESC0_10_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_10_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_10_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_10_CPU_IGP_4 Register DESC1_10_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_10_CPU_IGP_4 0x141A4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_10_CPU_IGP_4 0x1E7941A4u
+
+//! Register Reset Value
+#define DESC1_10_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_10_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_10_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_10_CPU_IGP_4 Register DESC2_10_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_10_CPU_IGP_4 0x141A8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_10_CPU_IGP_4 0x1E7941A8u
+
+//! Register Reset Value
+#define DESC2_10_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_10_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_10_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_10_CPU_IGP_4 Register DESC3_10_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_10_CPU_IGP_4 0x141AC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_10_CPU_IGP_4 0x1E7941ACu
+
+//! Register Reset Value
+#define DESC3_10_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_10_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_10_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_11_CPU_IGP_4 Register DESC0_11_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_11_CPU_IGP_4 0x141B0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_11_CPU_IGP_4 0x1E7941B0u
+
+//! Register Reset Value
+#define DESC0_11_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_11_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_11_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_11_CPU_IGP_4 Register DESC1_11_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_11_CPU_IGP_4 0x141B4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_11_CPU_IGP_4 0x1E7941B4u
+
+//! Register Reset Value
+#define DESC1_11_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_11_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_11_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_11_CPU_IGP_4 Register DESC2_11_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_11_CPU_IGP_4 0x141B8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_11_CPU_IGP_4 0x1E7941B8u
+
+//! Register Reset Value
+#define DESC2_11_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_11_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_11_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_11_CPU_IGP_4 Register DESC3_11_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_11_CPU_IGP_4 0x141BC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_11_CPU_IGP_4 0x1E7941BCu
+
+//! Register Reset Value
+#define DESC3_11_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_11_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_11_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_12_CPU_IGP_4 Register DESC0_12_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_12_CPU_IGP_4 0x141C0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_12_CPU_IGP_4 0x1E7941C0u
+
+//! Register Reset Value
+#define DESC0_12_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_12_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_12_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_12_CPU_IGP_4 Register DESC1_12_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_12_CPU_IGP_4 0x141C4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_12_CPU_IGP_4 0x1E7941C4u
+
+//! Register Reset Value
+#define DESC1_12_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_12_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_12_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_12_CPU_IGP_4 Register DESC2_12_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_12_CPU_IGP_4 0x141C8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_12_CPU_IGP_4 0x1E7941C8u
+
+//! Register Reset Value
+#define DESC2_12_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_12_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_12_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_12_CPU_IGP_4 Register DESC3_12_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_12_CPU_IGP_4 0x141CC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_12_CPU_IGP_4 0x1E7941CCu
+
+//! Register Reset Value
+#define DESC3_12_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_12_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_12_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_13_CPU_IGP_4 Register DESC0_13_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_13_CPU_IGP_4 0x141D0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_13_CPU_IGP_4 0x1E7941D0u
+
+//! Register Reset Value
+#define DESC0_13_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_13_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_13_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_13_CPU_IGP_4 Register DESC1_13_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_13_CPU_IGP_4 0x141D4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_13_CPU_IGP_4 0x1E7941D4u
+
+//! Register Reset Value
+#define DESC1_13_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_13_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_13_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_13_CPU_IGP_4 Register DESC2_13_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_13_CPU_IGP_4 0x141D8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_13_CPU_IGP_4 0x1E7941D8u
+
+//! Register Reset Value
+#define DESC2_13_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_13_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_13_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_13_CPU_IGP_4 Register DESC3_13_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_13_CPU_IGP_4 0x141DC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_13_CPU_IGP_4 0x1E7941DCu
+
+//! Register Reset Value
+#define DESC3_13_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_13_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_13_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_14_CPU_IGP_4 Register DESC0_14_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_14_CPU_IGP_4 0x141E0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_14_CPU_IGP_4 0x1E7941E0u
+
+//! Register Reset Value
+#define DESC0_14_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_14_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_14_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_14_CPU_IGP_4 Register DESC1_14_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_14_CPU_IGP_4 0x141E4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_14_CPU_IGP_4 0x1E7941E4u
+
+//! Register Reset Value
+#define DESC1_14_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_14_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_14_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_14_CPU_IGP_4 Register DESC2_14_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_14_CPU_IGP_4 0x141E8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_14_CPU_IGP_4 0x1E7941E8u
+
+//! Register Reset Value
+#define DESC2_14_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_14_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_14_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_14_CPU_IGP_4 Register DESC3_14_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_14_CPU_IGP_4 0x141EC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_14_CPU_IGP_4 0x1E7941ECu
+
+//! Register Reset Value
+#define DESC3_14_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_14_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_14_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_15_CPU_IGP_4 Register DESC0_15_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_15_CPU_IGP_4 0x141F0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_15_CPU_IGP_4 0x1E7941F0u
+
+//! Register Reset Value
+#define DESC0_15_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_15_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_15_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_15_CPU_IGP_4 Register DESC1_15_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_15_CPU_IGP_4 0x141F4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_15_CPU_IGP_4 0x1E7941F4u
+
+//! Register Reset Value
+#define DESC1_15_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_15_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_15_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_15_CPU_IGP_4 Register DESC2_15_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_15_CPU_IGP_4 0x141F8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_15_CPU_IGP_4 0x1E7941F8u
+
+//! Register Reset Value
+#define DESC2_15_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_15_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_15_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_15_CPU_IGP_4 Register DESC3_15_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_15_CPU_IGP_4 0x141FC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_15_CPU_IGP_4 0x1E7941FCu
+
+//! Register Reset Value
+#define DESC3_15_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_15_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_15_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_16_CPU_IGP_4 Register DESC0_16_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_16_CPU_IGP_4 0x14200
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_16_CPU_IGP_4 0x1E794200u
+
+//! Register Reset Value
+#define DESC0_16_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_16_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_16_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_16_CPU_IGP_4 Register DESC1_16_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_16_CPU_IGP_4 0x14204
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_16_CPU_IGP_4 0x1E794204u
+
+//! Register Reset Value
+#define DESC1_16_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_16_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_16_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_16_CPU_IGP_4 Register DESC2_16_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_16_CPU_IGP_4 0x14208
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_16_CPU_IGP_4 0x1E794208u
+
+//! Register Reset Value
+#define DESC2_16_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_16_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_16_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_16_CPU_IGP_4 Register DESC3_16_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_16_CPU_IGP_4 0x1420C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_16_CPU_IGP_4 0x1E79420Cu
+
+//! Register Reset Value
+#define DESC3_16_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_16_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_16_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_17_CPU_IGP_4 Register DESC0_17_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_17_CPU_IGP_4 0x14210
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_17_CPU_IGP_4 0x1E794210u
+
+//! Register Reset Value
+#define DESC0_17_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_17_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_17_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_17_CPU_IGP_4 Register DESC1_17_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_17_CPU_IGP_4 0x14214
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_17_CPU_IGP_4 0x1E794214u
+
+//! Register Reset Value
+#define DESC1_17_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_17_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_17_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_17_CPU_IGP_4 Register DESC2_17_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_17_CPU_IGP_4 0x14218
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_17_CPU_IGP_4 0x1E794218u
+
+//! Register Reset Value
+#define DESC2_17_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_17_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_17_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_17_CPU_IGP_4 Register DESC3_17_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_17_CPU_IGP_4 0x1421C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_17_CPU_IGP_4 0x1E79421Cu
+
+//! Register Reset Value
+#define DESC3_17_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_17_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_17_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_18_CPU_IGP_4 Register DESC0_18_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_18_CPU_IGP_4 0x14220
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_18_CPU_IGP_4 0x1E794220u
+
+//! Register Reset Value
+#define DESC0_18_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_18_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_18_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_18_CPU_IGP_4 Register DESC1_18_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_18_CPU_IGP_4 0x14224
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_18_CPU_IGP_4 0x1E794224u
+
+//! Register Reset Value
+#define DESC1_18_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_18_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_18_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_18_CPU_IGP_4 Register DESC2_18_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_18_CPU_IGP_4 0x14228
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_18_CPU_IGP_4 0x1E794228u
+
+//! Register Reset Value
+#define DESC2_18_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_18_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_18_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_18_CPU_IGP_4 Register DESC3_18_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_18_CPU_IGP_4 0x1422C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_18_CPU_IGP_4 0x1E79422Cu
+
+//! Register Reset Value
+#define DESC3_18_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_18_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_18_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_19_CPU_IGP_4 Register DESC0_19_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_19_CPU_IGP_4 0x14230
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_19_CPU_IGP_4 0x1E794230u
+
+//! Register Reset Value
+#define DESC0_19_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_19_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_19_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_19_CPU_IGP_4 Register DESC1_19_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_19_CPU_IGP_4 0x14234
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_19_CPU_IGP_4 0x1E794234u
+
+//! Register Reset Value
+#define DESC1_19_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_19_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_19_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_19_CPU_IGP_4 Register DESC2_19_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_19_CPU_IGP_4 0x14238
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_19_CPU_IGP_4 0x1E794238u
+
+//! Register Reset Value
+#define DESC2_19_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_19_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_19_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_19_CPU_IGP_4 Register DESC3_19_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_19_CPU_IGP_4 0x1423C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_19_CPU_IGP_4 0x1E79423Cu
+
+//! Register Reset Value
+#define DESC3_19_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_19_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_19_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_20_CPU_IGP_4 Register DESC0_20_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_20_CPU_IGP_4 0x14240
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_20_CPU_IGP_4 0x1E794240u
+
+//! Register Reset Value
+#define DESC0_20_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_20_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_20_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_20_CPU_IGP_4 Register DESC1_20_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_20_CPU_IGP_4 0x14244
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_20_CPU_IGP_4 0x1E794244u
+
+//! Register Reset Value
+#define DESC1_20_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_20_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_20_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_20_CPU_IGP_4 Register DESC2_20_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_20_CPU_IGP_4 0x14248
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_20_CPU_IGP_4 0x1E794248u
+
+//! Register Reset Value
+#define DESC2_20_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_20_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_20_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_20_CPU_IGP_4 Register DESC3_20_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_20_CPU_IGP_4 0x1424C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_20_CPU_IGP_4 0x1E79424Cu
+
+//! Register Reset Value
+#define DESC3_20_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_20_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_20_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_21_CPU_IGP_4 Register DESC0_21_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_21_CPU_IGP_4 0x14250
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_21_CPU_IGP_4 0x1E794250u
+
+//! Register Reset Value
+#define DESC0_21_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_21_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_21_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_21_CPU_IGP_4 Register DESC1_21_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_21_CPU_IGP_4 0x14254
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_21_CPU_IGP_4 0x1E794254u
+
+//! Register Reset Value
+#define DESC1_21_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_21_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_21_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_21_CPU_IGP_4 Register DESC2_21_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_21_CPU_IGP_4 0x14258
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_21_CPU_IGP_4 0x1E794258u
+
+//! Register Reset Value
+#define DESC2_21_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_21_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_21_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_21_CPU_IGP_4 Register DESC3_21_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_21_CPU_IGP_4 0x1425C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_21_CPU_IGP_4 0x1E79425Cu
+
+//! Register Reset Value
+#define DESC3_21_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_21_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_21_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_22_CPU_IGP_4 Register DESC0_22_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_22_CPU_IGP_4 0x14260
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_22_CPU_IGP_4 0x1E794260u
+
+//! Register Reset Value
+#define DESC0_22_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_22_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_22_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_22_CPU_IGP_4 Register DESC1_22_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_22_CPU_IGP_4 0x14264
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_22_CPU_IGP_4 0x1E794264u
+
+//! Register Reset Value
+#define DESC1_22_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_22_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_22_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_22_CPU_IGP_4 Register DESC2_22_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_22_CPU_IGP_4 0x14268
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_22_CPU_IGP_4 0x1E794268u
+
+//! Register Reset Value
+#define DESC2_22_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_22_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_22_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_22_CPU_IGP_4 Register DESC3_22_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_22_CPU_IGP_4 0x1426C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_22_CPU_IGP_4 0x1E79426Cu
+
+//! Register Reset Value
+#define DESC3_22_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_22_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_22_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_23_CPU_IGP_4 Register DESC0_23_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_23_CPU_IGP_4 0x14270
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_23_CPU_IGP_4 0x1E794270u
+
+//! Register Reset Value
+#define DESC0_23_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_23_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_23_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_23_CPU_IGP_4 Register DESC1_23_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_23_CPU_IGP_4 0x14274
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_23_CPU_IGP_4 0x1E794274u
+
+//! Register Reset Value
+#define DESC1_23_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_23_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_23_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_23_CPU_IGP_4 Register DESC2_23_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_23_CPU_IGP_4 0x14278
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_23_CPU_IGP_4 0x1E794278u
+
+//! Register Reset Value
+#define DESC2_23_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_23_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_23_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_23_CPU_IGP_4 Register DESC3_23_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_23_CPU_IGP_4 0x1427C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_23_CPU_IGP_4 0x1E79427Cu
+
+//! Register Reset Value
+#define DESC3_23_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_23_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_23_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_24_CPU_IGP_4 Register DESC0_24_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_24_CPU_IGP_4 0x14280
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_24_CPU_IGP_4 0x1E794280u
+
+//! Register Reset Value
+#define DESC0_24_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_24_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_24_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_24_CPU_IGP_4 Register DESC1_24_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_24_CPU_IGP_4 0x14284
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_24_CPU_IGP_4 0x1E794284u
+
+//! Register Reset Value
+#define DESC1_24_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_24_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_24_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_24_CPU_IGP_4 Register DESC2_24_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_24_CPU_IGP_4 0x14288
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_24_CPU_IGP_4 0x1E794288u
+
+//! Register Reset Value
+#define DESC2_24_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_24_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_24_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_24_CPU_IGP_4 Register DESC3_24_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_24_CPU_IGP_4 0x1428C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_24_CPU_IGP_4 0x1E79428Cu
+
+//! Register Reset Value
+#define DESC3_24_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_24_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_24_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_25_CPU_IGP_4 Register DESC0_25_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_25_CPU_IGP_4 0x14290
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_25_CPU_IGP_4 0x1E794290u
+
+//! Register Reset Value
+#define DESC0_25_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_25_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_25_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_25_CPU_IGP_4 Register DESC1_25_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_25_CPU_IGP_4 0x14294
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_25_CPU_IGP_4 0x1E794294u
+
+//! Register Reset Value
+#define DESC1_25_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_25_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_25_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_25_CPU_IGP_4 Register DESC2_25_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_25_CPU_IGP_4 0x14298
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_25_CPU_IGP_4 0x1E794298u
+
+//! Register Reset Value
+#define DESC2_25_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_25_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_25_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_25_CPU_IGP_4 Register DESC3_25_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_25_CPU_IGP_4 0x1429C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_25_CPU_IGP_4 0x1E79429Cu
+
+//! Register Reset Value
+#define DESC3_25_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_25_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_25_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_26_CPU_IGP_4 Register DESC0_26_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_26_CPU_IGP_4 0x142A0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_26_CPU_IGP_4 0x1E7942A0u
+
+//! Register Reset Value
+#define DESC0_26_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_26_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_26_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_26_CPU_IGP_4 Register DESC1_26_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_26_CPU_IGP_4 0x142A4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_26_CPU_IGP_4 0x1E7942A4u
+
+//! Register Reset Value
+#define DESC1_26_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_26_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_26_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_26_CPU_IGP_4 Register DESC2_26_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_26_CPU_IGP_4 0x142A8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_26_CPU_IGP_4 0x1E7942A8u
+
+//! Register Reset Value
+#define DESC2_26_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_26_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_26_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_26_CPU_IGP_4 Register DESC3_26_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_26_CPU_IGP_4 0x142AC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_26_CPU_IGP_4 0x1E7942ACu
+
+//! Register Reset Value
+#define DESC3_26_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_26_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_26_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_27_CPU_IGP_4 Register DESC0_27_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_27_CPU_IGP_4 0x142B0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_27_CPU_IGP_4 0x1E7942B0u
+
+//! Register Reset Value
+#define DESC0_27_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_27_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_27_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_27_CPU_IGP_4 Register DESC1_27_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_27_CPU_IGP_4 0x142B4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_27_CPU_IGP_4 0x1E7942B4u
+
+//! Register Reset Value
+#define DESC1_27_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_27_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_27_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_27_CPU_IGP_4 Register DESC2_27_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_27_CPU_IGP_4 0x142B8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_27_CPU_IGP_4 0x1E7942B8u
+
+//! Register Reset Value
+#define DESC2_27_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_27_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_27_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_27_CPU_IGP_4 Register DESC3_27_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_27_CPU_IGP_4 0x142BC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_27_CPU_IGP_4 0x1E7942BCu
+
+//! Register Reset Value
+#define DESC3_27_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_27_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_27_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_28_CPU_IGP_4 Register DESC0_28_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_28_CPU_IGP_4 0x142C0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_28_CPU_IGP_4 0x1E7942C0u
+
+//! Register Reset Value
+#define DESC0_28_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_28_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_28_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_28_CPU_IGP_4 Register DESC1_28_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_28_CPU_IGP_4 0x142C4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_28_CPU_IGP_4 0x1E7942C4u
+
+//! Register Reset Value
+#define DESC1_28_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_28_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_28_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_28_CPU_IGP_4 Register DESC2_28_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_28_CPU_IGP_4 0x142C8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_28_CPU_IGP_4 0x1E7942C8u
+
+//! Register Reset Value
+#define DESC2_28_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_28_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_28_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_28_CPU_IGP_4 Register DESC3_28_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_28_CPU_IGP_4 0x142CC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_28_CPU_IGP_4 0x1E7942CCu
+
+//! Register Reset Value
+#define DESC3_28_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_28_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_28_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_29_CPU_IGP_4 Register DESC0_29_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_29_CPU_IGP_4 0x142D0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_29_CPU_IGP_4 0x1E7942D0u
+
+//! Register Reset Value
+#define DESC0_29_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_29_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_29_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_29_CPU_IGP_4 Register DESC1_29_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_29_CPU_IGP_4 0x142D4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_29_CPU_IGP_4 0x1E7942D4u
+
+//! Register Reset Value
+#define DESC1_29_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_29_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_29_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_29_CPU_IGP_4 Register DESC2_29_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_29_CPU_IGP_4 0x142D8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_29_CPU_IGP_4 0x1E7942D8u
+
+//! Register Reset Value
+#define DESC2_29_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_29_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_29_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_29_CPU_IGP_4 Register DESC3_29_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_29_CPU_IGP_4 0x142DC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_29_CPU_IGP_4 0x1E7942DCu
+
+//! Register Reset Value
+#define DESC3_29_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_29_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_29_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_30_CPU_IGP_4 Register DESC0_30_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_30_CPU_IGP_4 0x142E0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_30_CPU_IGP_4 0x1E7942E0u
+
+//! Register Reset Value
+#define DESC0_30_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_30_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_30_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_30_CPU_IGP_4 Register DESC1_30_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_30_CPU_IGP_4 0x142E4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_30_CPU_IGP_4 0x1E7942E4u
+
+//! Register Reset Value
+#define DESC1_30_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_30_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_30_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_30_CPU_IGP_4 Register DESC2_30_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_30_CPU_IGP_4 0x142E8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_30_CPU_IGP_4 0x1E7942E8u
+
+//! Register Reset Value
+#define DESC2_30_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_30_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_30_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_30_CPU_IGP_4 Register DESC3_30_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_30_CPU_IGP_4 0x142EC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_30_CPU_IGP_4 0x1E7942ECu
+
+//! Register Reset Value
+#define DESC3_30_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_30_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_30_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC0_31_CPU_IGP_4 Register DESC0_31_CPU_IGP_4 - CPU Ingress Port Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define DESC0_31_CPU_IGP_4 0x142F0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC0_31_CPU_IGP_4 0x1E7942F0u
+
+//! Register Reset Value
+#define DESC0_31_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_31_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DESC0_31_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC1_31_CPU_IGP_4 Register DESC1_31_CPU_IGP_4 - CPU Ingress Port Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define DESC1_31_CPU_IGP_4 0x142F4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC1_31_CPU_IGP_4 0x1E7942F4u
+
+//! Register Reset Value
+#define DESC1_31_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_31_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DESC1_31_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC2_31_CPU_IGP_4 Register DESC2_31_CPU_IGP_4 - CPU Ingress Port Descriptor DW2
+//! @{
+
+//! Register Offset (relative)
+#define DESC2_31_CPU_IGP_4 0x142F8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC2_31_CPU_IGP_4 0x1E7942F8u
+
+//! Register Reset Value
+#define DESC2_31_CPU_IGP_4_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_31_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DESC2_31_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DESC3_31_CPU_IGP_4 Register DESC3_31_CPU_IGP_4 - CPU Ingress Port Descriptor DW3
+//! @{
+
+//! Register Offset (relative)
+#define DESC3_31_CPU_IGP_4 0x142FC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DESC3_31_CPU_IGP_4 0x1E7942FCu
+
+//! Register Reset Value
+#define DESC3_31_CPU_IGP_4_RST 0x80000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_31_CPU_IGP_4_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DESC3_31_CPU_IGP_4_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_5 Register CFG_DMA_IGP_5 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_5 0x15000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_5 0x1E795000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_5_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_5_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_5_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_5_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_5_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_5_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_5_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_5_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_5_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_5_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_5_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_5_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_5_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_5_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_5_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_5_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_5_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_5_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_5_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_5_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_5_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_5_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_5_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_5_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_5_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_5_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_5_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_5_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_5_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_5_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_5_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_5_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_5_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_5_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_5_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_5_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_5_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_5_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_5_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_5_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_5_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_5_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_5_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_5_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_5_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_5 Register WM_DMA_IGP_5 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_5 0x15004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_5 0x1E795004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_5_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_5_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_5_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_5_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_5_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_5 Register POCC_DMA_IGP_5 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_5 0x15008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_5 0x1E795008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_5_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_5_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_5_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_5 Register EQPC_DMA_IGP_5 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_5 0x1500C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_5 0x1E79500Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_5_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_5_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_5_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_5 Register DISC_DESC0_DMA_IGP_5 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_5 0x15010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_5 0x1E795010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_5 Register DISC_DESC1_DMA_IGP_5 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_5 0x15014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_5 0x1E795014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_5 Register DISC_DESC2_DMA_IGP_5 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_5 0x15018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_5 0x1E795018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_5 Register DISC_DESC3_DMA_IGP_5 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_5 0x1501C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_5 0x1E79501Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_5_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_5_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_5_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_5 Register IRNCR_DMA_IGP_5 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_5 0x15020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_5 0x1E795020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_5_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_5_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_5_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_5_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_5_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_5_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_5_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_5_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_5_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_5_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_5_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_5_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_5_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_5_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_5_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_5_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_5_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_5_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_5_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_5_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_5_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_5 Register IRNICR_DMA_IGP_5 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_5 0x15024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_5 0x1E795024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_5_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_5_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_5_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_5_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_5_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_5_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_5_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_5_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_5_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_5_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_5_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_5 Register IRNEN_DMA_IGP_5 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_5 0x15028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_5 0x1E795028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_5_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_5_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_5_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_5_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_5_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_5_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_5_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_5_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_5_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_5_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_5_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_5_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_5_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_5_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_5_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_5_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_5_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_5_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_5_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_5_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_5_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_5 Register DPTR_DMA_IGP_5 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_5 0x15030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_5 0x1E795030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_5_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_5_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_5_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_5_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_5_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_5_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_5_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_5_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_5_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_5 Register DICC_IGP_5 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_5 0x15038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_5 0x1E795038u
+
+//! Register Reset Value
+#define DICC_IGP_5_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_5_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_5_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_5 Register DCNTR_IGP_5 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_5 0x1504C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_5 0x1E79504Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_5_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_5_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_5_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_5_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_5_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_6 Register CFG_DMA_IGP_6 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_6 0x16000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_6 0x1E796000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_6_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_6_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_6_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_6_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_6_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_6_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_6_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_6_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_6_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_6_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_6_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_6_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_6_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_6_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_6_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_6_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_6_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_6_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_6_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_6_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_6_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_6_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_6_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_6_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_6_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_6_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_6_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_6_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_6_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_6_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_6_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_6_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_6_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_6_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_6_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_6_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_6_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_6_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_6_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_6_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_6_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_6_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_6_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_6_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_6_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_6 Register WM_DMA_IGP_6 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_6 0x16004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_6 0x1E796004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_6_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_6_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_6_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_6_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_6_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_6 Register POCC_DMA_IGP_6 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_6 0x16008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_6 0x1E796008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_6_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_6_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_6_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_6 Register EQPC_DMA_IGP_6 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_6 0x1600C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_6 0x1E79600Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_6_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_6_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_6_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_6 Register DISC_DESC0_DMA_IGP_6 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_6 0x16010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_6 0x1E796010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_6 Register DISC_DESC1_DMA_IGP_6 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_6 0x16014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_6 0x1E796014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_6 Register DISC_DESC2_DMA_IGP_6 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_6 0x16018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_6 0x1E796018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_6 Register DISC_DESC3_DMA_IGP_6 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_6 0x1601C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_6 0x1E79601Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_6_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_6_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_6_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_6 Register IRNCR_DMA_IGP_6 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_6 0x16020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_6 0x1E796020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_6_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_6_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_6_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_6_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_6_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_6_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_6_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_6_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_6_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_6_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_6_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_6_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_6_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_6_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_6_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_6_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_6_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_6_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_6_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_6_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_6_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_6 Register IRNICR_DMA_IGP_6 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_6 0x16024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_6 0x1E796024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_6_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_6_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_6_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_6_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_6_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_6_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_6_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_6_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_6_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_6_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_6_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_6 Register IRNEN_DMA_IGP_6 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_6 0x16028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_6 0x1E796028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_6_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_6_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_6_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_6_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_6_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_6_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_6_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_6_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_6_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_6_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_6_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_6_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_6_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_6_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_6_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_6_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_6_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_6_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_6_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_6_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_6_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_6 Register DPTR_DMA_IGP_6 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_6 0x16030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_6 0x1E796030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_6_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_6_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_6_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_6_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_6_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_6_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_6_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_6_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_6_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_6 Register DICC_IGP_6 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_6 0x16038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_6 0x1E796038u
+
+//! Register Reset Value
+#define DICC_IGP_6_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_6_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_6_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_6 Register DCNTR_IGP_6 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_6 0x1604C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_6 0x1E79604Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_6_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_6_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_6_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_6_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_6_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_7 Register CFG_DMA_IGP_7 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_7 0x17000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_7 0x1E797000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_7_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_7_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_7_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_7_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_7_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_7_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_7_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_7_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_7_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_7_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_7_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_7_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_7_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_7_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_7_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_7_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_7_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_7_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_7_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_7_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_7_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_7_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_7_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_7_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_7_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_7_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_7_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_7_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_7_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_7_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_7_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_7_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_7_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_7_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_7_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_7_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_7_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_7_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_7_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_7_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_7_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_7_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_7_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_7_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_7_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_7 Register WM_DMA_IGP_7 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_7 0x17004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_7 0x1E797004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_7_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_7_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_7_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_7_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_7_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_7 Register POCC_DMA_IGP_7 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_7 0x17008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_7 0x1E797008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_7_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_7_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_7_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_7 Register EQPC_DMA_IGP_7 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_7 0x1700C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_7 0x1E79700Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_7_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_7_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_7_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_7 Register DISC_DESC0_DMA_IGP_7 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_7 0x17010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_7 0x1E797010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_7 Register DISC_DESC1_DMA_IGP_7 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_7 0x17014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_7 0x1E797014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_7 Register DISC_DESC2_DMA_IGP_7 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_7 0x17018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_7 0x1E797018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_7 Register DISC_DESC3_DMA_IGP_7 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_7 0x1701C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_7 0x1E79701Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_7_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_7_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_7_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_7 Register IRNCR_DMA_IGP_7 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_7 0x17020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_7 0x1E797020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_7_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_7_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_7_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_7_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_7_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_7_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_7_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_7_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_7_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_7_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_7_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_7_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_7_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_7_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_7_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_7_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_7_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_7_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_7_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_7_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_7_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_7 Register IRNICR_DMA_IGP_7 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_7 0x17024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_7 0x1E797024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_7_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_7_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_7_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_7_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_7_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_7_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_7_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_7_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_7_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_7_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_7_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_7 Register IRNEN_DMA_IGP_7 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_7 0x17028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_7 0x1E797028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_7_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_7_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_7_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_7_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_7_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_7_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_7_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_7_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_7_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_7_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_7_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_7_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_7_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_7_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_7_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_7_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_7_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_7_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_7_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_7_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_7_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_7 Register DPTR_DMA_IGP_7 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_7 0x17030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_7 0x1E797030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_7_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_7_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_7_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_7_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_7_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_7_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_7_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_7_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_7_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_7 Register DICC_IGP_7 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_7 0x17038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_7 0x1E797038u
+
+//! Register Reset Value
+#define DICC_IGP_7_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_7_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_7_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_7 Register DCNTR_IGP_7 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_7 0x1704C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_7 0x1E79704Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_7_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_7_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_7_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_7_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_7_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_8 Register CFG_DMA_IGP_8 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_8 0x18000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_8 0x1E798000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_8_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_8_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_8_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_8_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_8_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_8_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_8_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_8_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_8_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_8_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_8_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_8_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_8_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_8_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_8_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_8_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_8_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_8_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_8_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_8_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_8_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_8_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_8_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_8_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_8_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_8_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_8_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_8_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_8_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_8_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_8_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_8_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_8_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_8_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_8_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_8_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_8_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_8_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_8_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_8_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_8_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_8_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_8_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_8_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_8_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_8 Register WM_DMA_IGP_8 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_8 0x18004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_8 0x1E798004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_8_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_8_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_8_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_8_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_8_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_8 Register POCC_DMA_IGP_8 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_8 0x18008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_8 0x1E798008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_8_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_8_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_8_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_8 Register EQPC_DMA_IGP_8 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_8 0x1800C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_8 0x1E79800Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_8_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_8_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_8_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_8 Register DISC_DESC0_DMA_IGP_8 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_8 0x18010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_8 0x1E798010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_8 Register DISC_DESC1_DMA_IGP_8 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_8 0x18014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_8 0x1E798014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_8 Register DISC_DESC2_DMA_IGP_8 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_8 0x18018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_8 0x1E798018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_8 Register DISC_DESC3_DMA_IGP_8 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_8 0x1801C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_8 0x1E79801Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_8_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_8_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_8_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_8 Register IRNCR_DMA_IGP_8 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_8 0x18020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_8 0x1E798020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_8_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_8_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_8_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_8_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_8_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_8_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_8_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_8_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_8_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_8_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_8_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_8_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_8_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_8_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_8_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_8_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_8_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_8_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_8_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_8_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_8_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_8 Register IRNICR_DMA_IGP_8 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_8 0x18024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_8 0x1E798024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_8_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_8_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_8_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_8_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_8_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_8_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_8_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_8_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_8_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_8_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_8_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_8 Register IRNEN_DMA_IGP_8 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_8 0x18028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_8 0x1E798028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_8_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_8_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_8_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_8_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_8_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_8_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_8_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_8_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_8_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_8_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_8_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_8_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_8_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_8_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_8_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_8_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_8_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_8_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_8_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_8_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_8_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_8 Register DPTR_DMA_IGP_8 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_8 0x18030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_8 0x1E798030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_8_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_8_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_8_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_8_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_8_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_8_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_8_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_8_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_8_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_8 Register DICC_IGP_8 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_8 0x18038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_8 0x1E798038u
+
+//! Register Reset Value
+#define DICC_IGP_8_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_8_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_8_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_8 Register DCNTR_IGP_8 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_8 0x1804C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_8 0x1E79804Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_8_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_8_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_8_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_8_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_8_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_9 Register CFG_DMA_IGP_9 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_9 0x19000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_9 0x1E799000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_9_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_9_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_9_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_9_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_9_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_9_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_9_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_9_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_9_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_9_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_9_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_9_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_9_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_9_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_9_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_9_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_9_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_9_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_9_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_9_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_9_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_9_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_9_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_9_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_9_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_9_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_9_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_9_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_9_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_9_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_9_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_9_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_9_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_9_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_9_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_9_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_9_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_9_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_9_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_9_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_9_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_9_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_9_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_9_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_9_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_9 Register WM_DMA_IGP_9 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_9 0x19004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_9 0x1E799004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_9_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_9_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_9_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_9_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_9_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_9 Register POCC_DMA_IGP_9 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_9 0x19008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_9 0x1E799008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_9_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_9_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_9_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_9 Register EQPC_DMA_IGP_9 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_9 0x1900C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_9 0x1E79900Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_9_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_9_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_9_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_9 Register DISC_DESC0_DMA_IGP_9 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_9 0x19010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_9 0x1E799010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_9 Register DISC_DESC1_DMA_IGP_9 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_9 0x19014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_9 0x1E799014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_9 Register DISC_DESC2_DMA_IGP_9 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_9 0x19018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_9 0x1E799018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_9 Register DISC_DESC3_DMA_IGP_9 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_9 0x1901C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_9 0x1E79901Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_9_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_9_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_9_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_9 Register IRNCR_DMA_IGP_9 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_9 0x19020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_9 0x1E799020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_9_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_9_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_9_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_9_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_9_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_9_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_9_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_9_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_9_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_9_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_9_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_9_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_9_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_9_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_9_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_9_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_9_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_9_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_9_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_9_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_9_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_9 Register IRNICR_DMA_IGP_9 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_9 0x19024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_9 0x1E799024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_9_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_9_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_9_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_9_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_9_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_9_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_9_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_9_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_9_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_9_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_9_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_9 Register IRNEN_DMA_IGP_9 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_9 0x19028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_9 0x1E799028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_9_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_9_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_9_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_9_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_9_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_9_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_9_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_9_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_9_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_9_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_9_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_9_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_9_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_9_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_9_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_9_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_9_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_9_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_9_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_9_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_9_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_9 Register DPTR_DMA_IGP_9 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_9 0x19030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_9 0x1E799030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_9_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_9_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_9_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_9_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_9_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_9_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_9_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_9_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_9_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_9 Register DICC_IGP_9 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_9 0x19038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_9 0x1E799038u
+
+//! Register Reset Value
+#define DICC_IGP_9_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_9_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_9_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_9 Register DCNTR_IGP_9 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_9 0x1904C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_9 0x1E79904Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_9_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_9_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_9_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_9_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_9_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_10 Register CFG_DMA_IGP_10 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_10 0x1A000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_10 0x1E79A000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_10_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_10_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_10_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_10_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_10_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_10_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_10_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_10_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_10_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_10_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_10_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_10_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_10_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_10_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_10_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_10_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_10_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_10_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_10_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_10_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_10_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_10_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_10_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_10_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_10_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_10_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_10_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_10_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_10_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_10_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_10_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_10_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_10_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_10_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_10_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_10_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_10_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_10_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_10_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_10_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_10_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_10_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_10_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_10_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_10_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_10 Register WM_DMA_IGP_10 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_10 0x1A004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_10 0x1E79A004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_10_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_10_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_10_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_10_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_10_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_10 Register POCC_DMA_IGP_10 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_10 0x1A008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_10 0x1E79A008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_10_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_10_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_10_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_10 Register EQPC_DMA_IGP_10 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_10 0x1A00C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_10 0x1E79A00Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_10_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_10_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_10_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_10 Register DISC_DESC0_DMA_IGP_10 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_10 0x1A010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_10 0x1E79A010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_10 Register DISC_DESC1_DMA_IGP_10 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_10 0x1A014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_10 0x1E79A014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_10 Register DISC_DESC2_DMA_IGP_10 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_10 0x1A018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_10 0x1E79A018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_10 Register DISC_DESC3_DMA_IGP_10 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_10 0x1A01C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_10 0x1E79A01Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_10_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_10_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_10_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_10 Register IRNCR_DMA_IGP_10 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_10 0x1A020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_10 0x1E79A020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_10_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_10_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_10_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_10_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_10_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_10_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_10_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_10_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_10_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_10_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_10_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_10_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_10_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_10_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_10_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_10_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_10_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_10_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_10_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_10_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_10_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_10 Register IRNICR_DMA_IGP_10 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_10 0x1A024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_10 0x1E79A024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_10_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_10_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_10_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_10_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_10_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_10_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_10_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_10_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_10_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_10_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_10_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_10 Register IRNEN_DMA_IGP_10 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_10 0x1A028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_10 0x1E79A028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_10_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_10_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_10_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_10_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_10_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_10_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_10_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_10_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_10_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_10_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_10_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_10_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_10_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_10_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_10_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_10_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_10_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_10_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_10_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_10_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_10_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_10 Register DPTR_DMA_IGP_10 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_10 0x1A030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_10 0x1E79A030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_10_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_10_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_10_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_10_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_10_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_10_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_10_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_10_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_10_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_10 Register DICC_IGP_10 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_10 0x1A038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_10 0x1E79A038u
+
+//! Register Reset Value
+#define DICC_IGP_10_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_10_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_10_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_10 Register DCNTR_IGP_10 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_10 0x1A04C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_10 0x1E79A04Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_10_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_10_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_10_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_10_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_10_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_11 Register CFG_DMA_IGP_11 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_11 0x1B000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_11 0x1E79B000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_11_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_11_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_11_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_11_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_11_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_11_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_11_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_11_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_11_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_11_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_11_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_11_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_11_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_11_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_11_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_11_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_11_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_11_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_11_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_11_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_11_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_11_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_11_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_11_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_11_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_11_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_11_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_11_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_11_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_11_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_11_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_11_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_11_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_11_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_11_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_11_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_11_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_11_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_11_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_11_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_11_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_11_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_11_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_11_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_11_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_11 Register WM_DMA_IGP_11 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_11 0x1B004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_11 0x1E79B004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_11_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_11_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_11_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_11_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_11_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_11 Register POCC_DMA_IGP_11 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_11 0x1B008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_11 0x1E79B008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_11_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_11_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_11_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_11 Register EQPC_DMA_IGP_11 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_11 0x1B00C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_11 0x1E79B00Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_11_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_11_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_11_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_11 Register DISC_DESC0_DMA_IGP_11 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_11 0x1B010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_11 0x1E79B010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_11 Register DISC_DESC1_DMA_IGP_11 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_11 0x1B014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_11 0x1E79B014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_11 Register DISC_DESC2_DMA_IGP_11 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_11 0x1B018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_11 0x1E79B018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_11 Register DISC_DESC3_DMA_IGP_11 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_11 0x1B01C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_11 0x1E79B01Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_11_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_11_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_11_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_11 Register IRNCR_DMA_IGP_11 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_11 0x1B020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_11 0x1E79B020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_11_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_11_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_11_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_11_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_11_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_11_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_11_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_11_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_11_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_11_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_11_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_11_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_11_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_11_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_11_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_11_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_11_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_11_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_11_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_11_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_11_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_11 Register IRNICR_DMA_IGP_11 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_11 0x1B024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_11 0x1E79B024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_11_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_11_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_11_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_11_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_11_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_11_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_11_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_11_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_11_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_11_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_11_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_11 Register IRNEN_DMA_IGP_11 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_11 0x1B028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_11 0x1E79B028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_11_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_11_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_11_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_11_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_11_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_11_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_11_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_11_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_11_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_11_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_11_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_11_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_11_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_11_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_11_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_11_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_11_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_11_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_11_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_11_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_11_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_11 Register DPTR_DMA_IGP_11 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_11 0x1B030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_11 0x1E79B030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_11_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_11_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_11_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_11_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_11_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_11_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_11_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_11_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_11_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_11 Register DICC_IGP_11 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_11 0x1B038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_11 0x1E79B038u
+
+//! Register Reset Value
+#define DICC_IGP_11_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_11_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_11_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_11 Register DCNTR_IGP_11 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_11 0x1B04C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_11 0x1E79B04Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_11_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_11_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_11_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_11_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_11_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_12 Register CFG_DMA_IGP_12 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_12 0x1C000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_12 0x1E79C000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_12_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_12_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_12_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_12_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_12_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_12_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_12_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_12_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_12_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_12_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_12_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_12_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_12_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_12_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_12_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_12_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_12_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_12_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_12_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_12_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_12_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_12_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_12_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_12_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_12_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_12_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_12_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_12_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_12_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_12_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_12_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_12_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_12_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_12_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_12_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_12_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_12_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_12_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_12_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_12_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_12_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_12_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_12_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_12_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_12_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_12 Register WM_DMA_IGP_12 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_12 0x1C004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_12 0x1E79C004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_12_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_12_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_12_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_12_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_12_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_12 Register POCC_DMA_IGP_12 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_12 0x1C008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_12 0x1E79C008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_12_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_12_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_12_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_12 Register EQPC_DMA_IGP_12 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_12 0x1C00C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_12 0x1E79C00Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_12_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_12_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_12_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_12 Register DISC_DESC0_DMA_IGP_12 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_12 0x1C010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_12 0x1E79C010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_12 Register DISC_DESC1_DMA_IGP_12 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_12 0x1C014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_12 0x1E79C014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_12 Register DISC_DESC2_DMA_IGP_12 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_12 0x1C018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_12 0x1E79C018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_12 Register DISC_DESC3_DMA_IGP_12 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_12 0x1C01C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_12 0x1E79C01Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_12_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_12_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_12_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_12 Register IRNCR_DMA_IGP_12 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_12 0x1C020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_12 0x1E79C020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_12_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_12_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_12_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_12_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_12_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_12_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_12_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_12_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_12_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_12_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_12_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_12_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_12_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_12_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_12_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_12_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_12_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_12_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_12_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_12_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_12_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_12 Register IRNICR_DMA_IGP_12 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_12 0x1C024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_12 0x1E79C024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_12_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_12_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_12_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_12_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_12_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_12_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_12_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_12_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_12_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_12_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_12_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_12 Register IRNEN_DMA_IGP_12 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_12 0x1C028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_12 0x1E79C028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_12_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_12_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_12_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_12_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_12_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_12_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_12_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_12_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_12_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_12_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_12_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_12_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_12_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_12_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_12_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_12_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_12_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_12_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_12_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_12_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_12_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_12 Register DPTR_DMA_IGP_12 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_12 0x1C030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_12 0x1E79C030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_12_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_12_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_12_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_12_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_12_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_12_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_12_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_12_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_12_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_12 Register DICC_IGP_12 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_12 0x1C038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_12 0x1E79C038u
+
+//! Register Reset Value
+#define DICC_IGP_12_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_12_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_12_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_12 Register DCNTR_IGP_12 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_12 0x1C04C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_12 0x1E79C04Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_12_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_12_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_12_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_12_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_12_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_13 Register CFG_DMA_IGP_13 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_13 0x1D000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_13 0x1E79D000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_13_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_13_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_13_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_13_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_13_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_13_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_13_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_13_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_13_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_13_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_13_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_13_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_13_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_13_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_13_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_13_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_13_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_13_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_13_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_13_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_13_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_13_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_13_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_13_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_13_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_13_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_13_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_13_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_13_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_13_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_13_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_13_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_13_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_13_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_13_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_13_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_13_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_13_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_13_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_13_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_13_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_13_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_13_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_13_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_13_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_13 Register WM_DMA_IGP_13 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_13 0x1D004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_13 0x1E79D004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_13_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_13_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_13_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_13_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_13_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_13 Register POCC_DMA_IGP_13 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_13 0x1D008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_13 0x1E79D008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_13_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_13_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_13_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_13 Register EQPC_DMA_IGP_13 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_13 0x1D00C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_13 0x1E79D00Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_13_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_13_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_13_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_13 Register DISC_DESC0_DMA_IGP_13 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_13 0x1D010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_13 0x1E79D010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_13 Register DISC_DESC1_DMA_IGP_13 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_13 0x1D014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_13 0x1E79D014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_13 Register DISC_DESC2_DMA_IGP_13 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_13 0x1D018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_13 0x1E79D018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_13 Register DISC_DESC3_DMA_IGP_13 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_13 0x1D01C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_13 0x1E79D01Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_13_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_13_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_13_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_13 Register IRNCR_DMA_IGP_13 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_13 0x1D020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_13 0x1E79D020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_13_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_13_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_13_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_13_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_13_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_13_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_13_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_13_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_13_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_13_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_13_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_13_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_13_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_13_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_13_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_13_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_13_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_13_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_13_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_13_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_13_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_13 Register IRNICR_DMA_IGP_13 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_13 0x1D024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_13 0x1E79D024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_13_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_13_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_13_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_13_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_13_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_13_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_13_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_13_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_13_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_13_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_13_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_13 Register IRNEN_DMA_IGP_13 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_13 0x1D028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_13 0x1E79D028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_13_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_13_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_13_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_13_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_13_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_13_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_13_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_13_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_13_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_13_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_13_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_13_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_13_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_13_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_13_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_13_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_13_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_13_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_13_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_13_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_13_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_13 Register DPTR_DMA_IGP_13 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_13 0x1D030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_13 0x1E79D030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_13_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_13_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_13_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_13_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_13_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_13_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_13_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_13_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_13_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_13 Register DICC_IGP_13 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_13 0x1D038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_13 0x1E79D038u
+
+//! Register Reset Value
+#define DICC_IGP_13_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_13_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_13_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_13 Register DCNTR_IGP_13 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_13 0x1D04C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_13 0x1E79D04Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_13_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_13_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_13_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_13_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_13_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_14 Register CFG_DMA_IGP_14 - DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_14 0x1E000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_14 0x1E79E000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_14_RST 0x00000000u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_14_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_14_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_14_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_14_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_14_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_14_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_14_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_14_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_14_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_14_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_14_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_14_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_14_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_14_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_14_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_14_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_14_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_14_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_14_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_14_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_14_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_14_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_14_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_14_BP_EN_EN 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_14_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_14_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_14_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_14_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_14_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_14_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_14_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_14_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_14_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_14_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_14_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_14_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_14_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_14_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_14_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_14_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_14_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_14_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_14_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_14_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_14 Register WM_DMA_IGP_14 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_14 0x1E004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_14 0x1E79E004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_14_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_14_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_14_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_14_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_14_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_14 Register POCC_DMA_IGP_14 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_14 0x1E008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_14 0x1E79E008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_14_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_14_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_14_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_14 Register EQPC_DMA_IGP_14 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_14 0x1E00C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_14 0x1E79E00Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_14_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_14_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_14_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_14 Register DISC_DESC0_DMA_IGP_14 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_14 0x1E010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_14 0x1E79E010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_14 Register DISC_DESC1_DMA_IGP_14 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_14 0x1E014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_14 0x1E79E014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_14 Register DISC_DESC2_DMA_IGP_14 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_14 0x1E018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_14 0x1E79E018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_14 Register DISC_DESC3_DMA_IGP_14 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_14 0x1E01C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_14 0x1E79E01Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_14_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_14_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_14_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_14 Register IRNCR_DMA_IGP_14 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_14 0x1E020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_14 0x1E79E020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_14_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_14_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_14_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_14_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_14_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_14_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_14_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_14_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_14_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_14_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_14_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_14_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_14_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_14_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_14_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_14_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_14_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_14_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_14_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_14_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_14_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_14 Register IRNICR_DMA_IGP_14 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_14 0x1E024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_14 0x1E79E024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_14_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_14_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_14_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_14_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_14_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_14_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_14_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_14_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_14_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_14_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_14_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_14 Register IRNEN_DMA_IGP_14 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_14 0x1E028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_14 0x1E79E028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_14_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_14_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_14_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_14_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_14_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_14_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_14_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_14_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_14_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_14_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_14_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_14_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_14_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_14_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_14_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_14_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_14_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_14_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_14_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_14_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_14_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_14 Register DPTR_DMA_IGP_14 - DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_14 0x1E030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_14 0x1E79E030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_14_RST 0x00000101u
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_14_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_14_NSD_MASK 0x1u
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_14_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_14_NJD_MASK 0x100u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_14_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_14_SDPTR_MASK 0x10000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_14_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_14_JDPTR_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_14 Register DICC_IGP_14 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_14 0x1E038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_14 0x1E79E038u
+
+//! Register Reset Value
+#define DICC_IGP_14_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_14_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_14_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_14 Register DCNTR_IGP_14 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_14 0x1E04C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_14 0x1E79E04Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_14_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_14_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_14_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_14_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_14_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup CFG_DMA_IGP_15 Register CFG_DMA_IGP_15 - Legacy DMA Ingress Port Configuration
+//! @{
+
+//! Register Offset (relative)
+#define CFG_DMA_IGP_15 0x1F000
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_CFG_DMA_IGP_15 0x1E79F000u
+
+//! Register Reset Value
+#define CFG_DMA_IGP_15_RST 0x00001800u
+
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_15_EQREQ_POS 0
+//! Field EQREQ - Enable DMA Enqueue Request
+#define CFG_DMA_IGP_15_EQREQ_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_15_EQREQ_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_15_EQREQ_EN 0x1
+
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_15_DISCHALT_POS 3
+//! Field DISCHALT - Enable Discard Halt
+#define CFG_DMA_IGP_15_DISCHALT_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_15_DISCHALT_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_15_DISCHALT_EN 0x1
+
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_15_BAS_POS 4
+//! Field BAS - Base Address Select
+#define CFG_DMA_IGP_15_BAS_MASK 0x10u
+//! Constant BA0 - Base Address 0
+#define CONST_CFG_DMA_IGP_15_BAS_BA0 0x0
+//! Constant BA1 - Base Address 1
+#define CONST_CFG_DMA_IGP_15_BAS_BA1 0x1
+
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_15_EQPCEN_POS 8
+//! Field EQPCEN - Enqueue Counter Enable
+#define CFG_DMA_IGP_15_EQPCEN_MASK 0x100u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_15_EQPCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_15_EQPCEN_EN 0x1
+
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_15_POCCEN_POS 9
+//! Field POCCEN - Port Occupancy Counter Enable
+#define CFG_DMA_IGP_15_POCCEN_MASK 0x200u
+//! Constant DIS - DIS
+#define CONST_CFG_DMA_IGP_15_POCCEN_DIS 0x0
+//! Constant EN - EN
+#define CONST_CFG_DMA_IGP_15_POCCEN_EN 0x1
+
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_15_BP_EN_POS 10
+//! Field BP_EN - Backpressure enable
+#define CFG_DMA_IGP_15_BP_EN_MASK 0x400u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_15_BP_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_15_BP_EN_EN 0x1
+
+//! Field DESC_INV - Descriptor Invert
+#define CFG_DMA_IGP_15_DESC_INV_POS 11
+//! Field DESC_INV - Descriptor Invert
+#define CFG_DMA_IGP_15_DESC_INV_MASK 0x800u
+//! Constant DIS - Disable
+#define CONST_CFG_DMA_IGP_15_DESC_INV_DIS 0x0
+//! Constant EN - Enable
+#define CONST_CFG_DMA_IGP_15_DESC_INV_EN 0x1
+
+//! Field LDM - Legacy Descriptor Mode
+#define CFG_DMA_IGP_15_LDM_POS 12
+//! Field LDM - Legacy Descriptor Mode
+#define CFG_DMA_IGP_15_LDM_MASK 0x1000u
+//! Constant NORMAL - Normal mode
+#define CONST_CFG_DMA_IGP_15_LDM_NORMAL 0x0
+//! Constant LEGACY - Legacy mode
+#define CONST_CFG_DMA_IGP_15_LDM_LEGACY 0x1
+
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_15_DISC_POS 16
+//! Field DISC - Discard Reason
+#define CFG_DMA_IGP_15_DISC_MASK 0xF0000u
+//! Constant ACCEPTED - Accepted
+#define CONST_CFG_DMA_IGP_15_DISC_ACCEPTED 0x0
+//! Constant REASON1 - Reason 1
+#define CONST_CFG_DMA_IGP_15_DISC_REASON1 0x1
+//! Constant REASON2 - Reason 2
+#define CONST_CFG_DMA_IGP_15_DISC_REASON2 0x2
+//! Constant REASON3 - Reason 3
+#define CONST_CFG_DMA_IGP_15_DISC_REASON3 0x3
+//! Constant REASON4 - Reason 4
+#define CONST_CFG_DMA_IGP_15_DISC_REASON4 0x4
+//! Constant REASON5 - Reason 5
+#define CONST_CFG_DMA_IGP_15_DISC_REASON5 0x5
+//! Constant REASON6 - Reason 6
+#define CONST_CFG_DMA_IGP_15_DISC_REASON6 0x6
+//! Constant REASON7 - Reason 7
+#define CONST_CFG_DMA_IGP_15_DISC_REASON7 0x7
+//! Constant REASON8 - Reason 8
+#define CONST_CFG_DMA_IGP_15_DISC_REASON8 0x8
+//! Constant REASON9 - Reason 9
+#define CONST_CFG_DMA_IGP_15_DISC_REASON9 0x9
+//! Constant REASON10 - Reason 10
+#define CONST_CFG_DMA_IGP_15_DISC_REASON10 0xA
+//! Constant REASON11 - Reason 11
+#define CONST_CFG_DMA_IGP_15_DISC_REASON11 0xB
+//! Constant REASON12 - Reason 12
+#define CONST_CFG_DMA_IGP_15_DISC_REASON12 0xC
+//! Constant REASON13 - Reason 13
+#define CONST_CFG_DMA_IGP_15_DISC_REASON13 0xD
+//! Constant REASON14 - Reason 14
+#define CONST_CFG_DMA_IGP_15_DISC_REASON14 0xE
+//! Constant REASON15 - Reason 15
+#define CONST_CFG_DMA_IGP_15_DISC_REASON15 0xF
+
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_15_OVH_POS 20
+//! Field OVH - Overhead Bytes
+#define CFG_DMA_IGP_15_OVH_MASK 0xFF00000u
+
+//! @}
+
+//! \defgroup WM_DMA_IGP_15 Register WM_DMA_IGP_15 - DMA Ingress Port Watermarks
+//! @{
+
+//! Register Offset (relative)
+#define WM_DMA_IGP_15 0x1F004
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_WM_DMA_IGP_15 0x1E79F004u
+
+//! Register Reset Value
+#define WM_DMA_IGP_15_RST 0x3FFF0000u
+
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_15_LWM_POS 0
+//! Field LWM - Low watermark threshold
+#define WM_DMA_IGP_15_LWM_MASK 0x3FFFu
+
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_15_HWM_POS 16
+//! Field HWM - Low watermark threshold
+#define WM_DMA_IGP_15_HWM_MASK 0x3FFF0000u
+
+//! @}
+
+//! \defgroup POCC_DMA_IGP_15 Register POCC_DMA_IGP_15 - DMA Ingress Port Occupancy Counter
+//! @{
+
+//! Register Offset (relative)
+#define POCC_DMA_IGP_15 0x1F008
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_POCC_DMA_IGP_15 0x1E79F008u
+
+//! Register Reset Value
+#define POCC_DMA_IGP_15_RST 0x00000000u
+
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_15_POCC_POS 0
+//! Field POCC - Per Port Occupancy Counter
+#define POCC_DMA_IGP_15_POCC_MASK 0x3FFFu
+
+//! @}
+
+//! \defgroup EQPC_DMA_IGP_15 Register EQPC_DMA_IGP_15 - DMA Ingress Port enqueue packet counter
+//! @{
+
+//! Register Offset (relative)
+#define EQPC_DMA_IGP_15 0x1F00C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_EQPC_DMA_IGP_15 0x1E79F00Cu
+
+//! Register Reset Value
+#define EQPC_DMA_IGP_15_RST 0x00000000u
+
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_15_PC_POS 0
+//! Field PC - Per Port Packet Counter
+#define EQPC_DMA_IGP_15_PC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC0_DMA_IGP_15 Register DISC_DESC0_DMA_IGP_15 - DMA Ingress Port Discard Descriptor 0
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC0_DMA_IGP_15 0x1F010
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC0_DMA_IGP_15 0x1E79F010u
+
+//! Register Reset Value
+#define DISC_DESC0_DMA_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define DISC_DESC0_DMA_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC1_DMA_IGP_15 Register DISC_DESC1_DMA_IGP_15 - DMA Ingress Port Discard Descriptor 1
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC1_DMA_IGP_15 0x1F014
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC1_DMA_IGP_15 0x1E79F014u
+
+//! Register Reset Value
+#define DISC_DESC1_DMA_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define DISC_DESC1_DMA_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC2_DMA_IGP_15 Register DISC_DESC2_DMA_IGP_15 - DMA Ingress Port Discard Descriptor 2
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC2_DMA_IGP_15 0x1F018
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC2_DMA_IGP_15 0x1E79F018u
+
+//! Register Reset Value
+#define DISC_DESC2_DMA_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 2
+#define DISC_DESC2_DMA_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DISC_DESC3_DMA_IGP_15 Register DISC_DESC3_DMA_IGP_15 - DMA Ingress Port Discard Descriptor 3
+//! @{
+
+//! Register Offset (relative)
+#define DISC_DESC3_DMA_IGP_15 0x1F01C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DISC_DESC3_DMA_IGP_15 0x1E79F01Cu
+
+//! Register Reset Value
+#define DISC_DESC3_DMA_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 3
+#define DISC_DESC3_DMA_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup IRNCR_DMA_IGP_15 Register IRNCR_DMA_IGP_15 - DMA Ingress Port IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_DMA_IGP_15 0x1F020
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNCR_DMA_IGP_15 0x1E79F020u
+
+//! Register Reset Value
+#define IRNCR_DMA_IGP_15_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_15_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNCR_DMA_IGP_15_PNA_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_15_PNA_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_15_PNA_INTACK 0x1
+
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_15_LWMI_POS 1
+//! Field LWMI - Low watermark interrupt
+#define IRNCR_DMA_IGP_15_LWMI_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_15_LWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_15_LWMI_INTACK 0x1
+
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_15_HWMI_POS 2
+//! Field HWMI - High watermark interrupt
+#define IRNCR_DMA_IGP_15_HWMI_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_15_HWMI_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_DMA_IGP_15_HWMI_INTACK 0x1
+
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_15_SDR_POS 3
+//! Field SDR - Standard Descriptor ready
+#define IRNCR_DMA_IGP_15_SDR_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_15_SDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_15_SDR_INTOCC 0x1
+
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_15_JDR_POS 4
+//! Field JDR - Jumbo Descriptor ready
+#define IRNCR_DMA_IGP_15_JDR_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_IRNCR_DMA_IGP_15_JDR_NUL 0x0
+//! Constant INTOCC - INTOCC
+#define CONST_IRNCR_DMA_IGP_15_JDR_INTOCC 0x1
+
+//! @}
+
+//! \defgroup IRNICR_DMA_IGP_15 Register IRNICR_DMA_IGP_15 - DMA Ingress Port IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_DMA_IGP_15 0x1F024
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNICR_DMA_IGP_15 0x1E79F024u
+
+//! Register Reset Value
+#define IRNICR_DMA_IGP_15_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_15_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNICR_DMA_IGP_15_PNA_MASK 0x1u
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_15_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNICR_DMA_IGP_15_LWMI_MASK 0x2u
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_15_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNICR_DMA_IGP_15_HWMI_MASK 0x4u
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_15_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNICR_DMA_IGP_15_SDR_MASK 0x8u
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_15_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNICR_DMA_IGP_15_JDR_MASK 0x10u
+
+//! @}
+
+//! \defgroup IRNEN_DMA_IGP_15 Register IRNEN_DMA_IGP_15 - DMA Ingress Port IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_DMA_IGP_15 0x1F028
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_IRNEN_DMA_IGP_15 0x1E79F028u
+
+//! Register Reset Value
+#define IRNEN_DMA_IGP_15_RST 0x00000000u
+
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_15_PNA_POS 0
+//! Field PNA - Packet Not Accepted
+#define IRNEN_DMA_IGP_15_PNA_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_15_PNA_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_15_PNA_EN 0x1
+
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_15_LWMI_POS 1
+//! Field LWMI - Low Watermark Interrupt
+#define IRNEN_DMA_IGP_15_LWMI_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_15_LWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_15_LWMI_EN 0x1
+
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_15_HWMI_POS 2
+//! Field HWMI - High Watermark Interrupt
+#define IRNEN_DMA_IGP_15_HWMI_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_15_HWMI_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_15_HWMI_EN 0x1
+
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_15_SDR_POS 3
+//! Field SDR - Standard Descriptor Ready
+#define IRNEN_DMA_IGP_15_SDR_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_15_SDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_15_SDR_EN 0x1
+
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_15_JDR_POS 4
+//! Field JDR - Jumbo Descriptor Ready
+#define IRNEN_DMA_IGP_15_JDR_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_IRNEN_DMA_IGP_15_JDR_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_DMA_IGP_15_JDR_EN 0x1
+
+//! @}
+
+//! \defgroup DPTR_DMA_IGP_15 Register DPTR_DMA_IGP_15 - Legacy DMA Ingress Port Descriptor Pointer
+//! @{
+
+//! Register Offset (relative)
+#define DPTR_DMA_IGP_15 0x1F030
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DPTR_DMA_IGP_15 0x1E79F030u
+
+//! Register Reset Value
+#define DPTR_DMA_IGP_15_RST 0x0000071Fu
+
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_15_NSD_POS 0
+//! Field NSD - Number of Standard Descriptors
+#define DPTR_DMA_IGP_15_NSD_MASK 0x1Fu
+
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_15_NJD_POS 8
+//! Field NJD - Number of Jumbo Descriptors
+#define DPTR_DMA_IGP_15_NJD_MASK 0x700u
+
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_15_SDPTR_POS 16
+//! Field SDPTR - Standard Descriptor Pointer
+#define DPTR_DMA_IGP_15_SDPTR_MASK 0x1F0000u
+
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_15_JDPTR_POS 24
+//! Field JDPTR - Jumbo Descriptor Pointer
+#define DPTR_DMA_IGP_15_JDPTR_MASK 0x7000000u
+
+//! @}
+
+//! \defgroup DICC_IGP_15 Register DICC_IGP_15 - Ingress Port Discard counter
+//! @{
+
+//! Register Offset (relative)
+#define DICC_IGP_15 0x1F038
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DICC_IGP_15 0x1E79F038u
+
+//! Register Reset Value
+#define DICC_IGP_15_RST 0x00000000u
+
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_15_DICC_POS 0
+//! Field DICC - Per Port Discard Counter
+#define DICC_IGP_15_DICC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup DCNTR_IGP_15 Register DCNTR_IGP_15 - Ingress Port Delay Counter
+//! @{
+
+//! Register Offset (relative)
+#define DCNTR_IGP_15 0x1F04C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_DCNTR_IGP_15 0x1E79F04Cu
+
+//! Register Reset Value
+#define DCNTR_IGP_15_RST 0x00000100u
+
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_15_DLY_POS 0
+//! Field DLY - Additional Delay before TMU enqueue
+#define DCNTR_IGP_15_DLY_MASK 0x3Fu
+
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_15_DCNT_POS 8
+//! Field DCNT - Counter Value
+#define DCNTR_IGP_15_DCNT_MASK 0x3F00u
+
+//! @}
+
+//! \defgroup SDESC0_0_IGP_15 Register SDESC0_0_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_0_IGP_15 0x1F100
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_0_IGP_15 0x1E79F100u
+
+//! Register Reset Value
+#define SDESC0_0_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_0_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_0_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_0_IGP_15 Register SDESC1_0_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_0_IGP_15 0x1F104
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_0_IGP_15 0x1E79F104u
+
+//! Register Reset Value
+#define SDESC1_0_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_0_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_0_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_1_IGP_15 Register SDESC0_1_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_1_IGP_15 0x1F108
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_1_IGP_15 0x1E79F108u
+
+//! Register Reset Value
+#define SDESC0_1_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_1_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_1_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_1_IGP_15 Register SDESC1_1_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_1_IGP_15 0x1F10C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_1_IGP_15 0x1E79F10Cu
+
+//! Register Reset Value
+#define SDESC1_1_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_1_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_1_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_2_IGP_15 Register SDESC0_2_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_2_IGP_15 0x1F110
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_2_IGP_15 0x1E79F110u
+
+//! Register Reset Value
+#define SDESC0_2_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_2_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_2_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_2_IGP_15 Register SDESC1_2_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_2_IGP_15 0x1F114
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_2_IGP_15 0x1E79F114u
+
+//! Register Reset Value
+#define SDESC1_2_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_2_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_2_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_3_IGP_15 Register SDESC0_3_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_3_IGP_15 0x1F118
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_3_IGP_15 0x1E79F118u
+
+//! Register Reset Value
+#define SDESC0_3_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_3_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_3_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_3_IGP_15 Register SDESC1_3_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_3_IGP_15 0x1F11C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_3_IGP_15 0x1E79F11Cu
+
+//! Register Reset Value
+#define SDESC1_3_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_3_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_3_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_4_IGP_15 Register SDESC0_4_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_4_IGP_15 0x1F120
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_4_IGP_15 0x1E79F120u
+
+//! Register Reset Value
+#define SDESC0_4_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_4_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_4_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_4_IGP_15 Register SDESC1_4_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_4_IGP_15 0x1F124
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_4_IGP_15 0x1E79F124u
+
+//! Register Reset Value
+#define SDESC1_4_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_4_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_4_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_5_IGP_15 Register SDESC0_5_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_5_IGP_15 0x1F128
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_5_IGP_15 0x1E79F128u
+
+//! Register Reset Value
+#define SDESC0_5_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_5_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_5_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_5_IGP_15 Register SDESC1_5_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_5_IGP_15 0x1F12C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_5_IGP_15 0x1E79F12Cu
+
+//! Register Reset Value
+#define SDESC1_5_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_5_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_5_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_6_IGP_15 Register SDESC0_6_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_6_IGP_15 0x1F130
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_6_IGP_15 0x1E79F130u
+
+//! Register Reset Value
+#define SDESC0_6_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_6_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_6_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_6_IGP_15 Register SDESC1_6_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_6_IGP_15 0x1F134
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_6_IGP_15 0x1E79F134u
+
+//! Register Reset Value
+#define SDESC1_6_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_6_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_6_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_7_IGP_15 Register SDESC0_7_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_7_IGP_15 0x1F138
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_7_IGP_15 0x1E79F138u
+
+//! Register Reset Value
+#define SDESC0_7_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_7_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_7_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_7_IGP_15 Register SDESC1_7_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_7_IGP_15 0x1F13C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_7_IGP_15 0x1E79F13Cu
+
+//! Register Reset Value
+#define SDESC1_7_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_7_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_7_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_8_IGP_15 Register SDESC0_8_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_8_IGP_15 0x1F140
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_8_IGP_15 0x1E79F140u
+
+//! Register Reset Value
+#define SDESC0_8_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_8_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_8_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_8_IGP_15 Register SDESC1_8_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_8_IGP_15 0x1F144
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_8_IGP_15 0x1E79F144u
+
+//! Register Reset Value
+#define SDESC1_8_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_8_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_8_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_9_IGP_15 Register SDESC0_9_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_9_IGP_15 0x1F148
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_9_IGP_15 0x1E79F148u
+
+//! Register Reset Value
+#define SDESC0_9_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_9_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_9_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_9_IGP_15 Register SDESC1_9_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_9_IGP_15 0x1F14C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_9_IGP_15 0x1E79F14Cu
+
+//! Register Reset Value
+#define SDESC1_9_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_9_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_9_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_10_IGP_15 Register SDESC0_10_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_10_IGP_15 0x1F150
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_10_IGP_15 0x1E79F150u
+
+//! Register Reset Value
+#define SDESC0_10_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_10_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_10_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_10_IGP_15 Register SDESC1_10_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_10_IGP_15 0x1F154
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_10_IGP_15 0x1E79F154u
+
+//! Register Reset Value
+#define SDESC1_10_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_10_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_10_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_11_IGP_15 Register SDESC0_11_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_11_IGP_15 0x1F158
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_11_IGP_15 0x1E79F158u
+
+//! Register Reset Value
+#define SDESC0_11_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_11_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_11_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_11_IGP_15 Register SDESC1_11_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_11_IGP_15 0x1F15C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_11_IGP_15 0x1E79F15Cu
+
+//! Register Reset Value
+#define SDESC1_11_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_11_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_11_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_12_IGP_15 Register SDESC0_12_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_12_IGP_15 0x1F160
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_12_IGP_15 0x1E79F160u
+
+//! Register Reset Value
+#define SDESC0_12_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_12_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_12_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_12_IGP_15 Register SDESC1_12_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_12_IGP_15 0x1F164
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_12_IGP_15 0x1E79F164u
+
+//! Register Reset Value
+#define SDESC1_12_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_12_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_12_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_13_IGP_15 Register SDESC0_13_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_13_IGP_15 0x1F168
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_13_IGP_15 0x1E79F168u
+
+//! Register Reset Value
+#define SDESC0_13_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_13_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_13_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_13_IGP_15 Register SDESC1_13_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_13_IGP_15 0x1F16C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_13_IGP_15 0x1E79F16Cu
+
+//! Register Reset Value
+#define SDESC1_13_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_13_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_13_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_14_IGP_15 Register SDESC0_14_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_14_IGP_15 0x1F170
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_14_IGP_15 0x1E79F170u
+
+//! Register Reset Value
+#define SDESC0_14_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_14_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_14_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_14_IGP_15 Register SDESC1_14_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_14_IGP_15 0x1F174
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_14_IGP_15 0x1E79F174u
+
+//! Register Reset Value
+#define SDESC1_14_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_14_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_14_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_15_IGP_15 Register SDESC0_15_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_15_IGP_15 0x1F178
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_15_IGP_15 0x1E79F178u
+
+//! Register Reset Value
+#define SDESC0_15_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_15_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_15_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_15_IGP_15 Register SDESC1_15_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_15_IGP_15 0x1F17C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_15_IGP_15 0x1E79F17Cu
+
+//! Register Reset Value
+#define SDESC1_15_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_15_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_15_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_16_IGP_15 Register SDESC0_16_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_16_IGP_15 0x1F180
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_16_IGP_15 0x1E79F180u
+
+//! Register Reset Value
+#define SDESC0_16_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_16_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_16_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_16_IGP_15 Register SDESC1_16_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_16_IGP_15 0x1F184
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_16_IGP_15 0x1E79F184u
+
+//! Register Reset Value
+#define SDESC1_16_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_16_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_16_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_17_IGP_15 Register SDESC0_17_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_17_IGP_15 0x1F188
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_17_IGP_15 0x1E79F188u
+
+//! Register Reset Value
+#define SDESC0_17_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_17_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_17_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_17_IGP_15 Register SDESC1_17_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_17_IGP_15 0x1F18C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_17_IGP_15 0x1E79F18Cu
+
+//! Register Reset Value
+#define SDESC1_17_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_17_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_17_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_18_IGP_15 Register SDESC0_18_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_18_IGP_15 0x1F190
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_18_IGP_15 0x1E79F190u
+
+//! Register Reset Value
+#define SDESC0_18_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_18_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_18_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_18_IGP_15 Register SDESC1_18_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_18_IGP_15 0x1F194
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_18_IGP_15 0x1E79F194u
+
+//! Register Reset Value
+#define SDESC1_18_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_18_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_18_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_19_IGP_15 Register SDESC0_19_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_19_IGP_15 0x1F198
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_19_IGP_15 0x1E79F198u
+
+//! Register Reset Value
+#define SDESC0_19_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_19_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_19_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_19_IGP_15 Register SDESC1_19_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_19_IGP_15 0x1F19C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_19_IGP_15 0x1E79F19Cu
+
+//! Register Reset Value
+#define SDESC1_19_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_19_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_19_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_20_IGP_15 Register SDESC0_20_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_20_IGP_15 0x1F1A0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_20_IGP_15 0x1E79F1A0u
+
+//! Register Reset Value
+#define SDESC0_20_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_20_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_20_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_20_IGP_15 Register SDESC1_20_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_20_IGP_15 0x1F1A4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_20_IGP_15 0x1E79F1A4u
+
+//! Register Reset Value
+#define SDESC1_20_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_20_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_20_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_21_IGP_15 Register SDESC0_21_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_21_IGP_15 0x1F1A8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_21_IGP_15 0x1E79F1A8u
+
+//! Register Reset Value
+#define SDESC0_21_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_21_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_21_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_21_IGP_15 Register SDESC1_21_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_21_IGP_15 0x1F1AC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_21_IGP_15 0x1E79F1ACu
+
+//! Register Reset Value
+#define SDESC1_21_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_21_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_21_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_22_IGP_15 Register SDESC0_22_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_22_IGP_15 0x1F1B0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_22_IGP_15 0x1E79F1B0u
+
+//! Register Reset Value
+#define SDESC0_22_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_22_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_22_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_22_IGP_15 Register SDESC1_22_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_22_IGP_15 0x1F1B4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_22_IGP_15 0x1E79F1B4u
+
+//! Register Reset Value
+#define SDESC1_22_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_22_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_22_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_23_IGP_15 Register SDESC0_23_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_23_IGP_15 0x1F1B8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_23_IGP_15 0x1E79F1B8u
+
+//! Register Reset Value
+#define SDESC0_23_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_23_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_23_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_23_IGP_15 Register SDESC1_23_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_23_IGP_15 0x1F1BC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_23_IGP_15 0x1E79F1BCu
+
+//! Register Reset Value
+#define SDESC1_23_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_23_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_23_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_24_IGP_15 Register SDESC0_24_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_24_IGP_15 0x1F1C0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_24_IGP_15 0x1E79F1C0u
+
+//! Register Reset Value
+#define SDESC0_24_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_24_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_24_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_24_IGP_15 Register SDESC1_24_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_24_IGP_15 0x1F1C4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_24_IGP_15 0x1E79F1C4u
+
+//! Register Reset Value
+#define SDESC1_24_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_24_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_24_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_25_IGP_15 Register SDESC0_25_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_25_IGP_15 0x1F1C8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_25_IGP_15 0x1E79F1C8u
+
+//! Register Reset Value
+#define SDESC0_25_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_25_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_25_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_25_IGP_15 Register SDESC1_25_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_25_IGP_15 0x1F1CC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_25_IGP_15 0x1E79F1CCu
+
+//! Register Reset Value
+#define SDESC1_25_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_25_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_25_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_26_IGP_15 Register SDESC0_26_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_26_IGP_15 0x1F1D0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_26_IGP_15 0x1E79F1D0u
+
+//! Register Reset Value
+#define SDESC0_26_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_26_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_26_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_26_IGP_15 Register SDESC1_26_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_26_IGP_15 0x1F1D4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_26_IGP_15 0x1E79F1D4u
+
+//! Register Reset Value
+#define SDESC1_26_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_26_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_26_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_27_IGP_15 Register SDESC0_27_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_27_IGP_15 0x1F1D8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_27_IGP_15 0x1E79F1D8u
+
+//! Register Reset Value
+#define SDESC0_27_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_27_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_27_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_27_IGP_15 Register SDESC1_27_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_27_IGP_15 0x1F1DC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_27_IGP_15 0x1E79F1DCu
+
+//! Register Reset Value
+#define SDESC1_27_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_27_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_27_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_28_IGP_15 Register SDESC0_28_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_28_IGP_15 0x1F1E0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_28_IGP_15 0x1E79F1E0u
+
+//! Register Reset Value
+#define SDESC0_28_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_28_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_28_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_28_IGP_15 Register SDESC1_28_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_28_IGP_15 0x1F1E4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_28_IGP_15 0x1E79F1E4u
+
+//! Register Reset Value
+#define SDESC1_28_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_28_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_28_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_29_IGP_15 Register SDESC0_29_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_29_IGP_15 0x1F1E8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_29_IGP_15 0x1E79F1E8u
+
+//! Register Reset Value
+#define SDESC0_29_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_29_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_29_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_29_IGP_15 Register SDESC1_29_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_29_IGP_15 0x1F1EC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_29_IGP_15 0x1E79F1ECu
+
+//! Register Reset Value
+#define SDESC1_29_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_29_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_29_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_30_IGP_15 Register SDESC0_30_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_30_IGP_15 0x1F1F0
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_30_IGP_15 0x1E79F1F0u
+
+//! Register Reset Value
+#define SDESC0_30_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_30_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_30_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_30_IGP_15 Register SDESC1_30_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_30_IGP_15 0x1F1F4
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_30_IGP_15 0x1E79F1F4u
+
+//! Register Reset Value
+#define SDESC1_30_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_30_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_30_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC0_31_IGP_15 Register SDESC0_31_IGP_15 - DMA Ingress Port Standard Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define SDESC0_31_IGP_15 0x1F1F8
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC0_31_IGP_15 0x1E79F1F8u
+
+//! Register Reset Value
+#define SDESC0_31_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_31_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define SDESC0_31_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup SDESC1_31_IGP_15 Register SDESC1_31_IGP_15 - DMA Ingress Port Standard Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define SDESC1_31_IGP_15 0x1F1FC
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_SDESC1_31_IGP_15 0x1E79F1FCu
+
+//! Register Reset Value
+#define SDESC1_31_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_31_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define SDESC1_31_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_0_IGP_15 Register JDESC0_0_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_0_IGP_15 0x1F800
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_0_IGP_15 0x1E79F800u
+
+//! Register Reset Value
+#define JDESC0_0_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_0_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_0_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_0_IGP_15 Register JDESC1_0_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_0_IGP_15 0x1F804
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_0_IGP_15 0x1E79F804u
+
+//! Register Reset Value
+#define JDESC1_0_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_0_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_0_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_1_IGP_15 Register JDESC0_1_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_1_IGP_15 0x1F808
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_1_IGP_15 0x1E79F808u
+
+//! Register Reset Value
+#define JDESC0_1_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_1_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_1_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_1_IGP_15 Register JDESC1_1_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_1_IGP_15 0x1F80C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_1_IGP_15 0x1E79F80Cu
+
+//! Register Reset Value
+#define JDESC1_1_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_1_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_1_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_2_IGP_15 Register JDESC0_2_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_2_IGP_15 0x1F810
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_2_IGP_15 0x1E79F810u
+
+//! Register Reset Value
+#define JDESC0_2_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_2_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_2_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_2_IGP_15 Register JDESC1_2_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_2_IGP_15 0x1F814
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_2_IGP_15 0x1E79F814u
+
+//! Register Reset Value
+#define JDESC1_2_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_2_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_2_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_3_IGP_15 Register JDESC0_3_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_3_IGP_15 0x1F818
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_3_IGP_15 0x1E79F818u
+
+//! Register Reset Value
+#define JDESC0_3_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_3_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_3_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_3_IGP_15 Register JDESC1_3_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_3_IGP_15 0x1F81C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_3_IGP_15 0x1E79F81Cu
+
+//! Register Reset Value
+#define JDESC1_3_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_3_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_3_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_4_IGP_15 Register JDESC0_4_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_4_IGP_15 0x1F820
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_4_IGP_15 0x1E79F820u
+
+//! Register Reset Value
+#define JDESC0_4_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_4_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_4_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_4_IGP_15 Register JDESC1_4_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_4_IGP_15 0x1F824
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_4_IGP_15 0x1E79F824u
+
+//! Register Reset Value
+#define JDESC1_4_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_4_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_4_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_5_IGP_15 Register JDESC0_5_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_5_IGP_15 0x1F828
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_5_IGP_15 0x1E79F828u
+
+//! Register Reset Value
+#define JDESC0_5_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_5_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_5_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_5_IGP_15 Register JDESC1_5_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_5_IGP_15 0x1F82C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_5_IGP_15 0x1E79F82Cu
+
+//! Register Reset Value
+#define JDESC1_5_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_5_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_5_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_6_IGP_15 Register JDESC0_6_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_6_IGP_15 0x1F830
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_6_IGP_15 0x1E79F830u
+
+//! Register Reset Value
+#define JDESC0_6_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_6_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_6_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_6_IGP_15 Register JDESC1_6_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_6_IGP_15 0x1F834
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_6_IGP_15 0x1E79F834u
+
+//! Register Reset Value
+#define JDESC1_6_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_6_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_6_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC0_7_IGP_15 Register JDESC0_7_IGP_15 - DMA Ingress Port Jumbo Descriptor DW0
+//! @{
+
+//! Register Offset (relative)
+#define JDESC0_7_IGP_15 0x1F838
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC0_7_IGP_15 0x1E79F838u
+
+//! Register Reset Value
+#define JDESC0_7_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_7_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 0
+#define JDESC0_7_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup JDESC1_7_IGP_15 Register JDESC1_7_IGP_15 - DMA Ingress Port Jumbo Descriptor DW1
+//! @{
+
+//! Register Offset (relative)
+#define JDESC1_7_IGP_15 0x1F83C
+//! Register Offset (absolute) for 1st Instance CBM_EQM
+#define CBM_EQM_JDESC1_7_IGP_15 0x1E79F83Cu
+
+//! Register Reset Value
+#define JDESC1_7_IGP_15_RST 0x00000000u
+
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_7_IGP_15_DESC_POS 0
+//! Field DESC - Descriptor Double Word 1
+#define JDESC1_7_IGP_15_DESC_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! @}
+
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/reg/cbm_ls.h b/drivers/net/ethernet/lantiq/cbm/reg/cbm_ls.h
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/reg/cbm_ls.h
@@ -0,0 +1,4727 @@
+//-----------------------------------------------------------------------------
+// LSD Generator
+//-----------------------------------------------------------------------------
+// Perl Package        : LSD::generator::targetC (v1.1)
+// LSD Source          : D:/Users/shij/Perforce/l1033.grx500.win.v_shij.priv.dfv.grx500.dfv/ipg_lsd/lsd_sys/source/xml/reg_files/load_spreader.xml
+// Register File Name  : CBM_LS
+// Register File Title : Load Spreader Register Description
+// Register Width      : 32
+// Note                : Doxygen compliant comments
+//-----------------------------------------------------------------------------
+
+#ifndef _CBM_LS_H
+#define _CBM_LS_H
+
+//! \defgroup CBM_LS Register File CBM_LS - Load Spreader Register Description
+//! @{
+
+//! Base Address of CBM_LS
+#define CBM_LS_MODULE_BASE 0x1E760000u
+
+//! \defgroup LS_DESC_DW0_PORT0 Register LS_DESC_DW0_PORT0 - Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW0_PORT0 0x0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW0_PORT0 0x1E760000u
+
+//! Register Reset Value
+#define LS_DESC_DW0_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW1_PORT0 Register LS_DESC_DW1_PORT0 - Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW1_PORT0 0x4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW1_PORT0 0x1E760004u
+
+//! Register Reset Value
+#define LS_DESC_DW1_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW2_PORT0 Register LS_DESC_DW2_PORT0 - Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW2_PORT0 0x8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW2_PORT0 0x1E760008u
+
+//! Register Reset Value
+#define LS_DESC_DW2_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW3_PORT0 Register LS_DESC_DW3_PORT0 - Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW3_PORT0 0xC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW3_PORT0 0x1E76000Cu
+
+//! Register Reset Value
+#define LS_DESC_DW3_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_CTRL_PORT0 Register LS_CTRL_PORT0 - Load Spreader Port Control Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_CTRL_PORT0 0x10
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_CTRL_PORT0 0x1E760010u
+
+//! Register Reset Value
+#define LS_CTRL_PORT0_RST 0x00000400u
+
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT0_PORT_EN_POS 0
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT0_PORT_EN_MASK 0x1u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT0_PORT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT0_PORT_EN_EN 0x1
+
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT0_SPR_EN_POS 1
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT0_SPR_EN_MASK 0x2u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT0_SPR_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT0_SPR_EN_EN 0x1
+
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT0_INT_EN_POS 2
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT0_INT_EN_MASK 0x4u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT0_INT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT0_INT_EN_EN 0x1
+
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT0_CNT_EN_POS 3
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT0_CNT_EN_MASK 0x8u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT0_CNT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT0_CNT_EN_EN 0x1
+
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT0_QUEUE_THRSHLD_POS 8
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT0_QUEUE_THRSHLD_MASK 0x700u
+
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT0_CNT_THRSHLD_POS 16
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT0_CNT_THRSHLD_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_STATUS_PORT0 Register LS_STATUS_PORT0 - Load Spreader Port Status Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_STATUS_PORT0 0x14
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_STATUS_PORT0 0x1E760014u
+
+//! Register Reset Value
+#define LS_STATUS_PORT0_RST 0x00002000u
+
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT0_QUEUE_LEN_POS 7
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT0_QUEUE_LEN_MASK 0x780u
+
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT0_QUEUE_FULL_POS 12
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT0_QUEUE_FULL_MASK 0x1000u
+
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT0_QUEUE_EMPTY_POS 13
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT0_QUEUE_EMPTY_MASK 0x2000u
+
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT0_CNT_VAL_POS 16
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT0_CNT_VAL_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_0_PORT0 Register LS_QDESC_DW0_0_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_0_PORT0 0x20
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_0_PORT0 0x1E760020u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_0_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_0_PORT0 Register LS_QDESC_DW1_0_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_0_PORT0 0x24
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_0_PORT0 0x1E760024u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_0_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_0_PORT0 Register LS_QDESC_DW2_0_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_0_PORT0 0x28
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_0_PORT0 0x1E760028u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_0_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_0_PORT0 Register LS_QDESC_DW3_0_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_0_PORT0 0x2C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_0_PORT0 0x1E76002Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_0_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_1_PORT0 Register LS_QDESC_DW0_1_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_1_PORT0 0x30
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_1_PORT0 0x1E760030u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_1_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_1_PORT0 Register LS_QDESC_DW1_1_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_1_PORT0 0x34
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_1_PORT0 0x1E760034u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_1_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_1_PORT0 Register LS_QDESC_DW2_1_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_1_PORT0 0x38
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_1_PORT0 0x1E760038u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_1_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_1_PORT0 Register LS_QDESC_DW3_1_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_1_PORT0 0x3C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_1_PORT0 0x1E76003Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_1_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_2_PORT0 Register LS_QDESC_DW0_2_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_2_PORT0 0x40
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_2_PORT0 0x1E760040u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_2_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_2_PORT0 Register LS_QDESC_DW1_2_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_2_PORT0 0x44
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_2_PORT0 0x1E760044u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_2_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_2_PORT0 Register LS_QDESC_DW2_2_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_2_PORT0 0x48
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_2_PORT0 0x1E760048u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_2_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_2_PORT0 Register LS_QDESC_DW3_2_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_2_PORT0 0x4C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_2_PORT0 0x1E76004Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_2_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_3_PORT0 Register LS_QDESC_DW0_3_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_3_PORT0 0x50
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_3_PORT0 0x1E760050u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_3_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_3_PORT0 Register LS_QDESC_DW1_3_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_3_PORT0 0x54
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_3_PORT0 0x1E760054u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_3_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_3_PORT0 Register LS_QDESC_DW2_3_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_3_PORT0 0x58
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_3_PORT0 0x1E760058u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_3_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_3_PORT0 Register LS_QDESC_DW3_3_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_3_PORT0 0x5C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_3_PORT0 0x1E76005Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_3_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_4_PORT0 Register LS_QDESC_DW0_4_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_4_PORT0 0x60
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_4_PORT0 0x1E760060u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_4_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_4_PORT0 Register LS_QDESC_DW1_4_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_4_PORT0 0x64
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_4_PORT0 0x1E760064u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_4_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_4_PORT0 Register LS_QDESC_DW2_4_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_4_PORT0 0x68
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_4_PORT0 0x1E760068u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_4_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_4_PORT0 Register LS_QDESC_DW3_4_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_4_PORT0 0x6C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_4_PORT0 0x1E76006Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_4_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_5_PORT0 Register LS_QDESC_DW0_5_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_5_PORT0 0x70
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_5_PORT0 0x1E760070u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_5_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_5_PORT0 Register LS_QDESC_DW1_5_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_5_PORT0 0x74
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_5_PORT0 0x1E760074u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_5_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_5_PORT0 Register LS_QDESC_DW2_5_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_5_PORT0 0x78
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_5_PORT0 0x1E760078u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_5_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_5_PORT0 Register LS_QDESC_DW3_5_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_5_PORT0 0x7C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_5_PORT0 0x1E76007Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_5_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_6_PORT0 Register LS_QDESC_DW0_6_PORT0 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_6_PORT0 0x80
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_6_PORT0 0x1E760080u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_6_PORT0_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT0_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT0_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_6_PORT0 Register LS_QDESC_DW1_6_PORT0 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_6_PORT0 0x84
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_6_PORT0 0x1E760084u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_6_PORT0_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT0_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT0_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_6_PORT0 Register LS_QDESC_DW2_6_PORT0 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_6_PORT0 0x88
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_6_PORT0 0x1E760088u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_6_PORT0_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT0_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT0_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_6_PORT0 Register LS_QDESC_DW3_6_PORT0 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_6_PORT0 0x8C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_6_PORT0 0x1E76008Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_6_PORT0_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT0_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT0_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW0_PORT1 Register LS_DESC_DW0_PORT1 - Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW0_PORT1 0x100
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW0_PORT1 0x1E760100u
+
+//! Register Reset Value
+#define LS_DESC_DW0_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW1_PORT1 Register LS_DESC_DW1_PORT1 - Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW1_PORT1 0x104
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW1_PORT1 0x1E760104u
+
+//! Register Reset Value
+#define LS_DESC_DW1_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW2_PORT1 Register LS_DESC_DW2_PORT1 - Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW2_PORT1 0x108
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW2_PORT1 0x1E760108u
+
+//! Register Reset Value
+#define LS_DESC_DW2_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW3_PORT1 Register LS_DESC_DW3_PORT1 - Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW3_PORT1 0x10C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW3_PORT1 0x1E76010Cu
+
+//! Register Reset Value
+#define LS_DESC_DW3_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_CTRL_PORT1 Register LS_CTRL_PORT1 - Load Spreader Port Control Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_CTRL_PORT1 0x110
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_CTRL_PORT1 0x1E760110u
+
+//! Register Reset Value
+#define LS_CTRL_PORT1_RST 0x00000400u
+
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT1_PORT_EN_POS 0
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT1_PORT_EN_MASK 0x1u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT1_PORT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT1_PORT_EN_EN 0x1
+
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT1_SPR_EN_POS 1
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT1_SPR_EN_MASK 0x2u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT1_SPR_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT1_SPR_EN_EN 0x1
+
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT1_INT_EN_POS 2
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT1_INT_EN_MASK 0x4u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT1_INT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT1_INT_EN_EN 0x1
+
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT1_CNT_EN_POS 3
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT1_CNT_EN_MASK 0x8u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT1_CNT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT1_CNT_EN_EN 0x1
+
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT1_QUEUE_THRSHLD_POS 8
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT1_QUEUE_THRSHLD_MASK 0x700u
+
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT1_CNT_THRSHLD_POS 16
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT1_CNT_THRSHLD_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_STATUS_PORT1 Register LS_STATUS_PORT1 - Load Spreader Port Status Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_STATUS_PORT1 0x114
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_STATUS_PORT1 0x1E760114u
+
+//! Register Reset Value
+#define LS_STATUS_PORT1_RST 0x00002000u
+
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT1_QUEUE_LEN_POS 7
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT1_QUEUE_LEN_MASK 0x780u
+
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT1_QUEUE_FULL_POS 12
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT1_QUEUE_FULL_MASK 0x1000u
+
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT1_QUEUE_EMPTY_POS 13
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT1_QUEUE_EMPTY_MASK 0x2000u
+
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT1_CNT_VAL_POS 16
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT1_CNT_VAL_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_0_PORT1 Register LS_QDESC_DW0_0_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_0_PORT1 0x120
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_0_PORT1 0x1E760120u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_0_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_0_PORT1 Register LS_QDESC_DW1_0_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_0_PORT1 0x124
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_0_PORT1 0x1E760124u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_0_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_0_PORT1 Register LS_QDESC_DW2_0_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_0_PORT1 0x128
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_0_PORT1 0x1E760128u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_0_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_0_PORT1 Register LS_QDESC_DW3_0_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_0_PORT1 0x12C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_0_PORT1 0x1E76012Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_0_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_1_PORT1 Register LS_QDESC_DW0_1_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_1_PORT1 0x130
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_1_PORT1 0x1E760130u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_1_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_1_PORT1 Register LS_QDESC_DW1_1_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_1_PORT1 0x134
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_1_PORT1 0x1E760134u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_1_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_1_PORT1 Register LS_QDESC_DW2_1_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_1_PORT1 0x138
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_1_PORT1 0x1E760138u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_1_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_1_PORT1 Register LS_QDESC_DW3_1_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_1_PORT1 0x13C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_1_PORT1 0x1E76013Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_1_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_2_PORT1 Register LS_QDESC_DW0_2_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_2_PORT1 0x140
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_2_PORT1 0x1E760140u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_2_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_2_PORT1 Register LS_QDESC_DW1_2_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_2_PORT1 0x144
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_2_PORT1 0x1E760144u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_2_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_2_PORT1 Register LS_QDESC_DW2_2_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_2_PORT1 0x148
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_2_PORT1 0x1E760148u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_2_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_2_PORT1 Register LS_QDESC_DW3_2_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_2_PORT1 0x14C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_2_PORT1 0x1E76014Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_2_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_3_PORT1 Register LS_QDESC_DW0_3_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_3_PORT1 0x150
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_3_PORT1 0x1E760150u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_3_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_3_PORT1 Register LS_QDESC_DW1_3_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_3_PORT1 0x154
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_3_PORT1 0x1E760154u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_3_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_3_PORT1 Register LS_QDESC_DW2_3_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_3_PORT1 0x158
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_3_PORT1 0x1E760158u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_3_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_3_PORT1 Register LS_QDESC_DW3_3_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_3_PORT1 0x15C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_3_PORT1 0x1E76015Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_3_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_4_PORT1 Register LS_QDESC_DW0_4_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_4_PORT1 0x160
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_4_PORT1 0x1E760160u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_4_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_4_PORT1 Register LS_QDESC_DW1_4_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_4_PORT1 0x164
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_4_PORT1 0x1E760164u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_4_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_4_PORT1 Register LS_QDESC_DW2_4_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_4_PORT1 0x168
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_4_PORT1 0x1E760168u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_4_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_4_PORT1 Register LS_QDESC_DW3_4_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_4_PORT1 0x16C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_4_PORT1 0x1E76016Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_4_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_5_PORT1 Register LS_QDESC_DW0_5_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_5_PORT1 0x170
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_5_PORT1 0x1E760170u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_5_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_5_PORT1 Register LS_QDESC_DW1_5_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_5_PORT1 0x174
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_5_PORT1 0x1E760174u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_5_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_5_PORT1 Register LS_QDESC_DW2_5_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_5_PORT1 0x178
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_5_PORT1 0x1E760178u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_5_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_5_PORT1 Register LS_QDESC_DW3_5_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_5_PORT1 0x17C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_5_PORT1 0x1E76017Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_5_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_6_PORT1 Register LS_QDESC_DW0_6_PORT1 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_6_PORT1 0x180
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_6_PORT1 0x1E760180u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_6_PORT1_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT1_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT1_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_6_PORT1 Register LS_QDESC_DW1_6_PORT1 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_6_PORT1 0x184
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_6_PORT1 0x1E760184u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_6_PORT1_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT1_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT1_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_6_PORT1 Register LS_QDESC_DW2_6_PORT1 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_6_PORT1 0x188
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_6_PORT1 0x1E760188u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_6_PORT1_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT1_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT1_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_6_PORT1 Register LS_QDESC_DW3_6_PORT1 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_6_PORT1 0x18C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_6_PORT1 0x1E76018Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_6_PORT1_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT1_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT1_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW0_PORT2 Register LS_DESC_DW0_PORT2 - Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW0_PORT2 0x200
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW0_PORT2 0x1E760200u
+
+//! Register Reset Value
+#define LS_DESC_DW0_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW1_PORT2 Register LS_DESC_DW1_PORT2 - Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW1_PORT2 0x204
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW1_PORT2 0x1E760204u
+
+//! Register Reset Value
+#define LS_DESC_DW1_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW2_PORT2 Register LS_DESC_DW2_PORT2 - Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW2_PORT2 0x208
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW2_PORT2 0x1E760208u
+
+//! Register Reset Value
+#define LS_DESC_DW2_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW3_PORT2 Register LS_DESC_DW3_PORT2 - Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW3_PORT2 0x20C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW3_PORT2 0x1E76020Cu
+
+//! Register Reset Value
+#define LS_DESC_DW3_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_CTRL_PORT2 Register LS_CTRL_PORT2 - Load Spreader Port Control Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_CTRL_PORT2 0x210
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_CTRL_PORT2 0x1E760210u
+
+//! Register Reset Value
+#define LS_CTRL_PORT2_RST 0x00000400u
+
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT2_PORT_EN_POS 0
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT2_PORT_EN_MASK 0x1u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT2_PORT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT2_PORT_EN_EN 0x1
+
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT2_SPR_EN_POS 1
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT2_SPR_EN_MASK 0x2u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT2_SPR_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT2_SPR_EN_EN 0x1
+
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT2_INT_EN_POS 2
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT2_INT_EN_MASK 0x4u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT2_INT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT2_INT_EN_EN 0x1
+
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT2_CNT_EN_POS 3
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT2_CNT_EN_MASK 0x8u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT2_CNT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT2_CNT_EN_EN 0x1
+
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT2_QUEUE_THRSHLD_POS 8
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT2_QUEUE_THRSHLD_MASK 0x700u
+
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT2_CNT_THRSHLD_POS 16
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT2_CNT_THRSHLD_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_STATUS_PORT2 Register LS_STATUS_PORT2 - Load Spreader Port Status Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_STATUS_PORT2 0x214
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_STATUS_PORT2 0x1E760214u
+
+//! Register Reset Value
+#define LS_STATUS_PORT2_RST 0x00002000u
+
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT2_QUEUE_LEN_POS 7
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT2_QUEUE_LEN_MASK 0x780u
+
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT2_QUEUE_FULL_POS 12
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT2_QUEUE_FULL_MASK 0x1000u
+
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT2_QUEUE_EMPTY_POS 13
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT2_QUEUE_EMPTY_MASK 0x2000u
+
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT2_CNT_VAL_POS 16
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT2_CNT_VAL_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_0_PORT2 Register LS_QDESC_DW0_0_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_0_PORT2 0x220
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_0_PORT2 0x1E760220u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_0_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_0_PORT2 Register LS_QDESC_DW1_0_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_0_PORT2 0x224
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_0_PORT2 0x1E760224u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_0_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_0_PORT2 Register LS_QDESC_DW2_0_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_0_PORT2 0x228
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_0_PORT2 0x1E760228u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_0_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_0_PORT2 Register LS_QDESC_DW3_0_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_0_PORT2 0x22C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_0_PORT2 0x1E76022Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_0_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_1_PORT2 Register LS_QDESC_DW0_1_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_1_PORT2 0x230
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_1_PORT2 0x1E760230u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_1_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_1_PORT2 Register LS_QDESC_DW1_1_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_1_PORT2 0x234
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_1_PORT2 0x1E760234u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_1_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_1_PORT2 Register LS_QDESC_DW2_1_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_1_PORT2 0x238
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_1_PORT2 0x1E760238u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_1_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_1_PORT2 Register LS_QDESC_DW3_1_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_1_PORT2 0x23C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_1_PORT2 0x1E76023Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_1_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_2_PORT2 Register LS_QDESC_DW0_2_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_2_PORT2 0x240
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_2_PORT2 0x1E760240u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_2_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_2_PORT2 Register LS_QDESC_DW1_2_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_2_PORT2 0x244
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_2_PORT2 0x1E760244u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_2_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_2_PORT2 Register LS_QDESC_DW2_2_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_2_PORT2 0x248
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_2_PORT2 0x1E760248u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_2_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_2_PORT2 Register LS_QDESC_DW3_2_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_2_PORT2 0x24C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_2_PORT2 0x1E76024Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_2_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_3_PORT2 Register LS_QDESC_DW0_3_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_3_PORT2 0x250
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_3_PORT2 0x1E760250u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_3_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_3_PORT2 Register LS_QDESC_DW1_3_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_3_PORT2 0x254
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_3_PORT2 0x1E760254u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_3_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_3_PORT2 Register LS_QDESC_DW2_3_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_3_PORT2 0x258
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_3_PORT2 0x1E760258u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_3_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_3_PORT2 Register LS_QDESC_DW3_3_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_3_PORT2 0x25C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_3_PORT2 0x1E76025Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_3_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_4_PORT2 Register LS_QDESC_DW0_4_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_4_PORT2 0x260
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_4_PORT2 0x1E760260u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_4_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_4_PORT2 Register LS_QDESC_DW1_4_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_4_PORT2 0x264
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_4_PORT2 0x1E760264u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_4_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_4_PORT2 Register LS_QDESC_DW2_4_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_4_PORT2 0x268
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_4_PORT2 0x1E760268u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_4_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_4_PORT2 Register LS_QDESC_DW3_4_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_4_PORT2 0x26C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_4_PORT2 0x1E76026Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_4_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_5_PORT2 Register LS_QDESC_DW0_5_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_5_PORT2 0x270
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_5_PORT2 0x1E760270u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_5_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_5_PORT2 Register LS_QDESC_DW1_5_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_5_PORT2 0x274
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_5_PORT2 0x1E760274u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_5_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_5_PORT2 Register LS_QDESC_DW2_5_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_5_PORT2 0x278
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_5_PORT2 0x1E760278u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_5_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_5_PORT2 Register LS_QDESC_DW3_5_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_5_PORT2 0x27C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_5_PORT2 0x1E76027Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_5_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_6_PORT2 Register LS_QDESC_DW0_6_PORT2 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_6_PORT2 0x280
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_6_PORT2 0x1E760280u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_6_PORT2_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT2_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT2_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_6_PORT2 Register LS_QDESC_DW1_6_PORT2 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_6_PORT2 0x284
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_6_PORT2 0x1E760284u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_6_PORT2_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT2_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT2_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_6_PORT2 Register LS_QDESC_DW2_6_PORT2 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_6_PORT2 0x288
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_6_PORT2 0x1E760288u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_6_PORT2_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT2_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT2_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_6_PORT2 Register LS_QDESC_DW3_6_PORT2 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_6_PORT2 0x28C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_6_PORT2 0x1E76028Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_6_PORT2_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT2_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT2_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW0_PORT3 Register LS_DESC_DW0_PORT3 - Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW0_PORT3 0x300
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW0_PORT3 0x1E760300u
+
+//! Register Reset Value
+#define LS_DESC_DW0_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_DESC_DW0_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW1_PORT3 Register LS_DESC_DW1_PORT3 - Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW1_PORT3 0x304
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW1_PORT3 0x1E760304u
+
+//! Register Reset Value
+#define LS_DESC_DW1_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_DESC_DW1_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW2_PORT3 Register LS_DESC_DW2_PORT3 - Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW2_PORT3 0x308
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW2_PORT3 0x1E760308u
+
+//! Register Reset Value
+#define LS_DESC_DW2_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_DESC_DW2_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_DESC_DW3_PORT3 Register LS_DESC_DW3_PORT3 - Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_DESC_DW3_PORT3 0x30C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_DESC_DW3_PORT3 0x1E76030Cu
+
+//! Register Reset Value
+#define LS_DESC_DW3_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_DESC_DW3_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_CTRL_PORT3 Register LS_CTRL_PORT3 - Load Spreader Port Control Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_CTRL_PORT3 0x310
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_CTRL_PORT3 0x1E760310u
+
+//! Register Reset Value
+#define LS_CTRL_PORT3_RST 0x00000400u
+
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT3_PORT_EN_POS 0
+//! Field PORT_EN - Enable the Port on the Load Spreader
+#define LS_CTRL_PORT3_PORT_EN_MASK 0x1u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT3_PORT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT3_PORT_EN_EN 0x1
+
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT3_SPR_EN_POS 1
+//! Field SPR_EN - Spreading Enable
+#define LS_CTRL_PORT3_SPR_EN_MASK 0x2u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT3_SPR_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT3_SPR_EN_EN 0x1
+
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT3_INT_EN_POS 2
+//! Field INT_EN - Interrupt Enable
+#define LS_CTRL_PORT3_INT_EN_MASK 0x4u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT3_INT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT3_INT_EN_EN 0x1
+
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT3_CNT_EN_POS 3
+//! Field CNT_EN - Counter Enable
+#define LS_CTRL_PORT3_CNT_EN_MASK 0x8u
+//! Constant DIS - Disable
+#define CONST_LS_CTRL_PORT3_CNT_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_CTRL_PORT3_CNT_EN_EN 0x1
+
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT3_QUEUE_THRSHLD_POS 8
+//! Field QUEUE_THRSHLD - Queue Threshold Level
+#define LS_CTRL_PORT3_QUEUE_THRSHLD_MASK 0x700u
+
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT3_CNT_THRSHLD_POS 16
+//! Field CNT_THRSHLD - Overflow Counter Threshold Level
+#define LS_CTRL_PORT3_CNT_THRSHLD_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_STATUS_PORT3 Register LS_STATUS_PORT3 - Load Spreader Port Status Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_STATUS_PORT3 0x314
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_STATUS_PORT3 0x1E760314u
+
+//! Register Reset Value
+#define LS_STATUS_PORT3_RST 0x00002000u
+
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT3_QUEUE_LEN_POS 7
+//! Field QUEUE_LEN - Current Queue Length
+#define LS_STATUS_PORT3_QUEUE_LEN_MASK 0x780u
+
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT3_QUEUE_FULL_POS 12
+//! Field QUEUE_FULL - Queue Full
+#define LS_STATUS_PORT3_QUEUE_FULL_MASK 0x1000u
+
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT3_QUEUE_EMPTY_POS 13
+//! Field QUEUE_EMPTY - Queue Empty
+#define LS_STATUS_PORT3_QUEUE_EMPTY_MASK 0x2000u
+
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT3_CNT_VAL_POS 16
+//! Field CNT_VAL - Counter Value
+#define LS_STATUS_PORT3_CNT_VAL_MASK 0xFFFF0000u
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_0_PORT3 Register LS_QDESC_DW0_0_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_0_PORT3 0x320
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_0_PORT3 0x1E760320u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_0_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_0_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_0_PORT3 Register LS_QDESC_DW1_0_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_0_PORT3 0x324
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_0_PORT3 0x1E760324u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_0_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_0_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_0_PORT3 Register LS_QDESC_DW2_0_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_0_PORT3 0x328
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_0_PORT3 0x1E760328u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_0_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_0_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_0_PORT3 Register LS_QDESC_DW3_0_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_0_PORT3 0x32C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_0_PORT3 0x1E76032Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_0_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_0_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_1_PORT3 Register LS_QDESC_DW0_1_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_1_PORT3 0x330
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_1_PORT3 0x1E760330u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_1_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_1_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_1_PORT3 Register LS_QDESC_DW1_1_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_1_PORT3 0x334
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_1_PORT3 0x1E760334u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_1_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_1_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_1_PORT3 Register LS_QDESC_DW2_1_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_1_PORT3 0x338
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_1_PORT3 0x1E760338u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_1_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_1_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_1_PORT3 Register LS_QDESC_DW3_1_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_1_PORT3 0x33C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_1_PORT3 0x1E76033Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_1_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_1_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_2_PORT3 Register LS_QDESC_DW0_2_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_2_PORT3 0x340
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_2_PORT3 0x1E760340u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_2_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_2_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_2_PORT3 Register LS_QDESC_DW1_2_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_2_PORT3 0x344
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_2_PORT3 0x1E760344u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_2_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_2_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_2_PORT3 Register LS_QDESC_DW2_2_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_2_PORT3 0x348
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_2_PORT3 0x1E760348u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_2_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_2_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_2_PORT3 Register LS_QDESC_DW3_2_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_2_PORT3 0x34C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_2_PORT3 0x1E76034Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_2_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_2_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_3_PORT3 Register LS_QDESC_DW0_3_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_3_PORT3 0x350
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_3_PORT3 0x1E760350u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_3_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_3_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_3_PORT3 Register LS_QDESC_DW1_3_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_3_PORT3 0x354
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_3_PORT3 0x1E760354u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_3_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_3_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_3_PORT3 Register LS_QDESC_DW2_3_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_3_PORT3 0x358
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_3_PORT3 0x1E760358u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_3_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_3_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_3_PORT3 Register LS_QDESC_DW3_3_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_3_PORT3 0x35C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_3_PORT3 0x1E76035Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_3_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_3_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_4_PORT3 Register LS_QDESC_DW0_4_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_4_PORT3 0x360
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_4_PORT3 0x1E760360u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_4_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_4_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_4_PORT3 Register LS_QDESC_DW1_4_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_4_PORT3 0x364
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_4_PORT3 0x1E760364u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_4_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_4_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_4_PORT3 Register LS_QDESC_DW2_4_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_4_PORT3 0x368
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_4_PORT3 0x1E760368u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_4_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_4_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_4_PORT3 Register LS_QDESC_DW3_4_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_4_PORT3 0x36C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_4_PORT3 0x1E76036Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_4_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_4_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_5_PORT3 Register LS_QDESC_DW0_5_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_5_PORT3 0x370
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_5_PORT3 0x1E760370u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_5_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_5_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_5_PORT3 Register LS_QDESC_DW1_5_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_5_PORT3 0x374
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_5_PORT3 0x1E760374u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_5_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_5_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_5_PORT3 Register LS_QDESC_DW2_5_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_5_PORT3 0x378
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_5_PORT3 0x1E760378u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_5_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_5_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_5_PORT3 Register LS_QDESC_DW3_5_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_5_PORT3 0x37C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_5_PORT3 0x1E76037Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_5_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_5_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW0_6_PORT3 Register LS_QDESC_DW0_6_PORT3 - Queue Descriptor Register DW0
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW0_6_PORT3 0x380
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW0_6_PORT3 0x1E760380u
+
+//! Register Reset Value
+#define LS_QDESC_DW0_6_PORT3_RST 0x00000000u
+
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT3_DESC_DW0_POS 0
+//! Field DESC_DW0 - Descriptor DW0
+#define LS_QDESC_DW0_6_PORT3_DESC_DW0_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW1_6_PORT3 Register LS_QDESC_DW1_6_PORT3 - Queue Descriptor Register DW1
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW1_6_PORT3 0x384
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW1_6_PORT3 0x1E760384u
+
+//! Register Reset Value
+#define LS_QDESC_DW1_6_PORT3_RST 0x00000000u
+
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT3_DESC_DW1_POS 0
+//! Field DESC_DW1 - Descriptor DW1
+#define LS_QDESC_DW1_6_PORT3_DESC_DW1_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW2_6_PORT3 Register LS_QDESC_DW2_6_PORT3 - Queue Descriptor Register DW2
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW2_6_PORT3 0x388
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW2_6_PORT3 0x1E760388u
+
+//! Register Reset Value
+#define LS_QDESC_DW2_6_PORT3_RST 0x00000000u
+
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT3_DESC_DW2_POS 0
+//! Field DESC_DW2 - Descriptor DW2
+#define LS_QDESC_DW2_6_PORT3_DESC_DW2_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_QDESC_DW3_6_PORT3 Register LS_QDESC_DW3_6_PORT3 - Queue Descriptor Register DW3
+//! @{
+
+//! Register Offset (relative)
+#define LS_QDESC_DW3_6_PORT3 0x38C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_QDESC_DW3_6_PORT3 0x1E76038Cu
+
+//! Register Reset Value
+#define LS_QDESC_DW3_6_PORT3_RST 0x00000000u
+
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT3_DESC_DW3_POS 0
+//! Field DESC_DW3 - Descriptor DW3
+#define LS_QDESC_DW3_6_PORT3_DESC_DW3_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_GLBL_CTRL Register LS_GLBL_CTRL - Load Spreader Global Control Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_GLBL_CTRL 0x900
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_GLBL_CTRL 0x1E760900u
+
+//! Register Reset Value
+#define LS_GLBL_CTRL_RST 0x00000000u
+
+//! Field EN - Load Spreader Enable
+#define LS_GLBL_CTRL_EN_POS 0
+//! Field EN - Load Spreader Enable
+#define LS_GLBL_CTRL_EN_MASK 0x1u
+//! Constant DIS - Disable
+#define CONST_LS_GLBL_CTRL_EN_DIS 0x0
+//! Constant EN - Enable
+#define CONST_LS_GLBL_CTRL_EN_EN 0x1
+
+//! Field CLK_DIV - Overflow counter clock divider
+#define LS_GLBL_CTRL_CLK_DIV_POS 12
+//! Field CLK_DIV - Overflow counter clock divider
+#define LS_GLBL_CTRL_CLK_DIV_MASK 0x3000u
+//! Constant DIV1 - No divider used
+#define CONST_LS_GLBL_CTRL_CLK_DIV_DIV1 0x0
+//! Constant DIV2 - Divide by 2
+#define CONST_LS_GLBL_CTRL_CLK_DIV_DIV2 0x1
+//! Constant DIV4 - Divide by 4
+#define CONST_LS_GLBL_CTRL_CLK_DIV_DIV4 0x2
+//! Constant DIV8 - Divide by 8
+#define CONST_LS_GLBL_CTRL_CLK_DIV_DIV8 0x3
+
+//! @}
+
+//! \defgroup LS_SPR_CTRL Register LS_SPR_CTRL - Load Spreader Spreading Register
+//! @{
+
+//! Register Offset (relative)
+#define LS_SPR_CTRL 0x904
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_SPR_CTRL 0x1E760904u
+
+//! Register Reset Value
+#define LS_SPR_CTRL_RST 0x00000000u
+
+//! Field SPR_SEL - Spreading Select
+#define LS_SPR_CTRL_SPR_SEL_POS 0
+//! Field SPR_SEL - Spreading Select
+#define LS_SPR_CTRL_SPR_SEL_MASK 0x1u
+//! Constant WRR - Weighted Round Robin
+#define CONST_LS_SPR_CTRL_SPR_SEL_WRR 0x0
+//! Constant FLOWID - Flow ID mapping based spreading
+#define CONST_LS_SPR_CTRL_SPR_SEL_FLOWID 0x1
+
+//! Field WP0 - Port0 weight
+#define LS_SPR_CTRL_WP0_POS 16
+//! Field WP0 - Port0 weight
+#define LS_SPR_CTRL_WP0_MASK 0x30000u
+
+//! Field WP1 - Port1 weight
+#define LS_SPR_CTRL_WP1_POS 18
+//! Field WP1 - Port1 weight
+#define LS_SPR_CTRL_WP1_MASK 0xC0000u
+
+//! Field WP2 - Port2 weight
+#define LS_SPR_CTRL_WP2_POS 20
+//! Field WP2 - Port2 weight
+#define LS_SPR_CTRL_WP2_MASK 0x300000u
+
+//! Field WP3 - Port3 weight
+#define LS_SPR_CTRL_WP3_POS 22
+//! Field WP3 - Port3 weight
+#define LS_SPR_CTRL_WP3_MASK 0xC00000u
+
+//! @}
+
+//! \defgroup IRNCR_LS Register IRNCR_LS - Load Spreader IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNCR_LS 0x910
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_IRNCR_LS 0x1E760910u
+
+//! Register Reset Value
+#define IRNCR_LS_RST 0x00000000u
+
+//! Field INT_PORT0 - PORT0 Interrupt
+#define IRNCR_LS_INT_PORT0_POS 16
+//! Field INT_PORT0 - PORT0 Interrupt
+#define IRNCR_LS_INT_PORT0_MASK 0x10000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_INT_PORT0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_INT_PORT0_INTACK 0x1
+
+//! Field CNT_PORT0 - PORT0 Counter Overflow
+#define IRNCR_LS_CNT_PORT0_POS 17
+//! Field CNT_PORT0 - PORT0 Counter Overflow
+#define IRNCR_LS_CNT_PORT0_MASK 0x20000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_CNT_PORT0_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_CNT_PORT0_INTACK 0x1
+
+//! Field INT_PORT1 - PORT1 Interrupt
+#define IRNCR_LS_INT_PORT1_POS 18
+//! Field INT_PORT1 - PORT1 Interrupt
+#define IRNCR_LS_INT_PORT1_MASK 0x40000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_INT_PORT1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_INT_PORT1_INTACK 0x1
+
+//! Field CNT_PORT1 - PORT1 Counter Overflow
+#define IRNCR_LS_CNT_PORT1_POS 19
+//! Field CNT_PORT1 - PORT1 Counter Overflow
+#define IRNCR_LS_CNT_PORT1_MASK 0x80000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_CNT_PORT1_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_CNT_PORT1_INTACK 0x1
+
+//! Field INT_PORT2 - PORT2 Interrupt
+#define IRNCR_LS_INT_PORT2_POS 20
+//! Field INT_PORT2 - PORT2 Interrupt
+#define IRNCR_LS_INT_PORT2_MASK 0x100000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_INT_PORT2_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_INT_PORT2_INTACK 0x1
+
+//! Field CNT_PORT2 - PORT2 Counter Overflow
+#define IRNCR_LS_CNT_PORT2_POS 21
+//! Field CNT_PORT2 - PORT2 Counter Overflow
+#define IRNCR_LS_CNT_PORT2_MASK 0x200000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_CNT_PORT2_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_CNT_PORT2_INTACK 0x1
+
+//! Field INT_PORT3 - PORT3 Interrupt
+#define IRNCR_LS_INT_PORT3_POS 22
+//! Field INT_PORT3 - PORT3 Interrupt
+#define IRNCR_LS_INT_PORT3_MASK 0x400000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_INT_PORT3_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_INT_PORT3_INTACK 0x1
+
+//! Field CNT_PORT3 - PORT3 Counter Overflow
+#define IRNCR_LS_CNT_PORT3_POS 23
+//! Field CNT_PORT3 - PORT3 Counter Overflow
+#define IRNCR_LS_CNT_PORT3_MASK 0x800000u
+//! Constant NUL - NULL
+#define CONST_IRNCR_LS_CNT_PORT3_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_IRNCR_LS_CNT_PORT3_INTACK 0x1
+
+//! @}
+
+//! \defgroup IRNICR_LS Register IRNICR_LS - Load Spreader IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNICR_LS 0x914
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_IRNICR_LS 0x1E760914u
+
+//! Register Reset Value
+#define IRNICR_LS_RST 0x00000000u
+
+//! Field INT_PORT0 - PORT0 Interrupt
+#define IRNICR_LS_INT_PORT0_POS 16
+//! Field INT_PORT0 - PORT0 Interrupt
+#define IRNICR_LS_INT_PORT0_MASK 0x10000u
+
+//! Field CNT_PORT0 - PORT0 Counter Overflow
+#define IRNICR_LS_CNT_PORT0_POS 17
+//! Field CNT_PORT0 - PORT0 Counter Overflow
+#define IRNICR_LS_CNT_PORT0_MASK 0x20000u
+
+//! Field INT_PORT1 - PORT1 Interrupt
+#define IRNICR_LS_INT_PORT1_POS 18
+//! Field INT_PORT1 - PORT1 Interrupt
+#define IRNICR_LS_INT_PORT1_MASK 0x40000u
+
+//! Field CNT_PORT1 - PORT1 Counter Overflow
+#define IRNICR_LS_CNT_PORT1_POS 19
+//! Field CNT_PORT1 - PORT1 Counter Overflow
+#define IRNICR_LS_CNT_PORT1_MASK 0x80000u
+
+//! Field INT_PORT2 - PORT2 Interrupt
+#define IRNICR_LS_INT_PORT2_POS 20
+//! Field INT_PORT2 - PORT2 Interrupt
+#define IRNICR_LS_INT_PORT2_MASK 0x100000u
+
+//! Field CNT_PORT2 - PORT2 Counter Overflow
+#define IRNICR_LS_CNT_PORT2_POS 21
+//! Field CNT_PORT2 - PORT2 Counter Overflow
+#define IRNICR_LS_CNT_PORT2_MASK 0x200000u
+
+//! Field INT_PORT3 - PORT3 Interrupt
+#define IRNICR_LS_INT_PORT3_POS 22
+//! Field INT_PORT3 - PORT3 Interrupt
+#define IRNICR_LS_INT_PORT3_MASK 0x400000u
+
+//! Field CNT_PORT3 - PORT3 Counter Overflow
+#define IRNICR_LS_CNT_PORT3_POS 23
+//! Field CNT_PORT3 - PORT3 Counter Overflow
+#define IRNICR_LS_CNT_PORT3_MASK 0x800000u
+
+//! @}
+
+//! \defgroup IRNEN_LS Register IRNEN_LS - Load Spreader IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define IRNEN_LS 0x918
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_IRNEN_LS 0x1E760918u
+
+//! Register Reset Value
+#define IRNEN_LS_RST 0x00000000u
+
+//! Field INT_PORT0 - PORT0 Interrupt
+#define IRNEN_LS_INT_PORT0_POS 16
+//! Field INT_PORT0 - PORT0 Interrupt
+#define IRNEN_LS_INT_PORT0_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_INT_PORT0_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_INT_PORT0_EN 0x1
+
+//! Field CNT_PORT0 - PORT0 Counter Overflow
+#define IRNEN_LS_CNT_PORT0_POS 17
+//! Field CNT_PORT0 - PORT0 Counter Overflow
+#define IRNEN_LS_CNT_PORT0_MASK 0x20000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_CNT_PORT0_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_CNT_PORT0_EN 0x1
+
+//! Field INT_PORT1 - PORT1 Interrupt
+#define IRNEN_LS_INT_PORT1_POS 18
+//! Field INT_PORT1 - PORT1 Interrupt
+#define IRNEN_LS_INT_PORT1_MASK 0x40000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_INT_PORT1_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_INT_PORT1_EN 0x1
+
+//! Field CNT_PORT1 - PORT1 Counter Overflow
+#define IRNEN_LS_CNT_PORT1_POS 19
+//! Field CNT_PORT1 - PORT1 Counter Overflow
+#define IRNEN_LS_CNT_PORT1_MASK 0x80000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_CNT_PORT1_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_CNT_PORT1_EN 0x1
+
+//! Field INT_PORT2 - PORT2 Interrupt
+#define IRNEN_LS_INT_PORT2_POS 20
+//! Field INT_PORT2 - PORT2 Interrupt
+#define IRNEN_LS_INT_PORT2_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_INT_PORT2_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_INT_PORT2_EN 0x1
+
+//! Field CNT_PORT2 - PORT2 Counter Overflow
+#define IRNEN_LS_CNT_PORT2_POS 21
+//! Field CNT_PORT2 - PORT2 Counter Overflow
+#define IRNEN_LS_CNT_PORT2_MASK 0x200000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_CNT_PORT2_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_CNT_PORT2_EN 0x1
+
+//! Field INT_PORT3 - PORT3 Interrupt
+#define IRNEN_LS_INT_PORT3_POS 22
+//! Field INT_PORT3 - PORT3 Interrupt
+#define IRNEN_LS_INT_PORT3_MASK 0x400000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_INT_PORT3_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_INT_PORT3_EN 0x1
+
+//! Field CNT_PORT3 - PORT3 Counter Overflow
+#define IRNEN_LS_CNT_PORT3_POS 23
+//! Field CNT_PORT3 - PORT3 Counter Overflow
+#define IRNEN_LS_CNT_PORT3_MASK 0x800000u
+//! Constant DIS - DIS
+#define CONST_IRNEN_LS_CNT_PORT3_DIS 0x0
+//! Constant EN - EN
+#define CONST_IRNEN_LS_CNT_PORT3_EN 0x1
+
+//! @}
+
+//! \defgroup DBG_LS Register DBG_LS - Hardware Debug Register
+//! @{
+
+//! Register Offset (relative)
+#define DBG_LS 0x920
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_DBG_LS 0x1E760920u
+
+//! Register Reset Value
+#define DBG_LS_RST 0x00010000u
+
+//! Field DBG - Debug
+#define DBG_LS_DBG_POS 0
+//! Field DBG - Debug
+#define DBG_LS_DBG_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup TEST_LS Register TEST_LS - Hardware Test Register
+//! @{
+
+//! Register Offset (relative)
+#define TEST_LS 0x930
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_TEST_LS 0x1E760930u
+
+//! Register Reset Value
+#define TEST_LS_RST 0x00000000u
+
+//! Field TEST - Test
+#define TEST_LS_TEST_POS 0
+//! Field TEST - Test
+#define TEST_LS_TEST_MASK 0xFFFFFFFFu
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL0 Register LS_FLOWID_MAP_COL0 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL0 0x980
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL0 0x1E760980u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL0_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL0_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL0_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL0_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL0_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL0_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL0_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL0_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL0_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL0_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL0_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL0_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL0_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL0_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL0_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL0_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL0_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL1 Register LS_FLOWID_MAP_COL1 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL1 0x984
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL1 0x1E760984u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL1_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL1_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL1_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL1_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL1_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL1_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL1_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL1_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL1_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL1_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL1_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL1_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL1_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL1_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL1_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL1_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL1_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL2 Register LS_FLOWID_MAP_COL2 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL2 0x988
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL2 0x1E760988u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL2_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL2_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL2_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL2_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL2_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL2_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL2_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL2_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL2_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL2_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL2_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL2_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL2_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL2_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL2_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL2_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL2_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL3 Register LS_FLOWID_MAP_COL3 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL3 0x98C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL3 0x1E76098Cu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL3_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL3_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL3_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL3_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL3_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL3_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL3_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL3_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL3_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL3_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL3_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL3_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL3_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL3_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL3_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL3_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL3_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL4 Register LS_FLOWID_MAP_COL4 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL4 0x990
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL4 0x1E760990u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL4_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL4_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL4_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL4_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL4_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL4_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL4_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL4_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL4_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL4_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL4_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL4_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL4_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL4_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL4_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL4_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL4_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL5 Register LS_FLOWID_MAP_COL5 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL5 0x994
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL5 0x1E760994u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL5_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL5_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL5_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL5_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL5_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL5_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL5_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL5_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL5_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL5_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL5_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL5_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL5_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL5_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL5_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL5_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL5_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL6 Register LS_FLOWID_MAP_COL6 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL6 0x998
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL6 0x1E760998u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL6_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL6_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL6_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL6_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL6_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL6_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL6_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL6_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL6_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL6_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL6_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL6_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL6_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL6_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL6_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL6_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL6_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL7 Register LS_FLOWID_MAP_COL7 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL7 0x99C
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL7 0x1E76099Cu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL7_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL7_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL7_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL7_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL7_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL7_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL7_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL7_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL7_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL7_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL7_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL7_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL7_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL7_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL7_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL7_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL7_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL8 Register LS_FLOWID_MAP_COL8 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL8 0x9A0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL8 0x1E7609A0u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL8_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL8_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL8_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL8_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL8_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL8_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL8_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL8_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL8_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL8_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL8_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL8_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL8_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL8_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL8_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL8_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL8_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL9 Register LS_FLOWID_MAP_COL9 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL9 0x9A4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL9 0x1E7609A4u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL9_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL9_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL9_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL9_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL9_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL9_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL9_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL9_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL9_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL9_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL9_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL9_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL9_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL9_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL9_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL9_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL9_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL10 Register LS_FLOWID_MAP_COL10 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL10 0x9A8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL10 0x1E7609A8u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL10_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL10_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL10_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL10_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL10_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL10_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL10_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL10_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL10_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL10_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL10_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL10_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL10_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL10_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL10_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL10_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL10_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL11 Register LS_FLOWID_MAP_COL11 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL11 0x9AC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL11 0x1E7609ACu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL11_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL11_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL11_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL11_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL11_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL11_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL11_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL11_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL11_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL11_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL11_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL11_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL11_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL11_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL11_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL11_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL11_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL12 Register LS_FLOWID_MAP_COL12 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL12 0x9B0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL12 0x1E7609B0u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL12_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL12_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL12_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL12_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL12_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL12_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL12_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL12_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL12_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL12_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL12_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL12_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL12_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL12_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL12_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL12_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL12_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL13 Register LS_FLOWID_MAP_COL13 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL13 0x9B4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL13 0x1E7609B4u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL13_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL13_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL13_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL13_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL13_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL13_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL13_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL13_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL13_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL13_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL13_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL13_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL13_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL13_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL13_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL13_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL13_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL14 Register LS_FLOWID_MAP_COL14 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL14 0x9B8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL14 0x1E7609B8u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL14_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL14_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL14_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL14_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL14_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL14_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL14_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL14_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL14_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL14_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL14_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL14_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL14_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL14_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL14_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL14_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL14_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL15 Register LS_FLOWID_MAP_COL15 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL15 0x9BC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL15 0x1E7609BCu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL15_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL15_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL15_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL15_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL15_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL15_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL15_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL15_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL15_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL15_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL15_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL15_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL15_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL15_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL15_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL15_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL15_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL16 Register LS_FLOWID_MAP_COL16 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL16 0x9C0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL16 0x1E7609C0u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL16_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL16_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL16_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL16_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL16_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL16_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL16_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL16_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL16_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL16_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL16_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL16_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL16_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL16_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL16_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL16_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL16_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL17 Register LS_FLOWID_MAP_COL17 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL17 0x9C4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL17 0x1E7609C4u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL17_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL17_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL17_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL17_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL17_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL17_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL17_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL17_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL17_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL17_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL17_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL17_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL17_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL17_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL17_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL17_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL17_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL18 Register LS_FLOWID_MAP_COL18 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL18 0x9C8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL18 0x1E7609C8u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL18_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL18_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL18_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL18_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL18_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL18_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL18_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL18_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL18_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL18_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL18_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL18_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL18_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL18_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL18_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL18_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL18_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL19 Register LS_FLOWID_MAP_COL19 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL19 0x9CC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL19 0x1E7609CCu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL19_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL19_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL19_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL19_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL19_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL19_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL19_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL19_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL19_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL19_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL19_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL19_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL19_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL19_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL19_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL19_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL19_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL20 Register LS_FLOWID_MAP_COL20 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL20 0x9D0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL20 0x1E7609D0u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL20_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL20_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL20_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL20_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL20_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL20_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL20_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL20_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL20_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL20_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL20_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL20_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL20_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL20_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL20_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL20_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL20_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL21 Register LS_FLOWID_MAP_COL21 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL21 0x9D4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL21 0x1E7609D4u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL21_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL21_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL21_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL21_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL21_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL21_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL21_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL21_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL21_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL21_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL21_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL21_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL21_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL21_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL21_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL21_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL21_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL22 Register LS_FLOWID_MAP_COL22 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL22 0x9D8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL22 0x1E7609D8u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL22_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL22_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL22_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL22_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL22_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL22_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL22_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL22_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL22_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL22_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL22_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL22_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL22_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL22_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL22_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL22_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL22_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL23 Register LS_FLOWID_MAP_COL23 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL23 0x9DC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL23 0x1E7609DCu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL23_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL23_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL23_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL23_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL23_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL23_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL23_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL23_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL23_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL23_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL23_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL23_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL23_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL23_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL23_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL23_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL23_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL24 Register LS_FLOWID_MAP_COL24 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL24 0x9E0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL24 0x1E7609E0u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL24_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL24_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL24_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL24_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL24_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL24_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL24_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL24_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL24_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL24_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL24_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL24_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL24_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL24_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL24_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL24_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL24_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL25 Register LS_FLOWID_MAP_COL25 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL25 0x9E4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL25 0x1E7609E4u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL25_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL25_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL25_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL25_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL25_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL25_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL25_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL25_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL25_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL25_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL25_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL25_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL25_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL25_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL25_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL25_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL25_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL26 Register LS_FLOWID_MAP_COL26 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL26 0x9E8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL26 0x1E7609E8u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL26_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL26_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL26_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL26_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL26_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL26_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL26_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL26_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL26_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL26_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL26_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL26_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL26_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL26_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL26_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL26_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL26_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL27 Register LS_FLOWID_MAP_COL27 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL27 0x9EC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL27 0x1E7609ECu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL27_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL27_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL27_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL27_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL27_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL27_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL27_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL27_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL27_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL27_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL27_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL27_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL27_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL27_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL27_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL27_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL27_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL28 Register LS_FLOWID_MAP_COL28 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL28 0x9F0
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL28 0x1E7609F0u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL28_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL28_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL28_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL28_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL28_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL28_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL28_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL28_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL28_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL28_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL28_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL28_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL28_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL28_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL28_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL28_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL28_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL29 Register LS_FLOWID_MAP_COL29 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL29 0x9F4
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL29 0x1E7609F4u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL29_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL29_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL29_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL29_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL29_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL29_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL29_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL29_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL29_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL29_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL29_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL29_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL29_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL29_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL29_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL29_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL29_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL30 Register LS_FLOWID_MAP_COL30 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL30 0x9F8
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL30 0x1E7609F8u
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL30_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL30_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL30_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL30_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL30_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL30_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL30_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL30_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL30_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL30_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL30_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL30_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL30_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL30_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL30_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL30_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL30_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! \defgroup LS_FLOWID_MAP_COL31 Register LS_FLOWID_MAP_COL31 - Load Spreader Flow ID mapping table
+//! @{
+
+//! Register Offset (relative)
+#define LS_FLOWID_MAP_COL31 0x9FC
+//! Register Offset (absolute) for 1st Instance CBM_LS
+#define CBM_LS_LS_FLOWID_MAP_COL31 0x1E7609FCu
+
+//! Register Reset Value
+#define LS_FLOWID_MAP_COL31_RST 0x00000000u
+
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL31_QUEUE0_POS 0
+//! Field QUEUE0 - Queue ID 0
+#define LS_FLOWID_MAP_COL31_QUEUE0_MASK 0xFu
+
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL31_QUEUE1_POS 4
+//! Field QUEUE1 - Queue ID 1
+#define LS_FLOWID_MAP_COL31_QUEUE1_MASK 0xF0u
+
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL31_QUEUE2_POS 8
+//! Field QUEUE2 - Queue ID 2
+#define LS_FLOWID_MAP_COL31_QUEUE2_MASK 0xF00u
+
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL31_QUEUE3_POS 12
+//! Field QUEUE3 - Queue ID 3
+#define LS_FLOWID_MAP_COL31_QUEUE3_MASK 0xF000u
+
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL31_QUEUE4_POS 16
+//! Field QUEUE4 - Queue ID 4
+#define LS_FLOWID_MAP_COL31_QUEUE4_MASK 0xF0000u
+
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL31_QUEUE5_POS 20
+//! Field QUEUE5 - Queue ID 5
+#define LS_FLOWID_MAP_COL31_QUEUE5_MASK 0xF00000u
+
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL31_QUEUE6_POS 24
+//! Field QUEUE6 - Queue ID 6
+#define LS_FLOWID_MAP_COL31_QUEUE6_MASK 0xF000000u
+
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL31_QUEUE7_POS 28
+//! Field QUEUE7 - Queue ID 7
+#define LS_FLOWID_MAP_COL31_QUEUE7_MASK 0xF0000000u
+
+//! @}
+
+//! @}
+
+#endif
diff --git a/drivers/net/ethernet/lantiq/cbm/reg/fsqm.h b/drivers/net/ethernet/lantiq/cbm/reg/fsqm.h
new file mode 100644
--- /dev/null
+++ b/drivers/net/ethernet/lantiq/cbm/reg/fsqm.h
@@ -0,0 +1,785 @@
+//-----------------------------------------------------------------------------
+// LSD Generator
+//-----------------------------------------------------------------------------
+// Perl Package        : LSD::generator::targetC (v1.1)
+// LSD Source          : D:/Users/shij/Perforce/l1033.grx500.win.v_shij.priv.dfv.grx500.dfv/ipg_lsd/lsd_sys/source/xml/reg_files/FSQM.XML
+// Register File Name  : FSQM
+// Register File Title : FSQM Register Description
+// Register Width      : 32
+// Note                : Doxygen compliant comments
+//-----------------------------------------------------------------------------
+
+#ifndef _FSQM_H
+#define _FSQM_H
+
+//! \defgroup FSQM Register File FSQM - FSQM Register Description
+//! @{
+
+//! Base Address of FSQM0
+#define FSQM0_MODULE_BASE 0x1E800000u
+//! Base Address of FSQM1
+#define FSQM1_MODULE_BASE 0x1E900000u
+
+//! \defgroup FSQM_CTRL Register FSQM_CTRL - Control Register
+//! @{
+
+//! Register Offset (relative)
+#define FSQM_CTRL 0x0
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQM_CTRL 0x1E800000u
+
+//! Register Reset Value
+#define FSQM_CTRL_RST 0x00000000u
+
+//! Field ACT - Activate Core State Machine
+#define FSQM_CTRL_ACT_POS 0
+//! Field ACT - Activate Core State Machine
+#define FSQM_CTRL_ACT_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_FSQM_CTRL_ACT_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_CTRL_ACT_EN 0x1
+
+//! Field ALLOC_FRZ - Allocation Freeze Mechanism
+#define FSQM_CTRL_ALLOC_FRZ_POS 1
+//! Field ALLOC_FRZ - Allocation Freeze Mechanism
+#define FSQM_CTRL_ALLOC_FRZ_MASK 0x2u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_ALLOC_FRZ_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_ALLOC_FRZ_SEL 0x1
+
+//! Field ALLOC_DIS - Disable Allocation Mechanism
+#define FSQM_CTRL_ALLOC_DIS_POS 2
+//! Field ALLOC_DIS - Disable Allocation Mechanism
+#define FSQM_CTRL_ALLOC_DIS_MASK 0x4u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_ALLOC_DIS_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_ALLOC_DIS_SEL 0x1
+
+//! Field RST - Soft Reset of the FSQM Module
+#define FSQM_CTRL_RST_POS 4
+//! Field RST - Soft Reset of the FSQM Module
+#define FSQM_CTRL_RST_MASK 0x10u
+//! Constant DIS - Disable
+#define CONST_FSQM_CTRL_RST_DIS 0x0
+//! Constant EN - Enable
+#define CONST_FSQM_CTRL_RST_EN 0x1
+
+//! Field AD0 - Alloc Disable for master 0
+#define FSQM_CTRL_AD0_POS 8
+//! Field AD0 - Alloc Disable for master 0
+#define FSQM_CTRL_AD0_MASK 0x100u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD0_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD0_SEL 0x1
+
+//! Field AD1 - Alloc Disable for master 1
+#define FSQM_CTRL_AD1_POS 9
+//! Field AD1 - Alloc Disable for master 1
+#define FSQM_CTRL_AD1_MASK 0x200u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD1_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD1_SEL 0x1
+
+//! Field AD2 - Alloc Disable for master 2
+#define FSQM_CTRL_AD2_POS 10
+//! Field AD2 - Alloc Disable for master 2
+#define FSQM_CTRL_AD2_MASK 0x400u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD2_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD2_SEL 0x1
+
+//! Field AD3 - Alloc Disable for master 3
+#define FSQM_CTRL_AD3_POS 11
+//! Field AD3 - Alloc Disable for master 3
+#define FSQM_CTRL_AD3_MASK 0x800u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD3_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD3_SEL 0x1
+
+//! Field AD4 - Alloc Disable for master 4
+#define FSQM_CTRL_AD4_POS 12
+//! Field AD4 - Alloc Disable for master 4
+#define FSQM_CTRL_AD4_MASK 0x1000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD4_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD4_SEL 0x1
+
+//! Field AD5 - Alloc Disable for master 5
+#define FSQM_CTRL_AD5_POS 13
+//! Field AD5 - Alloc Disable for master 5
+#define FSQM_CTRL_AD5_MASK 0x2000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD5_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD5_SEL 0x1
+
+//! Field AD6 - Alloc Disable for master 6
+#define FSQM_CTRL_AD6_POS 14
+//! Field AD6 - Alloc Disable for master 6
+#define FSQM_CTRL_AD6_MASK 0x4000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD6_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD6_SEL 0x1
+
+//! Field AD7 - Alloc Disable for master 7
+#define FSQM_CTRL_AD7_POS 15
+//! Field AD7 - Alloc Disable for master 7
+#define FSQM_CTRL_AD7_MASK 0x8000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD7_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD7_SEL 0x1
+
+//! Field AD8 - Alloc Disable for master 8
+#define FSQM_CTRL_AD8_POS 16
+//! Field AD8 - Alloc Disable for master 8
+#define FSQM_CTRL_AD8_MASK 0x10000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD8_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD8_SEL 0x1
+
+//! Field AD9 - Alloc Disable for master 9
+#define FSQM_CTRL_AD9_POS 17
+//! Field AD9 - Alloc Disable for master 9
+#define FSQM_CTRL_AD9_MASK 0x20000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD9_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD9_SEL 0x1
+
+//! Field AD10 - Alloc Disable for master 10
+#define FSQM_CTRL_AD10_POS 18
+//! Field AD10 - Alloc Disable for master 10
+#define FSQM_CTRL_AD10_MASK 0x40000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD10_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD10_SEL 0x1
+
+//! Field AD11 - Alloc Disable for master 11
+#define FSQM_CTRL_AD11_POS 19
+//! Field AD11 - Alloc Disable for master 11
+#define FSQM_CTRL_AD11_MASK 0x80000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD11_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD11_SEL 0x1
+
+//! Field AD12 - Alloc Disable for master 12
+#define FSQM_CTRL_AD12_POS 20
+//! Field AD12 - Alloc Disable for master 12
+#define FSQM_CTRL_AD12_MASK 0x100000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD12_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD12_SEL 0x1
+
+//! Field AD13 - Alloc Disable for master 13
+#define FSQM_CTRL_AD13_POS 21
+//! Field AD13 - Alloc Disable for master 13
+#define FSQM_CTRL_AD13_MASK 0x200000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD13_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD13_SEL 0x1
+
+//! Field AD14 - Alloc Disable for master 14
+#define FSQM_CTRL_AD14_POS 22
+//! Field AD14 - Alloc Disable for master 14
+#define FSQM_CTRL_AD14_MASK 0x400000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD14_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD14_SEL 0x1
+
+//! Field AD15 - Alloc Disable for master 15
+#define FSQM_CTRL_AD15_POS 23
+//! Field AD15 - Alloc Disable for master 15
+#define FSQM_CTRL_AD15_MASK 0x800000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD15_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD15_SEL 0x1
+
+//! Field AD16 - Alloc Disable for master 16
+#define FSQM_CTRL_AD16_POS 24
+//! Field AD16 - Alloc Disable for master 16
+#define FSQM_CTRL_AD16_MASK 0x1000000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD16_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD16_SEL 0x1
+
+//! Field AD17 - Alloc Disable for master 17
+#define FSQM_CTRL_AD17_POS 25
+//! Field AD17 - Alloc Disable for master 17
+#define FSQM_CTRL_AD17_MASK 0x2000000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD17_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD17_SEL 0x1
+
+//! Field AD18 - Alloc Disable for master 18
+#define FSQM_CTRL_AD18_POS 26
+//! Field AD18 - Alloc Disable for master 18
+#define FSQM_CTRL_AD18_MASK 0x4000000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD18_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD18_SEL 0x1
+
+//! Field AD19 - Alloc Disable for master 19
+#define FSQM_CTRL_AD19_POS 27
+//! Field AD19 - Alloc Disable for master 19
+#define FSQM_CTRL_AD19_MASK 0x8000000u
+//! Constant NSEL - NSEL
+#define CONST_FSQM_CTRL_AD19_NSEL 0x0
+//! Constant SEL - SEL
+#define CONST_FSQM_CTRL_AD19_SEL 0x1
+
+//! @}
+
+//! \defgroup IO_BUF_RD Register IO_BUF_RD - IO-Buffer Control Register for Read (ALLOC)
+//! @{
+
+//! Register Offset (relative)
+#define IO_BUF_RD 0x8
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_IO_BUF_RD 0x1E800008u
+
+//! Register Reset Value
+#define IO_BUF_RD_RST 0x00000000u
+
+//! Field BUF_EN - Enable/disable specific IO-Buffer(s)
+#define IO_BUF_RD_BUF_EN_POS 0
+//! Field BUF_EN - Enable/disable specific IO-Buffer(s)
+#define IO_BUF_RD_BUF_EN_MASK 0xFFFFFu
+
+//! @}
+
+//! \defgroup IO_BUF_WR Register IO_BUF_WR - IO-Buffer Control Register for Write (FREE)
+//! @{
+
+//! Register Offset (relative)
+#define IO_BUF_WR 0xC
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_IO_BUF_WR 0x1E80000Cu
+
+//! Register Reset Value
+#define IO_BUF_WR_RST 0x00000000u
+
+//! Field BUF_EN - Enable/disable specific IO-Buffer(s)
+#define IO_BUF_WR_BUF_EN_POS 0
+//! Field BUF_EN - Enable/disable specific IO-Buffer(s)
+#define IO_BUF_WR_BUF_EN_MASK 0xFFFFFu
+
+//! @}
+
+//! \defgroup FSQM_IRNCR Register FSQM_IRNCR - IRN Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define FSQM_IRNCR 0x10
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQM_IRNCR 0x1E800010u
+
+//! Register Reset Value
+#define FSQM_IRNCR_RST 0x00000000u
+
+//! Field T0U - Threshold 0 Underflow
+#define FSQM_IRNCR_T0U_POS 0
+//! Field T0U - Threshold 0 Underflow
+#define FSQM_IRNCR_T0U_MASK 0x1u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_T0U_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_T0U_INTACK 0x1
+
+//! Field T1U - Threshold 1 Underflow
+#define FSQM_IRNCR_T1U_POS 1
+//! Field T1U - Threshold 1 Underflow
+#define FSQM_IRNCR_T1U_MASK 0x2u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_T1U_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_T1U_INTACK 0x1
+
+//! Field T2U - Threshold 2 Underflow
+#define FSQM_IRNCR_T2U_POS 2
+//! Field T2U - Threshold 2 Underflow
+#define FSQM_IRNCR_T2U_MASK 0x4u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_T2U_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_T2U_INTACK 0x1
+
+//! Field T3U - Threshold 3 Underflow
+#define FSQM_IRNCR_T3U_POS 3
+//! Field T3U - Threshold 3 Underflow
+#define FSQM_IRNCR_T3U_MASK 0x8u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_T3U_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_T3U_INTACK 0x1
+
+//! Field T4U - Threshold 4 Underflow
+#define FSQM_IRNCR_T4U_POS 4
+//! Field T4U - Threshold 4 Underflow
+#define FSQM_IRNCR_T4U_MASK 0x10u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_T4U_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_T4U_INTACK 0x1
+
+//! Field ACCMEM - RAM Access Violation
+#define FSQM_IRNCR_ACCMEM_POS 12
+//! Field ACCMEM - RAM Access Violation
+#define FSQM_IRNCR_ACCMEM_MASK 0x1000u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_ACCMEM_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_ACCMEM_INTACK 0x1
+
+//! Field FRMEM - Free Command RAM Access Violation
+#define FSQM_IRNCR_FRMEM_POS 16
+//! Field FRMEM - Free Command RAM Access Violation
+#define FSQM_IRNCR_FRMEM_MASK 0x10000u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_FRMEM_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_FRMEM_INTACK 0x1
+
+//! Field FROVLO - Free Command Overflow on OFSQ
+#define FSQM_IRNCR_FROVLO_POS 20
+//! Field FROVLO - Free Command Overflow on OFSQ
+#define FSQM_IRNCR_FROVLO_MASK 0x100000u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_FROVLO_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_FROVLO_INTACK 0x1
+
+//! Field ALLNIL - Alloc Command NIL Response
+#define FSQM_IRNCR_ALLNIL_POS 24
+//! Field ALLNIL - Alloc Command NIL Response
+#define FSQM_IRNCR_ALLNIL_MASK 0x1000000u
+//! Constant NUL - NULL
+#define CONST_FSQM_IRNCR_ALLNIL_NUL 0x0
+//! Constant INTACK - INTACK
+#define CONST_FSQM_IRNCR_ALLNIL_INTACK 0x1
+
+//! @}
+
+//! \defgroup FSQM_IRNICR Register FSQM_IRNICR - IRN Interrupt Control Register
+//! @{
+
+//! Register Offset (relative)
+#define FSQM_IRNICR 0x14
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQM_IRNICR 0x1E800014u
+
+//! Register Reset Value
+#define FSQM_IRNICR_RST 0x00000000u
+
+//! Field T0U - Threshold 0 Underflow
+#define FSQM_IRNICR_T0U_POS 0
+//! Field T0U - Threshold 0 Underflow
+#define FSQM_IRNICR_T0U_MASK 0x1u
+
+//! Field T1U - Threshold 1 Underflow
+#define FSQM_IRNICR_T1U_POS 1
+//! Field T1U - Threshold 1 Underflow
+#define FSQM_IRNICR_T1U_MASK 0x2u
+
+//! Field T2U - Threshold 2 Underflow
+#define FSQM_IRNICR_T2U_POS 2
+//! Field T2U - Threshold 2 Underflow
+#define FSQM_IRNICR_T2U_MASK 0x4u
+
+//! Field T3U - Threshold 3 Underflow
+#define FSQM_IRNICR_T3U_POS 3
+//! Field T3U - Threshold 3 Underflow
+#define FSQM_IRNICR_T3U_MASK 0x8u
+
+//! Field T4U - Threshold 4 Underflow
+#define FSQM_IRNICR_T4U_POS 4
+//! Field T4U - Threshold 4 Underflow
+#define FSQM_IRNICR_T4U_MASK 0x10u
+
+//! Field ACCMEM - RAM Access Violation
+#define FSQM_IRNICR_ACCMEM_POS 12
+//! Field ACCMEM - RAM Access Violation
+#define FSQM_IRNICR_ACCMEM_MASK 0x1000u
+
+//! Field FRMEM - Free Command RAM Access Violation
+#define FSQM_IRNICR_FRMEM_POS 16
+//! Field FRMEM - Free Command RAM Access Violation
+#define FSQM_IRNICR_FRMEM_MASK 0x10000u
+
+//! Field FROVLO - Free Command Overflow on OFSQ
+#define FSQM_IRNICR_FROVLO_POS 20
+//! Field FROVLO - Free Command Overflow on OFSQ
+#define FSQM_IRNICR_FROVLO_MASK 0x100000u
+
+//! Field ALLNIL - Alloc Command NIL Response
+#define FSQM_IRNICR_ALLNIL_POS 24
+//! Field ALLNIL - Alloc Command NIL Response
+#define FSQM_IRNICR_ALLNIL_MASK 0x1000000u
+
+//! @}
+
+//! \defgroup FSQM_IRNEN Register FSQM_IRNEN - IRN Interrupt Enable Register
+//! @{
+
+//! Register Offset (relative)
+#define FSQM_IRNEN 0x18
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQM_IRNEN 0x1E800018u
+
+//! Register Reset Value
+#define FSQM_IRNEN_RST 0x00000000u
+
+//! Field T0U - Threshold 0 Underflow
+#define FSQM_IRNEN_T0U_POS 0
+//! Field T0U - Threshold 0 Underflow
+#define FSQM_IRNEN_T0U_MASK 0x1u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_T0U_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_T0U_EN 0x1
+
+//! Field T1U - Threshold 1 Underflow
+#define FSQM_IRNEN_T1U_POS 1
+//! Field T1U - Threshold 1 Underflow
+#define FSQM_IRNEN_T1U_MASK 0x2u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_T1U_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_T1U_EN 0x1
+
+//! Field T2U - Threshold 2 Underflow
+#define FSQM_IRNEN_T2U_POS 2
+//! Field T2U - Threshold 2 Underflow
+#define FSQM_IRNEN_T2U_MASK 0x4u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_T2U_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_T2U_EN 0x1
+
+//! Field T3U - Threshold 3 Underflow
+#define FSQM_IRNEN_T3U_POS 3
+//! Field T3U - Threshold 3 Underflow
+#define FSQM_IRNEN_T3U_MASK 0x8u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_T3U_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_T3U_EN 0x1
+
+//! Field T4U - Threshold 4 Underflow
+#define FSQM_IRNEN_T4U_POS 4
+//! Field T4U - Threshold 4 Underflow
+#define FSQM_IRNEN_T4U_MASK 0x10u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_T4U_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_T4U_EN 0x1
+
+//! Field ACCMEM - RAM Access Violation
+#define FSQM_IRNEN_ACCMEM_POS 12
+//! Field ACCMEM - RAM Access Violation
+#define FSQM_IRNEN_ACCMEM_MASK 0x1000u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_ACCMEM_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_ACCMEM_EN 0x1
+
+//! Field FRMEM - Free Command RAM Access Violation
+#define FSQM_IRNEN_FRMEM_POS 16
+//! Field FRMEM - Free Command RAM Access Violation
+#define FSQM_IRNEN_FRMEM_MASK 0x10000u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_FRMEM_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_FRMEM_EN 0x1
+
+//! Field FROVLO - Free Command Overflow on OFSQ
+#define FSQM_IRNEN_FROVLO_POS 20
+//! Field FROVLO - Free Command Overflow on OFSQ
+#define FSQM_IRNEN_FROVLO_MASK 0x100000u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_FROVLO_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_FROVLO_EN 0x1
+
+//! Field ALLNIL - Alloc Command NIL Response
+#define FSQM_IRNEN_ALLNIL_POS 24
+//! Field ALLNIL - Alloc Command NIL Response
+#define FSQM_IRNEN_ALLNIL_MASK 0x1000000u
+//! Constant DIS - DIS
+#define CONST_FSQM_IRNEN_ALLNIL_DIS 0x0
+//! Constant EN - EN
+#define CONST_FSQM_IRNEN_ALLNIL_EN 0x1
+
+//! @}
+
+//! \defgroup TAILCAPR Register TAILCAPR - TAIL LSA Capture Register
+//! @{
+
+//! Register Offset (relative)
+#define TAILCAPR 0x20
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_TAILCAPR 0x1E800020u
+
+//! Register Reset Value
+#define TAILCAPR_RST 0x00000000u
+
+//! Field TAIL_FRZ - Logical Segment Address of captured OFSQ TAIL
+#define TAILCAPR_TAIL_FRZ_POS 0
+//! Field TAIL_FRZ - Logical Segment Address of captured OFSQ TAIL
+#define TAILCAPR_TAIL_FRZ_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup OFSQ Register OFSQ - Output Free Segment Queue Register
+//! @{
+
+//! Register Offset (relative)
+#define OFSQ 0x24
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_OFSQ 0x1E800024u
+
+//! Register Reset Value
+#define OFSQ_RST 0x00000000u
+
+//! Field HEAD - Head Logical Segment Address
+#define OFSQ_HEAD_POS 0
+//! Field HEAD - Head Logical Segment Address
+#define OFSQ_HEAD_MASK 0x7FFFu
+
+//! Field TAIL - Tail Logical Segment Address
+#define OFSQ_TAIL_POS 16
+//! Field TAIL - Tail Logical Segment Address
+#define OFSQ_TAIL_MASK 0x7FFF0000u
+
+//! @}
+
+//! \defgroup OFSC Register OFSC - Output Free Segment Counter Register
+//! @{
+
+//! Register Offset (relative)
+#define OFSC 0x2C
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_OFSC 0x1E80002Cu
+
+//! Register Reset Value
+#define OFSC_RST 0x00000000u
+
+//! Field FSC - Free Segment Counter
+#define OFSC_FSC_POS 0
+//! Field FSC - Free Segment Counter
+#define OFSC_FSC_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup FSQT0 Register FSQT0 - Free Segment Queue Threshold Register 0
+//! @{
+
+//! Register Offset (relative)
+#define FSQT0 0x30
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQT0 0x1E800030u
+
+//! Register Reset Value
+#define FSQT0_RST 0x00000000u
+
+//! Field FSQT - Free Segment Queue Threshold 0
+#define FSQT0_FSQT_POS 0
+//! Field FSQT - Free Segment Queue Threshold 0
+#define FSQT0_FSQT_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup FSQT1 Register FSQT1 - Free Segment Queue Threshold Register 1
+//! @{
+
+//! Register Offset (relative)
+#define FSQT1 0x70
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQT1 0x1E800070u
+
+//! Register Reset Value
+#define FSQT1_RST 0x00000000u
+
+//! Field FSQT - Free Segment Queue Threshold 1
+#define FSQT1_FSQT_POS 0
+//! Field FSQT - Free Segment Queue Threshold 1
+#define FSQT1_FSQT_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup FSQT2 Register FSQT2 - Free Segment Queue Threshold Register 2
+//! @{
+
+//! Register Offset (relative)
+#define FSQT2 0xB0
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQT2 0x1E8000B0u
+
+//! Register Reset Value
+#define FSQT2_RST 0x00000000u
+
+//! Field FSQT - Free Segment Queue Threshold 2
+#define FSQT2_FSQT_POS 0
+//! Field FSQT - Free Segment Queue Threshold 2
+#define FSQT2_FSQT_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup FSQT3 Register FSQT3 - Free Segment Queue Threshold Register 3
+//! @{
+
+//! Register Offset (relative)
+#define FSQT3 0xF0
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQT3 0x1E8000F0u
+
+//! Register Reset Value
+#define FSQT3_RST 0x00000000u
+
+//! Field FSQT - Free Segment Queue Threshold 3
+#define FSQT3_FSQT_POS 0
+//! Field FSQT - Free Segment Queue Threshold 3
+#define FSQT3_FSQT_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup FSQT4 Register FSQT4 - Free Segment Queue Threshold Register 4
+//! @{
+
+//! Register Offset (relative)
+#define FSQT4 0x130
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_FSQT4 0x1E800130u
+
+//! Register Reset Value
+#define FSQT4_RST 0x00000000u
+
+//! Field FSQT - Free Segment Queue Threshold 4
+#define FSQT4_FSQT_POS 0
+//! Field FSQT - Free Segment Queue Threshold 4
+#define FSQT4_FSQT_MASK 0x7FFFu
+
+//! @}
+
+//! \defgroup LSARNG Register LSARNG - Logical Segment Address Range
+//! @{
+
+//! Register Offset (relative)
+#define LSARNG 0x180
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_LSARNG 0x1E800180u
+
+//! Register Reset Value
+#define LSARNG_RST 0x03FF0000u
+
+//! Field MINLSA - Minimum Logical Segment Address
+#define LSARNG_MINLSA_POS 0
+//! Field MINLSA - Minimum Logical Segment Address
+#define LSARNG_MINLSA_MASK 0x7FFFu
+
+//! Field MAXLSA - Maximum Logical Segment Address
+#define LSARNG_MAXLSA_POS 16
+//! Field MAXLSA - Maximum Logical Segment Address
+#define LSARNG_MAXLSA_MASK 0x7FFF0000u
+
+//! @}
+
+//! \defgroup OMQ Register OMQ - Output Message Queue Register
+//! @{
+
+//! Register Offset (relative)
+#define OMQ 0x60000
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_OMQ 0x1E860000u
+
+//! Register Reset Value
+#define OMQ_RST 0x00000000u
+
+//! Field HLSA - Head Logical Segment Address
+#define OMQ_HLSA_POS 0
+//! Field HLSA - Head Logical Segment Address
+#define OMQ_HLSA_MASK 0x7FFFu
+
+//! Field TLSA - Tail Logical Segment Address
+#define OMQ_TLSA_POS 16
+//! Field TLSA - Tail Logical Segment Address
+#define OMQ_TLSA_MASK 0x7FFF0000u
+
+//! @}
+
+//! \defgroup RCNT Register RCNT - Repeat Counter Addresses
+//! @{
+
+//! Register Offset (relative)
+#define RCNT 0x80000
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_RCNT 0x1E880000u
+
+//! Register Reset Value
+#define RCNT_RST 0x00000000u
+
+//! Field RCNT - Repeat Counter Value
+#define RCNT_RCNT_POS 0
+//! Field RCNT - Repeat Counter Value
+#define RCNT_RCNT_MASK 0x7u
+
+//! @}
+
+//! \defgroup RCNT_INCDEC Register RCNT_INCDEC - Repeat Counter Inc/Dec Addresses
+//! @{
+
+//! Register Offset (relative)
+#define RCNT_INCDEC 0xA0000
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_RCNT_INCDEC 0x1E8A0000u
+
+//! Register Reset Value
+#define RCNT_INCDEC_RST 0x00000000u
+
+//! Field RCNT_OLD - Repeat Counter Value
+#define RCNT_INCDEC_RCNT_OLD_POS 0
+//! Field RCNT_OLD - Repeat Counter Value
+#define RCNT_INCDEC_RCNT_OLD_MASK 0x7u
+
+//! @}
+
+//! \defgroup RAM Register RAM - LLT RAM Addresses
+//! @{
+
+//! Register Offset (relative)
+#define RAM 0xC0000
+//! Register Offset (absolute) for 1st Instance FSQM0
+#define FSQM0_RAM 0x1E8C0000u
+
+//! Register Reset Value
+#define RAM_RST 0x00000000u
+
+//! Field SNEXT - Pointer to the next segment
+#define RAM_SNEXT_POS 0
+//! Field SNEXT - Pointer to the next segment
+#define RAM_SNEXT_MASK 0x7FFFu
+
+//! @}
+
+//! @}
+
+#endif
diff --git a/include/net/lantiq_cbm.h b/include/net/lantiq_cbm.h
new file mode 100755
--- /dev/null
+++ b/include/net/lantiq_cbm.h
@@ -0,0 +1,40 @@
+#ifndef LANTIQ_CBM_H
+#define LANTIQ_CBM_H
+
+#define CBM_STD_BUF_SIZE 2048
+
+
+struct cbm_desc{
+    uint32_t desc0;
+    uint32_t desc1;
+    uint32_t desc2;
+    uint32_t desc3;
+};
+
+extern void *cbm_buffer_alloc(uint32_t, uint32_t);
+extern int cbm_buffer_free(uint32_t , uint32_t,  uint32_t );
+extern int check_ptr_validation(uint32_t buf);
+//extern int cbm_cpu_pkt_tx (struct sk_buff *skb, uint32_t egress_port, uint32_t flags);
+extern int cbm_cpu_pkt_tx_raw (unsigned char *data, uint32_t egress_port, uint32_t flags, int len);
+
+extern void cbm_enable_port (int pid);
+extern void cbm_disable_port (int pid);
+extern void reset_enq_counter(uint32_t index);
+extern void reset_deq_counter(uint32_t index);
+extern uint8_t get_lookup_qid_via_index(uint32_t index);
+extern int cbm_cpu_dequeue(uint32_t pid, struct cbm_desc *desc, int *quota, uint32_t *buf_per_port);
+extern void set_lookup_qid_via_index(uint32_t index, uint32_t qid);
+extern uint32_t get_enq_counter(uint32_t index);
+extern uint32_t get_deq_counter(uint32_t index);
+extern void reset_enq_counter(uint32_t index);
+extern void reset_deq_counter(uint32_t index);
+extern void reset_enq_counter_all(void);
+extern void reset_deq_counter_all(void);
+extern void set_lookup_qid_via_index(uint32_t index, uint32_t qid);
+extern uint8_t get_lookup_qid_via_index(uint32_t index);
+extern uint8_t get_lookup_qid_via_bits(uint32_t ep, uint32_t classid, uint32_t mpe1, uint32_t mpe2, uint32_t enc, uint32_t dec, uint8_t flow_id, uint32_t dic);
+extern void setup_DMA_p2p(void);
+extern int turn_on_DMA_p2p (void);
+extern int cbm_proc_install(struct proc_dir_entry *parent);
+extern int32_t cbm_get_egress_port_info(uint32_t cbm_port,uint32_t *tx_ch,uint32_t *flags );
+#endif
diff --git a/include/net/lantiq_cbm_api.h b/include/net/lantiq_cbm_api.h
new file mode 100755
--- /dev/null
+++ b/include/net/lantiq_cbm_api.h
@@ -0,0 +1,1438 @@
+#ifndef __CBM_API_H /* [ */
+#define __CBM_API_H
+/*! \file cbm_api.h
+	\brief This file contains all the Central Buffer Manager (CBM) API
+*/
+
+/** \defgroup CBM_Driver CBM Driver
+	\brief All API and defines exported by CBM Driver. Look at the constants chapter below.
+*/
+/* @{ */
+/** \defgroup CBM_Driver_Defines CBM Driver Defines
+	\brief Defines used in the CBM Driver. Look at the constants chapter below.
+*/
+/** \defgroup CBM_Driver_Global_Defines CBM Driver Global Defines
+	\brief Global Defines used in the CBM Driver. Look at the constants chapter below.
+*/
+/** \defgroup CBM_Driver_Port_Allocation_Defines CBM Driver Port Allocation Defines
+	\brief CBM Port Allocate Defines. Look at the constants chapter below.
+*/
+/** \defgroup CBM_Driver_Port_Defines CBM Driver Port Defines
+	\brief CBM Port Initialization Defines. Look at the constants chapter below.
+*/
+/** \defgroup CBM_Driver_CPU_Defines CBM Driver CPU Defines
+	\brief CBM Driver CPU Related Defines. Look at the constants chapter below.
+*/
+/** \defgroup CBM_Driver_QMAP_Defines CBM Driver QMAP Defines
+	\brief CBM Queue Map Table Field defines. Look at the constants chapter below.
+*/
+/** \defgroup CBM_Driver_Port_Structures CBM Driver Port Structures
+	\brief CBM Port Configuration Structures
+*/
+
+/** \defgroup CBM_Control_API CBM Control API
+	\brief CBM Control API allows to configure Interrupt, Enqueue and Dequeue manager
+	- CBM Enqueue Manager
+	- CBM Dequeue Manager
+*/
+
+/** \defgroup CBM_Port_Allocation_API CBM Port Allocation API
+	\brief CBM Port Allocation API allows to allocate and de-allocate
+		- CBM Enqeuue and Dequeue Ports
+	- Datapath (PMAC) Ports
+*/
+/** \defgroup CBM_Port_OPS_API CBM Port Operations API
+	\brief CBM Port Operations API - Initialize/Uninitialize, Enable/Disable, Configure CBM port
+	- CBM Enqeuue and Dequeue Ports
+*/
+/** \defgroup CBM_Stats_API CBM Statistics API
+	\brief CBM Statistics API
+	- CBM Enqeuue and Dequeue Ports
+*/
+/** \defgroup CBM_CPU_Port_API CBM CPU Port API
+	\brief CBM CPU Port API
+	- CBM Enqeuue and Dequeue Ports
+*/
+/** \defgroup CBM_CPU_IRQ_API  CBM CPU IRQ API
+	\brief CBM CPU IRQ Control and Enable API
+	- CBM Enqeuue and Dequeue Ports
+*/
+/** \defgroup CBM_CPU_API CBM CPU API
+	\brief CBM CPU API
+*/
+/** \defgroup CBM_CPU_LOAD_SPREADER_API CBM CPU LOAD SPREADER API
+	\brief CBM CPU Rx side Load Spreader API.
+	- Load Spreader module distributes incoming packet load to multiple Cores/VPEs in GRX500 for maximising SMP Rx Packet performance
+*/
+/* @} */
+
+#define SINGLE_RX_CH0_ONLY 1
+
+/** \addtogroup CBM_Driver_Global_Defines */
+/* @{ */
+/*!
+  \brief OK return value */
+#define CBM_OK			0
+/*!
+	\brief Error return value */
+#define CBM_ERROR		-1
+/* @} */
+
+
+/** \addtogroup CBM_Driver_Port_Allocation_Defines */
+/* @{ */
+/*!
+	\brief Module Flag VRX318 SmartPHY */
+#define CBM_MOD_F_VRX318		0x1
+/*!
+	\brief Module Flag TSO Engine */
+#define CBM_MOD_F_TSO			0x2
+/*!
+	\brief Module Flag LRO Engine */
+#define CBM_MOD_F_LRO			0x4
+/*!
+	\brief Module Flag WAVE500 WLAN */
+#define CBM_MOD_F_WAVE500		0x8
+
+/*!
+	\brief Flag Legacy 2-DWORD DMA descriptor */
+#define CBM_MOD_F_LEGACY		0x10
+/*!
+	\brief Flag Legacy Desc to 4 DW Invert */
+#define CBM_MOD_F_DESC_ORDER_INVERT	0x20
+/*!
+	\brief Flag CBM Port Type is CPU port */
+#define CBM_MOD_F_PORT_TYPE_CPU		0x40
+/* @} */
+
+/** \addtogroup CBM_Driver_Port_Defines */
+/* @{ */
+/*!
+	\brief Use Standard Size buffer pool */
+#define CBM_PORT_F_STANDARD_BUF		0x1
+/*!
+	\brief Use Jumbo size Buffer pool */
+#define CBM_PORT_F_JUMBO_BUF		0x2
+
+/*!
+	\brief CBM Dequeue port */
+#define CBM_PORT_F_DEQUEUE_PORT		0x4
+
+/*!
+	\brief Disable the CBM port */
+#define CBM_PORT_F_DISABLE		0x8
+
+/*!
+	\brief CPU CBM port */
+#define CBM_PORT_F_CPU_PORT			0x10
+
+/*!
+	\brief WAVE500 WLAN special CPU port */
+#define CBM_PORT_F_WAVE500_PORT		0x20
+/* @} */
+
+/** \addtogroup CBM_Driver_CPU_Defines */
+/* @{ */
+/*!
+	\brief Stop Rx i.e. assert backpressure */
+#define CBM_CPU_F_RX_STOP		0x1
+/*!
+	\brief Start Rx i.e. remove backpressure */
+#define CBM_CPU_F_RX_START		0x2
+
+/*!
+	\brief RCNT Decrement flag */
+#define CBM_CPU_BUF_DEC_RCNT		0x4
+/*!
+	\brief RCNT Increment flag */
+#define CBM_CPU_BUF_INC_RCNT		0x8
+/* @} */
+/** \addtogroup CBM_Driver_QMAP_Defines */
+/* @{ */
+/*!
+	\brief FlowId bits are don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_FLOWID_L_DONTCARE		0x1
+#define CBM_QUEUE_MAP_F_FLOWID_H_DONTCARE		0x80
+/*!
+	\brief VPN Encrypt bit is don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_EN_DONTCARE		0x2
+/*!
+	\brief VPN Decrypt bit is don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_DE_DONTCARE		0x4
+/*!
+	\brief MPE1 bit is don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_MPE1_DONTCARE		0x8
+/*!
+	\brief MPE2 bit is don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_MPE2_DONTCARE		0x10
+/*!
+	\brief EP/Egress Port field is don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_EP_DONTCARE		0x20
+/*!
+	\brief TC/Class field is don't care for map to QueueId */
+#define CBM_QUEUE_MAP_F_TC_DONTCARE		0x40
+/* @} */
+
+/*Special input flag to get the Enqueue port resources*/
+#define	DP_F_ENQ_CPU_0 0x2
+#define	DP_F_ENQ_CPU_1 0x3
+#define	DP_F_ENQ_CPU_2 0x4
+#define	DP_F_ENQ_CPU_3 0x5
+#define	DP_F_ENQ_WAVE  0x6
+#define	DP_F_ENQ_GSWIPL 0x7
+#define DP_F_ENQ_PAE 0x8
+#define	DP_F_ENQ_TSO 0x9
+#define	DP_F_ENQ_VRX318 0xa
+#define DP_F_DEQ_CPU 0x2
+#define DP_F_DEQ_CPU1 0x3
+#define DP_F_DEQ_MPE 0x4
+#define DP_F_DEQ_DL 0x5
+
+/*Special input flag to enable/disable datapath queues*/
+#define CBM_Q_F_DISABLE 0x10000000
+#define CBM_Q_F_NODEQUEUE 0x20000000
+#define CBM_Q_F_CKSUM 0x40000000
+#define CBM_Q_F_FLUSH 0x80000000
+
+/** \addtogroup CBM_Driver_Port_Structures */
+/* @{ */
+/*! \brief	Datapath Driver Rx callback fn
+	\param[in] skb Packet Buffer, skb
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+	*/
+typedef
+int32_t (*rx_fn)(struct sk_buff *skb,
+		uint32_t flags);
+/*! \brief	Stop Tx flow control callback fn
+	\param[in] pmac_port_id Datapath/PMAC Port Id to apply backpressure on
+	\param[in] subif : Sub-interface Id, not used currently
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+typedef
+int32_t (*stop_tx_fn)(
+	int32_t pmac_port_id,
+	uint32_t subif,
+	uint32_t flags);
+
+/*! \brief	Start Tx flow control callback fn
+	\param[in] pmac_port_id Datapath/PMAC Port Id to apply backpressure on
+	\param[in] subif : Sub-interface Id, not used currently
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+typedef
+int32_t (*start_tx_fn)(int32_t pmac_port_id,
+		uint32_t subif, uint32_t flags);
+
+/*!
+	\brief CBM Datapath Registration Callback
+*/
+typedef struct {
+		rx_fn rxfn; /*!< Rx function callback */
+		stop_tx_fn stoptxfn; /*!< Stop Tx function callback */
+		start_tx_fn starttxfn; /*!< Start Tx function callback */
+} cbm_dp_callback_t;
+/*!
+	\brief CBM Enqueue Manager Control data structure
+*/
+typedef union cbm_eqm_ctrl {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_eqm_ctrl_t;
+
+/*!
+	\brief CBM Dequeue Manager Control data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dqm_ctrl_t;
+
+/*!
+	\brief CBM DMA Dequeue Port Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dequeue_dma_port_config_t;
+/*!
+	\brief CBM DMA Enqueue Port Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_enqueue_dma_port_config_t;
+/*!
+	\brief CBM DMA Port Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+	cbm_enqueue_dma_port_config_t enq_cfg; /*!< CBM Enqueue DMA port config	 */
+	cbm_dequeue_dma_port_config_t deq_cfg; /*!< CBM Dequeue DMA port config	 */
+} cbm_dma_port_config_t;
+
+
+/*!
+	\brief CBM Enqueue Port Watermark/Threshold Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	/* Low Watermark & High Watermark */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_port_thresh_t;
+
+/*!
+	\brief CBM CPU Dequeue Port Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dequeue_cpu_port_config_t;
+/*!
+	\brief CBM CPU Enqueue Port Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_enqueue_cpu_port_config_t;
+/*!
+	\brief CBM CPU Port Configuration data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+	cbm_enqueue_cpu_port_config_t enq_cfg; /*!< CBM Enqueue CPU port config	 */
+	cbm_dequeue_cpu_port_config_t deq_cfg; /*!< CBM Dequeue CPU port config	 */
+} cbm_cpu_port_config_t;
+/*!
+	\brief CBM Dequeue CPU Port Interrupt Control data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dequeue_cpu_port_irq_ctrl_t;
+/*!
+	\brief CBM Enqueue CPU Port Interrupt Control data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_enqueue_cpu_port_irq_ctrl_t;
+/*!
+	\brief CBM CPU Port Interrupt Control
+*/
+typedef union cbm_enqueue_cpu_port_irq_ctrl {
+	uint32_t	regval;	/*!< 32-bit register value */
+	cbm_enqueue_cpu_port_irq_ctrl_t enq_irq_ctrl; /*!< CBM Enqueue CPU port IRQ Ctrl */
+	cbm_dequeue_cpu_port_irq_ctrl_t deq_irq_ctrl; /*!< CBM Dequeue CPU port IRQ Ctrl */
+} cbm_cpu_port_irq_ctrl_t;
+
+/*!
+	\brief CBM Dequeue DMA Port Interrupt Control data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dequeue_dma_port_irq_ctrl_t;
+/*!
+	\brief CBM Enqueue DMA Port Interrupt Control data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_enqueue_dma_port_irq_ctrl_t;
+/*!
+	\brief CBM DMA Port Interrupt Control
+*/
+typedef union {
+	uint32_t	regval;	/*!< 32-bit register value */
+	cbm_enqueue_dma_port_irq_ctrl_t enq_irq_ctrl; /*!< CBM Enqueue DMA port IRQ Ctrl */
+	cbm_dequeue_dma_port_irq_ctrl_t deq_irq_ctrl; /*!< CBM Dequeue DMA port IRQ Ctrl */
+} cbm_dma_port_irq_ctrl_t;
+/*!
+	\brief CBM Dequeue CPU Port Interrupt Enable data structure
+*/
+typedef union cbm_dequeue_cpu_port_irq_enable{
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dequeue_cpu_port_irq_enable_t;
+/*!
+	\brief CBM Enqueue CPU Port Interrupt Enable data structure
+*/
+typedef union cbm_enqueue_cpu_port_irq_enable {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_enqueue_cpu_port_irq_enable_t;
+/*!
+	\brief CBM CPU Port Interrupt Enable
+*/
+typedef union {
+	uint32_t	regval;	/*!< 32-bit register value */
+	cbm_enqueue_cpu_port_irq_enable_t enq_irq_enable; /*!< CBM Enqueue CPU port IRQ Enable */
+	cbm_dequeue_cpu_port_irq_enable_t deq_irq_enable; /*!< CBM Dequeue CPU port IRQ Enable */
+} cbm_cpu_port_irq_enable_t;
+
+/*!
+	\brief CBM Dequeue DMA Port Interrupt Enable data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_dequeue_dma_port_irq_enable_t;
+/*!
+	\brief CBM Enqueue DMA Port Interrupt Enable data structure
+*/
+typedef union {
+	/* Should be auto-generated by LSD tool */
+	uint32_t	regval;	/*!< 32-bit register value */
+} cbm_enqueue_dma_port_irq_enable_t;
+
+/*!
+	\brief CBM DMA Port Interrupt Enable
+*/
+typedef union {
+	uint32_t	regval;	/*!< 32-bit register value */
+	cbm_enqueue_dma_port_irq_enable_t enq_irq_enable; /*!< CBM Enqueue DMA port IRQ Enable */
+	cbm_dequeue_dma_port_irq_enable_t deq_irq_enable; /*!< CBM Dequeue DMA port IRQ Enable */
+} cbm_dma_port_irq_enable_t;
+
+
+/*!
+	\brief CBM Queue Map table Entry
+*/
+typedef union {
+	uint32_t	regval;	/*!< 32-bit register value */
+	struct {
+		uint32_t	flowid:2; /*!< FlowId (Bits 7:6) */
+		uint32_t	dec:1; /*!< VPN Decrypt flag */
+		uint32_t	enc:1; /*!< VPN Encrypt flag */
+		uint32_t	mpe1:1; /*!< MPE1 Flag */
+		uint32_t	mpe2:1; /*!< MPE2 Flag */
+		uint32_t	ep:4; /*!< PMAC Egress Port number */
+		uint32_t	tc:4; /*!< Traffic Class */
+		uint32_t	res1:18; /*!< Reserved bits */
+	};
+	uint32_t	flags; /*!< Flags stored in DDR CBM Queue map table. Currently, only flag defined is CBM_F_QUEUE_DROP */
+} cbm_queue_map_entry_t;
+
+/*!
+	\brief CBM Load Spreader Config
+*/
+typedef struct {
+	uint32_t	enable:1; /*!< Whether Load Spreader is enabled */
+	uint32_t	clk_div:2; /*!< Divide CBM clock by 2^clk_div for Overflow counter */
+	uint32_t	flowid_mode:1; /*!< 1-FlowId mode; 0-WRR mode */
+	uint32_t	wp0:2; /*!< Weight of Port 0*/
+	uint32_t	wp1:2; /*!< Weight of Port 1*/
+	uint32_t	wp2:2; /*!< Weight of Port 2*/
+	uint32_t	wp3:2; /*!< Weight of Port 3*/
+	uint32_t	wp4:2; /*!< Weight of Port 4*/
+	uint32_t	wp5:2; /*!< Weight of Port 5*/
+	uint32_t	wp6:2; /*!< Weight of Port 6*/
+	uint32_t	wp7:2; /*!< Weight of Port 7*/
+	uint32_t	res1:20; /*!< Reserved*/
+} cbm_load_spreader_cfg_t;
+/*!
+	\brief CBM Port Load Spreader Config
+*/
+typedef struct {
+	uint32_t	enable:1; /*!< Whether port is enabled on Load Spreader */
+	uint32_t	spreading_enable:1; /*!< 1-Port will participate in load spreading; 0-direct connect to corresponding VPE number */
+	uint32_t	irq_en:1; /*!< Rx Interrupt enabled for Port */
+	uint32_t	counter_en:1; /*!< Counter enabled for Port */
+	uint32_t	queue_thresh:3; /*!< Queue threshold to raise an interrupt */
+	uint32_t	counter_thresh:16; /*!< FIXME: Queue threshold to raise an interrupt */
+	uint32_t	res1:9; /*!<  REserved */
+} cbm_port_load_spreader_cfg_t;
+
+/*!
+	\brief TMU resource structure for a TMU port
+*/
+typedef struct cbm_tmu_res {
+	uint32_t tmu_port; /*!< TMU port number, -1 if no TMU port allocated */
+	uint32_t cbm_deq_port; /*!< CBM Dequeue port number, -1 if no CBM port allocated */
+	int32_t	tmu_sched; /*!< TMU scheduler Id attached to TMU port, -1 if unassigned */
+	int32_t	tmu_q; /*!< TMU Queue Id attached to TMU scheduler on this TMU port, -1 if unassigned */
+} cbm_tmu_res_t;
+
+
+
+/*!
+	\brief CBM Dequeue Resource Info for configuring other HW peripherals to
+	access the CBM
+*/
+typedef struct cbm_dq_info {
+	uint32_t	port_no;	/*! < CBM Dequeue Port No */
+	void		*cbm_dq_port_base; /*!< CBM Dequeue Port Base Address
+						 */
+	int32_t		dma_tx_chan;	/*! PMAC DMA Tx Channel */
+	uint32_t	num_desc; /*!< Number of Descriptors at port base */
+} cbm_dq_info_t;
+
+/*!
+	\brief CBM Enqueue Resource Info for configuring other HW peripherals to
+	access the CBM
+*/
+typedef struct cbm_eq_info {
+	uint32_t	port_no;	/*! < CBM Enqueue Port No */
+	void		*cbm_eq_port_base; /*!< CBM enqueue Port Base Address
+						 */
+	int32_t		dma_rx_chan_std;	/*! PMAC DMA Rx Channel for Std Buffer */
+	int32_t		dma_rx_chan_jumbo;	/*! PMAC DMA Rx Channel for Jumbo Buffer */
+	uint32_t	num_desc; /*!< Number of Descriptors at port base */
+} cbm_eq_info_t;
+/*!
+	\brief CBM Dequeue Port Resources for a Client - All addrsses are PHYSICAL addresses
+*/
+typedef struct cbm_dq_port_res {
+	void		*cbm_buf_free_base; /*!< CBM Buffer Free Port Base
+						  Address for CPU Ports. This is NULL for DMA
+						  Dequeue Ports */
+	uint32_t	num_free_entries; /*!< Number of Free Port entries. This is 0
+						when cbm_buf_free_base = NULL */
+	int		num_deq_ports; /*!< Number of Dequeue Ports */
+	cbm_dq_info_t	*deq_info; /*!< Array of CBM Dequeue Port Related Info
+					 of num_deq_ports entries. Caller must free the memory */
+} cbm_dq_port_res_t;
+
+/*!
+	\brief CBM Enqueue Port Resources for a Client
+*/
+typedef struct cbm_eq_port_res {
+	int		num_eq_ports; /*!< Number of Enqueue Ports */
+	cbm_eq_info_t	*eq_info; /*!<	EQ port info */
+} cbm_eq_port_res_t;
+/* @} */
+
+/** \addtogroup CBM_Control_API */
+/* @{ */
+/*! \brief	Get CBM Enqueue Manager Control
+	\param[out] ctrl CBM EQM Control structure
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_mgr_ctrl_get(
+	cbm_eqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	);
+/*! \brief	Set CBM Enqueue Manager Control
+	\param[in] ctrl CBM EQM Control structure
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_mgr_ctrl_set(
+	  cbm_eqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	  uint32_t flags /*!< Flags */
+	  );
+/*! \brief	Get CBM Dequeue Manager Control
+	\param[out] ctrl CBM EQM Control structure
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dequeue_mgr_ctrl_get(
+	cbm_dqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	);
+/*! \brief	Configures CBM Dequeue Manager Control
+	\param[in] ctrl CBM DQM Control structure
+	\param[in] flags : Reserved
+	\return CBM_OK  / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dequeue_mgr_ctrl_set(
+	cbm_dqm_ctrl_t *ctrl, /*!< EQM Control data structure */
+	uint32_t flags /*!< Flags */
+	);
+/* @} */
+
+/** \addtogroup CBM_Port_Allocation_API */
+/* @{ */
+
+/*! \brief Get the number of allocated TMU ports, and allocated TMU queues from
+  the CBM Driver.
+	\param[out] tmu_port Highest TMU port number allocated/reserved by CBM Driver
+	\param[out] tmu_sched Highest TMU scheduler number allocated/reserved by CBM Driver
+	\param[out] tmu_q Highest TMU queue number allocated/reserved by CBM Driver
+	\return 0
+*/
+int32_t
+cbm_reserved_dp_resources_get(
+	uint32_t *tmu_port,
+	uint32_t *tmu_sched,
+	uint32_t *tmu_q
+	);
+
+/*! \brief Get the TMU resoures for a datapath port
+	\param[in] dp_port Datapath (PMAC) Port for which TMU resources are queried
+	\param[out] num_tmu_ports Number of TMU ports configured for this DP port - typically 1
+	\param[out] res TMU resources assigned to this DP port
+	\param[in]  flags - One of the following flags can be passed:
+	- DP_F_DIRECTPATH_RX
+	- DP_F_MPE_ACCEL
+	\note For LAN Ethernet ports, two TMU ports are allocated for each LAN port
+	\note Caller needs to free the memory  allocated for res
+	\note In the CBM Egress port lookup table, special ports are to be identified
+	by the same flags as passed in this API (additionally DP_F_FAST_WLAN2,
+	DP_F_FAST_WLAN3)
+	\return 0 if DP Port configured; -1 if DP Port does not exist
+s
+*/
+int32_t
+cbm_dp_port_resources_get(
+	uint32_t *dp_port,
+	uint32_t *num_tmu_ports,
+	cbm_tmu_res_t **res_pp,
+	uint32_t  flags
+	);
+
+
+/*! \brief Get the Datapath Port number for a TMU port
+	\param[in] tmu_port TMU port number for which datapath port number is requested
+	\param[in]  flags - One of the following flags can be passed:
+	- DP_F_DIRECTPATH_RX
+	- DP_F_MPE_ACCEL
+  \return DP Port if success; -1 if DP Port does not exist
+*/
+int32_t
+cbm_dp_port_get(
+	uint32_t tmu_port,
+	uint32_t flags
+	);
+
+/*! \brief Enable/Disable the CBM datapath for the given datapath port (PMAC port)
+	\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] port_id PMAC port number allocated for the datapath port
+	\param[in] flags : Use flags to disable
+	-  CBM_F_DPATH_DISABLE : Disable the datapath for the PMAC port
+	\return 0 if OK / CBM_ERROR on Error
+	\note This involves disabling the TMU queues mapped to the TMU port
+	corresponding to the given datapath port. See CBM chapter in SWAS
+*/
+int32_t
+cbm_dp_enable(
+	struct module *owner,
+	uint32_t port_id,
+	uint32_t flags,
+	uint32_t alloc_flags
+	);
+
+/*! \brief	Allocates CBM enqueue port number to a physical interface. The physical
+	port may map to an exclusive netdevice like in the case of ethernet LAN ports.
+	\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] driver_dev_port Physical Port Number of this device managed by the driver - some drivers manage more than 1 port.
+	\param[in] flags : Special inputs to alloc routine - CBM_WAVE500_WLAN_DEV, CBM_VRX300_DEV
+	\return Port Id	/ CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_port_alloc(
+	struct module *owner,
+	uint32_t driver_dev_port,
+	uint32_t flags
+	);
+
+/*! \brief	Deallocate CBM enqueue port number allocated to a physical interface. The physical
+	port may map to an exclusive netdevice like in the case of ethernet LAN ports.
+	\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] cbm_port_id CBM Port number to deallocate.
+	\param[in] flags : Whether the CBM Port is
+	\return	CBM_OK	/ CBM_ERROR
+	\note CBM Port can be deallocated only after the port is Unitialized
+*/
+int32_t
+cbm_enqueue_port_dealloc(
+	struct module *owner,
+	uint32_t cbm_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Allocates CBM enqueue port number to a physical interface. The physical
+	port may map to an exclusive netdevice like in the case of ethernet LAN ports.
+	In other cases like WLAN, the physical port is a Radio port, while netdevices are
+	Virtual Access Points (VAPs). In this case, the	 AP netdevice can be passed. Alternately,
+\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] driver_dev_port Physical Port Number of this device managed by the driver
+	\param[in] flags : Special inputs to alloc routine - CBM_WAVE500_WLAN_DEV, CBM_VRX300_DEV
+	\return Port Id	/ CBM_ERROR
+	\note  Internal API
+*/
+int32_t
+cbm_dequeue_port_alloc(
+	struct module *owner,
+	uint32_t driver_dev_port,
+	uint32_t flags
+	);
+
+/*! \brief	Deallocate CBM dequeue port number allocated to a physical interface. The physical
+	port may map to an exclusive netdevice like in the case of ethernet LAN ports.
+	\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] cbm_port_id CBM Port number to deallocate.
+	\param[in] flags : Reserved
+	\return	CBM_OK	/ CBM_ERROR
+	\note CBM Port can be deallocated only after the port is Unitialized
+	\note Internal API
+*/
+int32_t
+cbm_dequeue_port_dealloc(
+	struct module *owner,
+	uint32_t cbm_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Allocates datapath PMAC port number to a physical interface. The physical
+	port may map to an exclusive netdevice like in the case of ethernet LAN ports.
+	In other cases like WLAN, the physical port is a Radio port, while netdevices are
+	Virtual Access Points (VAPs). In this case, the	 AP netdevice can be passed. Alternately,
+	\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] dev Pointer to Linux netdevice structure
+	\param[in] dev_port Physical Port Number of this device managed by the driver
+	\param[in] port_id Optional port_id number requested. Usually, 0 and allocated by driver
+	\param[in] flags : Special inputs to alloc routine - CBM_WAVE500_WLAN_DEV, CBM_VRX300_DEV
+	\return Port Id	/ CBM_ERROR
+	\note
+	\note DT map
+	\note	DrvMod Name | DrvDevNo | PMACPort No
+	\note	laneth		|	0	   | 1
+	\note	laneth		|	1	   | 2
+	\note	waneth		|	0	   | 15
+
+*/
+int32_t
+cbm_dp_port_alloc(
+	struct module *owner,
+	struct net_device *dev,
+	uint32_t dev_port,
+	int32_t port_id,
+	uint32_t flags
+	);
+
+/*! \brief	De-Allocates datapath PMAC port number to a physical interface.
+	Virtual Access Points (VAPs). In this case, the	 AP netdevice can be passed. Alternately,
+	\param[in] owner	 Kernel module pointer which owns the port
+	\param[in] dev_port Physical Port Number of this device managed by the driver
+	\param[in] cbm_port_id CBM port_id number to de-allocate.
+	\param[in] flags : Reserved
+	\return Port Id	/ CBM_ERROR
+	\note  Will be called by the datapath driver when port/interface is deleted
+	like when driver is rmmod
+*/
+int32_t
+cbm_dp_port_dealloc(
+	struct module *owner,
+	uint32_t dev_port,
+	int32_t cbm_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM CPU Dequeue Path resources for a DP port
+	\param[in] dp_port  Datapath/PMAC port number for which Dequeue resources are asked
+	\param[out] res	 CBM Resources on Dequeue Path in terms of address, number etc
+	\param[in] flags :Special Flags can be:
+	DP_F_DIRECTPATH_RX
+	DP_F_MPE_ACCEL
+	DP_F_LRO
+	\return CBM_OK / CBM_ERROR
+	\note  The Device Tree table for Dequeue Ports, will have two extra parameters indicating
+	a) CPU Dequeue Port (1) or DMA Dequeue Port (0)
+	b) Number of Descriptors on that port
+	This info is going to be used in the API below. Sanity checks on the DT info is desirable
+	at init time.
+*/
+int32_t
+cbm_dequeue_port_resources_get(
+	uint32_t	dp_port,
+	cbm_dq_port_res_t *res,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM CPU Enqueue Path resources for a DP port
+	\param[out] res	 CBM Resources on Dequeue Path in terms of address, number etc
+	\param[in] flags :Special Flags can be:
+	DP_F_ENQ_PAE
+	DP_F_ENQ_VRX318
+	DP_F_ENQ_GSWIPL
+	DP_F_ENQ_TSO
+	\return CBM_OK / CBM_ERROR
+	\note  The Device Tree table for Enqueue Ports, will have two extra parameters indicating
+	a) CPU Enqueue Port (1) or DMA Enqueue Port (0)
+	b) Number of Descriptors on that port
+	This info is going to be used in the API below. Sanity checks on the DT info is desirable
+	at init time.
+*/
+int32_t
+cbm_enqueue_port_resources_get(
+	cbm_eq_port_res_t *res,
+	uint32_t flags
+	);
+/* @} */
+
+/** \addtogroup CBM_Port_OPS_API */
+/* @{ */
+
+/*! \brief	Initializes CBM Enqueue DMA Port
+	\param[in] cbm_port_id CBM port_id to initialize.
+	\param[in] dma_hw_num Instance of DMA Engine H/w
+	\param[in] std_dma_chan_num DMA Rx Channel Number for Standard size buffers on the specified DMA Engine
+	\param[in] jumbo_dma_chan_num DMA Rx Channel Number for Jumbo size buffers on the specified DMA Engine
+	\param[in] flags : Flags for Port Init routine
+		- CBM_PORT_F_STANDARD_BUF
+		- CBM_PORT_F_JUMBO_BUF
+	\return CBM_OK / CBM_ERROR
+	\note  One or both of CBM_PORT_F_STANDARD_BUF and CBM_PORT_F_JUMBO_BUF  must be specified
+*/
+int32_t
+cbm_enqueue_dma_port_init(
+	int32_t cbm_port_id,
+	int32_t dma_hw_num,
+	uint32_t std_dma_chan_num,
+	uint32_t jumbo_dma_chan_num,
+	uint32_t flags
+	);
+/*! \brief	Uninitialize a initialized CBM Enqueue DMA port, which dissociates all DMA
+	setup with the port.
+	\param[in] cbm_port_id CBM port_id to un-initialize.
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_dma_port_uninit(
+	int32_t cbm_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Initializes CBM Dequeue DMA Port
+	\param[in] cbm_port_id CBM port_id to initialize.
+	\param[in] dma_hw_num Instance of DMA Engine H/w
+	\param[in] dma_chan_num DMA Tx Channel Number on the specified DMA Engine
+	\param[in] flags : Flags for Port Init routine
+	\return CBM_OK / CBM_ERROR
+	\note  On the Dequeue port, the same DMA channel can carry Standard or Jumbo sized buffers
+*/
+int32_t
+cbm_dequeue_dma_port_init(
+	int32_t cbm_port_id,
+	int32_t dma_hw_num,
+	uint32_t dma_chan_num,
+	uint32_t flags
+	);
+/*! \brief	Uninitialize a initialized CBM dequeue DMA port, which dissociates all DMA
+	setup with the port.
+	\param[in] cbm_port_id CBM port_id to un-initialize.
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dequeue_dma_port_uninit(
+	int32_t cbm_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Enable CBM Enqueue or Dequeue DMA Port
+	\param[in] cbm_port_id CBM port_id to initialize.
+	\param[in] flags : Flags for Port Enable routine
+		- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+		- CBM_PORT_F_DISABLE - if set, disable the port; else enable the port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dma_port_enable(
+	int32_t cbm_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM DMA port Config parameters
+	\param[in] cbm_port_id CBM port_id to un-initialize.
+	\param[out] cfg CBM DMA Port Configuration datastruct
+	\param[in] flags : Flags that qualify the configuration
+		- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dma_port_config_get(
+	int32_t cbm_port_id,
+	cbm_dma_port_config_t *cfg,
+	uint32_t flags
+	);
+
+/*! \brief	Configure the CBM DMA port parameters
+	\param[in] cbm_port_id CBM port_id to un-initialize.
+	\param[in] cfg CBM DMA Port Configuration datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dma_port_config_set(
+	int32_t cbm_port_id,
+	cbm_dma_port_config_t *cfg,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM port watermark thresholds
+	\param[in] cbm_port_id CBM port_id to get thresholds.
+	\param[out] thresh CBM Enqueue Port Watermark thresholds
+	\param[in] flags :
+		- CBM_PORT_F_CPU_PORT
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_port_thresh_get(
+	int32_t cbm_port_id,
+	cbm_port_thresh_t *thresh,
+	uint32_t flags
+	);
+
+/*! \brief	Set the CBM port watermark thresholds
+	\param[in] cbm_port_id CBM port_id to get thresholds.
+	\param[in] thresh CBM Enqueue Port Watermark thresholds
+	\param[in] flags :
+		- CBM_PORT_F_CPU_PORT
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_port_thresh_set(
+	int32_t cbm_port_id,
+	cbm_port_thresh_t *thresh,
+	uint32_t flags
+	);
+
+/*! \brief	Enable/Disable a Datapath Port TMU Queue in CBM
+   \param[in] dp_port_id Datapath/PMAC port number whose queue to operate on.
+		if dp_port_id=-1, the operation is carried out only on qnum or based
+		on special queue flags like CBM_Q_F_CKSUM.
+	\param[in] qnum : Queue number to enable/disable. If qnum=-1, then special flags
+		implicitly determine the queue number.
+	\param[in] flags : Flags for Port Enable routine
+			- CBM_Q_F_DISABLE - Disable the Queue
+			- CBM_Q_F_NODEQUEUE - if set, Don't drain out all
+			the enqueued packets before disabling the queue which
+			is the default behaviour when disabling a queue
+			- CBM_Q_F_CKSUM : Special Queue for checksum
+	\return CBM_OK / CBM_ERROR
+	\note  CBM Driver allows a safe enable/disable of the queue, by first
+	mapping all CBM Queue Map entries to this queue to the Global Drop queue,
+	draining all packets out if required, enabling/disabling the queue, and
+	mapping the previous CBM Queue Map entries back to this queue
+*/
+int32_t
+cbm_dp_q_enable(
+	int32_t dp_port_id,
+	int32_t qnum,
+	int32_t tmu_port_id,
+	int32_t remap_to_qid,
+	uint32_t timeout,
+	int32_t qidt_valid,
+	uint32_t flags
+	);
+/* @} */
+
+/** \addtogroup CBM_Stats_API */
+/* @{ */
+/*! \brief	Get the CBM Enqueue DMA Port Stats
+	\param[in] cbm_port_id CBM port_id for which to get stats
+	\param[out] occupancy_ctr	Enqueue Port Occupancy Counter
+	\param[out] enq_ctr	Enqueue Port Enqueue Counter
+	\param[in] flags : Flags that qualify the configuration
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_dma_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *occupancy_ctr,
+	uint32_t *enq_ctr,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM Dequeue DMA Port Stats
+	\param[in] cbm_port_id CBM port_id for which to get stats
+	\param[out] deq_ctr	Dequeue Port Dequeue Counter
+	\param[in] flags : Flags that qualify the configuration
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dequeue_dma_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *deq_ctr,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM DMA Queue Stats
+	\param[in] cbm_queue_id CBM/TMU Queue Id [0-255] for which stats are to be returned
+	\param[out] ctr	Queue Pkt/Byte counter as per Queue Count config
+	\param[in] flags : Flags that qualify the configuration
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_queue_stats_get(
+	  int32_t cbm_queue_id,
+	  uint32_t *ctr,
+	  uint32_t flags
+	  );
+/* @} */
+
+/** \addtogroup CBM_CPU_Port_API */
+/* @{ */
+/*! \brief	Get the CBM CPU port Config parameters
+	\param[in] cbm_port_id CBM port_id to un-initialize.
+	\param[out] cfg CBM CPU Port Configuration datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_cpu_port_config_get(
+	int32_t cbm_port_id,
+	cbm_cpu_port_config_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Set the CBM CPU port Config parameters
+	\param[in] cbm_port_id CBM port_id to un-initialize.
+	\param[in] cfg CBM CPU Port Configuration datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_cpu_port_config_set(
+	int32_t cbm_port_id,
+	cbm_cpu_port_config_t *cfg,
+	uint32_t flags
+	);
+/* @} */
+
+/** \addtogroup CBM_CPU_API */
+/* @{ */
+/*! \brief	Request a CBM Buffer of the indicated Buffer Size Pool/Bin
+	\param[in] vpe_id  CPU/VPE# (0-3) which requests the buffer
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Get Standard Pool Buffers
+			- CBM_PORT_F_JUMBO_BUF - if set, Get Jumbo Pool Buffers
+	\return CBM Buffer Pointer / NULL if out of buffers
+	\note
+*/
+void*
+cbm_cpu_buffer_alloc(
+	int32_t vpe_id,
+	uint32_t flags
+	);
+/*! \brief	Free a CBM Buffer to one of the CBM Free Buffer Pools
+	\param[in] vpe_id  CPU/VPE# (0-3) which requests the buffer ; if -1, current VPE Id is used
+	\param[in] buf  Pointer to CBM Buffer
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Get Standard Pool Buffers
+			- CBM_PORT_F_JUMBO_BUF - if set, Get Jumbo Pool Buffers
+	\return CBM_OK / CBM_ERROR if Buffer pointer is invalid
+	\note Pointer to CBM buffer need not be at the very start of the buffer. It can point to anywhere inside the buffer space
+*/
+void*
+cbm_cpu_buffer_free(
+	int32_t vpe_id,
+	void *buf,
+	uint32_t flags
+	);
+
+/*! \brief	Tx a Packet Buffer to the Egress Port
+	\param[in] skb  Pointer to Linux skb packet meta-data/buffer
+	\param[in] pmac_port_id	Egress PMAC/Datapath Port Id
+	\param[in] flags : Flags that qualify the configuration
+	\return CBM_OK / CBM_ERROR if Buffer pointer is invalid
+	\note Pointer to CBM buffer need not be at the very start of the buffer. It can point to anywhere inside the buffer space
+*/
+int32_t
+cbm_cpu_pkt_tx(
+	struct sk_buff *skb,
+	int32_t pmac_port_id,
+	uint32_t flags
+	);
+
+/*! \brief	Rx Flow Control function
+	\param[in] pmac_port_id Datapath/PMAC port Id on which Datapath/PMAC port Id on which datapath driver indicates backpressure
+	\param[in] subif	 sub-interface Id on which backpressure is asserted (currently reserved)
+	\param[in] flags : Flags that qualify the backpressure mechanism
+			- CBM_CPU_F_RX_STOP - Rx Stop
+			- CBM_CPU_F_RX_START - Rx Start
+	\return CBM_OK / CBM_ERROR
+	\note Use of subif is reserved for future
+*/
+int32_t
+cbm_cpu_rx_flow_control(
+	int32_t pmac_port_id,
+	uint32_t subif,
+	uint32_t flags
+	);
+
+
+/*! \brief	CBM Queue Map table entry/entries Set
+	\param[in] tmu_queue_id TMU QueueId (0-255)
+	\param[in] entry	 pointer to Queue map structure
+	\param[in] flags : Flags that qualify the Mapping mechanism
+			- CBM_QUEUE_MAP_F_FLOWID_DONTCARE
+			- CBM_QUEUE_MAP_F_EN_DONTCARE
+			- CBM_QUEUE_MAP_F_DE_DONTCARE
+			- CBM_QUEUE_MAP_F_MPE1_DONTCARE
+			- CBM_QUEUE_MAP_F_MPE2_DONTCARE
+			- CBM_QUEUE_MAP_F_EP_DONTCARE
+			- CBM_QUEUE_MAP_F_TC_DONTCARE
+	\return CBM_OK / CBM_ERROR
+	\note Map Entry fields which are specified as DONTCARE in the flags, result in multiple entries being created which map to the same tmu_queue_id.
+	Also, VRX318 has TC=qid setting.
+	\note The API implementation needs to maintain a DDR Queue Map table
+	corresponding to the CBM HW QIDT with an extra flags field. Marking DROP flag
+	in this field of an entry internally, means QIDT entry in CBM HW set to
+	Global Drop Queue (instead of queue num in Queue Map table entry). This
+	allows to easily remap back to the right queue after operations like disable
+	etc.
+	\note The implementation must also maintain an array of all queue numbers, which
+	contains the reference count of how many Queue Map table entries point to this queue
+	On every set, reference count of original queue is decremented, and new queue is
+	incremented.
+*/
+int32_t
+cbm_queue_map_set(
+	int32_t tmu_queue_id,
+	cbm_queue_map_entry_t *entry,
+	uint32_t flags
+	);
+
+/*! \brief	CBM Queue Map table entry/entries get for a given tmu_queue_id
+	\param[in] tmu_queue_id TMU QueueId (0-255)
+	\param[out] num_entries returned in entries array which is allocated by CBM Driver
+	\param[out] entries	pointer to Queue map structure
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note The caller needs to free up the entries buffer
+	\note if tmu_queue_id = -1, then all queue map entries are returned, aka the whole CBM Queue Map table
+*/
+int32_t
+cbm_queue_map_get(
+	int32_t tmu_queue_id,
+	int32_t *num_entries,
+	cbm_queue_map_entry_t **entries,
+	uint32_t flags
+	);
+
+/*! \brief	CBM Dequeue Port Queues Flush in TMU
+	\param[in] cbm_port_id CBM Dequeue Egress Port
+	\param[in] tmu_queue_id TMU queue_id attached to cbm_port_id. If tmu_queue_id=-1, all queues attached to cbm_port_id need to be flushed - Currently only all queues attached to the port can be flushed
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note The caller needs to free up the entries buffer
+*/
+int32_t
+cbm_queue_flush(
+	int32_t cbm_port_id,
+	int32_t tmu_queue_id,
+	uint32_t timeout,
+	uint32_t flags
+	);
+
+/*! \brief	CBM Buffer Update Repeat Count (RCNT)
+	\param[in] vpe_id Use CBM CPU RCNTINC/DEC port corresponding to VPE/CPU Number
+	\param[in] buffer Pointer to CBM buffer
+	\param[in] flags : Whether to Increment or Decrement RCNT for buffer
+	- CBM_CPU_BUF_INC_RCNT
+	- CBM_CPU_BUF_DEC_RCNT
+	\return RCNT / CBM_ERROR
+	\note The buffer pointer passed can be anywhere in the span of the CBM buffer
+*/
+int32_t
+cbm_buffer_upd_rcnt(
+	int32_t vpe_id,
+	void *buffer,
+	uint32_t flags
+	);
+/* @} */
+
+/** \addtogroup CBM_CPU_IRQ_API */
+/* @{ */
+/*! \brief	Set the CBM CPU IRQ Ctrl Config - s/w trigger interrupts for debug
+	\param[in] cbm_cpu_port_id CBM CPU Port Id
+	\param[in] cfg CBM CPU Port IRQ Control datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_WAVE500_PORT - if set, special CPU port that has additional parameters
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_cpu_port_intr_ctrl_set(
+	uint32_t cbm_cpu_port_id,
+	cbm_cpu_port_irq_ctrl_t *cfg,
+	uint32_t flags
+	);
+
+/*! \brief	Set the CBM CPU IRQ Enable Config
+	\param[in] cbm_cpu_port_id CBM CPU Port Id
+	\param[in] cfg CBM CPU Port IRQ Enable datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_WAVE500_PORT - if set, special CPU port that has additional parameters
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_cpu_port_intr_enable_set(
+	uint32_t cbm_cpu_port_id,
+	cbm_cpu_port_irq_enable_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Get the CBM CPU IRQ Enable Config
+	\param[in] cbm_cpu_port_id CBM CPU Port Id
+	\param[out] cfg CBM CPU Port IRQ Enable datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_WAVE500_PORT - if set, special CPU port that has additional parameters
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_cpu_port_intr_ctrl_get(
+	uint32_t cbm_cpu_port_id,
+	cbm_cpu_port_irq_enable_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Set the CBM DMA IRQ Ctrl Config - s/w trigger interrupts for debug
+	\param[in] cbm_dma_port_id CBM DMA Port Id
+	\param[in] cfg CBM DMA Port IRQ Control datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_WAVE500_PORT - if set, special DMA port that has additional parameters
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dma_port_intr_ctrl_set(
+	  uint32_t cbm_dma_port_id,
+	  cbm_dma_port_irq_ctrl_t *cfg,
+	  uint32_t flags
+	  );
+
+/*! \brief	Set the CBM DMA IRQ Enable Config
+	\param[in] cbm_dma_port_id CBM DMA Port Id
+	\param[in] cfg CBM DMA Port IRQ Enable datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_WAVE500_PORT - if set, special DMA port that has additional parameters
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dma_port_intr_enable_set(
+	uint32_t cbm_dma_port_id,
+	cbm_dma_port_irq_enable_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Get the CBM DMA IRQ Enable Config
+	\param[in] cbm_dma_port_id CBM DMA Port Id
+	\param[out] cfg CBM DMA Port IRQ Enable datastruct
+	\param[in] flags : Flags that qualify the configuration
+			- CBM_PORT_F_WAVE500_PORT - if set, special DMA port that has additional parameters
+			- CBM_PORT_F_DEQUEUE_PORT - if set, Dequeue port; else Enqueue port
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dma_port_intr_ctrl_get(
+	uint32_t cbm_dma_port_id,
+	cbm_dma_port_irq_enable_t *cfg,
+	uint32_t flags
+	);
+/* @} */
+/** \addtogroup CBM_Stats_API */
+/* @{ */
+/*! \brief	Get the CBM Enqueue CPU Port Stats
+	\param[in] cbm_port_id CBM port_id for which to get stats
+	\param[out] occupancy_ctr	Enqueue Port Occupancy Counter
+	\param[out] enq_ctr	Enqueue Port Enqueue Counter
+	\param[in] flags : Flags that qualify the configuration
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_enqueue_cpu_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *occupancy_ctr,
+	uint32_t *enq_ctr,
+	uint32_t flags
+	);
+
+/*! \brief	Get the CBM Dequeue CPU Port Stats
+	\param[in] cbm_port_id CBM port_id for which to get stats
+	\param[out] deq_ctr	Dequeue Port Dequeue Counter
+	\param[in] flags : Flags that qualify the configuration
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_dequeue_cpu_port_stats_get(
+	int32_t cbm_port_id,
+	uint32_t *deq_ctr,
+	uint32_t flags
+	);
+
+/* @} */
+
+/** \addtogroup CBM_CPU_LOAD_SPREADER_API */
+/* @{ */
+/*! \brief	Get the CBM Global Load Spreader Configuration
+	\param[out] cfg	CBM DQM Load Spreader Global Config
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_load_spreader_cfg_get(
+	cbm_load_spreader_cfg_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Set the CBM CPU Dequeue Port Load Spreader Configuration
+	\param[in] cfg  CBM DQM Load Spreader Port Config
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_load_spreader_cfg_set(
+	cbm_load_spreader_cfg_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Set the CBM Global Load Spreader Configuration
+	\param[in] cfg  CBM DQM Load Spreader Global Config
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_port_load_spreader_cfg_set(
+	uint32_t port_id,
+	cbm_port_load_spreader_cfg_t *cfg,
+	uint32_t flags
+	);
+/*! \brief	Get the CBM CPU Dequeue Port Load Spreader Configuration
+	\param[out] cfg	CBM DQM Load Spreader Port Config
+	\param[in] flags : Reserved
+	\return CBM_OK / CBM_ERROR
+	\note
+*/
+int32_t
+cbm_port_load_spreader_cfg_get(
+	uint32_t port_id,
+	cbm_port_load_spreader_cfg_t *cfg,
+	uint32_t flags
+	);
+
+/*! \brief	Build an skb using cbm buffer
+	\param[out] data	 Pointer to cbm data buffer
+	\param[in] frag_size : Reserved
+	\return Pointer to sk_buff allocated / NULL on error
+	\note
+*/
+struct sk_buff *cbm_build_skb(
+	void *data,
+	unsigned int frag_size,
+	gfp_t priority
+	);
+
+
+/*! \brief	Copy an skb using cbm buffer to another skb using cbm buffer
+	\param[in] size	Size of data buffer requested
+	\param[in] priority : Priority of the allocation - GFP_ATOMIC, GFP_KERNEL etc
+	\return Pointer to sk_buff allocated / NULL on error
+	\note
+*/
+struct sk_buff *cbm_copy_skb(
+	const struct sk_buff *skb,
+	gfp_t gfp_mask
+	);
+
+/*! \brief	Allocate an skb using cbm buffer
+	\param[in] size	Size of data buffer requested
+	\param[in] priority : Priority of the allocation - GFP_ATOMIC, GFP_KERNEL etc
+	\return Pointer to sk_buff allocated / NULL on error
+	\note
+*/
+struct sk_buff *cbm_alloc_skb(
+	unsigned int size,
+	gfp_t priority
+	);
+
+/*! \brief	Linearize an skb using cbm buffer so that pkt can tx to CBM
+	\param[in] size	Size of data buffer requested
+	\return Pointer to sk_buff allocated / NULL on error
+	\note The function will check if there is any need to linearize the input skb, if not
+	it will return the input skb pointer
+*/
+struct sk_buff *cbm_linearize_buf(
+	struct sk_buff *
+	);
+/* @} */
+
+struct sk_buff *
+cbm_alloc_skb_by_size (uint32_t size, gfp_t priority);
+int32_t
+cbm_enqueue_port_overhead_set(
+	int32_t port_id,
+	int8_t ovh
+	);
+int32_t
+cbm_enqueue_port_overhead_get(
+	int32_t port_id,
+	int8_t *ovh
+	);
+
+/* flags : STD Buffer or Jumbo buffer using existing defines
+Caller must have checked the parameter validity etc before calling this API	 */
+int cbm_cpu_enqueue_hw(uint32_t pid, struct cbm_desc *desc, void *data_pointer,	 int flags);
+int cbm_get_wlan_umt_pid(u32 ep_id,  u32 *cbm_pid);
+int32_t cbm_port_quick_reset(
+int32_t cbm_port_id,
+uint32_t flags);
+int cbm_counter_mode_set(int enq, int mode);
+int cbm_counter_mode_get(int enq, int *mode);
+int cbm_q_thres_set(uint32_t length);
+int cbm_q_thres_get(uint32_t *length);
+int32_t cbm_igp_delay_set(
+	int32_t cbm_port_id,
+	int32_t delay
+	);
+int32_t
+cbm_igp_delay_get(
+	int32_t cbm_port_id,
+	int32_t *delay
+	);
+extern int32_t cbm_port_quick_reset(int32_t cbm_port_id,uint32_t flags);
+
+/*
+ * cbm_eqm_ctrl_t
+ * cbm_dqm_ctrl_t
+ * cbm_dma_port_config_t
+ * cbm_cpu_port_config_t
+ * cbm_cpu_port_irq_enable_t
+ * cbm_queue_map_entry_t
+ */
+#endif
