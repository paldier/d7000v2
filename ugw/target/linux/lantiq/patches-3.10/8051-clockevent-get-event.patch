# HG changeset patch
# Parent 18b1ee80ce04f0b4efb80a509facc5ee79b88c22
add new API function to return the pointer to a given clockevent structure

diff --git a/include/linux/clockchips.h b/include/linux/clockchips.h
--- a/include/linux/clockchips.h
+++ b/include/linux/clockchips.h
@@ -155,6 +155,7 @@ extern int clockevents_program_event(str
 				     ktime_t expires, bool force);
 
 extern void clockevents_handle_noop(struct clock_event_device *dev);
+extern struct clock_event_device* clockevents_get(char* name);
 
 static inline void
 clockevents_calc_mult_shift(struct clock_event_device *ce, u32 freq, u32 minsec)
diff --git a/kernel/time/clockevents.c b/kernel/time/clockevents.c
--- a/kernel/time/clockevents.c
+++ b/kernel/time/clockevents.c
@@ -462,4 +462,25 @@ void clockevents_notify(unsigned long re
 	raw_spin_unlock_irqrestore(&clockevents_lock, flags);
 }
 EXPORT_SYMBOL_GPL(clockevents_notify);
+
+/**
+ * clockevents_get - return the pointer to the given clockevent
+ * @name:   name of the clockenvent I'm looking for
+ */
+struct clock_event_device* clockevents_get(char* name)
+{
+   struct clock_event_device* cur_list_pos;
+
+   /* search for the given clockevent name */
+   list_for_each_entry(cur_list_pos, &clockevent_devices,list) {
+      if (0 == strcmp(cur_list_pos->name,name)){
+         /* clocksource found */
+         return cur_list_pos;
+      }
+   }
+   return NULL;
+}
+EXPORT_SYMBOL(clockevents_get);
+
+
 #endif
