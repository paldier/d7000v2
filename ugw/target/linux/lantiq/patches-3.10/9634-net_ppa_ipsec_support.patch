# HG changeset patch
# Parent 552530e68699b15e6dcb0f34a8f77a7a3e7b0fdf

diff --git a/net/ipv4/xfrm4_output.c b/net/ipv4/xfrm4_output.c
--- a/net/ipv4/xfrm4_output.c
+++ b/net/ipv4/xfrm4_output.c
@@ -17,6 +17,9 @@
 #include <net/ip.h>
 #include <net/xfrm.h>
 #include <net/icmp.h>
+#if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
+  #include <net/ppa_api.h>
+#endif
 
 static int xfrm4_tunnel_check_size(struct sk_buff *skb)
 {
@@ -94,6 +97,25 @@ int xfrm4_output(struct sk_buff *skb)
 	struct dst_entry *dst = skb_dst(skb);
 	struct xfrm_state *x = dst->xfrm;
 
+#if defined(CONFIG_LTQ_PPA_MPE_IP97)
+        if ( ppa_hook_session_add_fn != NULL )
+        {
+
+            struct nf_conn *ct;
+
+            enum ip_conntrack_info ctinfo;
+            uint32_t flags;
+    
+            ct = nf_ct_get(skb, &ctinfo);
+    
+            flags = 0;  //  post routing
+            flags |= CTINFO2DIR(ctinfo) == IP_CT_DIR_ORIGINAL ? PPA_F_SESSION_ORG_DIR : PPA_F_SESSION_REPLY_DIR;
+            flags |= PPA_F_LAN_IPSEC;
+
+            ppa_hook_session_add_fn(skb, ct, flags);
+        }
+#endif
+
 	return NF_HOOK_COND(NFPROTO_IPV4, NF_INET_POST_ROUTING, skb,
 			    NULL, dst->dev,
 			    x->outer_mode->afinfo->output_finish,
diff --git a/net/key/af_key.c b/net/key/af_key.c
--- a/net/key/af_key.c
+++ b/net/key/af_key.c
@@ -33,6 +33,10 @@
 
 #include <net/sock.h>
 
+#if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
+  #include <net/ppa_api.h>
+#endif
+
 #define _X2KEY(x) ((x) == XFRM_INF ? 0 : (x))
 #define _KEY2X(x) ((x) == 0 ? XFRM_INF : (x))
 
@@ -1520,6 +1524,13 @@ static int pfkey_delete(struct sock *sk,
 
 	err = xfrm_state_delete(x);
 
+#if defined(CONFIG_LTQ_PPA_MPE_IP97)
+        if ( ppa_hook_session_ipsec_del_fn != NULL )
+        {
+            ppa_hook_session_ipsec_del_fn(x);
+        }
+#endif
+
 	if (err < 0)
 		goto out;
 
diff --git a/net/xfrm/xfrm_state.c b/net/xfrm/xfrm_state.c
--- a/net/xfrm/xfrm_state.c
+++ b/net/xfrm/xfrm_state.c
@@ -27,6 +27,9 @@
 #include <linux/kernel.h>
 
 #include "xfrm_hash.h"
+#if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
+  #include <net/ppa_api.h>
+#endif
 
 /* Each xfrm_state may be linked to two tables:
 
@@ -1117,6 +1120,13 @@ out:
 
 	if (to_put)
 		xfrm_state_put(to_put);
+#if defined(CONFIG_LTQ_PPA_MPE_IP97)
+        sa_direction dir= OUTBOUND;
+        if ( ppa_hook_session_ipsec_add_fn != NULL )
+        {
+            ppa_hook_session_ipsec_add_fn(x,dir);
+        }
+#endif
 
 	return err;
 }
@@ -1298,6 +1308,13 @@ int xfrm_state_update(struct xfrm_state 
 		err = -EEXIST;
 		goto out;
 	}
+#if defined(CONFIG_LTQ_PPA_MPE_IP97)
+        sa_direction dir= INBOUND;
+        if ( ppa_hook_session_ipsec_add_fn != NULL )
+        {
+            ppa_hook_session_ipsec_add_fn(x,dir);
+        }
+#endif
 
 	if (x1->km.state == XFRM_STATE_ACQ) {
 		__xfrm_state_insert(x);
