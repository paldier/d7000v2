# HG changeset patch
# Parent e941cb117c2b819bca9b2aeae711e05a34a1b1a8

diff --git a/arch/mips/kernel/unaligned.c b/arch/mips/kernel/unaligned.c
--- a/arch/mips/kernel/unaligned.c
+++ b/arch/mips/kernel/unaligned.c
@@ -107,11 +107,8 @@ static u32 unaligned_action;
 extern void show_registers(struct pt_regs *regs);
 asmlinkage void do_cpu(struct pt_regs *regs);
 
-#ifdef CONFIG_EVA
-/* EVA variant */
-
 #ifdef __BIG_ENDIAN
-#define     LoadHW(addr, value, res)  \
+#define     LoadHWE(addr, value, res)  \
 		__asm__ __volatile__ (".set\tnoat\n"        \
 			"1:\tlbe\t%0, 0(%2)\n"               \
 			"2:\tlbue\t$1, 1(%2)\n\t"            \
@@ -131,7 +128,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     LoadW(addr, value, res)   \
+#define     LoadWE(addr, value, res)   \
 		__asm__ __volatile__ (                      \
 			"1:\tlwle\t%0, (%2)\n"               \
 			"2:\tlwre\t%0, 3(%2)\n\t"            \
@@ -149,7 +146,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     LoadHWU(addr, value, res) \
+#define     LoadHWUE(addr, value, res) \
 		__asm__ __volatile__ (                      \
 			".set\tnoat\n"                      \
 			"1:\tlbue\t%0, 0(%2)\n"              \
@@ -171,7 +168,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     LoadWU(addr, value, res)  \
+#define     LoadWUE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
 			"1:\tlwle\t%0, (%2)\n"               \
 			"2:\tlwre\t%0, 3(%2)\n\t"            \
@@ -191,7 +188,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     StoreHW(addr, value, res) \
+#define     StoreHWE(addr, value, res) \
 		__asm__ __volatile__ (                      \
 			".set\tnoat\n"                      \
 			"1:\tsbe\t%1, 1(%2)\n\t"             \
@@ -212,7 +209,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=r" (res)                        \
 			: "r" (value), "r" (addr), "i" (-EFAULT));
 
-#define     StoreW(addr, value, res)  \
+#define     StoreWE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
 			"1:\tswle\t%1,(%2)\n"                \
 			"2:\tswre\t%1, 3(%2)\n\t"            \
@@ -232,7 +229,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 #endif
 
 #ifdef __LITTLE_ENDIAN
-#define     LoadHW(addr, value, res)  \
+#define     LoadHWE(addr, value, res)  \
 		__asm__ __volatile__ (".set\tnoat\n"        \
 			"1:\tlbe\t%0, 1(%2)\n"               \
 			"2:\tlbue\t$1, 0(%2)\n\t"            \
@@ -252,7 +249,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     LoadW(addr, value, res)   \
+#define     LoadWE(addr, value, res)   \
 		__asm__ __volatile__ (                      \
 			"1:\tlwle\t%0, 3(%2)\n"              \
 			"2:\tlwre\t%0, (%2)\n\t"             \
@@ -270,7 +267,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     LoadHWU(addr, value, res) \
+#define     LoadHWUE(addr, value, res) \
 		__asm__ __volatile__ (                      \
 			".set\tnoat\n"                      \
 			"1:\tlbue\t%0, 1(%2)\n"              \
@@ -292,7 +289,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     LoadWU(addr, value, res)  \
+#define     LoadWUE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
 			"1:\tlwle\t%0, 3(%2)\n"              \
 			"2:\tlwre\t%0, (%2)\n\t"             \
@@ -312,7 +309,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
-#define     StoreHW(addr, value, res) \
+#define     StoreHWE(addr, value, res) \
 		__asm__ __volatile__ (                      \
 			".set\tnoat\n"                      \
 			"1:\tsbe\t%1, 0(%2)\n\t"             \
@@ -333,7 +330,7 @@ asmlinkage void do_cpu(struct pt_regs *r
 			: "=r" (res)                        \
 			: "r" (value), "r" (addr), "i" (-EFAULT));
 
-#define     StoreW(addr, value, res)  \
+#define     StoreWE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
 			"1:\tswle\t%1, 3(%2)\n"              \
 			"2:\tswre\t%1, (%2)\n\t"             \
@@ -352,9 +349,6 @@ asmlinkage void do_cpu(struct pt_regs *r
 		: "r" (value), "r" (addr), "i" (-EFAULT));
 #endif
 
-#else
-/* non-EVA variant */
-
 #ifdef __BIG_ENDIAN
 #define     LoadHW(addr, value, res)  \
 		__asm__ __volatile__ (".set\tnoat\n"        \
@@ -669,8 +663,6 @@ asmlinkage void do_cpu(struct pt_regs *r
 		: "r" (value), "r" (addr), "i" (-EFAULT));
 #endif
 
-#endif
-
 static void emulate_load_store_insn(struct pt_regs *regs,
 	void __user *addr, unsigned int __user *pc)
 {
@@ -744,7 +736,7 @@ static void emulate_load_store_insn(stru
 				goto sigbus;
 			}
 
-			LoadHW(addr, value, res);
+			LoadHWE(addr, value, res);
 			if (res) {
 				set_fs(seg);
 				goto fault;
@@ -759,7 +751,7 @@ static void emulate_load_store_insn(stru
 				goto sigbus;
 			}
 
-			LoadW(addr, value, res);
+			LoadWE(addr, value, res);
 			if (res) {
 				set_fs(seg);
 				goto fault;
@@ -774,7 +766,7 @@ static void emulate_load_store_insn(stru
 				goto sigbus;
 			}
 
-			LoadHWU(addr, value, res);
+			LoadHWUE(addr, value, res);
 			if (res) {
 				set_fs(seg);
 				goto fault;
@@ -791,7 +783,7 @@ static void emulate_load_store_insn(stru
 
 			compute_return_epc(regs);
 			value = regs->regs[insn.spec3_format.rt];
-			StoreHW(addr, value, res);
+			StoreHWE(addr, value, res);
 			if (res) {
 				set_fs(seg);
 				goto fault;
@@ -806,7 +798,7 @@ static void emulate_load_store_insn(stru
 
 			compute_return_epc(regs);
 			value = regs->regs[insn.spec3_format.rt];
-			StoreW(addr, value, res);
+			StoreWE(addr, value, res);
 			if (res) {
 				set_fs(seg);
 				goto fault;
