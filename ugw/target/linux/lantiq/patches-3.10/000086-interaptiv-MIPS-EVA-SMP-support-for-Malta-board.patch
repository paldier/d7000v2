From 7ab1fc33debcbab27115f6c4f3d1622be67c900e Mon Sep 17 00:00:00 2001
From: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
Date: Tue, 2 Apr 2013 13:22:20 -0700
Subject: [PATCH 086/105] MIPS: EVA SMP support for Malta board

It supports 4 configurations: new/old memory maps with 2GB and 3GB
memory. The only trick is in old memory map on Malta: there is
an address aliasing for lowest 256MB and it takes toll then
Core0 is under Linux (and remapped) and Core1 is still under YAMON.

Signed-off-by: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
(cherry picked from commit 307981653807438f74bc26bc55fed276d2eebdd3)
---
 .../include/asm/mach-malta/kernel-entry-init.h     |   89 ++++++++++++++++----
 arch/mips/mm/c-r4k.c                               |   14 ++--
 arch/mips/mti-malta/malta-setup.c                  |   34 +++++--
 3 files changed, 104 insertions(+), 33 deletions(-)

diff --git a/arch/mips/include/asm/mach-malta/kernel-entry-init.h b/arch/mips/include/asm/mach-malta/kernel-entry-init.h
index 69781e1..e7cfc7d 100644
--- a/arch/mips/include/asm/mach-malta/kernel-entry-init.h
+++ b/arch/mips/include/asm/mach-malta/kernel-entry-init.h
@@ -10,31 +10,85 @@
 #ifndef __ASM_MACH_MIPS_KERNEL_ENTRY_INIT_H
 #define __ASM_MACH_MIPS_KERNEL_ENTRY_INIT_H
 
-	.macro  eva_entry
+	.macro  eva_entry   t1  t2  t0
+	andi    \t1, 0x7    /* Config.K0 == CCA */
+	move    \t2, \t1
+	ins     \t2, \t1, 16, 3
 #ifdef CONFIG_EVA_3GB
-	li      t0, ((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |             \
+	li      \t0, ((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |            \
 		(0 << MIPS_SEGCFG_PA_SHIFT) | (2 << MIPS_SEGCFG_C_SHIFT) |  \
 		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
 		(((MIPS_SEGCFG_MK << MIPS_SEGCFG_AM_SHIFT) |                \
-		(0 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |  \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
-	mtc0    t0, $5, 2
-	li      t0, ((MIPS_SEGCFG_MUSK << MIPS_SEGCFG_AM_SHIFT) |             \
-		(0 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |  \
+	ins     \t0, \t1, 16, 3
+	mtc0    \t0, $5, 2
+#ifdef CONFIG_SMP
+	li      \t0, ((MIPS_SEGCFG_MUSK << MIPS_SEGCFG_AM_SHIFT) |          \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
 		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
-		(((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |                \
-		(4 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |  \
+		(((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |             \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
-	mtc0    t0, $5, 3
 #else
-	li      t0, ((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |             \
+	li      \t0, ((MIPS_SEGCFG_MUSK << MIPS_SEGCFG_AM_SHIFT) |          \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
+		(((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |             \
+		(4 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
+#endif
+	or      \t0, \t2
+	mtc0    \t0, $5, 3
+	li      \t0, ((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |         \
+		(6 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
+		(((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |             \
+		(4 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
+	or      \t0, \t2
+	mtc0    \t0, $5, 4
+#else
+	li      \t0, ((MIPS_SEGCFG_MK << MIPS_SEGCFG_AM_SHIFT) |            \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
+		(((MIPS_SEGCFG_MK << MIPS_SEGCFG_AM_SHIFT) |                \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
+	or      \t0, \t2
+	mtc0    \t0, $5, 2
+#ifdef CONFIG_SMP
+	li      \t0, ((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |            \
 		(0 << MIPS_SEGCFG_PA_SHIFT) | (2 << MIPS_SEGCFG_C_SHIFT) |  \
 		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
 		(((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |                \
-		(4 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |  \
+		(0 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
+#else
+	li      \t0, ((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |            \
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (2 << MIPS_SEGCFG_C_SHIFT) |  \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
+		(((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |                \
+		(4 << MIPS_SEGCFG_PA_SHIFT) |                               \
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
-	mtc0    t0, $5, 3
 #endif
+	ins     \t0, \t1, 16, 3
+	mtc0    \t0, $5, 3
+	li      \t0, ((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |         \
+		(6 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) |                              \
+		(((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |             \
+		(4 << MIPS_SEGCFG_PA_SHIFT) |                               \
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16)
+	or      \t0, \t2
+	mtc0    \t0, $5, 4
+#endif
+	jal     mips_ihb
+	mfc0    \t0, $16, 5
+	li      \t2, 0x40000000      /* K bit */
+	or      \t0, \t0, \t2
+	mtc0    \t0, $16, 5
+	sync
 	jal	mips_ihb
 	.endm
 
@@ -76,8 +130,8 @@ nonmt_processor:
 	sync
 	ehb
 
-	mfc0    t0, CP0_CONFIG
-	bgez	t0, 9f
+	mfc0    t1, CP0_CONFIG
+	bgez    t1, 9f
 	mfc0	t0, CP0_CONFIG, 1
 	bgez	t0, 9f
 	mfc0	t0, CP0_CONFIG, 2
@@ -86,7 +140,9 @@ nonmt_processor:
 	sll     t0, t0, 6   /* SC bit */
 	bgez    t0, 9f
 
-	eva_entry
+	eva_entry t1 t2 t0
+	PTR_LA  t0, mips_cca
+	sw      t1, 0(t0)
 	b       0f
 
 9:
@@ -123,7 +179,8 @@ nonsc_processor:
 
 	sync
 	ehb
-	eva_entry
+	mfc0    t1, CP0_CONFIG
+	eva_entry   t1 t2 t0
 #endif
 
 	.endm
diff --git a/arch/mips/mm/c-r4k.c b/arch/mips/mm/c-r4k.c
index ec349a4..4c0e6d7 100644
--- a/arch/mips/mm/c-r4k.c
+++ b/arch/mips/mm/c-r4k.c
@@ -1631,11 +1631,11 @@ static void nxp_pr4450_fixup_config(void)
 	NXP_BARRIER();
 }
 
-static int __cpuinitdata cca = -1;
+unsigned int mips_cca = -1;
 
 static int __init cca_setup(char *str)
 {
-	get_option(&str, &cca);
+	get_option(&str, &mips_cca);
 
 	return 0;
 }
@@ -1644,12 +1644,12 @@ early_param("cca", cca_setup);
 
 static void __cpuinit coherency_setup(void)
 {
-	if (cca < 0 || cca > 7)
-		cca = read_c0_config() & CONF_CM_CMASK;
-	_page_cachable_default = cca << _CACHE_SHIFT;
+	if (mips_cca < 0 || mips_cca > 7)
+		mips_cca = read_c0_config() & CONF_CM_CMASK;
+	_page_cachable_default = mips_cca << _CACHE_SHIFT;
 
-	pr_debug("Using cache attribute %d\n", cca);
-	change_c0_config(CONF_CM_CMASK, cca);
+	pr_debug("Using cache attribute %d\n", mips_cca);
+	change_c0_config(CONF_CM_CMASK, mips_cca);
 
 	/*
 	 * c0_status.cu=0 specifies that updates by the sc instruction use
diff --git a/arch/mips/mti-malta/malta-setup.c b/arch/mips/mti-malta/malta-setup.c
index 2dec61c..9a8675d 100644
--- a/arch/mips/mti-malta/malta-setup.c
+++ b/arch/mips/mti-malta/malta-setup.c
@@ -245,6 +245,8 @@ static void __init bonito_quirks_setup(void)
 }
 
 #ifdef CONFIG_EVA
+extern unsigned int mips_cca;
+
 void __init plat_eva_setup(void)
 {
 	unsigned int val;
@@ -254,40 +256,52 @@ void __init plat_eva_setup(void)
 		(0 << MIPS_SEGCFG_PA_SHIFT) | (2 << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT));
 	val |= (((MIPS_SEGCFG_MK << MIPS_SEGCFG_AM_SHIFT) |
-		(0 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
 	write_c0_segctl0(val);
 
 	val = ((MIPS_SEGCFG_MUSK << MIPS_SEGCFG_AM_SHIFT) |
-		(0 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT));
+#ifdef CONFIG_SMP
 	val |=  (((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |
-		(4 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
-	write_c0_segctl1(val);
 #else
+	val |=  (((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |
+		(4 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
+#endif
+	write_c0_segctl1(val);
+#else /* !CONFIG_EVA_3G */
 	val = ((MIPS_SEGCFG_MK << MIPS_SEGCFG_AM_SHIFT) |
-		(0 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT));
 	val |= (((MIPS_SEGCFG_MK << MIPS_SEGCFG_AM_SHIFT) |
-		(0 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
 	write_c0_segctl0(val);
 
 	val = ((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |
 		(0 << MIPS_SEGCFG_PA_SHIFT) | (2 << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT));
+#ifdef CONFIG_SMP
 	val |= (((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |
-		(4 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(0 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
+		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
+#else
+	val |= (((MIPS_SEGCFG_UK << MIPS_SEGCFG_AM_SHIFT) |
+		(4 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
-	write_c0_segctl1(val);
 #endif
+	write_c0_segctl1(val);
+#endif /* CONFIG_EVA_3G */
 
 	val = ((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |
-		(6 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(6 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT));
 	val |= (((MIPS_SEGCFG_MUSUK << MIPS_SEGCFG_AM_SHIFT) |
-		(4 << MIPS_SEGCFG_PA_SHIFT) | (3 << MIPS_SEGCFG_C_SHIFT) |
+		(4 << MIPS_SEGCFG_PA_SHIFT) | (mips_cca << MIPS_SEGCFG_C_SHIFT) |
 		(1 << MIPS_SEGCFG_EU_SHIFT)) << 16);
 	write_c0_segctl2(val);
 	back_to_back_c0_hazard();
-- 
1.7.1

