# HG changeset patch
# Parent 900a0fcf2701048c59f694f4487be1a71bcec1f1

diff --git a/drivers/crypto/Kconfig b/drivers/crypto/Kconfig
--- a/drivers/crypto/Kconfig
+++ b/drivers/crypto/Kconfig
@@ -409,6 +409,7 @@ config CRYPTO_DEV_LANTIQ_DEU
 	    AES/DES/ARC4/SHA-1/MD5/HMAC (xrx200, xrx300, xrx330) 
     
 
+
 source "drivers/crypto/lantiq_deu/Kconfig"
 source "drivers/crypto/Kconfig.grx500"
 endif # CRYPTO_HW
diff --git a/drivers/crypto/Kconfig.grx500 b/drivers/crypto/Kconfig.grx500
--- a/drivers/crypto/Kconfig.grx500
+++ b/drivers/crypto/Kconfig.grx500
@@ -35,3 +35,9 @@ config LTQ_CRYPTO_MAX_RING_USED
     Number of rings used in the driver. By default, the driver supports up to
     two rings. However, if MPE firmware is used, we only use 1 ring in the driver
 
+config CRYPTO_DEV_LANTIQ_EIP123
+   tristate "Support Lantiq EIP123 hardware crypto engine"
+   depends on LANTIQ && SOC_GRX500_BOOTCORE
+   default n
+   help
+      Selects Hardware accelerated EIP123 crypto drivers.
diff --git a/drivers/crypto/Makefile b/drivers/crypto/Makefile
--- a/drivers/crypto/Makefile
+++ b/drivers/crypto/Makefile
@@ -22,4 +22,5 @@ obj-$(CONFIG_CRYPTO_DEV_ATMEL_AES) += at
 obj-$(CONFIG_CRYPTO_DEV_ATMEL_TDES) += atmel-tdes.o
 obj-$(CONFIG_CRYPTO_DEV_ATMEL_SHA) += atmel-sha.o
 obj-$(CONFIG_CRYPTO_DEV_LANTIQ_DEU) += lantiq_deu/
+obj-$(CONFIG_CRYPTO_DEV_LANTIQ_EIP123) += lantiq_eip123/
 obj-$(CONFIG_CRYPTO_DEV_LANTIQ_EIP97) += lantiq_eip97/
diff --git a/drivers/crypto/lantiq_eip123/Makefile b/drivers/crypto/lantiq_eip123/Makefile
new file mode 100644
--- /dev/null
+++ b/drivers/crypto/lantiq_eip123/Makefile
@@ -0,0 +1,34 @@
+# eip-123 kernel style makefile
+
+obj-$(CONFIG_CRYPTO_DEV_LANTIQ_EIP123) := umdevxs_k.o
+
+umdevxs_k-y := \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_lkm.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_smbuf.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_ofdev.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_pcidev.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_chrdev.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_device.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_simdev.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_bufadmin.o \
+    Sources/Integration/UMDevXS/KernelPart/src/umdevxs_interrupt.o
+
+# add tool for some helper function
+umdevxs_k-y += Sources/tool_eip123.o
+
+# choose one of below for different bus or just simulation
+#ccflags-y := -DUMDEVXS_PCI
+ccflags-y := -DUMDEVXS_MEM
+#ccflags-y := -DUMDEVXS_SIM
+
+# do we seriously need the x86 flags for mips as well 
+ccflags-y += -DARCH_X86
+
+ccflags-y += \
+    -I$(src)/Sources \
+    -I$(src)/Sources/Kit/DriverFramework/v4/Basic_Defs/incl \
+    -I$(src)/Sources/Kit/DriverFramework/v4/CLib_Abstraction/incl \
+    -I$(src)/Sources/Kit/Log/incl \
+    -I$(src)/Sources/Kit/Log/src/linux_kernel \
+    -I$(src)/Sources/Integration/UMDevXS/KernelPart/incl \
+    -I$(src)/Sources/Integration/UMDevXS/KernelPart/src
