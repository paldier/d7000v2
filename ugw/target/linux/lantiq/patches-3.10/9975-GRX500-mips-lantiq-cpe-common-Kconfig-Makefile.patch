# HG changeset patch
# Parent d212f632b3d4bd133bef887489900bedb5ac5bd0

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
old mode 100755
new mode 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -236,16 +236,23 @@ config LANTIQ
 	bool "Lantiq based platforms"
 	select DMA_NONCOHERENT
 	select IRQ_CPU
-	select CEVT_R4K
-	select CSRC_R4K
+        select IRQ_GIC if SOC_GRX500
+	select CEVT_R4K if !CSRC_GPTC
+	select CSRC_R4K if !LTQ_VMB
+	select CSRC_GIC if SOC_GRX500 && !CSRC_GPTC
+	select CEVT_GIC if SOC_GRX500 && !CSRC_GPTC
 	select SYS_HAS_CPU_MIPS32_R1
 	select SYS_HAS_CPU_MIPS32_R2
-	select SYS_HAS_CPU_MIPS32_R2_EVA
-	select SYS_SUPPORTS_MIPS_CMP
+	select SYS_HAS_CPU_MIPS32_R2_EVA if SOC_GRX500
+        select CPU_MIPSR2_IRQ_VI if SOC_GRX500_BOOTCORE
+        select CPU_MIPSR2_IRQ_EI if SOC_GRX500_BOOTCORE
+	select SYS_SUPPORTS_MIPS_CMP if SOC_GRX500
+        select SYS_SUPPORTS_MIPS_CPS if SOC_GRX500
 	select SYS_SUPPORTS_BIG_ENDIAN
+        select SYS_SUPPORTS_LITTLE_ENDIAN if SOC_GRX500 || SOC_GRX500_BOOTCORE
 	select SYS_SUPPORTS_32BIT_KERNEL
-	select SYS_SUPPORTS_MULTITHREADING
-	select SYS_HAS_EARLY_PRINTK
+	select SYS_SUPPORTS_MULTITHREADING if !SOC_GRX500_BOOTCORE
+	select SYS_HAS_EARLY_PRINTK if !SOC_GRX500_BOOTCORE
 	select ARCH_REQUIRE_GPIOLIB
 ##	select SWAP_IO_SPACE
 	select BOOT_RAW
@@ -255,6 +262,9 @@ config LANTIQ
 	select PINCTRL
 	select PINCTRL_LANTIQ
 	select CPU_SUPPORTS_CPUFREQ
+        select SYS_SUPPORTS_ZBOOT
+        select MIPS_CPU_SCACHE if SOC_GRX500
+	select GENERIC_ISA_DMA if SOC_GRX500
 
 config LASAT
 	bool "LASAT Networks platforms"
@@ -1555,10 +1565,25 @@ config EVA_3GB
 	  (because of PCI bridges loop) but it can be used as a start point
 	  for development.
 
+config EVA_2GB
+	bool "EVA support for 2GB memory"
+	depends on EVA
+	depends on SOC_GRX500
+	help
+	  Choose this for EVA 2GB support.
+
+config EVA_1GB
+	bool "EVA support for 1GB memory"
+	depends on EVA
+	depends on SOC_GRX500
+	help
+	  Choose this for EVA 1GB support.
+
+
 config CPU_RPS_WORKAROUNDS
 	bool "Flush Return Prediction Stack on user -> kernel transition"
 	default y
-	depends on EVA
+	depends on EVA && (EVA_1GB || EVA_2GB)
 	help
 	  This option flushes the Return Prediction Stack (RPS) present on some
 	  MIPS cores on entry to the kernel from user mode. This is important
@@ -1570,6 +1595,14 @@ config CPU_RPS_WORKAROUNDS
 
 	  Say Y if using EVA non-Legacy segment layouts with interAptiv.
 
+config SOC_GRX500_A21
+	bool "GRX500 A21 related changes"
+	depends on SOC_GRX500 || SOC_GRX500_BOOTCORE
+	default n
+	help
+	   Compile flag which will be used for GRX500 A21 related changes
+
+
 if CPU_LOONGSON2F
 config CPU_NOP_WORKAROUNDS
 	bool
@@ -1903,6 +1936,14 @@ config PAGE_SIZE_64KB
 
 endchoice
 
+config MAX_ZONEDMA_SIZE
+	int "Maximum ZONE_DMA Size in (MB)"
+	depends on ZONE_DMA && SOC_GRX500
+	range 16 256
+	default "16"
+	help
+	 Allows to specify the MAX size of ZONE_DMA . By default it is 16MB.
+
 config FORCE_MAX_ZONEORDER
 	int "Maximum zone order"
 	range 14 64 if HUGETLB_PAGE && PAGE_SIZE_64KB
@@ -1936,6 +1977,18 @@ config CEVT_GIC
 	  detecting a GIC, it will fall back to the R4K timer for the
 	  generation of clock events.
 
+config CSRC_GPTC
+	bool
+
+config CEVT_GPTC
+	select CSRC_GPTC
+	bool "Use GPTC Timer for clock events"
+	depends on SOC_GRX500
+	default n
+	help
+	  Use GPTC Timer as clockevent/clocksource
+
+
 config BOARD_SCACHE
 	bool
 
@@ -2160,6 +2213,7 @@ config MIPS_CMP
 	bool "MIPS CMP support"
 	depends on SYS_SUPPORTS_MIPS_CMP && MIPS_MT_SMP
 	select SYNC_R4K
+        select MIPS_GIC_IPI
 	select WEAK_ORDERING
 	default n
 	help
@@ -2179,6 +2233,20 @@ config LTQ_ITC
 	help
 	 Used to Synchronise Multiple TCs. Currently ITC cells are used a Semaphores.
 
+config IAP_RESET_ADDR
+	hex "IAP reset addr for bootrom"
+	depends on SOC_GRX500_BOOTCORE
+	default 0xA0001000
+	help
+		Used to give reset addr for IAP from Bootcore
+
+config BOOTCORE_LOAD_ADDR
+	hex "Boot core start address"
+	depends on SOC_GRX500_BOOTCORE
+	default 0xffffffff88000000
+	help
+		Used to give start address for Bootcore
+
 config LTQ_DYN_CPU_ALLOC
 	bool "Dynamic CPU allocation in vmb_cpu_alloc"
 	depends on LTQ_VMB
@@ -2186,6 +2254,34 @@ config LTQ_DYN_CPU_ALLOC
 	help
 	 Option to select CPU dynamically using vmb_cpu_alloc. This overrides the mapping on CPU to FW/Linux.	
 
+config MIPS_CPS
+        bool "MIPS Coherent Processing System support"
+        depends on SYS_SUPPORTS_MIPS_CPS
+        select MIPS_CPC
+        select MIPS_GIC_IPI
+        select SMP
+        select SYNC_R4K if (CEVT_R4K || CSRC_R4K)
+        select SYS_SUPPORTS_SMP
+        select WEAK_ORDERING
+        help
+          Select this if you wish to run an SMP kernel across multiple cores
+          within a MIPS Coherent Processing System. When this option is
+          enabled the kernel will probe for other cores and boot them with
+          no external assistance. It is safe to enable this when hardware
+          support is unavailable.
+
+config MIPS_CPC
+        bool
+
+config MIPS_GIC_IPI
+        bool
+
+config MIPS_CPUIDLE_CPS
+        bool
+        depends on CPU_MIPSR2 && !MIPS_MT_SMTC
+        default y if CPU_IDLE && MIPS_CMP
+        select ARCH_NEEDS_CPU_IDLE_COUPLED if MIPS_MT
+
 config SB1_PASS_1_WORKAROUNDS
 	bool
 	depends on CPU_SB1_PASS_1
@@ -2368,6 +2464,9 @@ config SMP_UP
 config SYS_SUPPORTS_MIPS_CMP
 	bool
 
+config SYS_SUPPORTS_MIPS_CPS
+        bool
+
 config SYS_SUPPORTS_SMP
 	bool
 
diff --git a/arch/mips/kernel/Makefile b/arch/mips/kernel/Makefile
--- a/arch/mips/kernel/Makefile
+++ b/arch/mips/kernel/Makefile
@@ -6,7 +6,7 @@ extra-y		:= head.o vmlinux.lds
 
 obj-y		+= cpu-probe.o branch.o entry.o genex.o idle.o irq.o process.o \
 		   prom.o ptrace.o reset.o setup.o signal.o syscall.o \
-		   time.o topology.o traps.o unaligned.o watch.o vdso.o
+		   time.o topology.o traps.o unaligned.o watch.o vdso.o segment.o
 
 ifdef CONFIG_FUNCTION_TRACER
 CFLAGS_REMOVE_ftrace.o = -pg
@@ -30,6 +30,8 @@ obj-$(CONFIG_CSRC_POWERTV)	+= csrc-power
 obj-$(CONFIG_CSRC_R4K)		+= csrc-r4k.o
 obj-$(CONFIG_CSRC_SB1250)	+= csrc-sb1250.o
 obj-$(CONFIG_SYNC_R4K)		+= sync-r4k.o
+obj-$(CONFIG_CEVT_GPTC)       += cevt-gptc.o
+obj-$(CONFIG_CSRC_GPTC)       += csrc-gptc.o
 
 obj-$(CONFIG_STACKTRACE)	+= stacktrace.o
 obj-$(CONFIG_MODULES)		+= mips_ksyms.o module.o
diff --git a/arch/mips/lantiq/Kconfig b/arch/mips/lantiq/Kconfig
--- a/arch/mips/lantiq/Kconfig
+++ b/arch/mips/lantiq/Kconfig
@@ -26,14 +26,46 @@ config SOC_FALCON
 	bool "FALCON"
 	select PINCTRL_FALCON
 
+config SOC_GRX500
+	bool "GRX500"
+	select HW_HAS_PCI
+	select ARCH_SUPPORTS_MSI
+	select ARCH_HAS_RESET_CONTROLLER
+	select RESET_CONTROLLER
+
+config SOC_GRX500_BOOTCORE
+	bool "GRX500_BOOTCORE"
+
 endchoice
 
+menu "Emulator Support"
+config USE_EMULATOR
+	bool "Support for FPGA emulation platform"
+	default no
+	help
+	Use FPGA emulator as platform
+
+choice
+	prompt "Emulator"
+	depends on USE_EMULATOR
+	default USE_PALLADIUM
+
+config USE_HAPS
+	bool "HAPS"
+
+config USE_PALLADIUM
+	bool "Palladium"
+
+endchoice
+endmenu
+
 choice
 	prompt "Devicetree"
 
 config DT_EASY50712
 	bool "Easy50712"
 	depends on SOC_XWAY
+
 endchoice
 
 config PCI_LANTIQ_BOOT
@@ -51,116 +83,7 @@ config PCI_LANTIQ
 
 config PCIE_LANTIQ
 	bool "PCIE Support"
-	depends on SOC_XWAY && PCI
-choice
-	prompt "LANTIQ PCIE: Default PCIe PHY Clock Mode"
-	depends on PCIE_LANTIQ
-	default LANTIQ_PCIE_PHY_36MHZ_MODE
-	---help---
-	  Select ifx pci express phy clock mode by default.
-	config LANTIQ_PCIE_PHY_36MHZ_MODE
-	    bool "36MHz"
-
-	config LANTIQ_PCIE_PHY_36MHZ_SSC_MODE
-	    bool "36MHz SSC mode"
-
-	config LANTIQ_PCIE_PHY_25MHZ_MODE
-	    bool "25MHz"
-
-	config LANTIQ_PCIE_PHY_100MHZ_MODE
-	    bool "100MHz"
-endchoice
-
-config LANTIQ_PCIE_1ST_CORE
-	bool "Lantiq PCIE Core 0 Support"
-	depends on PCIE_LANTIQ
-	default y
-
-config LANTIQ_PCIE_HW_SWAP
-	bool "Lantiq PCIE Core 0 Outbound Hardware Swap Support"
-	depends on LANTIQ_PCIE_1ST_CORE
-	default y
-	---help---
-	  This will enable PCIe Core 0 Outbound hardware swap. It should be
-	  enabled together with PCI
-
-config LANTIQ_PCIE_INBOUND_NO_HW_SWAP
-	bool "Lantiq PCIE Core 0 Inbound Hardware Swap disabled"
-	depends on LANTIQ_PCIE_1ST_CORE
-	default n
-	---help---
-	  This will disable PCIe Core 0 Inbound Hardware Swap. It should be
-	  only used together with VRX318
-
-config LANTIQ_PCIE_RST_EP_ACTIVE_HIGH
-	bool "Lantiq PCIE Core 0 EP reset signal active high"
-	depends on LANTIQ_PCIE_1ST_CORE
-	default n
-	---help---
-	  Normally PCIe EP reset is low active. It should be only used
-	  together with VRX318 due to dying gasp
-
-config LANTIQ_PCIE_2ND_CORE
-	bool "Lantiq PCIE Core 1 Support"
-	depends on PCIE_LANTIQ
-	default n
-	---help---
-	  This will enable 2nd PCIe RC support
-
-config LANTIQ_PCIE1_HW_SWAP
-	bool "Lantiq PCIE Core 1 Outbound Hardware Swap Support"
-	depends on LANTIQ_PCIE_2ND_CORE
-	default n
-	---help---
-	  This will enable PCIe Core 1 Outbound data swap. It should be
-	  enabled together with PCI
-
-config LANTIQ_PCIE1_INBOUND_NO_HW_SWAP
-	bool "Lantiq PCIE Core 1 Inbound Hardware Swap Disabled"
-	depends on LANTIQ_PCIE_2ND_CORE
-	default n
-	---help---
-	  This will disable PCIe Core 1 Inbound Hardware Swap. It should be
-	  only used together with VRX318
-
-config LANTIQ_PCIE1_RST_EP_ACTIVE_HIGH
-	bool "Lantiq PCIE Core 1 EP reset signal active high"
-	depends on LANTIQ_PCIE_2ND_CORE
-	default n
-	---help---
-	  Normally PCIe EP reset is low active. It should be only used together
-	  with VRX318 due to dyning gasp
-
-config LANTIQ_PCIE_3RD_CORE
-	bool "Lantiq PCIE Core 2 Support"
-	depends on PCIE_LANTIQ
-	default n
-	---help---
-	  This will enable 3rd PCIe RC support
-
-config LANTIQ_PCIE2_HW_SWAP
-	bool "Lantiq PCIE Core 2 Outbound Hardware Swap Support"
-	depends on LANTIQ_PCIE_3RD_CORE
-	default n
-	---help---
-	  This will enable PCIe Core 2 Outbound data swap. It should be enabled
-	  together with PCI
-
-config LANTIQ_PCIE2_INBOUND_NO_HW_SWAP
-	bool "Lantiq PCIE Core 2 Inbound Hardware Swap Disabled"
-	depends on LANTIQ_PCIE_3RD_CORE
-	default n
-	---help---
-	  This will disable PCIe Core 2 Inbound Hardware Swap. It should be
-	  only used together with VRX318
-
-config LANTIQ_PCIE2_RST_EP_ACTIVE_HIGH
-	bool "Lantiq PCIE Core 2 EP reset signal active high"
-	depends on LANTIQ_PCIE_3RD_CORE
-	default n
-	---help---
-	  Normally PCIe EP reset is low active. It should be only used together
-	  with VRX318 due to dyning gasp
+	depends on (SOC_XWAY || SOC_GRX500) && PCI
 
 config PCIE_LANTIQ_MSI
 	bool
@@ -171,6 +94,10 @@ config XRX200_PHY_FW
 	bool "XRX200 PHY firmware loader"
 	depends on SOC_XWAY
 
+config XRX500_PHY_FW
+	bool "XRX500 PHY firmware loader"
+	depends on SOC_GRX500
+
 config LANTIQ_IMAGE_EXTRA_CHECKS
 	bool "Extra check fields on PHY firmware header"
 	default n
diff --git a/arch/mips/lantiq/Makefile b/arch/mips/lantiq/Makefile
--- a/arch/mips/lantiq/Makefile
+++ b/arch/mips/lantiq/Makefile
@@ -4,12 +4,13 @@
 # under the terms of the GNU General Public License version 2 as published
 # by the Free Software Foundation.
 
-obj-y := irq.o clk.o prom.o 
-
+obj-$(CONFIG_SOC_XWAY) += prom.o irq.o clk.o
 obj-$(CONFIG_EARLY_PRINTK) += early_printk.o
 
 obj-$(CONFIG_SOC_TYPE_XWAY) += xway/
 obj-$(CONFIG_SOC_FALCON) += falcon/
-obj-$(CONFIG_MIPS_CMP)+=lantiq-amon.o
+obj-$(CONFIG_SOC_GRX500) += grx500/
+obj-$(CONFIG_SOC_GRX500_BOOTCORE) += grx500_bootcore/
+obj-y$(CONFIG_LTQ_VMB)+=lantiq-amon.o
 obj-$(CONFIG_LTQ_VMB)+=lantiq-vmb.o
 obj-$(CONFIG_LTQ_ITC)+=lantiq-itc.o
diff --git a/arch/mips/lantiq/Platform b/arch/mips/lantiq/Platform
--- a/arch/mips/lantiq/Platform
+++ b/arch/mips/lantiq/Platform
@@ -6,17 +6,24 @@ platform-$(CONFIG_LANTIQ)	+= lantiq/
 cflags-$(CONFIG_LANTIQ)		+= -I$(srctree)/arch/mips/include/asm/mach-lantiq
 ifndef CONFIG_EVA
 	ifdef CONFIG_SOC_GRX500_BOOTCORE
-		load-$(CONFIG_LANTIQ)		= 0xffffffff8E000000
+		ifdef CONFIG_BOOTCORE_LOAD_ADDR
+			load-$(CONFIG_LANTIQ)		= $(CONFIG_BOOTCORE_LOAD_ADDR)
+		else
+			load-$(CONFIG_LANTIQ)		= 0xffffffff88000000
+		endif
 	else
 		load-$(CONFIG_LANTIQ)   = 0xffffffff80002000
 	endif
 else
+	load-$(CONFIG_LANTIQ)		= 0xffffffff80020000
 	ifdef CONFIG_EVA_2GB
-    load-$(CONFIG_LANTIQ)   = 0xffffffff20020000
-	else
-    load-$(CONFIG_LANTIQ)   = 0xffffffff80020000
+	load-$(CONFIG_LANTIQ)		= 0xffffffff20020000
+	endif
+	ifdef CONFIG_EVA_1GB
+	load-$(CONFIG_LANTIQ)		= 0xffffffff60020000
 	endif
 endif
 cflags-$(CONFIG_SOC_TYPE_XWAY)	+= -I$(srctree)/arch/mips/include/asm/mach-lantiq/xway
 cflags-$(CONFIG_SOC_FALCON)	+= -I$(srctree)/arch/mips/include/asm/mach-lantiq/falcon
 cflags-$(CONFIG_SOC_GRX500)     += -I$(srctree)/arch/mips/include/asm/mach-lantiq/grx500
+cflags-$(CONFIG_SOC_GRX500_BOOTCORE)           += -I$(srctree)/arch/mips/include/asm/mach-lantiq/grx500
diff --git a/arch/mips/lantiq/grx500/Makefile b/arch/mips/lantiq/grx500/Makefile
--- a/arch/mips/lantiq/grx500/Makefile
+++ b/arch/mips/lantiq/grx500/Makefile
@@ -1,5 +1,1 @@
-obj-y := prom.o reset.o sysctrl.o clk.o
-
-obj-$(CONFIG_SOC_GRX500) += irq.o
-
-
+obj-y := prom.o reset.o sysctrl.o clk.o irq.o clk.o dma.o ltq_dma.o gptu.o mtlk_init.o xrx500_phy_fw.o
