# HG changeset patch
# Parent 49f2fa07f5639ca5bb0706e2c67feae5284726e7

diff --git a/net/ipv6/ip6_output.c b/net/ipv6/ip6_output.c
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -56,6 +56,11 @@
 #include <net/checksum.h>
 #include <linux/mroute6.h>
 
+#if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
+  #include <net/ppa_api.h>
+#endif
+
+
 int __ip6_local_out(struct sk_buff *skb)
 {
 	int len;
@@ -129,6 +134,27 @@ static int ip6_finish_output2(struct sk_
 		}
 	}
 
+#if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
+	if ( ppa_hook_session_add_fn != NULL )
+	{
+	#ifdef CONFIG_NF_CONNTRACK
+		struct nf_conn *ct;
+	#else
+		struct ip_conntrack *ct;
+	#endif
+		enum ip_conntrack_info ctinfo;
+		uint32_t flags;
+	#ifdef CONFIG_NF_CONNTRACK
+		ct = nf_ct_get(skb, &ctinfo);
+	#else
+		ct = ip_conntrack_get(skb, &ctinfo);
+	#endif
+		flags = 0; //  post routing
+		flags |= CTINFO2DIR(ctinfo) == IP_CT_DIR_ORIGINAL ? PPA_F_SESSION_ORG_DIR : PPA_F_SESSION_REPLY_DIR;  
+		ppa_hook_session_add_fn(skb, ct, flags);
+	}
+#endif
+
 	rcu_read_lock_bh();
 	nexthop = rt6_nexthop((struct rt6_info *)dst);
 	neigh = __ipv6_neigh_lookup_noref(dst->dev, nexthop);
