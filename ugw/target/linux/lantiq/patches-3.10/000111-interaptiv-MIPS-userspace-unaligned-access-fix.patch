# HG changeset patch
# Parent 08c58341f5bb780d98e9e820478a44ec1e4c550b

diff --git a/arch/mips/kernel/unaligned.c b/arch/mips/kernel/unaligned.c
--- a/arch/mips/kernel/unaligned.c
+++ b/arch/mips/kernel/unaligned.c
@@ -109,7 +109,10 @@ asmlinkage void do_cpu(struct pt_regs *r
 
 #ifdef __BIG_ENDIAN
 #define     LoadHWE(addr, value, res)  \
-		__asm__ __volatile__ (".set\tnoat\n"        \
+		__asm__ __volatile__ (                       \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlbe\t%0, 0(%2)\n"               \
 			"2:\tlbue\t$1, 1(%2)\n\t"            \
 			"sll\t%0, 0x8\n\t"                  \
@@ -124,12 +127,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     LoadWE(addr, value, res)   \
 		__asm__ __volatile__ (                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlwle\t%0, (%2)\n"               \
 			"2:\tlwre\t%0, 3(%2)\n\t"            \
 			"li\t%1, 0\n"                       \
@@ -142,13 +149,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     LoadHWUE(addr, value, res) \
 		__asm__ __volatile__ (                      \
-			".set\tnoat\n"                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlbue\t%0, 0(%2)\n"              \
 			"2:\tlbue\t$1, 1(%2)\n\t"            \
 			"sll\t%0, 0x8\n\t"                  \
@@ -164,12 +174,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     LoadWUE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlwle\t%0, (%2)\n"               \
 			"2:\tlwre\t%0, 3(%2)\n\t"            \
 			"dsll\t%0, %0, 32\n\t"              \
@@ -184,13 +198,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     StoreHWE(addr, value, res) \
 		__asm__ __volatile__ (                      \
-			".set\tnoat\n"                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tsbe\t%1, 1(%2)\n\t"             \
 			"srl\t$1, %1, 0x8\n"                \
 			"2:\tsbe\t$1, 0(%2)\n\t"             \
@@ -205,12 +222,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=r" (res)                        \
 			: "r" (value), "r" (addr), "i" (-EFAULT));
 
 #define     StoreWE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tswle\t%1,(%2)\n"                \
 			"2:\tswre\t%1, 3(%2)\n\t"            \
 			"li\t%0, 0\n"                       \
@@ -223,14 +244,18 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 		: "=r" (res)                                \
 		: "r" (value), "r" (addr), "i" (-EFAULT));
 #endif
 
 #ifdef __LITTLE_ENDIAN
 #define     LoadHWE(addr, value, res)  \
-		__asm__ __volatile__ (".set\tnoat\n"        \
+		__asm__ __volatile__ (                       \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlbe\t%0, 1(%2)\n"               \
 			"2:\tlbue\t$1, 0(%2)\n\t"            \
 			"sll\t%0, 0x8\n\t"                  \
@@ -245,12 +270,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     LoadWE(addr, value, res)   \
 		__asm__ __volatile__ (                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlwle\t%0, 3(%2)\n"              \
 			"2:\tlwre\t%0, (%2)\n\t"             \
 			"li\t%1, 0\n"                       \
@@ -263,13 +292,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     LoadHWUE(addr, value, res) \
 		__asm__ __volatile__ (                      \
-			".set\tnoat\n"                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlbue\t%0, 1(%2)\n"              \
 			"2:\tlbue\t$1, 0(%2)\n\t"            \
 			"sll\t%0, 0x8\n\t"                  \
@@ -285,12 +317,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     LoadWUE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tlwle\t%0, 3(%2)\n"              \
 			"2:\tlwre\t%0, (%2)\n\t"             \
 			"dsll\t%0, %0, 32\n\t"              \
@@ -305,13 +341,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=&r" (value), "=r" (res)         \
 			: "r" (addr), "i" (-EFAULT));
 
 #define     StoreHWE(addr, value, res) \
 		__asm__ __volatile__ (                      \
-			".set\tnoat\n"                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tsbe\t%1, 0(%2)\n\t"             \
 			"srl\t$1,%1, 0x8\n"                 \
 			"2:\tsbe\t$1, 1(%2)\n\t"             \
@@ -326,12 +365,16 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 			: "=r" (res)                        \
 			: "r" (value), "r" (addr), "i" (-EFAULT));
 
 #define     StoreWE(addr, value, res)  \
 		__asm__ __volatile__ (                      \
+			".set\tpush\n"                       \
+			".set\teva\n"                        \
+			".set\tnoat\n"                       \
 			"1:\tswle\t%1, 3(%2)\n"              \
 			"2:\tswre\t%1, (%2)\n\t"             \
 			"li\t%0, 0\n"                       \
@@ -344,7 +387,8 @@ asmlinkage void do_cpu(struct pt_regs *r
 			".section\t__ex_table,\"a\"\n\t"    \
 			STR(PTR)"\t1b, 4b\n\t"              \
 			STR(PTR)"\t2b, 4b\n\t"              \
-			".previous"                         \
+			".previous\n"                       \
+			".set\tpop\n"                       \
 		: "=r" (res)                                \
 		: "r" (value), "r" (addr), "i" (-EFAULT));
 #endif
@@ -815,8 +859,14 @@ static void emulate_load_store_insn(stru
 	case lh_op:
 		if (!access_ok(VERIFY_READ, addr, 2))
 			goto sigbus;
-
-		LoadHW(addr, value, res);
+		if (segment_eq(get_fs(), USER_DS)) {
+#ifdef CONFIG_EVA
+			LoadHWE(addr, value, res);
+#else
+			LoadHW(addr, value, res);
+#endif
+		} else
+			LoadHW(addr, value, res);
 		if (res)
 			goto fault;
 		compute_return_epc(regs);
@@ -826,8 +876,14 @@ static void emulate_load_store_insn(stru
 	case lw_op:
 		if (!access_ok(VERIFY_READ, addr, 4))
 			goto sigbus;
-
-		LoadW(addr, value, res);
+		if (segment_eq(get_fs(), USER_DS)) {
+#ifdef CONFIG_EVA
+			LoadWE(addr, value, res);
+#else
+			LoadW(addr, value, res);
+#endif
+		} else
+			LoadW(addr, value, res);
 		if (res)
 			goto fault;
 		compute_return_epc(regs);
@@ -837,10 +893,17 @@ static void emulate_load_store_insn(stru
 	case lhu_op:
 		if (!access_ok(VERIFY_READ, addr, 2))
 			goto sigbus;
-
-		LoadHWU(addr, value, res);
+		if (segment_eq(get_fs(), USER_DS)) {
+#ifdef CONFIG_EVA
+			LoadHWUE(addr, value, res);
+#else
+			LoadHWU(addr, value, res);
+#endif
+		} else
+			LoadHWU(addr, value, res);;
 		if (res)
 			goto fault;
+
 		compute_return_epc(regs);
 		regs->regs[insn.i_format.rt] = value;
 		break;
@@ -897,7 +960,14 @@ static void emulate_load_store_insn(stru
 
 		compute_return_epc(regs);
 		value = regs->regs[insn.i_format.rt];
-		StoreHW(addr, value, res);
+		if (segment_eq(get_fs(), USER_DS)) {
+#ifdef CONFIG_EVA
+			StoreHWE(addr, value, res);
+#else
+			StoreHW(addr, value, res);
+#endif
+		} else
+			StoreHW(addr, value, res);
 		if (res)
 			goto fault;
 		break;
@@ -908,7 +978,14 @@ static void emulate_load_store_insn(stru
 
 		compute_return_epc(regs);
 		value = regs->regs[insn.i_format.rt];
-		StoreW(addr, value, res);
+		if (segment_eq(get_fs(), USER_DS)) {
+#ifdef CONFIG_EVA
+			StoreWE(addr, value, res);
+#else
+			StoreW(addr, value, res);
+#endif
+		} else
+			StoreW(addr, value, res);
 		if (res)
 			goto fault;
 		break;
