# HG changeset patch
# Parent 4017fd009e22f6a200141d54b920f0193fa7af13

diff --git a/drivers/mtd/nand/xway_dmanand.c b/drivers/mtd/nand/xway_dmanand.c
--- a/drivers/mtd/nand/xway_dmanand.c
+++ b/drivers/mtd/nand/xway_dmanand.c
@@ -1785,6 +1785,8 @@
 	else
 		chip->ecc.bytes = 3;
 	
+	chip->ecc.total = chip->ecc.bytes * chip->ecc.steps;
+
 	pr_info("id: 0x%04x, addr cycle: %d", id, mlc->addr_cycle);
 
 	pre_allocate_ecc_location(mtd, mlc, chip, mtd->oobsize);
@@ -1822,15 +1824,25 @@
 	case 3968:
 		chip->cmdfunc = ltq_dmanand_command_lp;
 		chip->badblock_pattern = &factory_default;
-		chip->bbt_td = &ltq_nand_main_desc_4096;
-		chip->bbt_md = &ltq_nand_mirror_desc_4096;
+		if (mlc->ecc_mode) {
+			chip->bbt_td = &ltq_nand_main_desc_4096;
+			chip->bbt_md = &ltq_nand_mirror_desc_4096;
+		} else {
+			chip->bbt_td = &ltq_nand_main_desc_4096_3BECC;
+			chip->bbt_md = &ltq_nand_mirror_desc_4096_3BECC;
+		}
 		break;
 	case 8192:
 	case 7936:
 		chip->cmdfunc = ltq_dmanand_command_lp;
 		chip->badblock_pattern = &factory_default;
-		chip->bbt_td = &ltq_nand_main_desc_8192;
-		chip->bbt_md = &ltq_nand_mirror_desc_8192;
+		if (mlc->ecc_mode) {
+			chip->bbt_td = &ltq_nand_main_desc_8192;
+			chip->bbt_md = &ltq_nand_mirror_desc_8192;
+		} else {
+			chip->bbt_td = &ltq_nand_main_desc_8192_3BECC;
+			chip->bbt_md = &ltq_nand_mirror_desc_8192_3BECC;
+		}
 		break;
 	default:
 		  pr_err("Unable to determind page size for BBT definition\n");
@@ -2124,7 +2136,7 @@
 	}
 
 	if (this->onfi_version) {
-		printk("Setting ONFI settings for MLC NAND\n");
+		pr_debug("Setting ONFI settings for MLC NAND\n");
 		ltq_onfi_driver_settings(dma_nand_mtd);
 	}
 
diff --git a/drivers/mtd/nand/xway_dmanand.h b/drivers/mtd/nand/xway_dmanand.h
--- a/drivers/mtd/nand/xway_dmanand.h
+++ b/drivers/mtd/nand/xway_dmanand.h
@@ -69,6 +69,26 @@
 	.pattern = generic_mirror_pattern,
 };
 
+struct nand_bbt_descr ltq_nand_main_desc_8192_3BECC = {
+	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
+		| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
+	.offs = 200,
+	.len = 4,
+	.veroffs = 204,
+	.maxblocks = 4,
+	.pattern = generic_mirror_pattern,
+};
+
+struct nand_bbt_descr ltq_nand_mirror_desc_8192_3BECC = {
+	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
+		| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
+	.offs = 200,
+	.len = 4,
+	.veroffs = 204,
+	.maxblocks = 4,
+	.pattern = generic_mirror_pattern,
+};
+
 struct nand_bbt_descr ltq_nand_main_desc_4096 = {
 	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
 			| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
@@ -89,12 +109,32 @@
 	.pattern = generic_mirror_pattern,
 };
 
+struct nand_bbt_descr ltq_nand_main_desc_4096_3BECC = {
+	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
+			| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
+	.offs = 104,
+	.len = 4,
+	.veroffs = 108,
+	.maxblocks = 4,
+	.pattern = generic_bbt_pattern,
+};
+
+struct nand_bbt_descr ltq_nand_mirror_desc_4096_3BECC = {
+	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
+			| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
+	.offs = 104,
+	.len = 4,
+	.veroffs = 108,
+	.maxblocks = 4,
+	.pattern = generic_mirror_pattern,
+};
+
 struct nand_bbt_descr ltq_nand_main_desc_2048 = {
 	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
 			| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
-	.offs = 59,
+	.offs = 56,
 	.len = 4,
-	.veroffs = 63,
+	.veroffs = 60,
 	.maxblocks = 4,
 	.pattern = generic_bbt_pattern,
 };
@@ -102,9 +142,9 @@
 struct nand_bbt_descr ltq_nand_mirror_desc_2048 = {
 	.options = NAND_BBT_CREATE | NAND_BBT_WRITE
 			| NAND_BBT_2BIT | NAND_BBT_VERSION | NAND_BBT_LASTBLOCK,
-	.offs = 59,
+	.offs = 56,
 	.len = 4,
-	.veroffs = 63,
+	.veroffs = 60,
 	.maxblocks = 4,
 	.pattern = generic_mirror_pattern,
 };
