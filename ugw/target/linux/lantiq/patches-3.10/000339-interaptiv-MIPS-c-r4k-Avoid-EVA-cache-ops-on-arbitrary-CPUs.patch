From 45442b61bb52ec1f9d5f0e3f97478677ea0a392f Mon Sep 17 00:00:00 2001
From: James Hogan <james.hogan@imgtec.com>
Date: Tue, 2 Jun 2015 16:04:48 +0100
Subject: [PATCH] MIPS: c-r4k: Avoid EVA cache ops on arbitrary CPUs

local_r4k_mips_flush_data_cache_range is always passed kernel addresses,
as it is used from copy_to_user_page() which has already mapped it into
the kernel in order to do a memcpy to it. However it uses the
protected_ variant of the icache blast which checks the current segment.
This goes wrong if any of the CPUs on which it is run happen to be in
user context, as a CACHEE instruction will hit a kernel only address,
and cause an exception.

Use the unprotected version which assumes kernel addresses.

Signed-off-by: James Hogan <james.hogan@imgtec.com>
---
 arch/mips/mm/c-r4k.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/mips/mm/c-r4k.c b/arch/mips/mm/c-r4k.c
index 958ae27c8748..6b7322382611 100644
--- a/arch/mips/mm/c-r4k.c
+++ b/arch/mips/mm/c-r4k.c
@@ -765,7 +765,7 @@ static inline void local_r4k_mips_flush_data_cache_range(void *args)
 
 		/* vma is given for exec check only, mmap is current,
 		   so - no non-current vma page flush, just user or kernel */
-		protected_blast_icache_range(start, end);
+		blast_icache_range(start, end);
 	}
 }
 
-- 
2.3.6

