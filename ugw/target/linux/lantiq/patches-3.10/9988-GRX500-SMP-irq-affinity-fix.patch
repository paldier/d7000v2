# HG changeset patch
# Parent 9b44d2a1db0d86d01f79af19e4fa22b30f96bee2

diff --git a/arch/mips/kernel/smp-cmp.c b/arch/mips/kernel/smp-cmp.c
--- a/arch/mips/kernel/smp-cmp.c
+++ b/arch/mips/kernel/smp-cmp.c
@@ -201,10 +201,15 @@ static void cmp_init_secondary(void)
 {
 	struct cpuinfo_mips *c = &current_cpu_data;
 
+#ifdef CONFIG_SOC_GRX500
+	/* Assume GIC is present */
+	change_c0_status(ST0_IM, STATUSF_IP2 | STATUSF_IP3 | STATUSF_IP4 |
+			STATUSF_IP5 | STATUSF_IP6 | STATUSF_IP7);
+#else
 	/* Assume GIC is present */
 	change_c0_status(ST0_IM, STATUSF_IP3 | STATUSF_IP4 | STATUSF_IP6 |
 				 STATUSF_IP7);
-
+#endif
 	c->core = (read_c0_ebase() & 0x3ff) >> (fls(smp_num_siblings)-1);
 #if defined(CONFIG_MIPS_MT_SMP) || defined(CONFIG_MIPS_MT_SMTC)
 	if (cpu_has_mipsmt)
diff --git a/arch/mips/kernel/smp-cps.c b/arch/mips/kernel/smp-cps.c
--- a/arch/mips/kernel/smp-cps.c
+++ b/arch/mips/kernel/smp-cps.c
@@ -386,8 +386,15 @@ static void cps_init_secondary(void)
 	if (cpu_vpe_id(&current_cpu_data) == 0)
 		init_core();
 
-	change_c0_status(ST0_IM, STATUSF_IP3 | STATUSF_IP4 |
-				 STATUSF_IP6 | STATUSF_IP7);
+#ifdef CONFIG_SOC_GRX500
+	/* Assume GIC is present */
+	change_c0_status(ST0_IM, STATUSF_IP2 | STATUSF_IP3 | STATUSF_IP4 |
+			STATUSF_IP5 | STATUSF_IP6 | STATUSF_IP7);
+#else
+	/* Assume GIC is present */
+	change_c0_status(ST0_IM, STATUSF_IP3 | STATUSF_IP4 | STATUSF_IP6 |
+				 STATUSF_IP7);
+#endif
 }
 
 static void cps_smp_finish(void)
diff --git a/arch/mips/kernel/smp-mt.c b/arch/mips/kernel/smp-mt.c
--- a/arch/mips/kernel/smp-mt.c
+++ b/arch/mips/kernel/smp-mt.c
@@ -113,45 +113,17 @@ static void __init smvp_tc_init(unsigned
 	write_tc_c0_tchalt(TCHALT_H);
 }
 
-static void mp_send_ipi_single(int cpu, unsigned int action)
-{
-	unsigned long flags;
-
-	local_irq_save(flags);
-
-	switch (action) {
-	case SMP_CALL_FUNCTION:
-#ifdef CONFIG_MIPS_MALTA
-		gic_send_ipi(plat_ipi_call_int_xlate(cpu));
-#elif defined(CONFIG_SOC_GRX500)
-/*Need to implement [platform specific thing and that function has to go here*/
-                gic_send_ipi(plat_ipi_call_int_xlate(cpu));
-#endif
-		break;
-
-	case SMP_RESCHEDULE_YOURSELF:
-#ifdef CONFIG_MIPS_MALTA
-		gic_send_ipi(plat_ipi_resched_int_xlate(cpu));
-#elif defined(CONFIG_SOC_GRX500)
-/*Need to implement [platform specific thing and that function has to go here*/
-                gic_send_ipi(plat_ipi_resched_int_xlate(cpu));
-#endif
-		break;
-	}
-
-	local_irq_restore(flags);
-}
-
 static void vsmp_send_ipi_single(int cpu, unsigned int action)
 {
 	int i;
 	unsigned long flags;
 	int vpflags;
-
+#ifdef CONFIG_IRQ_GIC
 	if (gic_present) {
-		mp_send_ipi_single(cpu, action);
+		gic_send_ipi_single(cpu, action);
 		return;
 	}
+#endif /* CONFIG_IRQ_GIC */
 	local_irq_save(flags);
 
 	vpflags = dvpe();	/* can't access the other CPU's registers whilst MVPE enabled */
@@ -188,16 +160,19 @@ static void __cpuinit vsmp_init_secondar
 #ifdef CONFIG_IRQ_GIC
 	/* This is Malta specific: IPI,performance and timer interrupts */
 	if (gic_present) {
-#ifdef CONFIG_SOC_XWAY
-               set_c0_status(ST0_IM); //enable all the interrupt lines.
+#ifdef CONFIG_SOC_GRX500
+	/* Assume GIC is present */
+	change_c0_status(ST0_IM, STATUSF_IP2 | STATUSF_IP3 | STATUSF_IP4 |
+			STATUSF_IP5 | STATUSF_IP6 | STATUSF_IP7);
 #else
-		change_c0_status(ST0_IM, STATUSF_IP3 | STATUSF_IP4 |
-					 STATUSF_IP6 | STATUSF_IP7);
+	/* Assume GIC is present */
+	change_c0_status(ST0_IM, STATUSF_IP3 | STATUSF_IP4 | STATUSF_IP6 |
+				 STATUSF_IP7);
 #endif
 	} else {
 #endif
 #ifdef CONFIG_SOC_XWAY
-               set_c0_status(ST0_IM); //enable all the interrupt lines.
+		set_c0_status(ST0_IM); //enable all the interrupt lines.
 #else
 		change_c0_status(ST0_IM, STATUSF_IP0 | STATUSF_IP1 |
 					 STATUSF_IP6 | STATUSF_IP7);
