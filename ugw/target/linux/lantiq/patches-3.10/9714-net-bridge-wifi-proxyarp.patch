# HG changeset patch
# Parent e8c2c6a65812d008c41565a7fc8b7be18990a628

diff --git a/include/linux/if_bridge.h b/include/linux/if_bridge.h
--- a/include/linux/if_bridge.h
+++ b/include/linux/if_bridge.h
@@ -21,4 +21,11 @@ extern void brioctl_set(int (*ioctl_hook
 typedef int br_should_route_hook_t(struct sk_buff *skb);
 extern br_should_route_hook_t __rcu *br_should_route_hook;
 
+#ifdef CONFIG_WAVE_WIFI_PROXYARP
+typedef int br_do_wave_wifi_proxyarp_hook_t(struct sk_buff *skb, const struct net_device *in, const struct net_device *out);
+extern br_do_wave_wifi_proxyarp_hook_t *br_out_do_wave_wifi_proxyarp_hook;
+extern br_do_wave_wifi_proxyarp_hook_t *br_pre_do_wave_wifi_proxyarp_hook;
+extern br_do_wave_wifi_proxyarp_hook_t *br_fwd_do_wave_wifi_proxyarp_hook;
 #endif
+
+#endif
diff --git a/net/bridge/Kconfig b/net/bridge/Kconfig
--- a/net/bridge/Kconfig
+++ b/net/bridge/Kconfig
@@ -72,3 +72,9 @@ config LTQ_MCAST_SNOOPING
         default y
         help
           Lantiq Multicast Snooping support
+
+config WAVE_WIFI_PROXYARP
+        boolean "WAVE WiFi ProxyARP support"
+        default n
+        help
+          WAVE WiFi ProxyARP support
diff --git a/net/bridge/br_forward.c b/net/bridge/br_forward.c
--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@ -42,6 +42,13 @@ int mch_br_capture_pkt=0;
 EXPORT_SYMBOL(mch_br_capture_pkt);
 #endif
 
+#ifdef CONFIG_WAVE_WIFI_PROXYARP
+br_do_wave_wifi_proxyarp_hook_t *br_out_do_wave_wifi_proxyarp_hook;
+EXPORT_SYMBOL(br_out_do_wave_wifi_proxyarp_hook);
+br_do_wave_wifi_proxyarp_hook_t *br_fwd_do_wave_wifi_proxyarp_hook;
+EXPORT_SYMBOL(br_fwd_do_wave_wifi_proxyarp_hook);
+#endif
+
 static int deliver_clone(const struct net_bridge_port *prev,
 			 struct sk_buff *skb,
 			 void (*__packet_hook)(const struct net_bridge_port *p,
@@ -125,6 +132,11 @@ static void __br_deliver(const struct ne
 		return;
 	}
 
+#ifdef CONFIG_WAVE_WIFI_PROXYARP
+	if (br_out_do_wave_wifi_proxyarp_hook)
+		br_out_do_wave_wifi_proxyarp_hook(skb, NULL, skb->dev);
+#endif
+
 	BR_HOOK(NFPROTO_BRIDGE, NF_BR_LOCAL_OUT, skb, NULL, skb->dev,
 		br_forward_finish);
 }
@@ -157,6 +169,11 @@ static void __ebt_optimized __br_forward
 	skb->dev = to->dev;
 	skb_forward_csum(skb);
 
+#ifdef CONFIG_WAVE_WIFI_PROXYARP
+	if (br_fwd_do_wave_wifi_proxyarp_hook)
+		br_fwd_do_wave_wifi_proxyarp_hook(skb, indev, skb->dev);
+#endif
+
 	BR_HOOK(NFPROTO_BRIDGE, NF_BR_FORWARD, skb, indev, skb->dev,
 		br_forward_finish);
 }
diff --git a/net/bridge/br_input.c b/net/bridge/br_input.c
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@ -24,6 +24,11 @@
 br_should_route_hook_t __rcu *br_should_route_hook __read_mostly;
 EXPORT_SYMBOL(br_should_route_hook);
 
+#ifdef CONFIG_WAVE_WIFI_PROXYARP
+br_do_wave_wifi_proxyarp_hook_t *br_pre_do_wave_wifi_proxyarp_hook;
+EXPORT_SYMBOL(br_pre_do_wave_wifi_proxyarp_hook);
+#endif
+
 static int __ebt_optimized br_pass_frame_up(struct sk_buff *skb)
 {
 	struct net_device *indev, *brdev = BR_INPUT_SKB_CB(skb)->brdev;
@@ -246,6 +251,11 @@ forward:
 		if (ether_addr_equal(p->br->dev->dev_addr, dest))
 			skb->pkt_type = PACKET_HOST;
 
+#ifdef CONFIG_WAVE_WIFI_PROXYARP
+		if (br_pre_do_wave_wifi_proxyarp_hook)
+			br_pre_do_wave_wifi_proxyarp_hook(skb, skb->dev, NULL);
+#endif
+
 		BR_HOOK(NFPROTO_BRIDGE, NF_BR_PRE_ROUTING, skb, skb->dev, NULL,
 			br_handle_frame_finish);
 		break;
