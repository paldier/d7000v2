From fce5c0bbd8da44007058ce644808d22b03b8407a Mon Sep 17 00:00:00 2001
From: Alexander Usyskin <alexander.usyskin@intel.com>
Date: Mon, 21 Oct 2013 22:05:43 +0300
Subject: [PATCH] mei: print correct device state during unexpected reset

Move the unexpected state print to the beginning of mei_reset,
thus printing right state.

Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit f931f4f3f0e2be1a6c5278ab9488652f98ba2f9c)

Conflicts:

	drivers/misc/mei/init.c

Change-Id: Ib412e0ed71283a0b0f2af2ac1c730683d55474f2
---
 drivers/misc/mei/init.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/mei/init.c b/drivers/misc/mei/init.c
index 6da8c3e..4b9ce2f 100644
--- a/drivers/misc/mei/init.c
+++ b/drivers/misc/mei/init.c
@@ -158,8 +158,10 @@ void mei_reset(struct mei_device *dev, int interrupts_enabled)
 	if (ret) {
 		dev_err(&dev->pdev->dev, "hw reset failed disabling the device\n");
 		interrupts_enabled = false;
+		dev->dev_state = MEI_DEV_DISABLED;
 	}
 
+	dev->hbm_state = MEI_HBM_IDLE;
 
 	if (dev->dev_state != MEI_DEV_INITIALIZING &&
 	    dev->dev_state != MEI_DEV_POWER_UP) {
@@ -183,6 +185,8 @@ void mei_reset(struct mei_device *dev, int interrupts_enabled)
 		memset(&dev->wr_ext_msg, 0, sizeof(dev->wr_ext_msg));
 	}
 
+	/* we're already in reset, cancel the init timer */
+	dev->init_clients_timer = 0;
 
 	dev->me_clients_num = 0;
 	dev->rd_msg_hdr = 0;
@@ -194,7 +198,6 @@ void mei_reset(struct mei_device *dev, int interrupts_enabled)
 
 	if (!interrupts_enabled) {
 		dev_dbg(&dev->pdev->dev, "intr not enabled end of reset\n");
-		dev->dev_state = MEI_DEV_DISABLED;
 		return;
 	}
 
-- 
1.7.9.5

