From a4c8a131fbe1d5d6e9d636a19ed3c09c4ba2e04a Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Fri, 10 Apr 2015 09:21:51 -0700
Subject: [PATCH] dmaengine: dw: make busyloops limited by counter

In some cases we might have DMA powered off and therefore get 0xffffffff
from the register. This patch introduces a counter to prevent a hang.

Imported from http://www.spinics.net/lists/dmaengine/msg03964.html
---
 drivers/dma/dw/core.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/dw/core.c b/drivers/dma/dw/core.c
index 4bbbc1c..7b0328c 100644
--- a/drivers/dma/dw/core.c
+++ b/drivers/dma/dw/core.c
@@ -203,8 +203,10 @@ static inline void dwc_dump_chan_regs(struct dw_dma_chan *dwc)
 
 static inline void dwc_chan_disable(struct dw_dma *dw, struct dw_dma_chan *dwc)
 {
+	unsigned int count = 20;
+
 	channel_clear_bit(dw, CH_EN, dwc->mask);
-	while (dma_readl(dw, CH_EN) & dwc->mask)
+	while (dma_readl(dw, CH_EN) & dwc->mask && count--)
 		cpu_relax();
 }
 
@@ -1475,6 +1477,8 @@ EXPORT_SYMBOL(dw_dma_cyclic_free);
 
 static void dw_dma_off(struct dw_dma *dw)
 {
+	unsigned int count = 20;
+
 	dma_writel(dw, CFG, 0);
 
 	channel_clear_bit(dw, MASK.XFER, dw->all_chan_mask);
@@ -1482,7 +1486,7 @@ static void dw_dma_off(struct dw_dma *dw)
 	channel_clear_bit(dw, MASK.DST_TRAN, dw->all_chan_mask);
 	channel_clear_bit(dw, MASK.ERROR, dw->all_chan_mask);
 
-	while (dma_readl(dw, CFG) & DW_CFG_DMA_EN)
+	while (dma_readl(dw, CFG) & DW_CFG_DMA_EN && count--)
 		cpu_relax();
 }
 
-- 
1.7.9.5

