From a6316240aef452e6a98c55d14c47197a0bcb51df Mon Sep 17 00:00:00 2001
From: chandrap <prakash1.chandra@intel.com>
Date: Tue, 3 Nov 2015 16:37:52 -0700
Subject: [PATCH] Title: Genric SKBUFF changes to include #ifdef HSD#244296
 Issue: HSD:244296 IssueType: Defect Symptom: linux/skbuff.h
 changes interfere with -Werror=undef flag RootCause: used
 #if rather than #ifdef Resolution: change #ifdef flag
 Impact: none.

---
 arch/x86/NetIP_SubSystem/avalanche_intc.c          |  210 ++++++++++-----
 include/linux/avalanche/generic/avalanche_intc.h   |    4 +
 include/linux/avalanche/generic/avalanche_pp_api.h |  242 +++++++++++++++---
 include/linux/avalanche/puma7/puma7_cppi_prv.h     |  270 +++++++++++++++-----
 4 files changed, 563 insertions(+), 163 deletions(-)
 mode change 100644 => 100755 arch/x86/NetIP_SubSystem/avalanche_intc.c
 mode change 100644 => 100755 include/linux/avalanche/generic/avalanche_intc.h

diff --git a/arch/x86/NetIP_SubSystem/avalanche_intc.c b/arch/x86/NetIP_SubSystem/avalanche_intc.c
old mode 100644
new mode 100755
index efec5bb..f50efb2
--- a/arch/x86/NetIP_SubSystem/avalanche_intc.c
+++ b/arch/x86/NetIP_SubSystem/avalanche_intc.c
@@ -6,66 +6,66 @@
  *
  *
 
-  This file is provided under a dual BSD/GPLv2 license.  When using or 
-  redistributing this file, you may do so under either license.
+ This file is provided under a dual BSD/GPLv2 license.  When using or 
+ redistributing this file, you may do so under either license.
 
-  GPL LICENSE SUMMARY
+ GPL LICENSE SUMMARY
 
-  Copyright(c) 2008-2015 Intel Corporation.
+ Copyright(c) 2015 Intel Corporation.
 
-  This program is free software; you can redistribute it and/or modify 
-  it under the terms of version 2 of the GNU General Public License as
-  published by the Free Software Foundation.
+ This program is free software; you can redistribute it and/or modify
+ it under the terms of version 2 of the GNU General Public License as
+ published by the Free Software Foundation.
 
-  This program is distributed in the hope that it will be useful, but 
-  WITHOUT ANY WARRANTY; without even the implied warranty of 
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
-  General Public License for more details.
+ This program is distributed in the hope that it will be useful, but 
+ WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
+ General Public License for more details.
 
-  You should have received a copy of the GNU General Public License 
-  along with this program; if not, write to the Free Software 
-  Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
-  The full GNU General Public License is included in this distribution 
-  in the file called LICENSE.GPL.
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
+ The full GNU General Public License is included in this distribution
+ in the file called LICENSE.GPL.
 
 
-  Contact Information:
-  Intel Corporation
-  2200 Mission College Blvd.
-  Santa Clara, CA  97052
+ Contact Information:
+ Intel Corporation
+ 2200 Mission College Blvd.
+ Santa Clara, CA  97052
 
-  BSD LICENSE 
+ BSD LICENSE
 
-  Copyright(c) 2008-2015 Intel Corporation. All rights reserved.
+ Copyright(c) 2008-2015 Intel Corporation. All rights reserved.
 
-  Redistribution and use in source and binary forms, with or without 
-  modification, are permitted provided that the following conditions 
-  are met:
+ Redistribution and use in source and binary forms, with or without
+ modification, are permitted provided that the following conditions
+ are met:
 
-    * Redistributions of source code must retain the above copyright 
-      notice, this list of conditions and the following disclaimer.
+ * Redistributions of source code must retain the above copyright
+ notice, this list of conditions and the following disclaimer.
 
-    * Redistributions in binary form must reproduce the above copyright 
-      notice, this list of conditions and the following disclaimer in 
-      the documentation and/or other materials provided with the 
-      distribution.
+ * Redistributions in binary form must reproduce the above copyright
+ notice, this list of conditions and the following disclaimer in
+ the documentation and/or other materials provided with the
+ distribution.
 
-    * Neither the name of Intel Corporation nor the names of its 
-      contributors may be used to endorse or promote products derived 
-      from this software without specific prior written permission.
+ * Neither the name of Intel Corporation nor the names of its
+ contributors may be used to endorse or promote products derived
+ from this software without specific prior written permission.
 
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
-  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
-  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
-  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
-  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
-  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
-  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
-  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
-  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
-  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
-  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*/
+ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
+ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
 
 
 /****************/
@@ -82,6 +82,27 @@
 /***************/
 
 #define ATOM_INTC_BASE 0xF00E0000 
+#define INTC_SET_BIT_0                ( 0x00000001 )    
+#define HOST_ARM_IRQ_NUM             ( 1 )  /* ARM nIRQ Number */
+#define NUM_SYS_INTS_PER_REG         ( 4 )
+#define NUM_CHANNELS_PER_REG         ( 4 )
+#define NUM_INTS_PER_REG             ( 32 )
+#define NUM_CHANNEL_MAP_REGS         ( 24 )
+#define NUM_HOST_INT_MAP_REGS        ( 2 )
+
+/* uncomment to enable debug prints */
+//#define INTC_DEBUG
+
+#ifdef INTC_DEBUG
+/* Debug print, also print function name and line number */
+#  define DPRINTK(fmt, args...) printk("%s(%d): " fmt "\n", __FUNCTION__ , __LINE__, ## args)
+#else
+#  define DPRINTK(fmt, args...)
+#endif
+
+/* Error print, also print function name and line number */
+#define EPRINTK(fmt, args...) printk(KERN_ERR "****** %s(%d): " fmt " ******\n", __FUNCTION__ , __LINE__, ## args)
+
 
 /***************/
 /**  Globals  **/
@@ -92,6 +113,16 @@ void*  AVALANCHE_INTC_BASE = NULL;
 struct avalanche_ictrl_regs  *avalanche_hw0_icregs;
 extern net_ip_mmios_t net_ip_mmios;
 
+/****************************************************************************
+ * Interrupt Mapping APIs
+ ****************************************************************************/
+/* Channel Map Registers */
+static int avalanche_intc_map_system_int_to_channel( unsigned int sys_irq,
+        unsigned int channel_num);
+/* Host  Interrupt  Map Registers */
+static int avalanche_intc_map_channel_to_host_int( unsigned int channel_num,
+        unsigned int host_irq);
+
 /*****************************************************************************
  * Utility Functions
  ****************************************************************************/
@@ -112,26 +143,44 @@ inline unsigned char  get_reg_index( unsigned int irq )
 int avalanche_intc_clear_status( unsigned int irq )
 {
     unsigned char irq_index, irq_bit;
-    unsigned int status_reg;
     irq_index =  get_reg_index(irq);
     irq_bit = get_bit_position(irq);
 
     /* Got ARM11 interrupt status regsiter */
-    /* ARM11 big endian to CPU native endianness */
-    status_reg = be32_to_cpu(avalanche_hw0_icregs->icestar[irq_index]);
-    if ( (status_reg & (1<<irq_bit)) == 0)
-    {
-        /* Requested interrupt is enabled */
-        status_reg =  (status_reg | (1<<irq_bit));
-        /* write value back to controller register */
-        avalanche_hw0_icregs->icestar[irq_index] = cpu_to_be32(status_reg);
-    }
-
-    /* else need not to do anything */
+    /* write 1 to clear status register */
+    avalanche_hw0_icregs->icestar[irq_index] = cpu_to_be32((1<<irq_bit));
     return(1);
 }
+
+/* Channel Map Registers */
+static int avalanche_intc_map_system_int_to_channel( unsigned int sys_irq,
+        unsigned int channel_num )
+{
+    unsigned int chnl_reg_indx = sys_irq/NUM_SYS_INTS_PER_REG;
+    /* There is one register per 4 system Interrupts, so get the proper
+     * register base for the given interrupt.
+     */
+    avalanche_hw0_icregs->icchnlmpr[chnl_reg_indx] |=
+        (channel_num << ((sys_irq % NUM_SYS_INTS_PER_REG) * 8));
+    return(0);
+}
+
+/* Host  Interrupt  Map Registers */
+static int avalanche_intc_map_channel_to_host_int( unsigned int channel_num,
+        unsigned int host_irq )
+{
+    unsigned int hst_int_reg_indx = channel_num /NUM_CHANNELS_PER_REG;
+    /* There is one register per 4 channels so get the proper
+     * register base for the given channel.
+     */
+    avalanche_hw0_icregs->ichmpr[hst_int_reg_indx] |=
+        (host_irq << ((channel_num % NUM_CHANNELS_PER_REG)* 8 ));
+    return(0);
+}
+
 int avalanche_intc_get_status( unsigned int irq )
 {
+    DPRINTK("called with irq#=%d\n", irq);
     unsigned char irq_index, irq_bit;
     unsigned int status_reg;
     irq_index =  get_reg_index(irq);
@@ -140,38 +189,69 @@ int avalanche_intc_get_status( unsigned int irq )
     /* ARM11 big endian to CPU native endianness */
     /* got ARM11 interrupt status regsiter */
     status_reg = be32_to_cpu(avalanche_hw0_icregs->icestar[irq_index]);
-    if ( (status_reg & (1<<irq_bit)) == 0)
+    if ((status_reg & (1<<irq_bit)))
     {
         /* Requested interrupt is enable */
+        DPRINTK("status register value#=%x irq_bit=%x\n",status_reg,irq_bit);
         return(1);
     }
+   DPRINTK("status register value#=%x\n",status_reg); 
     return (0);
 }
 
+void avalanche_intc_enable_irq( unsigned int  irq )
+{
+    avalanche_hw0_icregs->iceisr = cpu_to_be32(irq);
+}
+void avalanche_intc_disable_irq( unsigned int irq )
+{
+    avalanche_hw0_icregs->ichinteicr = cpu_to_be32(HOST_ARM_IRQ_NUM);
+    avalanche_hw0_icregs->iceicr = cpu_to_be32(irq);
+    avalanche_hw0_icregs->ichinteisr = cpu_to_be32(HOST_ARM_IRQ_NUM);
+}
+
+
 int avalanche_intc_init(void)
 {
 
-    unsigned int cntrl_ver;
+    unsigned int cntrl_ver, chnl_num;
     /* ioremap ATM_INTC IO memory */
     AVALANCHE_INTC_BASE = ioremap_nocache( (net_ip_mmios.region1_base + (ATOM_INTC_BASE & 0x0FFFFFFF)), sizeof(struct avalanche_ictrl_regs));
     if(!AVALANCHE_INTC_BASE)
     {
-         printk(" ATOM_INTC_BASE memory map fail : %x\n",ATOM_INTC_BASE );
-         return -1;
+        EPRINTK(" ATOM_INTC_BASE memory map fail : %x\n",ATOM_INTC_BASE );
+        return -1;
     }
     /*setting up ATOM_INTC base address */
     avalanche_hw0_icregs =   (struct avalanche_ictrl_regs *)AVALANCHE_INTC_BASE;
-    
+
     /* read ATOM_INTC revision register */
     /**ARM11 big endian to CPU  read register and call the corresponding value */
     cntrl_ver = be32_to_cpu(avalanche_hw0_icregs->icrevr);
-    printk("ATOM_INTC Interrupt controller revision : %x\n", cntrl_ver);
+    DPRINTK("ATOM_INTC Interrupt controller revision : %x\n", cntrl_ver);
+    /* As VIC is disabled, All the channel will map to to either nFIQ or nIRQ.
+     * ARM11 have only one IRQ line,so map all the channels to this single host
+     * ARM11 IRQ line.
+     */
+    for( chnl_num = 0; chnl_num < (NUM_HOST_INT_MAP_REGS * NUM_CHANNELS_PER_REG); chnl_num++ )
+    {
+        avalanche_intc_map_channel_to_host_int(chnl_num, HOST_ARM_IRQ_NUM);
+    }
+    /* enable host interrupts */
+    avalanche_hw0_icregs->ichinter[0] = cpu_to_be32(0x3);
+    /* set global enable */
+    avalanche_hw0_icregs->icglber = cpu_to_be32(INTC_SET_BIT_0);
+    DPRINTK("avalanche_hw0_icregs->ichinter (host enable register) =%x\n", be32_to_cpu(avalanche_hw0_icregs->ichinter[0]));
+    DPRINTK("avalanche_hw0_icregs->icglber (global enable register) =%x\n", be32_to_cpu(avalanche_hw0_icregs->icglber));
+    DPRINTK("avalanche_hw0_icregs->ichmpr (channlemap register) =%x\n", be32_to_cpu(avalanche_hw0_icregs->ichmpr[0]));
+
     return 0;
 }
-
 void avalanche_intc_cleanup(void)
 {
     iounmap(AVALANCHE_INTC_BASE);
 }
 EXPORT_SYMBOL(avalanche_intc_get_status);
 EXPORT_SYMBOL(avalanche_intc_clear_status);
+EXPORT_SYMBOL(avalanche_intc_enable_irq);
+EXPORT_SYMBOL(avalanche_intc_disable_irq);
diff --git a/include/linux/avalanche/generic/avalanche_intc.h b/include/linux/avalanche/generic/avalanche_intc.h
old mode 100644
new mode 100755
index 63bec2a..6a0c494
--- a/include/linux/avalanche/generic/avalanche_intc.h
+++ b/include/linux/avalanche/generic/avalanche_intc.h
@@ -159,6 +159,10 @@ struct avalanche_ictrl_regs /* Avalanche Interrupt control registers */
 int avalanche_intc_clear_status( unsigned int irq );
 /* Check Interrupt Status  Registerbit for irq */
 int avalanche_intc_get_status( unsigned int irq );
+/* enable irq index */
+void avalanche_intc_enable_irq( unsigned int  irq );
+/* disable irq index */
+void avalanche_intc_disable_irq( unsigned int irq );
 
 /*****************************************************************************
  *  General and Global Regsiters INIT APIs
diff --git a/include/linux/avalanche/generic/avalanche_pp_api.h b/include/linux/avalanche/generic/avalanche_pp_api.h
index 0fb7efb..ebe12fe 100755
--- a/include/linux/avalanche/generic/avalanche_pp_api.h
+++ b/include/linux/avalanche/generic/avalanche_pp_api.h
@@ -102,14 +102,18 @@
 #define AVALANCHE_PP_MAX_ACCELERATED_TDOX_SESSIONS      256
 #else
 #define AVALANCHE_PP_MAX_PID                            32
-#define AVALANCHE_PP_MAX_VPID                           64
+#define AVALANCHE_PP_MAX_VPID                           32
 #define AVALANCHE_PP_MAX_STATIC_ENTRIES                 (32 * 1024)
 #define AVALANCHE_PP_MAX_LUT_ENTRIES                    (3 * 1024)
 #define AVALANCHE_PP_MAX_ACCELERATED_SESSIONS           (AVALANCHE_PP_MAX_STATIC_ENTRIES + AVALANCHE_PP_MAX_LUT_ENTRIES)
 #define AVALANCHE_PP_MAX_ACCELERATED_TDOX_SESSIONS      512
 #endif
 
+#ifdef CONFIG_WIFI_MESH_TUNNEL
+#define AVALANCHE_PP_MAX_ACCELERATED_VOICE_SESSIONS     0
+#else
 #define AVALANCHE_PP_MAX_ACCELERATED_VOICE_SESSIONS     16
+#endif
 #define MAX_ALLOWED_QOS_CLUSTERS_PER_DEVICE             16
 
 /**************************************************************************
@@ -118,6 +122,50 @@
  * DESCRIPTION   :
  *  The structure contains four version notation numbers.
  **************************************************************************/
+#if PUMA7_OR_NEWER_SOC_TYPE
+typedef struct
+{
+    Uint32  SequencerPPver;
+    Uint32  SequencerPDSPver;
+    Uint32  PrefetcherPPver;
+    Uint32  PrefetcherPDSPver;
+    Uint32  Classifier2PPver;
+    Uint32  Classifier2PDSPver;
+    Uint32  SessionCachePPver;
+    Uint32  SessionCachePDSPver;
+    Uint32  Classifier1PPver;
+    Uint32  Classifier1PDSPver;
+    Uint32  ModifierPPver;
+    Uint32  ModifierPDSPver;
+    Uint32  ReSequencerPPver;
+    Uint32  ReSequencerPDSPver;
+    Uint32  TurboDOXPPver;
+    Uint32  TurboDOXPDSPver;
+    Uint32  AQMdPPver;
+    Uint32  AQMdPDSPver;
+    Uint32  QoSPPver;
+    Uint32  QoSPDSPver;
+    Uint32  DpiPPver;
+    Uint32  DpiPDSPver;
+    Uint32  McPPver;
+    Uint32  McPDSPver;
+    Uint32  AccumulatorPPver;
+    Uint32  AccumulatorPDSPver;
+    Uint32  RecyclerPPver;
+    Uint32  RecyclerPDSPver;
+    Uint32  WifiTxPPver;
+    Uint32  WifiTxPDSPver;
+    Uint32  WifiRxPPver;
+    Uint32  WifiRxPDSPver;
+    Uint32  MocaPPver;
+    Uint32  MocaPDSPver;
+    Uint32  IpsecPPver;
+    Uint32  IpsecPDSPver;
+    Uint32  MinPPver;
+    Uint32  MaxPPver;
+}
+AVALANCHE_PP_VERSION_t;
+#else
 typedef struct  // former TI_PP_VERSION
 {
     unsigned char   v0;
@@ -126,6 +174,7 @@ typedef struct  // former TI_PP_VERSION
     unsigned char   v3;
 }
 AVALANCHE_PP_VERSION_t;
+#endif
 
 
 
@@ -324,11 +373,19 @@ AVALANCHE_PP_QOS_CLST_CFG_t;
  * DESCRIPTION   :
  *  The structure contains packet statistics for a QOS queue.
  **************************************************************************/
+#if PUMA7_OR_NEWER_SOC_TYPE
+typedef struct // former TI_PP_QOS_QUEUE_STATS
+{
+    Uint64      fwd_pkts;            /* Number of packets forwarded to the Egress Queue */
+    Uint64      drp_cnt;             /* Number of packets dropped due to congestion */
+}
+#else
 typedef struct // former TI_PP_QOS_QUEUE_STATS
 {
     Uint32      fwd_pkts;            /* Number of packets forwarded to the Egress Queue */
     Uint32      drp_cnt;             /* Number of packets dropped due to congestion */
 }
+#endif
 AVALANCHE_PP_QOS_QUEUE_STATS_t;
 
 
@@ -354,7 +411,12 @@ AVALANCHE_PP_QOS_QUEUE_STATS_t;
 typedef enum // former TI_PP_VPID_TYPE
 {
     AVALANCHE_PP_VPID_ETHERNET   = 0x0,
-    AVALANCHE_PP_VPID_VLAN       = 0x1
+    AVALANCHE_PP_VPID_VLAN       = 0x1,
+#ifdef CONFIG_WIFI_MESH_TUNNEL
+    AVALANCHE_PP_DOUBLE_VLAN_ETH_MESH,
+    AVALANCHE_PP_VPID_VLAN_WIFI_MESH,
+    AVALANCHE_PP_VPID_VLAN_ETH_MESH,
+#endif
 }
 AVALANCHE_PP_VPID_TYPE_e;
 
@@ -394,7 +456,7 @@ typedef struct // former TI_PP_VPID
     AVALANCHE_PP_VPID_TYPE_e        type;
 
     /* Private Data. */
-    Uint8                           flags;
+    Uint16                           flags;
 
     /* This is an optional VLAN Identifier associated with the VPID. This
      * is required only if the VPID is attached to a VLAN enabled network
@@ -416,6 +478,24 @@ AVALANCHE_PP_VPID_INFO_t;
  * DESCRIPTION   :
  *  The structure describes the VPID statistics for the Packet Processor.
  **************************************************************************/
+#if PUMA7_OR_NEWER_SOC_TYPE
+typedef struct // former TI_PP_VPID_STATS
+{
+    Uint64      rx_byte;
+    Uint64      rx_unicast_pkt;
+    Uint64      rx_broadcast_pkt;
+    Uint64      rx_multicast_pkt;
+    Uint64      rx_discard_pkt;
+    Uint64      rx_res[3];
+    Uint64      tx_byte;
+    Uint64      tx_unicast_pkt;
+    Uint64      tx_broadcast_pkt;
+    Uint64      tx_multicast_pkt;
+    Uint64      tx_discard_pkt;
+    Uint64      tx_error;
+    Uint64      tx_res[2];
+}AVALANCHE_PP_VPID_STATS_t;
+#else
 typedef struct // former TI_PP_VPID_STATS
 {
     Uint64      rx_byte;
@@ -431,8 +511,8 @@ typedef struct // former TI_PP_VPID_STATS
     Uint32      tx_discard_pkt;
 
     Uint32      tx_error;
-}
-AVALANCHE_PP_VPID_STATS_t;
+}AVALANCHE_PP_VPID_STATS_t;
+#endif
 
 
 
@@ -450,7 +530,11 @@ AVALANCHE_PP_VPID_STATS_t;
 typedef enum
 {
     AVALANCHE_PP_LUT_ENTRY_L2_ETHERNET,
+#ifdef CONFIG_WIFI_MESH_TUNNEL
+    AVALANCHE_PP_LUT_ENTRY_WIFI_MESH,
+#else
     AVALANCHE_PP_LUT_ENTRY_reserved_1,
+#endif
     AVALANCHE_PP_LUT_ENTRY_reserved_2,
     AVALANCHE_PP_LUT_ENTRY_reserved_3,
     AVALANCHE_PP_LUT_ENTRY_reserved_4,
@@ -556,6 +640,7 @@ typedef enum
 }
 AVALANCHE_PP_LUT2_FIELD_ENABLE_e;
 
+#ifndef CONFIG_WIFI_MESH_TUNNEL
 typedef struct
 {
     union
@@ -594,6 +679,29 @@ typedef struct
     }u;
 }
 __Avalanche_PP_LUT2_inputs_t;
+#else
+typedef struct
+{
+    union
+    {
+        Uint8       raw[32];
+        struct
+        {
+            Uint16                                  vlan_id;
+            Uint8                                   frame_control_flags;
+            Uint8                                   packet_type;
+            Uint16                                  src_intf_id;
+            Uint16                                  dst_intf_id;
+            Uint8                                   receive_mac[6];
+            Uint8                                   transmit_mac[6];
+            Uint8                                   dst_mac[6];
+			Uint8                                   src_mac[6];
+        }
+        fields;
+    }u;
+}
+__Avalanche_PP_LUT2_inputs_t;    /* For WIFI MESH mode*/
+#endif
 
 typedef struct
 {
@@ -699,16 +807,23 @@ AVALANCHE_PP_DEV_TYPE_e;
 typedef struct // former TI_PP_SESSION_PROPERTY
 {
     Uint8                               vpid_handle;
-    Uint8                               dev_type;       /* Type : AVALANCHE_PP_DEV_TYPE_e */
-    Uint16                              reserved;
+#if PUMA7_OR_NEWER_SOC_TYPE
+    Uint8                               reserved0;
+#else
+    Uint8                               pid_type;       /* Needed for WAN/LAN direction selection */
+#endif
+    Uint16                              reserved1;
 
+#if PUMA6_SOC_TYPE
+    Bool                                isTunnel;
+#endif
     __Avalanche_PP_LUTs_Data_t          lookup;
 
 }AVALANCHE_PP_INGRESS_SESSION_PROPERTY_t;
 
 
 #if PUMA7_OR_NEWER_SOC_TYPE
-#define AVALNCHE_PP_WRAP_HEADER_MAX_LEN 96
+#define AVALNCHE_PP_WRAP_HEADER_MAX_LEN 70
 #else
 #define AVALNCHE_PP_WRAP_HEADER_MAX_LEN 64
 
@@ -730,6 +845,20 @@ AVALANCHE_PP_EGRESS_FIELD_ENABLE_e;
 
 #endif
 
+#if PUMA7_OR_NEWER_SOC_TYPE
+typedef struct
+{
+    Uint8                               sf_index;
+    Uint8                               res1;
+    Uint16                              do_not_encrypt  :   1,
+                                        fw_internal     :   3,
+                                        high_priority   :   1,
+                                        tdox_ignore_ts  :   1,
+                                        tdox_enabled    :   1,
+                                        tdox_id         :   9;
+}
+AVALANCHE_PP_PSI_t;
+#else
 typedef struct
 {
     Uint8                               sf_index;
@@ -738,6 +867,9 @@ typedef struct
     Uint8                               tdox_id;
 }
 AVALANCHE_PP_PSI_t;
+#endif
+#ifndef CONFIG_WIFI_MESH_TUNNEL
+#define AVALANCHE_PP_EGRESS_DROP_SESS    0x01
 
 /**************************************************************************
  * STRUCTURE NAME : AVALANCHE_PP_EGRESS_SESSION_PROPERTY_t
@@ -753,32 +885,27 @@ AVALANCHE_PP_PSI_t;
 typedef struct
 {
     Uint8                       vpid_handle;
-    Uint8                       dev_type;               /* Type : AVALANCHE_PP_DEV_TYPE_e */
     Uint8                       enable;
                                 #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_VLAN                   0x01
-                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_PSI                    0x02
-                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_TDOX_ENABLED           0x04
-                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_TDOX_SKIP_TIMESTAMP    0x08
-                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_TCP_SYN                0x10
-                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_TCP_CTRL               0x20
-    Uint8                       reserved;
+                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_TCP_SYN                0x02
+                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_TCP_CTRL               0x04
+                                #define AVALANCHE_PP_EGRESS_FIELD_ENABLE_DOCSIS                 0x08
+                                #define AVALANCHE_PP_EGRESS_WH_IPv4                             0x10
+                                #define AVALANCHE_PP_EGRESS_WH_IPv6                             0x20
+    Uint16                      reserved;
 
     __Avalanche_PP_LUTs_Data_t  lookup;
 
 
-    Uint16                      eth_type;
-    Uint16                      tdox_handle;
 
     union
     {
         AVALANCHE_PP_PSI_t      us_fields;
-        Uint32                  us_psi_word;
+        Uint32                  psi_word;
     }
     psi;
-#define psi_word			psi.us_psi_word
-#define psi_tdox_id         psi.us_fields.tdox_id
-
 
+    Uint16                      eth_type;
     Uint8                       wrapHeaderOffLayer3;
     Uint8                       wrapHeaderLen;
     Uint8                       wrapHeader[ AVALNCHE_PP_WRAP_HEADER_MAX_LEN ];
@@ -788,8 +915,9 @@ typedef struct
 typedef struct // former TI_PP_SESSION_PROPERTY
 {
     Uint8                               vpid_handle;
-    Uint8                               dev_type;           /* Type : AVALANCHE_PP_DEV_TYPE_e */
+    Uint8                               pid_type;       /* Needed for WAN/LAN direction selection */
     Uint16                              enable;             /* Type: AVALANCHE_PP_EGRESS_FIELD_ENABLE_e */
+    Bool                                isTunnel;
 
     union
     {
@@ -835,6 +963,36 @@ typedef struct // former TI_PP_SESSION_PROPERTY
     Uint16                              L4_SrcPort;
     Uint16                              L4_DstPort;
     Uint16                              pppoe_sid;
+    Uint8                               drop_sess;
+    Uint8                               wrapHeader_type;     /* Type : AVALANCHE_PP_LUT_ENTRY_TYPE_e */
+}
+AVALANCHE_PP_EGRESS_SESSION_PROPERTY_t;
+#endif
+#else
+typedef enum
+{
+    AVALANCHE_PP_WIFI_MESH_B_HEADER_SIZE  = 22,   /* ethernet header + 2 Vlans (22B) */
+    AVALANCHE_PP_WIFI_MESH_CB_HEADER_SIZE = 49,   /* ethernet header (18B) + dragon header (13B) + ethernet header (18B) */
+    AVALANCHE_PP_WIFI_MESH_CA_HEADER_SIZE = 61,   /* ethernet header (18B)- 2bytes of ethernet type + dragon header (13B) + wifi header (30B)*/
+}AVALANCHE_PP_WIFI_MESH_HEADER_SIZE_e;
+#define AVALNCHE_PP_WIFI_MESH_HEADER_MAX_LEN        (61)
+/**************************************************************************
+ * STRUCTURE NAME : AVALANCHE_PP_EGRESS_SESSION_PROPERTY_t
+ **************************************************************************
+ * DESCRIPTION   :
+ *  The structure describes the session properties. Fundamentally a session
+ *  consists of 2 properties i.e. Ingress and Egress. Each property internally
+ *  describes the interface on which the packet was rxed (Ingress) or txed
+ *  (Egress) and how the packet looked at Ingress or Egress.
+ **************************************************************************/
+typedef struct // former TI_PP_SESSION_PROPERTY
+{
+    Uint8                               vpid_handle;
+    Uint8                               reserved;
+    Uint16                              enable;             /* Type: AVALANCHE_PP_EGRESS_FIELD_ENABLE_e */
+    Uint8                               dstmac[6];
+    Uint8                               srcmac[6];
+    Uint8                               newHeader[AVALNCHE_PP_WIFI_MESH_HEADER_MAX_LEN];
 }
 AVALANCHE_PP_EGRESS_SESSION_PROPERTY_t;
 #endif
@@ -996,9 +1154,9 @@ typedef struct
     Uint32      Prefetcher_res5;
 
     /* TurboDOX */
-    Uint32      TurboDOX_res1;
-    Uint32      TurboDOX_res2;
-    Uint32      TurboDOX_res3;
+    Uint32      TurboDOX_rx_pkts;
+    Uint32      TurboDOX_pkts_frwrd_to_next_hop;
+    Uint32      TurboDOX_pkts_frwrd_to_qos;
     Uint32      TurboDOX_res4;
     Uint32      TurboDOX_res5;
     Uint32      TurboDOX_res6;
@@ -1018,12 +1176,12 @@ typedef struct
 
 typedef struct
 {
-    Uint32      QoS_res1;
-    Uint32      QoS_res2;
-    Uint32      QoS_res3;
-    Uint32      QoS_res4;
-    Uint32      QoS_res5;
-    Uint32      QoS_res6;
+    Uint32      QoS_rx_pkts;
+    Uint32      QoS_pkts_forward_manually;
+    Uint32      QoS_pkts_forward_using_full_divert;
+    Uint32      QoS_pkts_forward_using_qda;
+    Uint32      QoS_dropped_pkts;
+    Uint32      QoS_empty_q_on_manual_forwarding;
     Uint32      QoS_res7;
     Uint32      QoS_res8;
 
@@ -1052,7 +1210,7 @@ typedef struct
     Uint32      Sequencer_pkts_frwrd_to_prefetcher;
     Uint32      Sequencer_pkts_frwrd_to_defaultQ;
     Uint32      Sequencer_pkts_discarded;
-    Uint32      Sequencer_res5;
+    Uint32      Sequencer_fifo_full;
     Uint32      Sequencer_res6;
     Uint32      Sequencer_res7;
     Uint32      Sequencer_res8;
@@ -1248,24 +1406,38 @@ extern AVALANCHE_PP_RET_e    avalanche_pp_vpid_set_flags        ( Uint8     vpid
 extern AVALANCHE_PP_RET_e    avalanche_pp_vpid_get_list         ( Uint8     parent_pid_handle,  Uint8 *     num_entries, AVALANCHE_PP_VPID_INFO_t **     vpid_list );
 extern AVALANCHE_PP_RET_e    avalanche_pp_vpid_get_info         ( Uint8     vpid_handle,                                 AVALANCHE_PP_VPID_INFO_t **     ptr_vpid );
 
+#ifdef CONFIG_WIFI_MESH_TUNNEL
+extern AVALANCHE_PP_RET_e    avalanche_pp_wifi_mesh_get_vpid_packet_header_size           ( AVALANCHE_PP_VPID_TYPE_e        vpid_type, AVALANCHE_PP_WIFI_MESH_HEADER_SIZE_e* headerSize);
+#endif
 /* Session Management API */
 extern AVALANCHE_PP_RET_e    avalanche_pp_session_create        ( AVALANCHE_PP_SESSION_INFO_t *  ptr_session, void * pkt_ptr );
 extern AVALANCHE_PP_RET_e    avalanche_pp_session_delete        ( Uint32    session_handle,     AVALANCHE_PP_SESSION_STATS_t *  ptr_session_stats );
 extern AVALANCHE_PP_RET_e    avalanche_pp_session_get_list      ( Uint8     vpid_handle,        PP_LIST_ID_e   list_id, Uint32 * num_entries, Uint32 * session_handle_list );
 extern AVALANCHE_PP_RET_e    avalanche_pp_session_get_info      ( Uint32    session_handle,     AVALANCHE_PP_SESSION_INFO_t**  ptr_session_info );
+extern AVALANCHE_PP_RET_e    avalanche_pp_session_set_timeout   (Uint8 timeoutSeconds);
 extern AVALANCHE_PP_RET_e    avalanche_pp_flush_sessions        ( Uint8     vpid_handle, PP_LIST_ID_e   list_id );
 
 extern AVALANCHE_PP_RET_e   avalanche_pp_session_list_execute      ( Uint8     vpid_handle, PP_LIST_ID_e   list_id,    AVALANCHE_EXEC_HOOK_FN_t   handler, Ptr  data );
 extern AVALANCHE_PP_RET_e   avalanche_pp_session_pre_action_bind   ( Uint8     vpid_handle,                            AVALANCHE_EXEC_HOOK_FN_t   handler, Ptr  data );
 extern AVALANCHE_PP_RET_e   avalanche_pp_session_post_action_bind  ( Uint8     vpid_handle,                            AVALANCHE_EXEC_HOOK_FN_t   handler, Ptr  data );
 
+#ifdef CONFIG_WIFI_MESH_TUNNEL
+extern AVALANCHE_PP_RET_e    avalanche_pp_sessions_delete_by_addr ( Uint8 mask, Uint8* srcMacAdr, Uint8* dstMacAdr, Uint8* rxMacAdr, Uint8* txMacAdr, Uint32* num_deleted_sessions);
+#endif
 /* Statistics API */
 extern AVALANCHE_PP_RET_e   avalanche_pp_get_stats_session   ( Uint32 session_handle,    AVALANCHE_PP_SESSION_STATS_t*    ptr_session_stats );
 extern AVALANCHE_PP_RET_e   avalanche_pp_get_stats_vpid      ( Uint8  vpid_handle,       AVALANCHE_PP_VPID_STATS_t*       ptr_vpid_stats );
 extern AVALANCHE_PP_RET_e   avalanche_pp_get_stats_global    ( AVALANCHE_PP_GLOBAL_STATS_t*     ptr_stats );
 
 
+#ifdef CONFIG_WIFI_MESH_TUNNEL
 
+#define SRC_MAC_ADDR_COMPARE       BIT0
+#define DST_MAC_ADDR_COMPARE       BIT1
+#define TX_MAC_ADDR_COMPARE        BIT2
+#define RX_MAC_ADDR_COMPARE        BIT3
+#define MAC_ADDR_SIZE              6
+#endif
 
 /* Event Handler Framework API */
 typedef enum
@@ -1343,8 +1515,10 @@ extern AVALANCHE_PP_RET_e    avalanche_pp_event_init(void);
 extern AVALANCHE_PP_RET_e    avalanche_pp_event_poll_timer_init( void );
 #endif
 
+#ifndef CONFIG_WIFI_MESH_TUNNEL
 extern AVALANCHE_PP_RET_e    avalanche_pp_session_tdox_capability_set( Uint32 session_handle, Bool     enable );
 extern AVALANCHE_PP_RET_e    avalanche_pp_session_tdox_capability_get( Uint32 session_handle, Bool *   enable );
+#endif
 
 extern AVALANCHE_PP_RET_e    avalanche_pp_version_get( AVALANCHE_PP_VERSION_t * version );
 extern AVALANCHE_PP_RET_e    avalanche_pp_set_mta_mac_address ( Uint8 * mtaAddress );
@@ -1366,7 +1540,7 @@ extern int avalanche_pp_set_ack_suppression(int enDis);
 
 typedef     Uint8     avalanche_pp_ackSupp_ioctl_param_t;
 typedef     Uint8     avalanche_pp_psm_ioctl_param_t;
-typedef     Uint32    avalanche_pp_dslite_ioctl_param_t;
+typedef     Uint32    avalanche_pp_frag_mode_ioctl_param_t;
 typedef     Uint8     avalanche_pp_mtaMacAddr_ioctl_param_t[6];
 
 typedef     struct
@@ -1437,7 +1611,7 @@ typedef     struct
 #define PP_DRIVER_SET_QOS_CLST_MAX_CREDIT           _IOWR (PP_DRIVER_MODULE_ID, 5, avalanche_pp_Qos_ioctl_params_t)
 #define PP_DRIVER_SET_QOS_QUEUE_MAX_CREDIT          _IOWR (PP_DRIVER_MODULE_ID, 6, avalanche_pp_Qos_ioctl_params_t)
 #define PP_DRIVER_SET_QOS_QUEUE_ITERATION_CREDIT    _IOWR (PP_DRIVER_MODULE_ID, 7, avalanche_pp_Qos_ioctl_params_t)
-#define PP_DRIVER_SET_DS_LITE_US_FRAG_IPV4          _IOWR (PP_DRIVER_MODULE_ID, 8, avalanche_pp_dslite_ioctl_param_t)
+#define PP_DRIVER_SET_FRAG_MODE                     _IOWR (PP_DRIVER_MODULE_ID, 8, avalanche_pp_frag_mode_ioctl_param_t)
 #define PP_DRIVER_SET_MTA_ADDR                      _IOWR (PP_DRIVER_MODULE_ID, 9, avalanche_pp_mtaMacAddr_ioctl_param_t)
 #define PP_DRIVER_KERNEL_POST_INIT                  _IO   (PP_DRIVER_MODULE_ID, 10)
 #define PP_DRIVER_SET_ACK_SUPP                      _IOWR (PP_DRIVER_MODULE_ID, 11, avalanche_pp_ackSupp_ioctl_param_t)
diff --git a/include/linux/avalanche/puma7/puma7_cppi_prv.h b/include/linux/avalanche/puma7/puma7_cppi_prv.h
index f219512..05af61f 100755
--- a/include/linux/avalanche/puma7/puma7_cppi_prv.h
+++ b/include/linux/avalanche/puma7/puma7_cppi_prv.h
@@ -133,9 +133,13 @@ typedef enum PAL_CPPI_PP_QMGR_LOCAL_Qs
 #define PAL_CPPI_PP_QMGR_G0_Q_STATS_BASE                            (IO_ADDRESS(0xF9130000))
 #define PAL_CPPI_PP_QMGR_GLOBAL_LINKING_RAM_BASE                    (0xF9140000)
 #ifdef CONFIG_MACH_PUMA7_FPGA
+#ifdef CONFIG_MACH_PUMA7_FPGA_PP
+#define PAL_CPPI_PP_QMGR_GLOBAL_LINKING_RAM_SIZE                    16*1024
+#else
 #define PAL_CPPI_PP_QMGR_GLOBAL_LINKING_RAM_SIZE                    512
+#endif
 #else
-#define PAL_CPPI_PP_QMGR_GLOBAL_LINKING_RAM_SIZE                    65536
+#define PAL_CPPI_PP_QMGR_GLOBAL_LINKING_RAM_SIZE                    ((64*1024)-1)
 #endif
 #define PAL_CPPI_PP_QMGR_GLOBAL_DEFAULT_BUFF_SIZE                   2048
 
@@ -164,10 +168,8 @@ typedef enum PAL_CPPI_PP_QMGR_G1_Qs
     PAL_CPPI_PP_QMGR_G1_TOTAL_Q_COUNT
 }PAL_CPPI_PP_QMGR_G1_Qs_e;
 
-#define PAL_CPPI_PP_QMGR_G1_QOS_Q_BASE              PAL_CPPI_PP_QMGR_G1_QOS_CLUSTER0_US_BE0_HI_Q_NUM
+#define PAL_CPPI_PP_QMGR_G1_QOS_Q_BASE              PAL_CPPI_PP_QMGR_G1_QOS_CLUSTER0_US_BE0_LOW_Q_NUM
 #define PAL_CPPI_PP_QMGR_G1_QOS_Q_LAST              PAL_CPPI_PP_QMGR_G1_QOS_Q255
-#define PAL_CPPI_PP_QMGR_G1_QOS_US_Q_BASE           PAL_CPPI_PP_QMGR_G1_QOS_CLUSTER0_US_BE0_HI_Q_NUM
-#define PAL_CPPI_PP_QMGR_G1_QOS_US_Q_LAST           PAL_CPPI_PP_QMGR_G1_QOS_CLUSTER15_US_BE15_LOW_Q_NUM
 
 /*
 +-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+
@@ -274,7 +276,8 @@ PAL_CPPI_MAC_US_QMGR_Qs_e;
 #define PAL_CPPI_MAC_US_PRE_PROC_MONOLITIC_BASE     (IO_ADDRESS(0xF3FA0000))
 #define PAL_CPPI_MAC_US_PRE_PROC_MONOLITIC_COUNT    64
 #define PAL_CPPI_MAC_US_TX_MONOLITIC_BASE           (IO_ADDRESS(0xF2864000))
-#define PAL_CPPI_MAC_US_TX_MONOLITIC_COUNT          32
+#define PAL_CPPI_MAC_US_TX_MONOLITIC_COUNT          24
+#define PAL_CPPI_MAC_US_DLS_MONOLITIC_COUNT          8
 #define PAL_CPPI_MAC_US_TX_EMB_BASE                 (IO_ADDRESS(0xF2740000))
 #define PAL_CPPI_MAC_US_TX_EMB_COUNT                3072
 
@@ -297,14 +300,15 @@ typedef enum PAL_CPPI_PP_QSMON_MGRs
     PAL_CPPI_PP_QSMON_MGR2,
     PAL_CPPI_PP_QSMON_MGR3,
     PAL_CPPI_PP_QSMON_MGR4,
+    PAL_CPPI_PP_BSMON_MGR,
     PAL_CPPI_PP_NUM_QSMON_MGRs
 }PAL_CPPI_PP_QSMON_MGRs_e;
 
 #define PAL_CPPI_QSMON_MAX_THREADS                  32
 #define PAL_CPPI_QSMON_THREADS_PER_DMA              6
-#define PAL_CPPI_QSMON_SHARED_QUEUES_THRESHOLD      (9 - 1)  /* 3 for DSGs, 5 for GMIIs, 1 for MoCA */
-#define PAL_CPPI_QSMON_DOCSIS_ONLY_THRESHOLD        (3 - 1)  /* 3 for DSGs */
-#define PAL_CPPI_QSMON_PRIVATE_THRESHOLD            (1 - 1)
+#define PAL_CPPI_QSMON_SHARED_QUEUES_THRESHOLD      (9)  /* 3 for DSGs, 5 for GMIIs, 1 for MoCA */
+#define PAL_CPPI_QSMON_DOCSIS_ONLY_THRESHOLD        (3)  /* 3 for DSGs */
+#define PAL_CPPI_QSMON_PRIVATE_THRESHOLD            (1)
 #define PAL_CPPI_QSMON_DIRECTION_UP                 0
 #define PAL_CPPI_QSMON_DIRECTION_DOWN               1
 
@@ -410,6 +414,9 @@ typedef enum PAL_CPPI_PP_QSMON_4_THREADs
     PAL_CPPI_PP_QSMON_4_THREAD_31_UNUSED,
 }PAL_CPPI_PP_QSMON_4_THREADs_e;
 
+#define PAL_CPPI_BSMON_CTRL_REGS_BASE               (IO_ADDRESS(0xF9188000))
+#define PAL_CPPI_BSMON_CONFIG_REGS_BASE             (IO_ADDRESS(0xF9188100))
+#define PAL_CPPI_BSMON_STATUS_REGS_BASE             (IO_ADDRESS(0xF9188200))
 /**********************************************************************************************************************
 
 ########  ########  ######   ######     ########  ########  ######   ####  #######  ##    ##  ######
@@ -443,22 +450,22 @@ typedef enum PAL_CPPI_PP_QSMON_4_THREADs
 
 typedef enum PAL_CPPI_PP_DESC_REGIONs
 {
+    PAL_CPPI_PP_RX_SHORT_NON_DOCSIS_INFRA_GLOBAL_DESC_REGION,           // 0
+    PAL_CPPI_PP_RX_LONG_RX_XL_DOCSIS_GLOBAL_DESC_REGION,                // 1
+    PAL_CPPI_PP_WIFI_GLOBAL_DESC_REGION,                                // 2
+    PAL_CPPI_PP_DESC_REGION3,                                           // 3
+    PAL_CPPI_PP_DESC_REGION4,                                           // 4
+    PAL_CPPI_PP_DESC_REGION5,                                           // 5
+    PAL_CPPI_PP_DESC_REGION6,                                           // 6
+    PAL_CPPI_PP_DESC_REGION7,                                           // 7
+    PAL_CPPI_PP_TEARDOWN_GLOBAL_DESC_REGION,                            // 8
+    PAL_CPPI_PP_VOICE_GLOBAL_DESC_REGION,                               // 9
     PAL_CPPI_PP_INTERNAL_EMB_GLOBAL_DESC_REGION,                        // 0
     PAL_CPPI_PP_FCC_MONOLITHIC_GLOBAL_DESC_REGION,                      // 1
     PAL_CPPI_PP_FCC_FORWARDING_GLOBAL_DESC_REGION,                      // 2
     PAL_CPPI_PP_FCC_STREAMING_GLOBAL_DESC_REGION,                       // 3
-    PAL_CPPI_PP_PACKET_RAM_GLOBAL_DESC_REGION,                          // 4
     PAL_CPPI_PP_US_FW_MONO_DESC_REGION,                                 // 5
-    PAL_CPPI_PP_RX_SHORT_NON_DOCSIS_INFRA_GLOBAL_DESC_REGION,           // 6
-    PAL_CPPI_PP_RX_LONG_RX_XL_DOCSIS_GLOBAL_DESC_REGION,                // 7
-    PAL_CPPI_PP_WIFI_GLOBAL_DESC_REGION,                                // 8
-    PAL_CPPI_PP_VOICE_GLOBAL_DESC_REGION,                               // 9
-    PAL_CPPI_PP_DESC_REGION10,                                          // 10
-    PAL_CPPI_PP_DESC_REGION11,                                          // 11
-    PAL_CPPI_PP_DESC_REGION12,                                          // 12
-    PAL_CPPI_PP_DESC_REGION13,                                          // 13
-    PAL_CPPI_PP_TEARDOWN_GLOBAL_DESC_REGION,                            // 14
-    PAL_CPPI_PP_DESC_REGION15,                                          // 15
+    PAL_CPPI_PP_PACKET_RAM_GLOBAL_DESC_REGION,                          // 15
 
     PAL_CPPI41_MAX_DESC_REGIONS
 }PAL_CPPI_PP_DESC_REGIONs_e;
@@ -469,16 +476,31 @@ typedef enum PAL_CPPI_PP_DESC_REGIONs
 #define PAL_CPPI_PP_QMGR_GLOBAL_DEFAULT_DESC_SIZE                                           64
 #define PAL_CPPI_PP_START_OF_PACKET_OFFSET                                                  128
 
-#define PAL_CPPI_PP_PACKET_RAM_SHARED_FD_BASE                                               (IO_ADDRESS(0xF906E000))
-#define PAL_CPPI_PP_PACKET_RAM_SHARED_FD_DESC_COUNT                                         1152
+#define PAL_CPPI_PP_PACKET_RAM_SHARED_FD_BASE                                               (IO_ADDRESS(0xF9060000))
+#ifdef CONFIG_MACH_PUMA7_FPGA
+#define PAL_CPPI_PP_PACKET_RAM_SHARED_FD_DESC_COUNT                                         96
+#else
+#define PAL_CPPI_PP_PACKET_RAM_SHARED_FD_DESC_COUNT                                         1088
+#endif
 
-#define PAL_CPPI_PP_RX_LOW_SHORT_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                        296
-#define PAL_CPPI_PP_RX_LOW_SHORT_SHARED_DDR_EMB_FD_DESC_COUNT                               (12 * 1024)
-#define PAL_CPPI_PP_RX_LOW_LONG_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                         38
-#define PAL_CPPI_PP_RX_LOW_LONG_SHARED_DDR_EMB_FD_DESC_COUNT                                (12 * 1024)
+#ifdef CONFIG_MACH_PUMA7_FPGA
+#define PAL_CPPI_PP_RX_LOW_SHORT_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                        0
+#define PAL_CPPI_PP_RX_LOW_SHORT_SHARED_DDR_EMB_FD_DESC_COUNT                               64
+#define PAL_CPPI_PP_RX_LOW_LONG_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                         0
+#define PAL_CPPI_PP_RX_LOW_LONG_SHARED_DDR_EMB_FD_DESC_COUNT                                64
+#else
+#define PAL_CPPI_PP_RX_LOW_SHORT_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                        0
+#define PAL_CPPI_PP_RX_LOW_SHORT_SHARED_DDR_EMB_FD_DESC_COUNT                               (1 * 1024)
+#define PAL_CPPI_PP_RX_LOW_LONG_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                         0
+#define PAL_CPPI_PP_RX_LOW_LONG_SHARED_DDR_EMB_FD_DESC_COUNT                                (0.5 * 1024)
+#endif
 #define PAL_CPPI_PP_RX_LOW_XLONG_SHARED_DDR_EMB_FD_DESC_COUNT                               64
 
+#ifdef CONFIG_MACH_PUMA7_FPGA
+#define PAL_CPPI_PP_SHARED_LOW_INFRA_HOST_FD_DESC_COUNT                                     64
+#else
 #define PAL_CPPI_PP_SHARED_LOW_INFRA_HOST_FD_DESC_COUNT                                     512
+#endif
 
 
 #define PAL_CPPI_PP_DOCSIS_LOW_INFRA_HOST_FD_DESC_COUNT                                     128
@@ -486,12 +508,32 @@ typedef enum PAL_CPPI_PP_DESC_REGIONs
 #define PAL_CPPI_PP_DOCSIS_RX_MGMT_HOST_FD_DESC_COUNT                                       64
 #define PAL_CPPI_PP_DOCSIS_TX_MGMT_HOST_FD_DESC_COUNT                                       64
 
-#define PAL_CPPI_PP_DOCSIS_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                168
-#define PAL_CPPI_PP_DOCSIS_RX_LOW_SHORT_PRIVATE_DESC_PACKET_RAM_BUFF_DDR_EMB_FD_DESC_COUNT  512
-#define PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
-#define PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_DESC_PACKET_RAM_BUFF_DDR_EMB_FD_DESC_COUNT   512
+#ifdef CONFIG_MACH_PUMA7_FPGA
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                0
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_SHORT_PRIVATE_DESC_PACKET_RAM_BUFF_DDR_EMB_FD_DESC_COUNT  0
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 0
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_DESC_PACKET_RAM_BUFF_DDR_EMB_FD_DESC_COUNT   0
+#define PAL_CPPI_PP_DOCSIS_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#else
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                0
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_SHORT_PRIVATE_DESC_PACKET_RAM_BUFF_DDR_EMB_FD_DESC_COUNT  0
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 0
+#define PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_DESC_PACKET_RAM_BUFF_DDR_EMB_FD_DESC_COUNT   0
 #define PAL_CPPI_PP_DOCSIS_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            256
+#endif
 
+#ifdef CONFIG_MACH_PUMA7_FPGA
+#define PAL_CPPI_PP_FCC_MONOLITHIC_FD_BASE                                                  (IO_ADDRESS(0xF3E40900))
+#define PAL_CPPI_PP_FCC_MONOLITHIC_FD_DESC_COUNT                                            64
+#define PAL_CPPI_PP_FCC_MONOLITHIC_FD_DESC_SIZE                                             256
+#define PAL_CPPI_PP_FCC_FORWARDING_FD_BASE                                                  (IO_ADDRESS(0xF3E48900))
+#define PAL_CPPI_PP_FCC_FORWARDING_FD_DESC_COUNT                                            64
+#define PAL_CPPI_PP_FCC_FORWARDING_FD_DESC_SIZE                                             64
+#define PAL_CPPI_PP_FCC_STREAMING_FD_BASE                                                   (IO_ADDRESS(0xF3E49900))
+#define PAL_CPPI_PP_FCC_STREAMING_FD_DESC_COUNT                                             64
+#define PAL_CPPI_PP_FCC_STREAMING_FD_DESC_SIZE                                              32
+#define PAL_CPPI_PP_FCC_TX_CH_COUNT                                                         8
+#else
 #define PAL_CPPI_PP_FCC_MONOLITHIC_FD_BASE                                                  (IO_ADDRESS(0xF3E40900))
 #define PAL_CPPI_PP_FCC_MONOLITHIC_FD_DESC_COUNT                                            128
 #define PAL_CPPI_PP_FCC_MONOLITHIC_FD_DESC_SIZE                                             256
@@ -502,6 +544,7 @@ typedef enum PAL_CPPI_PP_DESC_REGIONs
 #define PAL_CPPI_PP_FCC_STREAMING_FD_DESC_COUNT                                             256
 #define PAL_CPPI_PP_FCC_STREAMING_FD_DESC_SIZE                                              32
 #define PAL_CPPI_PP_FCC_TX_CH_COUNT                                                         8
+#endif
 
 #define PAL_CPPI_PP_US_FW_MONO_FD_BASE                                                      (IO_ADDRESS(0xF3FA0000))
 #define PAL_CPPI_PP_US_FW_MONO_FD_DESC_COUNT                                                64
@@ -514,49 +557,125 @@ typedef enum PAL_CPPI_PP_DESC_REGIONs
 #define PAL_CPPI_PP_SGMII1_HI_INFRA_HOST_FD_DESC_COUNT                                      32
 #define PAL_CPPI_PP_WiFi_HI_INFRA_HOST_FD_DESC_COUNT                                        32
 
-#define PAL_CPPI_PP_MoCA_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                  16
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_MoCA_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                  64
 #define PAL_CPPI_PP_MoCA_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                         64
-#define PAL_CPPI_PP_MoCA_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                   6
+#define PAL_CPPI_PP_MoCA_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                   8
 #define PAL_CPPI_PP_MoCA_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                          128
+#else
+#define PAL_CPPI_PP_MoCA_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                  4
+#define PAL_CPPI_PP_MoCA_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                         2
+#define PAL_CPPI_PP_MoCA_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                   4
+#define PAL_CPPI_PP_MoCA_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                          2
+#endif
 
-#define PAL_CPPI_PP_ATOM_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                  16
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_ATOM_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                  64
+#define PAL_CPPI_PP_ATOM_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                         64
+#define PAL_CPPI_PP_ATOM_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                   8
+#define PAL_CPPI_PP_ATOM_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                          128
+#define PAL_CPPI_PP_ATOM_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                              64
+#else
+#define PAL_CPPI_PP_ATOM_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                  4
 #define PAL_CPPI_PP_ATOM_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                         64
-#define PAL_CPPI_PP_ATOM_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                   6
+#define PAL_CPPI_PP_ATOM_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                   4
 #define PAL_CPPI_PP_ATOM_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                          128
 #define PAL_CPPI_PP_ATOM_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                              64
+#endif
 
-#define PAL_CPPI_PP_RGMII0_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                16
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_RGMII0_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                64
+#define PAL_CPPI_PP_RGMII0_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
+#define PAL_CPPI_PP_RGMII0_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 8
+#define PAL_CPPI_PP_RGMII0_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
+#define PAL_CPPI_PP_RGMII0_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#else
+#define PAL_CPPI_PP_RGMII0_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                12
 #define PAL_CPPI_PP_RGMII0_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
 #define PAL_CPPI_PP_RGMII0_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
 #define PAL_CPPI_PP_RGMII0_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
 #define PAL_CPPI_PP_RGMII0_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#endif
 
-#define PAL_CPPI_PP_RGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                16
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_RGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                32
+#define PAL_CPPI_PP_RGMII1_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
+#define PAL_CPPI_PP_RGMII1_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
+#define PAL_CPPI_PP_RGMII1_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
+#define PAL_CPPI_PP_RGMII1_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#else
+#define PAL_CPPI_PP_RGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                12
 #define PAL_CPPI_PP_RGMII1_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
 #define PAL_CPPI_PP_RGMII1_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
 #define PAL_CPPI_PP_RGMII1_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
 #define PAL_CPPI_PP_RGMII1_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#endif
 
-#define PAL_CPPI_PP_SGMII0_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                16
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_SGMII0_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                256
+#define PAL_CPPI_PP_SGMII0_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
+#define PAL_CPPI_PP_SGMII0_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 28
+#define PAL_CPPI_PP_SGMII0_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
+#define PAL_CPPI_PP_SGMII0_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#else
+#define PAL_CPPI_PP_SGMII0_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                28
 #define PAL_CPPI_PP_SGMII0_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
 #define PAL_CPPI_PP_SGMII0_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
 #define PAL_CPPI_PP_SGMII0_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
 #define PAL_CPPI_PP_SGMII0_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#endif
 
-#define PAL_CPPI_PP_SGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                16
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_SGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                32
+#define PAL_CPPI_PP_SGMII1_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
+#define PAL_CPPI_PP_SGMII1_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
+#define PAL_CPPI_PP_SGMII1_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
+#define PAL_CPPI_PP_SGMII1_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#else
+#define PAL_CPPI_PP_SGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                4
 #define PAL_CPPI_PP_SGMII1_RX_LOW_SHORT_PRIVATE_DDR_EMB_FD_DESC_COUNT                       64
 #define PAL_CPPI_PP_SGMII1_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 6
 #define PAL_CPPI_PP_SGMII1_RX_LOW_LONG_PRIVATE_DDR_EMB_FD_DESC_COUNT                        128
 #define PAL_CPPI_PP_SGMII1_RX_HIGH_PRIVATE_DDR_EMB_FD_DESC_COUNT                            64
+#endif
 
+#ifdef CONFIG_MACH_PUMA7_BOARD
 #define PAL_CPPI_PP_WiFi_RX_LOW_EMB_FD_DESC_COUNT                                           (4 * 1024)
 #define PAL_CPPI_PP_WiFi_RX_HIGH_EMB_FD_DESC_COUNT                                          64
+#else
+#define PAL_CPPI_PP_WiFi_RX_LOW_EMB_FD_DESC_COUNT                                           64
+#define PAL_CPPI_PP_WiFi_RX_HIGH_EMB_FD_DESC_COUNT                                          64
+#endif
 
+#ifdef CONFIG_MACH_PUMA7_BOARD
 #define PAL_CPPI_PP_HOST2PP_LOW_HOST_FD_DESC_COUNT                                          512
 #define PAL_CPPI_PP_HOST2PP_HI_HOST_FD_DESC_COUNT                                           64
 #define PAL_CPPI_PP_HOST2PP_LOW_INFRA_EMB_FD_DESC_COUNT                                     512
 #define PAL_CPPI_PP_HOST2PP_HI_INFRA_EMB_FD_DESC_COUNT                                      64
+#else
+#define PAL_CPPI_PP_HOST2PP_LOW_HOST_FD_DESC_COUNT                                          64
+#define PAL_CPPI_PP_HOST2PP_HI_HOST_FD_DESC_COUNT                                           64
+#define PAL_CPPI_PP_HOST2PP_LOW_INFRA_EMB_FD_DESC_COUNT                                     64
+#define PAL_CPPI_PP_HOST2PP_HI_INFRA_EMB_FD_DESC_COUNT                                      64
+#endif
 
+#ifdef CONFIG_MACH_PUMA7_BOARD
+#define PAL_CPPI_PP_NP2APP_HOST_FD_DESC_COUNT                                               256
+#define PAL_CPPI_PP_NP2APP_INFRA_PPINFO_HOST_FD_DESC_COUNT                                  128
+#define PAL_CPPI_PP_NP2APP_INFRA_DATA_HOST_FD_DESC_COUNT                                    128
+#define PAL_CPPI_PP_APP2NP_HOST_FD_DESC_COUNT                                               256
+#define PAL_CPPI_PP_APP2NP_INFRA_PPINFO_HOST_FD_DESC_COUNT                                  128
+#define PAL_CPPI_PP_APP2NP_INFRA_DATA_HOST_FD_DESC_COUNT                                    128
+#else
+#define PAL_CPPI_PP_NP2APP_HOST_FD_DESC_COUNT                                               64
+#define PAL_CPPI_PP_NP2APP_INFRA_PPINFO_HOST_FD_DESC_COUNT                                  32
+#define PAL_CPPI_PP_NP2APP_INFRA_DATA_HOST_FD_DESC_COUNT                                    32
+#define PAL_CPPI_PP_APP2NP_HOST_FD_DESC_COUNT                                               64
+#define PAL_CPPI_PP_APP2NP_INFRA_PPINFO_HOST_FD_DESC_COUNT                                  32
+#define PAL_CPPI_PP_APP2NP_INFRA_DATA_HOST_FD_DESC_COUNT                                    32
+#endif
+#define PAL_CPPI_PP_VOICE_DSP_RX_EMB_FD_DESC_COUNT                                          128
+#define PAL_CPPI_PP_VOICE_INFRA_RX_EMB_FD_DESC_COUNT                                        128
 
 
 #define PAL_CPPI_DSG_FD_EMB_DESC_REGION             0
@@ -671,7 +790,7 @@ typedef enum PAL_CPPI_PP_BUFFER_POOLs
                                                                     PAL_CPPI_PP_SGMII1_RX_LOW_SHORT_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT
 #define PAL_CPPI_PP_PACKET_RAM_512B_BUFFER_SIZE                     512
 #define PAL_CPPI_PP_PACKET_RAM_512B_BUFFER_REF_CNT                  0
-#define PAL_CPPI_PP_PACKET_RAM_512B_BUFFER_BASE                     (IO_ADDRESS(0xF9028000))
+#define PAL_CPPI_PP_PACKET_RAM_512B_BUFFER_BASE                     0xF9020000
 
 #define PAL_CPPI_PP_PACKET_RAM_2KB_BUFFER_COUNT                     PAL_CPPI_PP_DOCSIS_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT                 +   \
                                                                     PAL_CPPI_PP_RX_LOW_LONG_SHARED_PACKET_RAM_EMB_FD_DESC_COUNT                         +   \
@@ -683,7 +802,7 @@ typedef enum PAL_CPPI_PP_BUFFER_POOLs
                                                                     PAL_CPPI_PP_SGMII1_RX_LOW_LONG_PRIVATE_PACKET_RAM_EMB_FD_DESC_COUNT
 #define PAL_CPPI_PP_PACKET_RAM_2KB_BUFFER_SIZE                      (2 * 1024)
 #define PAL_CPPI_PP_PACKET_RAM_2KB_BUFFER_REF_CNT                   0
-#define PAL_CPPI_PP_PACKET_RAM_2KB_BUFFER_BASE                      (IO_ADDRESS(0xF9000000))
+#define PAL_CPPI_PP_PACKET_RAM_2KB_BUFFER_BASE                      0xF9000000
 
 #define PAL_CPPI_PP_VOICE_DSP_BUFFER_COUNT                          512
 #define PAL_CPPI_PP_VOICE_DSP_BUFFER_SIZE                           1024
@@ -749,7 +868,11 @@ typedef enum PAL_CPPI_MAC_US_BUFFER_POOLs
 PAL_CPPI_MAC_US_BUFFER_POOLs_e;
 
 
-#define PAL_CPPI_MAC_US_TX_EMB_2K_BUFFER_COUNT                  (3 * 1024)
+#ifdef CONFIG_MACH_PUMA7_FPGA_US
+#define PAL_CPPI_MAC_US_TX_EMB_2K_BUFFER_COUNT                  256
+#else
+#define PAL_CPPI_MAC_US_TX_EMB_2K_BUFFER_COUNT                  (2 * 1024)
+#endif
 #define PAL_CPPI_MAC_US_TX_EMB_2K_BUFFER_SIZE                   2048
 #define PAL_CPPI_MAC_US_TX_EMB_2K_BUFFER_REF_CNT                1
 
@@ -823,11 +946,11 @@ typedef enum PAL_CPPI_PP_DMA00_OFDM0_RX_CHANNELS
     PAL_CPPI_PP_DMA00_OFDM0_RX_CH_LOW_4KB_SHARED_DDR,
     PAL_CPPI_PP_DMA00_OFDM0_RX_CH_HIGH_DDR,
     PAL_CPPI_PP_DMA00_OFDM0_RX_CH_MGMT_DDR,
+    PAL_CPPI_PP_DMA00_OFDM0_RX_CH_PLC_EM,       /* PLC Energy Management */
     PAL_CPPI_PP_DMA00_OFDM0_RX_CH_FCC_DDR,
-    PAL_CPPI_PP_DMA00_OFDM0_RX_CH_12,
     PAL_CPPI_PP_DMA00_OFDM0_RX_CH_13,
     PAL_CPPI_PP_DMA00_OFDM0_RX_CH_14,
-    PAL_CPPI_PP_DMA00_OFDM0_RX_CH_PLC,
+    PAL_CPPI_PP_DMA00_OFDM0_RX_CH_15,
     PAL_CPPI_PP_DMA00_OFDM0_RX_CHANNELS_NUM
 } PAL_CPPI_PP_DMA00_OFDM0_RX_CHANNELS_e;
 
@@ -849,18 +972,18 @@ typedef enum PAL_CPPI_PP_DMA01_OFDM1_RX_CHANNELS
     PAL_CPPI_PP_DMA01_OFDM1_RX_CH_LOW_4KB_SHARED_DDR,
     PAL_CPPI_PP_DMA01_OFDM1_RX_CH_HIGH_DDR,
     PAL_CPPI_PP_DMA01_OFDM1_RX_CH_MGMT_DDR,
+    PAL_CPPI_PP_DMA00_OFDM1_RX_CH_PLC_EM,       /* PLC Energy Management */
     PAL_CPPI_PP_DMA01_OFDM1_RX_CH_FCC_DDR,
-    PAL_CPPI_PP_DMA01_OFDM1_RX_CH_12,
     PAL_CPPI_PP_DMA01_OFDM1_RX_CH_13,
     PAL_CPPI_PP_DMA01_OFDM1_RX_CH_14,
-    PAL_CPPI_PP_DMA01_OFDM1_RX_CH_PLC,
+    PAL_CPPI_PP_DMA01_OFDM1_RX_CH_15,
     PAL_CPPI_PP_DMA01_OFDM1_RX_CHANNELS_NUM
 } PAL_CPPI_PP_DMA01_OFDM1_RX_CHANNELS_e;
 
 // PAL_CPPI_PP_DMA02_SC_QAM_RX
 #define PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_CFG_BASE         (IO_ADDRESS(0xF3904000))
-#define PAL_CPPI_PP_DMA02_SC_QAM_RX_GLOBAL_CTRL_BASE    (IO_ADDRESS(0xF3904000))
-#define PAL_CPPI_PP_DMA02_SC_QAM_RX_SCHEDULER_BASE      (IO_ADDRESS(0xF3904020))
+#define PAL_CPPI_PP_DMA02_SC_QAM_RX_GLOBAL_CTRL_BASE    (IO_ADDRESS(0xF3905000))
+#define PAL_CPPI_PP_DMA02_SC_QAM_RX_SCHEDULER_BASE      (IO_ADDRESS(0xF3905020))
 #define PAL_CPPI_PP_DMA02_SC_QAM_RX_RAL_CFG_BASE        (IO_ADDRESS(0xF3940020))
 typedef enum PAL_CPPI_PP_DMA02_SC_QAM_RX_CHANNELS
 {
@@ -875,8 +998,8 @@ typedef enum PAL_CPPI_PP_DMA02_SC_QAM_RX_CHANNELS
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_LOW_4KB_SHARED_DDR,
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_HIGH_DDR,
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_MGMT_DDR,
+    PAL_CPPI_PP_DMA00_SC_QAM_RX_CH_PLC_EM,      /* to be align with OFDM DMAs */
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_FCC_DDR,
-    PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_12,
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_13,
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_14,
     PAL_CPPI_PP_DMA02_SC_QAM_RX_CH_15,
@@ -1142,8 +1265,8 @@ typedef enum PAL_CPPI_PP_DMA10_INFRA_RX_CHANNELS
     PAL_CPPI_PP_DMA10_HOST2PP_LOW_INFRA_RX_CH,
     PAL_CPPI_PP_DMA10_HOST2PP_HIGH_INFRA_RX_CH,
     PAL_CPPI_PP_DMA10_VOICE_DSP_INFRA_RX_CH,
-    PAL_CPPI_PP_DMA10_INFRA_RX_CH_18,
-    PAL_CPPI_PP_DMA10_INFRA_RX_CH_19,
+    PAL_CPPI_PP_DMA10_NP2APP_INFRA_RX_CH,
+    PAL_CPPI_PP_DMA10_APP2NP_INFRA_RX_CH,
     PAL_CPPI_PP_DMA10_INFRA_RX_CH_20,
     PAL_CPPI_PP_DMA10_INFRA_RX_CH_21,
     PAL_CPPI_PP_DMA10_INFRA_RX_CH_22,
@@ -1171,8 +1294,8 @@ typedef enum PAL_CPPI_PP_DMA10_INFRA_TX_CHANNELS
     PAL_CPPI_PP_DMA10_HOST2PP_LOW_INFRA_TX_CH,
     PAL_CPPI_PP_DMA10_HOST2PP_HIGH_INFRA_TX_CH,
     PAL_CPPI_PP_DMA10_VOICE_DSP_INFRA_TX_CH,
-    PAL_CPPI_PP_DMA10_INFRA_TX_CH_18,
-    PAL_CPPI_PP_DMA10_INFRA_TX_CH_19,
+    PAL_CPPI_PP_DMA10_NP2APP_INFRA_TX_CH,
+    PAL_CPPI_PP_DMA10_APP2NP_INFRA_TX_CH,
     PAL_CPPI_PP_DMA10_INFRA_TX_CH_20,
     PAL_CPPI_PP_DMA10_INFRA_TX_CH_21,
     PAL_CPPI_PP_DMA10_INFRA_TX_CH_22,
@@ -1362,7 +1485,7 @@ typedef enum PAL_CPPI_DSG_DMA_BLOCKS
 
 }PAL_CPPI_DSG_DMA_BLOCKS_e;
 
-#define PAL_CPPI_DMA_NUM_TO_QMGR_NUM(dmaNum)        ((dmaNum) <= PAL_CPPI_SC_QAM0_RX_DMA ? (dmaNum) : (dmaNum) - PAL_CPPI_OFDM0_TX_DMA)
+#define PAL_CPPI_DMA_NUM_TO_QMGR_NUM(dmaNum)        0
 
 #define PAL_CPPI_DSG_NUM_TOTAL_CHAN                 32
 
@@ -1501,8 +1624,8 @@ typedef enum PAL_CPPI_PP_ACCUMULATOR_INTD0_CHANNELS
     PAL_CPPI_PP_RESERVED_INTD0_ACC_CH_NUM_25,                                                                       // 25
     PAL_CPPI_PP_RESERVED_INTD0_ACC_CH_NUM_26,                                                                       // 26
     PAL_CPPI_PP_RESERVED_INTD0_ACC_CH_NUM_27,                                                                       // 27
-    PAL_CPPI_PP_WIFI_RX_LOW_INTD0_ACC_CH_NUM,                                                                       // 28
-    PAL_CPPI_PP_WIFI_RX_HIGH_INTD0_ACC_CH_NUM,                                                                      // 29
+    PAL_CPPI_PP_VOICE_RX_INTD0_ACC_CH_NUM,                                                                         // 28
+    PAL_CPPI_PP_RESERVED_INTD0_ACC_CH_NUM_29,                                                                       // 29
     PAL_CPPI_PP_RESERVED_INTD0_ACC_CH_NUM_30,                                                                       // 30
     PAL_CPPI_PP_RESERVED_INTD0_ACC_CH_NUM_31,                                                                       // 31
     PAL_CPPI_PP_INTD0_ACCUMULATOR_MAX_CHANNELS
@@ -1518,10 +1641,10 @@ typedef enum PAL_CPPI_PP_ACCUMULATOR_INTD1_CHANNELS
     PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_5,                                                                        // 5
     PAL_CPPI_PP_WiFi_RX_LOW_INTD1_ACC_CH_NUM,                                                                       // 6
     PAL_CPPI_PP_WiFi_RX_HIGH_INTD1_ACC_CH_NUM,                                                                      // 7
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_8,                                                                        // 8
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_9,                                                                        // 9
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_10,                                                                       // 10
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_11,                                                                       // 11
+    PAL_CPPI_PP_NP2APP_RX_INTD1_ACC_CH_NUM,                                                                         // 8
+    PAL_CPPI_PP_NP2APP_TX_COMPLETE_INTD1_ACC_CH_NUM,                                                                // 9
+    PAL_CPPI_PP_APP2NP_RX_INTD1_ACC_CH_NUM,                                                                         // 10
+    PAL_CPPI_PP_APP2NP_TX_COMPLETE_INTD1_ACC_CH_NUM,                                                                // 11
     PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_12,                                                                       // 12
     PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_13,                                                                       // 13
     PAL_CPPI_PP_RESERVED_INTD1_ACC_CH_NUM_14,                                                                       // 14
@@ -1551,20 +1674,21 @@ typedef enum PAL_CPPI_PP_ACCUMULATOR_INTD0_INTERRUPT_VECTORS
     PAL_CPPI_PP_DOCSIS_RX_MGMT_INTD0_ACC_INTV_NUM,                                                                  // 12
     PAL_CPPI_PP_DOCSIS_RX_LOW_INTD0_ACC_INTV_NUM,                                                                   // 13
     PAL_CPPI_PP_DOCSIS_RX_HIGH_INTD0_ACC_INTV_NUM,                                                                  // 14
-    PAL_CPPI_PP_VOICE_RX_ACC_INTD0_INTV_NUM,                                                                        // 15
+    PAL_CPPI_PP_VOICE_RX_INTD0_INTV_NUM,                                                                            // 15
     PAL_CPPI_PP_ACCUMULATOR_INTD0_MAX_INTERRUPT_VECTORS
 }PAL_CPPI_PP_ACCUMULATOR_INTERRUPT_VECTORS_e;
 
+#define PAL_CPPI41_GBE_ACC_INTV_NUM(devInstance, pri)       (PAL_CPPI_PP_SGMII0_LOW_RX_INTD0_ACC_INTV_NUM + ((devInstance)*2) + (pri))
 typedef enum PAL_CPPI_PP_ACCUMULATOR_INTD1_INTERRUPT_VECTORS
 {
     PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_0,                                                                      // 0
     PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_1,                                                                      // 1
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_2,                                                                      // 2
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_3,                                                                      // 3
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_4,                                                                      // 4
-    PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_5,                                                                      // 5
     PAL_CPPI_PP_WiFi_RX_LOW_INTD1_ACC_INTV_NUM,                                                                     // 6
     PAL_CPPI_PP_WiFi_RX_HIGH_INTD1_ACC_INTV_NUM,                                                                    // 7
+    PAL_CPPI_PP_NP2APP_RX_INTD1_ACC_INTV_NUM,                                                                       // 4
+    PAL_CPPI_PP_NP2APP_TX_COMPLETE_INTD1_ACC_INTV_NUM,                                                              // 5
+    PAL_CPPI_PP_APP2NP_RX_INTD1_ACC_INTV_NUM,                                                                       // 6
+    PAL_CPPI_PP_APP2NP_TX_COMPLETE_INTD1_ACC_INTV_NUM,                                                              // 7
     PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_8,                                                                      // 8
     PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_9,                                                                      // 9
     PAL_CPPI_PP_RESERVED_INTD1_ACC_INTV_NUM_10,                                                                     // 10
@@ -1687,7 +1811,11 @@ typedef enum PAL_CPPI_PP_SOURCE_PORTS
 #define PAL_CPPI_PP_DOCSIS_RX_SOURCE_PORTS_COUNT                                (PAL_CPPI_PP_SC_QAM_RX_SOURCE_PORT - PAL_CPPI_PP_OFDM0_RX_SOURCE_PORT + 1)
 #define PAL_CPPI_PP_DOCSIS_RX_SOURCE_PORT(dsg)                                  (PAL_CPPI_PP_OFDM0_RX_SOURCE_PORT + (dsg))
 
+#ifdef CONFIG_MACH_PUMA7_FPGA_US
+#define PAL_CPPI_PP_DOCSIS_TX_DMA_CH_COUNT                          (PAL_CPPI_PP_DMA12_OFDM0_TX_QAM_0_3_TX_CHANNELS_NUM)
+#else
 #define PAL_CPPI_PP_DOCSIS_TX_DMA_CH_COUNT                          (PAL_CPPI_PP_DMA12_OFDM0_TX_QAM_0_3_TX_CHANNELS_NUM + PAL_CPPI_PP_DMA13_OFDM1_TX_QAM_4_7_TX_CHANNELS_NUM)
+#endif
 #define PAL_CPPI_PP_DOCSIS_TX_DMA_CH_NUM(ch)                        (((ch) <  PAL_CPPI_PP_DMA12_OFDM0_TX_QAM_0_3_TX_CHANNELS_NUM)? (ch):(ch)-PAL_CPPI_PP_DMA12_OFDM0_TX_QAM_0_3_TX_CHANNELS_NUM)
 #define PAL_CPPI_PP_DOCSIS_TX_DMA_BLOCK(ch)                         (((ch) <  PAL_CPPI_PP_DMA12_OFDM0_TX_QAM_0_3_TX_CHANNELS_NUM)? PAL_CPPI_PP_DMA12_OFDM0_TX_QAM_0_3_TX : PAL_CPPI_PP_DMA13_OFDM1_TX_QAM_4_7_TX )
 
@@ -1701,7 +1829,7 @@ typedef enum PAL_CPPI_PP_SOURCE_PORTS
 #define PAL_CPPI_PP_HOST2PP_INFRA_EMB_FD_Q_NUM(pri)                             (PAL_CPPI_PP_QMGR_G2_HOST2PP_INFRA_LOW_EMB_FD_Q_NUM + (pri))
 #define PAL_CPPI_PP_HOST2PP_INFRA_DMA_CH_COUNT                                  (PAL_CPPI_PP_DMA10_HOST2PP_HIGH_INFRA_RX_CH - PAL_CPPI_PP_DMA10_HOST2PP_LOW_INFRA_RX_CH + 1)
 #define PAL_CPPI_PP_HOST2PP_INFRA_DMA_CH_NUM(ch)                                (PAL_CPPI_PP_DMA10_HOST2PP_LOW_INFRA_RX_CH + (ch))
-#define PAL_CPPI_PP_HOS2PPT_TX_COMPLETE_Q_NUM(pri)                              (PAL_CPPI_PP_QMGR_G2_HOS2PPT_LOW_TX_COMPLETE_Q_NUM + (pri))
+#define PAL_CPPI_PP_HOST2PP_TX_COMPLETE_Q_NUM(pri)                              (PAL_CPPI_PP_QMGR_G2_HOST2PP_LOW_TX_COMPLETE_Q_NUM + (pri))
 #define PAL_CPPI_PP_HOST2PP_HOST_FD_Q_NUM(pri)                                  (PAL_CPPI_PP_QMGR_G2_HOST2PP_LOW_HOST_FD_Q_NUM + (pri))
 #define PAL_CPPI_PP_HOST2PP_TX_COMPLETE_ACC_CH_NUM(pri)                         (PAL_CPPI_PP_HOST2PP_TX_COMPLETE_INTD0_ACC_CH_BASE + (pri))
 #define PAL_CPPI_PP_HOST2PP_TX_COMPLETE_ACC_CH_COUNT                            (PAL_CPPI_PP_HOST2PP_TX_COMPLETE_INTD0_ACC_CH_LAST - PAL_CPPI_PP_HOST2PP_TX_COMPLETE_INTD0_ACC_CH_BASE + 1)
@@ -1713,6 +1841,20 @@ typedef enum PAL_CPPI_PP_SOURCE_PORTS
 #endif
 #define PAL_CPPI_PP_TEARDOWN_FD_DESC_SIZE                                       32
 
+#define PAL_CPPI41_SR_GBE_INFRA_FD_HOST_DESC_COUNT                  512
+#define PAL_CPPI41_SR_GBE_INFRA_FD_HOST_BUFFER_SIZE                 1600
+#define PAL_CPPI41_SR_GBE_HOST_RX_Q_BASE                            20
+#define PAL_CPPI41_SR_DMA_FD_TEARDOWN_Q_NUM                         PAL_CPPI_PP_QMGR_G2_TEARDOWN_FD_Q_NUM
+#define PAL_CPPI_GBE_INFRA_DMA_CH_COUNT                             2
+#define PAL_CPPI41_SR_GBE_TX_DATA_Q_COUNT                           1
+#define PAL_CPPI41_SR_GBE_QOS_Q_PRIORITIES_COUNT                    4
+#define PAL_CPPI41_SR_GBE_QOS_Q_PRIORITY_HIGH                       3
+#define PAL_CPPI41_SR_GBE_QOS_Q_PRIORITY_MEDHIGH                    2
+#define PAL_CPPI41_SR_GBE_QOS_Q_PRIORITY_MEDLOW                     1
+#define PAL_CPPI41_SR_GBE_QOS_Q_PRIORITY_LOW                        0
+#define PAL_CPPI41_SR_HOST_TO_PP_Q_COUNT                            PAL_CPPI_PP_HOST2PP_Q_COUNT
+#define PAL_CPPI_PP_VOICE_DSP_C55_EMB_BD_COUNT                      256
+#define PAL_CPPI41_VOICE_DSP_C55_EMB_BD_SIZE                        PAL_CPPI_PP_QMGR_GLOBAL_DEFAULT_DESC_SIZE
 
 #if 0
 
-- 
1.7.9.5

