From 6c8008d6af35210f7957859d8a360e35754908e2 Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Wed, 16 Sep 2015 17:07:43 -0700
Subject: [PATCH] Reduce debugging, improve support for eMMC2 and SD

Disables most of the MMC debugging we had added.
Alters forced power-on in mmc_rescan to only apply to hosts that support
HW_MUTEX so we don't do the same thing to the second eMMC host and SD
card host.
---
 drivers/mmc/core/core.c   |   40 ++++++++++++++++++++++++++++++----------
 drivers/mmc/pm.h          |    1 +
 include/linux/mmc/sdhci.h |    3 ---
 3 files changed, 31 insertions(+), 13 deletions(-)

diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index 7c1921e..204b024 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -2649,14 +2649,27 @@ void mmc_rescan(struct work_struct *work)
 
 	mmc_claim_host(host);
 
-    printk(KERN_WARNING "DBG: %s():%d Disabling HW Mutex locking.\n", __FUNCTION__, __LINE__);
-    host->caps2 |= MMC_CAP2_DISABLE_HW_MUTEX_LOCK;
-    printk(KERN_WARNING "DBG: %s():%d Power on- emmc before freq rescan\n", __FUNCTION__, __LINE__);
-	mmc_power_up(host, host->ocr_avail);
-    printk(KERN_WARNING "DBG: %s():%d Done-Power on emmc before freq rescan\n", __FUNCTION__, __LINE__);
-    printk(KERN_WARNING "DBG: %s():%d Power cycling emmc before freq rescan\n", __FUNCTION__, __LINE__);
-	mmc_power_cycle(host, host->ocr_avail);
-    printk(KERN_WARNING "DBG: %s():%d Done-Power cycling emmc before freq rescan\n", __FUNCTION__, __LINE__);
+    if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)
+    {
+        /*
+        printk(KERN_WARNING "DBG: %s():%d Preparing to scan %s\n", __FUNCTION__, __LINE__,
+                mmc_hostname(host));
+        printk(KERN_WARNING "DBG: %s():%d Disabling HW Mutex locking.\n", __FUNCTION__, __LINE__);
+         */
+        host->caps2 |= MMC_CAP2_DISABLE_HW_MUTEX_LOCK;
+        /*
+        printk(KERN_WARNING "DBG: %s():%d Power on- emmc before freq rescan\n", __FUNCTION__, __LINE__);
+         */
+        mmc_power_up(host, host->ocr_avail);
+        /*
+        printk(KERN_WARNING "DBG: %s():%d Done-Power on emmc before freq rescan\n", __FUNCTION__, __LINE__);
+        printk(KERN_WARNING "DBG: %s():%d Power cycling emmc before freq rescan\n", __FUNCTION__, __LINE__);
+         */
+        mmc_power_cycle(host, host->ocr_avail);
+        /*
+        printk(KERN_WARNING "DBG: %s():%d Done-Power cycling emmc before freq rescan\n", __FUNCTION__, __LINE__);
+         */
+    }
 
 	for (i = 0; i < ARRAY_SIZE(freqs); i++) {
 		if (!mmc_rescan_try_freq(host, max(freqs[i], host->f_min))) {
@@ -2666,8 +2679,15 @@ void mmc_rescan(struct work_struct *work)
 		if (freqs[i] <= host->f_min)
 			break;
 	}
-    host->caps2 &= ~MMC_CAP2_DISABLE_HW_MUTEX_LOCK;
-    printk(KERN_WARNING "DBG: %s():%d Enabling HW Mutex locking.\n", __FUNCTION__, __LINE__);
+
+    if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)
+    {
+        host->caps2 &= ~MMC_CAP2_DISABLE_HW_MUTEX_LOCK;
+        /*
+        printk(KERN_WARNING "DBG: %s():%d Enabling HW Mutex locking.\n", __FUNCTION__, __LINE__);
+         */
+    }
+
 	mmc_release_host(host);
 
  out:
diff --git a/drivers/mmc/pm.h b/drivers/mmc/pm.h
index 87b923f..feda8b1 100644
--- a/drivers/mmc/pm.h
+++ b/drivers/mmc/pm.h
@@ -7,3 +7,4 @@
             current->pid,  __FUNCTION__, __LINE__,                                       \
             __FILENAME__, ##__VA_ARGS__);                                                \
 }
+#define mDBG(M, ...) {}
diff --git a/include/linux/mmc/sdhci.h b/include/linux/mmc/sdhci.h
index 4ac2400..72224d2 100755
--- a/include/linux/mmc/sdhci.h
+++ b/include/linux/mmc/sdhci.h
@@ -207,10 +207,8 @@ void unlock_emmc_access(void);
 #define LOCK_EMMC_HW_MUTEX(host) do{\
   if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)\
     {\
-      printk(KERN_WARNING "DBG: %s():%d pid:%d Locking HW Mutex\n", __FUNCTION__, __LINE__, current->pid); \
       if (netss_driver_ready()) \
         hw_mutex_lock(HW_MUTEX_EMMC);\
-      printk(KERN_WARNING "DBG: %s():%d pid:%d Locked HW Mutex\n", __FUNCTION__, __LINE__, current->pid); \
       lock_emmc_access();\
       enable_irq(((struct sdhci_host *)host->private)->irq);\
     }\
@@ -219,7 +217,6 @@ void unlock_emmc_access(void);
 #define UNLOCK_EMMC_HW_MUTEX(host) do{\
   if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)\
     {\
-      printk(KERN_WARNING "DBG: %s():%d pid:%d Unlocking HW Mutex\n", __FUNCTION__, __LINE__, current->pid); \
       disable_irq(((struct sdhci_host *)host->private)->irq);\
       unlock_emmc_access();\
       if (netss_driver_ready()) \
-- 
1.7.9.5

