From 843c5aadd2d0944b7527f900ebd658b17e10b411 Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Fri, 15 May 2015 09:14:13 -0700
Subject: [PATCH] Check NetIP Subsystem status before using HW Mutex

Before attempting to obtain or release the hardware mutex, provided by
the NetIP subsystem, ensure that the subsystem is properly enabled. This
prevents NULL pointer dereferences when the HW mutex is not available.
---
 include/linux/mmc/sdhci.h |   17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/include/linux/mmc/sdhci.h b/include/linux/mmc/sdhci.h
index 4ec530e..919fdb3 100644
--- a/include/linux/mmc/sdhci.h
+++ b/include/linux/mmc/sdhci.h
@@ -16,6 +16,9 @@
 #include <linux/types.h>
 #include <linux/io.h>
 #include <linux/mmc/host.h>
+#ifdef CONFIG_HW_MUTEXES
+#include <linux/netip_subsystem.h>
+#endif
 
 struct sdhci_host {
 	/* Data set by hardware interface driver */
@@ -212,18 +215,20 @@ static void unlock_emmc_access(void)
 #define LOCK_EMMC_HW_MUTEX(host) do{\
   if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)\
     {\
-         hw_mutex_lock(HW_MUTEX_EMMC);\
-	 lock_emmc_access();\
-	 enable_irq(((struct sdhci_host *)host->private)->irq);\
+      if (netss_driver_ready()) \
+        hw_mutex_lock(HW_MUTEX_EMMC);\
+      lock_emmc_access();\
+      enable_irq(((struct sdhci_host *)host->private)->irq);\
     }\
   } while(0)
 
 #define UNLOCK_EMMC_HW_MUTEX(host) do{\
   if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)\
     {\
-         disable_irq(((struct sdhci_host *)host->private)->irq);\
-	 unlock_emmc_access();\
-         hw_mutex_unlock(HW_MUTEX_EMMC);\
+      disable_irq(((struct sdhci_host *)host->private)->irq);\
+      unlock_emmc_access();\
+      if (netss_driver_ready()) \
+        hw_mutex_unlock(HW_MUTEX_EMMC);\
     }\
   } while(0)
 
-- 
1.7.9.5

