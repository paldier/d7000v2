From 18167a620b29a51335061d2afc99299d0bcdecb7 Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Wed, 16 Sep 2015 11:54:06 -0700
Subject: [PATCH] Disable boot partition access
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Disable boot partition access for the first eMMC

Move the custom register write accessors to a struct that’s
unique to the first eMMC

Add the ACPI IDs for the second eMMC and the SD card controller so
they explicitly choose different ops structs and won’t generate MUTEX
warnings.
---
 drivers/mmc/host/sdhci-acpi.c |   20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/drivers/mmc/host/sdhci-acpi.c b/drivers/mmc/host/sdhci-acpi.c
index 3378fc4..1ab2dbf 100644
--- a/drivers/mmc/host/sdhci-acpi.c
+++ b/drivers/mmc/host/sdhci-acpi.c
@@ -163,15 +163,24 @@ static const struct sdhci_ops sdhci_acpi_ops_dflt = {
 static const struct sdhci_ops sdhci_acpi_ops_int = {
 	.enable_dma = sdhci_acpi_enable_dma,
 	.hw_reset   = sdhci_acpi_int_hw_reset,
-    .write_l = cgm_write_l,
-    .write_w = cgm_write_w,
-    .write_b = cgm_write_b,
+};
+
+static const struct sdhci_ops sdhci_acpi_ops_int_cgm = {
+	.enable_dma = sdhci_acpi_enable_dma,
+	.hw_reset   = sdhci_acpi_int_hw_reset,
+	.write_l = cgm_write_l,
+	.write_w = cgm_write_w,
+	.write_b = cgm_write_b,
 };
 
 static const struct sdhci_acpi_chip sdhci_acpi_chip_int = {
 	.ops = &sdhci_acpi_ops_int,
 };
 
+static const struct sdhci_acpi_chip sdhci_acpi_chip_int_cgm = {
+	.ops = &sdhci_acpi_ops_int_cgm,
+};
+
 /*
  * This probe slot routine is being added to address an issue on the host
  * controller's IP where hangs will occur of the platform enters a C state
@@ -263,11 +272,12 @@ static const struct sdhci_acpi_slot sdhci_acpi_slot_int_emmc = {
 	.remove_slot = sdhci_acpi_remove_slot,
 };
 static const struct sdhci_acpi_slot sdhci_acpi_slot_int_cgm_emmc = {
-	.chip    = &sdhci_acpi_chip_int,
+	.chip    = &sdhci_acpi_chip_int_cgm, // Adds IO accessors
 	.caps    = MMC_CAP_8_BIT_DATA | MMC_CAP_NONREMOVABLE | MMC_CAP_HW_RESET
 		| MMC_CAP_1_8V_DDR,
 	.caps2   = MMC_CAP2_HC_ERASE_SZ | MMC_CAP2_POLL_R1B_BUSY |
 		MMC_CAP2_CACHE_CTRL | MMC_CAP2_HS200_1_8V_SDR |
+		MMC_CAP2_BOOTPART_NOACC | // Temporarily disabled to protect NetIP
 		MMC_CAP2_CAN_DO_CMDQ,
 	.flags   = SDHCI_ACPI_RUNTIME_PM,
 	.quirks2 = SDHCI_QUIRK2_TUNING_POLL | SDHCI_QUIRK2_PRESET_VALUE_BROKEN,
@@ -305,6 +315,8 @@ static const struct sdhci_acpi_uid_slot sdhci_acpi_uids[] = {
 	{ "80860F14" , "1" , &sdhci_acpi_slot_int_emmc },
 	{ "80860F14" , "3" , &sdhci_acpi_slot_int_sd   },
 	{ "80862B94" , "1" , &sdhci_acpi_slot_int_cgm_emmc },
+	{ "80862B95" , "1" , &sdhci_acpi_slot_int_emmc },
+	{ "80862B96" , "1" , &sdhci_acpi_slot_int_sd   },
 	{ "INT33BB"  , "2" , &sdhci_acpi_slot_int_sdio },
 	{ "INT33BB"  , "3" , &sdhci_acpi_slot_int_sd   },
 	{ "INT33C6"  , NULL, &sdhci_acpi_slot_int_sdio },
-- 
1.7.9.5

