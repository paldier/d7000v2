From 81e4ca41f5cfe045738ee9b6233603d7434dbda2 Mon Sep 17 00:00:00 2001
From: "Michael L. Walker" <michael.l.walker@intel.com>
Date: Thu, 18 Feb 2016 12:06:59 -0700
Subject: [PATCH] Title: Add ebt_forward extension to prepatched kernel bridge
 code Owner: mlwalker HSD#: 245413 System Impact: Allows
 removing flooding from a-mux and n-mux bridges,    which is
 required for enabling packet processor acceleration using  
  the Network Infrastructure Layer

---
 include/linux/skbuff.h                            |    3 +
 include/uapi/linux/netfilter_bridge/ebt_forward.h |   37 ++++++++
 net/bridge/br_input.c                             |   33 ++++++-
 net/bridge/netfilter/Kconfig                      |   10 +++
 net/bridge/netfilter/Makefile                     |    1 +
 net/bridge/netfilter/ebt_forward.c                |  100 +++++++++++++++++++++
 6 files changed, 182 insertions(+), 2 deletions(-)
 create mode 100644 include/uapi/linux/netfilter_bridge/ebt_forward.h
 create mode 100644 net/bridge/netfilter/ebt_forward.c

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 9649347..81baa4a 100755
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -517,6 +517,9 @@ struct sk_buff {
 #endif
 #ifdef CONFIG_BRIDGE_NETFILTER
 	struct nf_bridge_info	*nf_bridge;
+#ifdef CONFIG_BRIDGE_EBT_FORWARD
+	struct net_bridge_port	*bridge_forward_port;
+#endif
 #endif
 
 	int			skb_iif;
diff --git a/include/uapi/linux/netfilter_bridge/ebt_forward.h b/include/uapi/linux/netfilter_bridge/ebt_forward.h
new file mode 100644
index 0000000..fc64d0a
--- /dev/null
+++ b/include/uapi/linux/netfilter_bridge/ebt_forward.h
@@ -0,0 +1,37 @@
+/*
+  GPL LICENSE SUMMARY
+
+  Copyright(c) 2016 Intel Corporation.
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of version 2 of the GNU General Public License as
+  published by the Free Software Foundation.
+
+  This program is distributed in the hope that it will be useful, but
+  WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+  General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
+  The full GNU General Public License is included in this distribution
+  in the file called LICENSE.GPL.
+
+  Contact Information:
+    Intel Corporation
+    2200 Mission College Blvd.
+    Santa Clara, CA  97052
+*/
+
+#ifndef __LINUX_BRIDGE_EBT_FORWARD_H
+#define __LINUX_BRIDGE_EBT_FORWARD_H
+
+struct ebt_forward_info {
+	char dst[IFNAMSIZ];
+	/* EBT_ACCEPT, EBT_DROP, EBT_CONTINUE or EBT_RETURN */
+	int target;
+};
+#define EBT_FORWARD_TARGET "forward"
+
+#endif
diff --git a/net/bridge/br_input.c b/net/bridge/br_input.c
index a2fd37e..373c20c 100644
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@ -74,8 +74,32 @@ int br_handle_frame_finish(struct sk_buff *skb)
 	if (!br_allowed_ingress(p->br, nbp_get_vlan_info(p), skb, &vid))
 		goto drop;
 
-	/* insert into forwarding database after filtering to avoid spoofing */
 	br = p->br;
+
+
+#ifdef CONFIG_BRIDGE_NETFILTER
+#ifdef CONFIG_BRIDGE_EBT_FORWARD
+	/* Check for predetermined forwarding ebtables rule */
+	if (skb->bridge_forward_port) {
+		BR_INPUT_SKB_CB(skb)->brdev = br->dev;
+		if(br->dev->flags & IFF_PROMISC) {
+			/* Forward the frame and send a copy to the bridge interface */
+			skb2=skb;
+			br_forward(skb->bridge_forward_port, skb, skb2);
+			if(skb2)
+				return br_pass_frame_up(skb2);
+		}
+		else {
+			/* Forward packet only to destination port */
+			skb2=NULL;
+			br_forward(skb->bridge_forward_port, skb, skb2);
+			goto out;
+		}
+	}
+#endif
+#endif
+
+	/* insert into forwarding database after filtering to avoid spoofing */
 	if (p->flags & BR_LEARNING)
 		br_fdb_update(br, p, eth_hdr(skb)->h_source, vid);
 
diff --git a/net/bridge/netfilter/Kconfig b/net/bridge/netfilter/Kconfig
index a9aff9c..698eb46 100644
--- a/net/bridge/netfilter/Kconfig
+++ b/net/bridge/netfilter/Kconfig
@@ -170,6 +170,16 @@ config BRIDGE_EBT_REDIRECT
 
 	  To compile it as a module, choose M here.  If unsure, say N.
 
+config BRIDGE_EBT_FORWARD
+	tristate "ebt: forward target support"
+	help
+	  This option adds the forward target, which allows bypassing the normal
+	  bridging logic and forcing an Ethernet frame to be forwarded to a specific
+	  device, as long as it is connected to the same bridge the frame
+	  arrived on.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
 config BRIDGE_EBT_SNAT
 	tristate "ebt: snat target support"
 	help
diff --git a/net/bridge/netfilter/Makefile b/net/bridge/netfilter/Makefile
index 0718699..7393cdb 100644
--- a/net/bridge/netfilter/Makefile
+++ b/net/bridge/netfilter/Makefile
@@ -26,6 +26,7 @@ obj-$(CONFIG_BRIDGE_EBT_ARPREPLY) += ebt_arpreply.o
 obj-$(CONFIG_BRIDGE_EBT_MARK_T) += ebt_mark.o
 obj-$(CONFIG_BRIDGE_EBT_DNAT) += ebt_dnat.o
 obj-$(CONFIG_BRIDGE_EBT_REDIRECT) += ebt_redirect.o
+obj-$(CONFIG_BRIDGE_EBT_FORWARD) += ebt_forward.o
 obj-$(CONFIG_BRIDGE_EBT_SNAT) += ebt_snat.o
 
 # watchers
diff --git a/net/bridge/netfilter/ebt_forward.c b/net/bridge/netfilter/ebt_forward.c
new file mode 100644
index 0000000..e2a39d7
--- /dev/null
+++ b/net/bridge/netfilter/ebt_forward.c
@@ -0,0 +1,100 @@
+/*
+  GPL LICENSE SUMMARY
+
+  Copyright(c) 2016 Intel Corporation.
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of version 2 of the GNU General Public License as
+  published by the Free Software Foundation.
+
+  This program is distributed in the hope that it will be useful, but
+  WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+  General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
+  The full GNU General Public License is included in this distribution
+  in the file called LICENSE.GPL.
+
+  Contact Information:
+    Intel Corporation
+    2200 Mission College Blvd.
+    Santa Clara, CA  97052
+*/
+
+#include <linux/module.h>
+#include <net/sock.h>
+#include <linux/netfilter.h>
+#include <linux/netfilter/x_tables.h>
+#include <linux/netfilter_bridge/ebtables.h>
+#include <linux/netfilter_bridge/ebt_forward.h>
+#include <linux/rculist.h>
+#include "../br_private.h"
+
+static unsigned int
+ebt_forward_tg(struct sk_buff *skb, const struct xt_action_param *par)
+{
+	const struct ebt_forward_info *info = par->targinfo;
+	struct net_bridge_port *p;
+
+	if (!skb_make_writable(skb, 0))
+		return EBT_DROP;
+
+	list_for_each_entry_rcu(p, &br_port_get_rcu(par->in)->br->port_list, list) {
+		if(strcmp(info->dst, p->dev->name) == 0) {
+			skb->bridge_forward_port = p;
+			goto out;
+		}
+	}
+out:
+	return info->target;
+}
+
+static int ebt_forward_tg_check(const struct xt_tgchk_param *par)
+{
+	const struct ebt_forward_info *info = par->targinfo;
+	unsigned int hook_mask;
+
+	if (BASE_CHAIN && info->target == EBT_RETURN)
+		return -EINVAL;
+
+	hook_mask = par->hook_mask & ~(1 << NF_BR_NUMHOOKS);
+	if ((strcmp(par->table, "nat") != 0 ||
+	    (hook_mask & ~((1 << NF_BR_PRE_ROUTING) |
+	    (1 << NF_BR_LOCAL_OUT)))) &&
+	    (strcmp(par->table, "broute") != 0 ||
+	    hook_mask & ~(1 << NF_BR_BROUTING)))
+		return -EINVAL;
+	if (INVALID_TARGET)
+		return -EINVAL;
+	return 0;
+}
+
+static struct xt_target ebt_forward_tg_reg __read_mostly = {
+	.name		= "forward",
+	.revision	= 0,
+	.family		= NFPROTO_BRIDGE,
+	.hooks		= (1 << NF_BR_NUMHOOKS) | (1 << NF_BR_PRE_ROUTING) |
+			  (1 << NF_BR_LOCAL_OUT) | (1 << NF_BR_BROUTING),
+	.target		= ebt_forward_tg,
+	.checkentry	= ebt_forward_tg_check,
+	.targetsize	= sizeof(struct ebt_forward_info),
+	.me		= THIS_MODULE,
+};
+
+static int __init ebt_forward_init(void)
+{
+	return xt_register_target(&ebt_forward_tg_reg);
+}
+
+static void __exit ebt_forward_fini(void)
+{
+	xt_unregister_target(&ebt_forward_tg_reg);
+}
+
+module_init(ebt_forward_init);
+module_exit(ebt_forward_fini);
+MODULE_DESCRIPTION("Ebtables: forwarding override extension");
+MODULE_LICENSE("GPL");
-- 
1.7.9.5

