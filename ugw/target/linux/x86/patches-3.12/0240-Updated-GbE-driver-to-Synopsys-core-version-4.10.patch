From 1fcb9a6f41daf40ead81b8982a91aa4603235d81 Mon Sep 17 00:00:00 2001
From: Marco A Vital Yep <marco.a.vital.yep@intel.com>
Date: Thu, 22 Oct 2015 09:55:54 -0700
Subject: [PATCH] Updated GbE driver to Synopsys core version 4.10

---
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c    |  458 +-
 .../synopsys/DWC_ETH_QOS_debug_operation.c         |  284 +-
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c   |    8 +
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c    |  330 +-
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c    |  393 +-
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c   |    4 -
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c    |   10 +-
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c |    8 +-
 .../net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h    |   64 +-
 .../net/ethernet/synopsys/DWC_ETH_QOS_yheader.h    |   52 +-
 .../net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h    |21611 +++++++-------------
 11 files changed, 9043 insertions(+), 14179 deletions(-)

diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c
index 9ea340f..8f91355 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c
@@ -213,6 +213,7 @@ static unsigned int get_idle_slope(unsigned char bw)
 static unsigned int get_send_slope(unsigned char bw)
 {
 	unsigned int multiplier = 1;
+	unsigned int idle_slope = 0;
 	unsigned int send_slope = 0;
 
 	if (connected_speed == SPEED_1000)
@@ -224,7 +225,9 @@ static unsigned int get_send_slope(unsigned char bw)
 	 * OR
 	 * sendslope = (1024 * (4 [for MII] or 8 [for GMII]) - idle_slope)
 	 */
-	send_slope = (((4 * multiplier * (100 - bw)) * 1024)/100);
+	//send_slope = (((4 * multiplier * (100 - bw)) * 1024)/100);
+	idle_slope = (((4 * multiplier * bw) * 1024)/100);
+	send_slope = ((4 * multiplier * 1024)- idle_slope);
 
 	return send_slope;
 }
@@ -232,17 +235,18 @@ static unsigned int get_send_slope(unsigned char bw)
 static unsigned int get_hi_credit(unsigned char bw)
 {
 	unsigned int hi_credit = 0;
-
-	hi_credit = (((DWC_ETH_QOS_MAX_INT_FRAME_SIZE * bw)/100) * 1024);
-
+	typedef unsigned long long u64;
+	hi_credit = (u64)(((u64)DWC_ETH_QOS_MAX_INT_FRAME_SIZE * (u64)bw * 1024 * 8))/100;
 	return hi_credit;
 }
 
 static unsigned int get_low_credit(unsigned char bw)
 {
-	unsigned int low_credit = 0;
-
-	low_credit = (((DWC_ETH_QOS_MAX_INT_FRAME_SIZE * (100 - bw))/100) * 1024);
+	unsigned int hi_credit = 0;
+	int low_credit = 0;
+    typedef unsigned long long u64;
+	hi_credit = (u64)(((u64)DWC_ETH_QOS_MAX_INT_FRAME_SIZE * (u64)bw * 1024 * 8))/100;
+	low_credit =  -((u64)(((u64)DWC_ETH_QOS_MAX_INT_FRAME_SIZE * (100 - bw)) * 1024 * 8)/100);
 
 	return low_credit;
 }
@@ -672,6 +676,7 @@ static int config_tx_pbl(int sockfd, char *ifname, char *argv1, char *argv2)
 }
 
 /* return 0 on success and -ve on failure */
+#if 0
 static int rx_outer_vlan_strip(int sockfd, char *ifname, char *argv1)
 {
 	struct ifreq ifr;
@@ -856,6 +861,8 @@ static int tx_vlan_ctrl_via_reg(int sockfd, char *ifname, char *argv1, char *arg
 	return ret;
 }
 
+#endif
+
 /* return 0 on success and -ve on failure */
 static int sa0_ctrl_via_desc(int sockfd, char *ifname, char *argv)
 {
@@ -1779,6 +1786,266 @@ static int config_pfc(int sockfd, char *ifname, char *argv1)
 	return ret;
 }
 
+
+/* return 0 on success and -ve on failure */
+static int config_dvlan_tx_processing(int sockfd, char *ifname,
+		char *operation, char *mode, char *outer_vlt,
+		char *inner_vlt, int is_via_reg)
+{
+	struct ifreq ifr;
+	struct ifr_data_struct data;
+	unsigned int opn = atoi(operation);
+	unsigned int md = ~0;
+	unsigned int ovlt = ~0;
+	unsigned int ivlt = ~0;
+	struct DWC_ETH_QOS_config_dvlan conf_dvlan;
+	int ret = 0;
+
+	if ((opn < 0) && (opn > 3)) {
+		fprintf(stderr,"Invalide <operation> - %d\n",opn);
+		return -1;
+	}
+
+	if ((opn != 0) && !mode) {
+		fprintf(stderr,"Please specify the <mode>,"
+				" as operation selected is %d\n",opn);
+		return -1;
+	}
+
+	conf_dvlan.op_type = opn;
+	if (mode) {
+		md = atoi(mode);
+		if (md == 2) {
+			if (!inner_vlt) {
+				fprintf(stderr, "Please specify the outer & inner "
+						"vlan tags, as mode is `Inner and Outer VLAN tag`\n");
+				return -1;
+			}
+		} else if (!outer_vlt) {
+			fprintf(stderr, "Please specify the %s "
+					"vlan tag, as mode is %s VLAN tag.\n",
+					(md ? "Inner" : "Outer"),
+					(md ? "Inner" : "Outer"));
+			return -1;
+		}
+
+		if (inner_vlt) {
+			ovlt = atoi(outer_vlt);
+			ivlt = atoi(inner_vlt);
+			fprintf(stderr, "outer_vlan_tag = %#x, inner_vlan_tag = %#x\n", ovlt, ivlt);
+		} else if (outer_vlt) {
+			ovlt = atoi(outer_vlt);
+			fprintf(stderr, "outer_vlan_tag = %#x\n", ovlt);
+		}
+
+		if (md == 0) {
+			conf_dvlan.in_out = DWC_ETH_QOS_DVLAN_OUTER;
+		} else if (md == 1) {
+			conf_dvlan.in_out = DWC_ETH_QOS_DVLAN_INNER;
+		} else if (md == 2) {
+			conf_dvlan.in_out = DWC_ETH_QOS_DVLAN_BOTH;
+		} else {
+			fprintf(stderr,"Invalide <mode> - %d\n",md);
+			return -1;
+		}
+	}
+
+	if ((opn == 0) && ((md == 2) || (!mode))) {
+		data.flags = DWC_ETH_QOS_DVLAN_DISABLE;
+		conf_dvlan.in_out = DWC_ETH_QOS_DVLAN_BOTH;
+	} else {
+		data.flags = DWC_ETH_QOS_DVLAN_ENABLE;
+	}
+
+	fprintf(stderr, "%s: operation = %d, mode = %d\n", __func__, conf_dvlan.op_type, conf_dvlan.in_out);
+	conf_dvlan.outer_vlan_tag = ovlt;
+	conf_dvlan.inner_vlan_tag = ivlt;
+	conf_dvlan.via_reg_or_desc = is_via_reg;
+
+	data.cmd = DWC_ETH_QOS_DVLAN_TX_PROCESSING_CMD;
+	data.qInx = 0; /* Not used */
+	data.ptr = &conf_dvlan;
+	strcpy(ifr.ifr_ifrn.ifrn_name, ifname);
+	ifr.ifr_ifru.ifru_data = &data;
+
+	ret = ioctl(sockfd, DWC_ETH_QOS_PRV_IOCTL, &ifr);
+	if (ret == DWC_ETH_QOS_CONFIG_FAIL) {
+		fprintf(stderr, "IOCTL Error\n");
+		fprintf(stderr, "Failed to configure double VLAN processing on Tx path\n");
+	} else if (ret == DWC_ETH_QOS_NO_HW_SUPPORT) {
+		fprintf(stderr, "No HW support for Single/Double VLAN\n");
+	} else {
+		fprintf(stderr, "Successfully configured double VLAN processing on Tx path\n");
+	}
+
+	return ret;
+}
+
+/* return 0 on success and -ve on failure */
+int config_dvlan(int sockfd, int argc, char *argv[], int is_via_reg)
+{
+	int ret = 0;
+
+	if (argc == 4) {
+		ret = config_dvlan_tx_processing(sockfd,
+				argv[1], argv[3], NULL,
+				NULL, NULL, is_via_reg);
+	} else if (argc == 5) {
+		ret = config_dvlan_tx_processing(sockfd,
+				argv[1], argv[3], argv[4],
+				argv[5], NULL, is_via_reg);
+	} else if (argc > 5) {
+		ret = config_dvlan_tx_processing(sockfd,
+				argv[1], argv[3], argv[4],
+				argv[5], argv[6], is_via_reg);
+	} else {
+		ret = -1;
+	}
+
+	return ret;
+}
+
+/* return 0 on success and -ve on failure */
+static int config_dvlan_rx_processing(int sockfd,
+		char *ifname, char *operation)
+{
+	struct ifreq ifr;
+	struct ifr_data_struct data;
+	unsigned int opn = atoi(operation);
+	int ret = 0;
+
+	if (opn == 0) {
+		data.flags = DWC_ETH_QOS_DVLAN_NONE;
+	} else if (opn == 1) {
+		data.flags = DWC_ETH_QOS_DVLAN_INNER;
+	} else if (opn == 2) {
+		data.flags = DWC_ETH_QOS_DVLAN_OUTER;
+	} else if (opn == 3) {
+		data.flags = DWC_ETH_QOS_DVLAN_BOTH;
+	} else {
+		fprintf(stderr,"Invalide <operation> - %d\n",opn);
+		return -1;
+	}
+
+	data.cmd = DWC_ETH_QOS_DVLAN_RX_PROCESSING_CMD;
+	data.qInx = 0; /* Not used */
+	strcpy(ifr.ifr_ifrn.ifrn_name, ifname);
+	ifr.ifr_ifru.ifru_data = &data;
+
+	ret = ioctl(sockfd, DWC_ETH_QOS_PRV_IOCTL, &ifr);
+	if (ret == DWC_ETH_QOS_CONFIG_FAIL) {
+		fprintf(stderr, "IOCTL Error\n");
+		fprintf(stderr, "Failed to configure double VLAN processing on Rx path\n");
+	} else if (ret == DWC_ETH_QOS_NO_HW_SUPPORT) {
+		fprintf(stderr, "No HW support for Single/Double VLAN\n");
+	} else {
+		fprintf(stderr, "Successfully configured double VLAN processing on Rx path\n");
+	}
+
+	return ret;
+}
+
+/* return 0 on success and -ve on failure */
+static int config_svlan(int sockfd,
+		char *ifname, char *operation)
+{
+	struct ifreq ifr;
+	struct ifr_data_struct data;
+	unsigned int opn = atoi(operation);
+	int ret = 0;
+
+	if (opn == 0) {
+		data.flags = DWC_ETH_QOS_DVLAN_NONE;
+	} else if (opn == 1) {
+		data.flags = DWC_ETH_QOS_DVLAN_INNER;
+	} else if (opn == 2) {
+		data.flags = DWC_ETH_QOS_DVLAN_OUTER;
+	} else if (opn == 3) {
+		data.flags = DWC_ETH_QOS_DVLAN_BOTH;
+	} else {
+		fprintf(stderr,"Invalide <operation> - %d\n",opn);
+		return -1;
+	}
+
+	data.cmd = DWC_ETH_QOS_SVLAN_CMD;
+	data.qInx = 0; /* Not used */
+	strcpy(ifr.ifr_ifrn.ifrn_name, ifname);
+	ifr.ifr_ifru.ifru_data = &data;
+
+	ret = ioctl(sockfd, DWC_ETH_QOS_PRV_IOCTL, &ifr);
+	if (ret == DWC_ETH_QOS_CONFIG_FAIL) {
+		fprintf(stderr, "IOCTL Error\n");
+		fprintf(stderr, "Error in configuring S-VLAN\n");
+	} else if (ret == DWC_ETH_QOS_NO_HW_SUPPORT) {
+		fprintf(stderr, "No HW support for Single/Double VLAN\n");
+	} else {
+		fprintf(stderr, "Successfully configured S-VLAN\n");
+	}
+
+	return ret;
+}
+
+/* return 0 on success and -ve on failure */
+static int config_ptpoffloading(int sockfd,
+		char *ifname, char *en_dis,
+		char *mode, char *domain_num, char *multicast_or_unicast)
+{
+	struct ifreq ifr;
+	struct ifr_data_struct data;
+	unsigned int en_dis_flag = atoi(en_dis);
+	unsigned int md;
+	unsigned int mc_uc;
+	int ret = 0;
+	struct DWC_ETH_QOS_config_ptpoffloading conf_ptp;
+
+	if (en_dis_flag == 0) {
+		conf_ptp.en_dis = DWC_ETH_QOS_PTP_OFFLOADING_DISABLE;
+	} else if (en_dis_flag == 1) {
+		conf_ptp.en_dis = DWC_ETH_QOS_PTP_OFFLOADING_ENABLE;
+		if ((!mode) || (!domain_num)) {
+				fprintf(stderr,"Missing an argument <mode> and/or <domain_num>\n");
+				return -1;
+		}
+	} else {
+		fprintf(stderr,"Invalide option - %d\n",en_dis_flag);
+		return -1;
+	}
+
+	if (en_dis_flag) {
+		md = atoi(mode);
+		if ((md < 0) && (md > 6)) {
+				fprintf(stderr,"Invalide mode - %d\n",md);
+				return -1;
+		}
+		conf_ptp.mode = md;
+		conf_ptp.domain_num = atoi(domain_num);
+        mc_uc = atoi(multicast_or_unicast);
+        if((mc_uc < 0) || (mc_uc > 1)) {
+				fprintf(stderr,"Invalide multicast_or_unicast parameter - %d\n", mc_uc);
+				return -1;
+        }
+        conf_ptp.mc_uc = mc_uc;
+	}
+
+	data.cmd = DWC_ETH_QOS_PTPOFFLOADING_CMD;
+	data.qInx = 0; /* Not used */
+	data.ptr = &conf_ptp;
+	strcpy(ifr.ifr_ifrn.ifrn_name, ifname);
+	ifr.ifr_ifru.ifru_data = &data;
+
+	ret = ioctl(sockfd, DWC_ETH_QOS_PRV_IOCTL, &ifr);
+	if (ret == DWC_ETH_QOS_CONFIG_FAIL) {
+		fprintf(stderr, "IOCTL Error\n");
+		fprintf(stderr, "Error in configuring PTP Offloading.\n");
+	} else if (ret == DWC_ETH_QOS_NO_HW_SUPPORT) {
+		fprintf(stderr, "No PTP support in Hardware.\n");
+	} else {
+		fprintf(stderr, "Successfully configured PTP Offloading.\n");
+	}
+
+	return ret;
+}
+
 #ifdef DWC_ETH_QOS_CONFIG_PGTEST
 
 /* Initialize default parameters for Channel 0, 1 and 2.
@@ -1799,6 +2066,9 @@ static void DWC_ETH_QOS_init_default_pg(struct DWC_ETH_QOS_pg_user_input *pg_par
 	pg_params->dma_tx_arb_algo = eDWC_ETH_QOS_DMA_TX_WRR;
 	pg_params->queue_dcb_algorithm = eDWC_ETH_QOS_DCB_WRR;
 
+	pg_params->mac_lb_mode = 0; /* 0 => No MAC Loopback; 1 => MAC Loopback On */
+	pg_params->speed_100M_1G = 0;     /* This is valid only after receiving after the test  */
+
 	/* configure Channel qInx to DWC_ETH_QOS_QUEUE_CNT */
 	for (qInx = 0; qInx < tx_queue_count; qInx++) {
 		memset(&pg_user_ch_input[qInx], 0, sizeof(struct DWC_ETH_QOS_pg_user_ch_input));
@@ -1900,6 +2170,7 @@ static void DWC_ETH_QOS_populate_pg_struct(struct DWC_ETH_QOS_pg_user_input *pg_
 	pg_struct->ch_tx_rx_prio_ratio = pg_params->ch_tx_rx_prio_ratio;
 	pg_struct->dma_tx_arb_algo = pg_params->dma_tx_arb_algo;
 	pg_struct->queue_dcb_algorithm = pg_params->queue_dcb_algorithm;
+	pg_struct->mac_lb_mode = pg_params->mac_lb_mode;
 
 	channel_enable = pg_params->dma_ch_en;
 	max_frame_size = pg_user_ch_input[0].ch_fr_size;
@@ -2272,6 +2543,10 @@ static void DWC_ETH_QOS_get_pg_params(struct DWC_ETH_QOS_pg_user_input *pg_param
 		       "      1 - WFQ  (Weighted Fair Queuing)\n"
 		       "      2 - DWRR (Deficit Weighted Round Robin)\n"
 		       "      3 - SP   (Strict Priority)]\n");
+		printf("(1007) MAC Loop-Back Mode                                    : %01d\n",
+			pg_params->mac_lb_mode);
+		printf("     [0 - Disable MAC Loop-Back Mode \n"
+		       "      1 - Enable  MAC Loop-Back Mode ]\n");
 
 		for (i = 0; i < tx_queue_count; i++) {
 			printf("\n");
@@ -2327,7 +2602,7 @@ static void DWC_ETH_QOS_get_pg_params(struct DWC_ETH_QOS_pg_user_input *pg_param
 				pg_params->dma_ch_en);
 			printf("Your Option here::");
 			fscanf(stdin, "%s", user_string);
-			sscanf(user_string, "%d", &user_input);
+			sscanf(user_string, "%x", &user_input);
 			if (user_input < (1 << tx_queue_count))
 				pg_params->dma_ch_en = user_input;
 			else
@@ -2400,6 +2675,20 @@ static void DWC_ETH_QOS_get_pg_params(struct DWC_ETH_QOS_pg_user_input *pg_param
 			else
 				printf("Invalid input\n");
 		}
+		else if (user_input == 1007) {
+			printf("(1007) mac_lb_mode                                            : %01d\n",
+				 pg_params->mac_lb_mode);
+			printf("     [0 - Disable MAC Loop-Back Mode \n"
+					 "      1 - Enable  MAC Loop-Back Mode ]\n");
+			printf("Your Option here::");
+			fscanf(stdin, "%s", user_string);
+			sscanf(user_string, "%d", &user_input);
+			if ((user_input >= 0) && (user_input <= 1))
+				pg_params->mac_lb_mode = user_input;
+			else
+				printf("Invalid input\n");
+		}
+
 		else if ((user_input >= 0) && (user_input <= 99)
 				&& (user_input < input_limit)) { /* ch 0 parameter */
 			DWC_ETH_QOS_process_ch_params(pg_user_ch_input,
@@ -2451,6 +2740,8 @@ static void DWC_ETH_QOS_gen_pg_report_in_file(struct DWC_ETH_QOS_pg_user_input *
 	int user_input = 0;
 	int i, display_avb_algo = 0, display_dcb_algo;
 	unsigned long totalbytes = 0, totalbits = 0, time = pg_params->duration_of_exp;
+	unsigned long long totalbytes_tx = 0;
+
 	float ch_bw = 0, total_ch_bw = 0, total_nonav_bw = 0;
 	char *space = "                                                  ";
 
@@ -2503,6 +2794,10 @@ static void DWC_ETH_QOS_gen_pg_report_in_file(struct DWC_ETH_QOS_pg_user_input *
 				break;
 		}
 	}
+    fprintf(fp, "mac_lb_mode                                : %01d\n",
+			    pg_params->mac_lb_mode);
+	fprintf(fp, "speed_100M_1G mode                         : %d\n",
+		        pg_struct->speed_100M_1G);
 
 	fprintf(fp, "\n");
 	fprintf(fp, "-------------------------------------------------------------------\n");
@@ -2680,13 +2975,15 @@ static void DWC_ETH_QOS_gen_pg_report_in_file(struct DWC_ETH_QOS_pg_user_input *
 	/* total = add_up(queue-rx-frames-count x queue-frame-size)
 	 * individual-queue = ((queue-rx-frame-count x queue-frame-size) x 100) / total */
 	totalbytes = 0;
+	totalbytes_tx = 0;
 	for (i = 0; i < rx_queue_count; i++) {
 		totalbytes += (pg_ch_input[i].ch_FramecountRx * pg_ch_input[i].ch_frame_size);
+		totalbytes_tx += (pg_ch_input[i].ch_FramecountTx * pg_ch_input[i].ch_frame_size);
 	}
 	for (i = 0; i < rx_queue_count; i++) {
 		ch_bw = (pg_ch_input[i].ch_FramecountRx * pg_ch_input[i].ch_frame_size);
 		if (ch_bw)
-			ch_bw = (float)((ch_bw * 100)/totalbytes);
+			ch_bw = (float)((ch_bw * 100)/totalbytes_tx);
 		fprintf(fp, "%s[CH%d]  %3.2F%%\n",
 			space, i, ch_bw);
 	}
@@ -3011,6 +3308,86 @@ void usage_qInx()
 				"1, 2, 3, 4, 5, 6, and 7\n\n");
 }
 
+void usage_dvlan_tx_via_reg()
+{
+	usage_common("dvlan_tx_via_reg");
+	fprintf(stderr,
+			"  <operation> <mode> <outer_vlan_tag> <inner_vlan_tag>\n"
+			"           [operation\n"
+			"                  0 - None, 1 - Deletion, 2 - Insertion, 3 - Replacement\n"
+			"            mode\n"
+			"                  0 - Outer VLAN, 1 - Inner VLAN, 2 - both Inner and Outer VLAN\n"
+			"            outer_vlan_tag\n"
+			"                  Outer VLAN tag value, including VLAN priority\n"
+			"            inner_vlan_tag\n"
+			"                  Inner VLAN tag value, including VLAN priority]\n"
+			"\n");
+}
+
+void usage_dvlan_tx_via_desc()
+{
+	usage_common("dvlan_tx_via_desc");
+	fprintf(stderr,
+			"  <operation> <mode> <outer_vlan_tag> <inner_vlan_tag>\n"
+			"           [operation\n"
+			"                  0 - None, 1 - Deletion, 2 - Insertion, 3 - Replacement\n"
+			"            mode\n"
+			"                  0 - Outer VLAN, 1 - Inner VLAN, 2 - both Inner and Outer VLAN\n"
+			"            outer_vlan_tag\n"
+			"                  Outer VLAN tag value, including VLAN priority\n"
+			"            inner_vlan_tag\n"
+			"                  Inner VLAN tag value, including VLAN priority]\n"
+			"\n");
+}
+
+void usage_dvlan_rx()
+{
+	usage_common("dvlan_rx");
+	fprintf(stderr,
+			"  <operation>\n"
+			"           [operation\n"
+			"                  0 - no vlan stripping.\n"
+			"                  1 - Inner VLAN stripping only\n"
+			"                  2 - Outer VLAN stripping only\n"
+			"                  3 - Both Inner and Outer VLAN stripping]\n"
+			"\n");
+}
+
+void usage_svlan_en()
+{
+	usage_common("svlan_en");
+	fprintf(stderr,
+			"  <operation>\n"
+			"           [operation\n"
+			"                  0 - disable S-VLAN\n"
+			"                  1 - enable S-VLAN for Inner VLAN\n"
+			"                  2 - enable S-VLAN for Outer VLAN\n"
+			"                  3 - enable S-VLAN for both Inner and Outer VLAN]\n"
+			"\n");
+}
+void usage_ptp_offload()
+{
+	usage_common("ptp_offload");
+	fprintf(stderr,
+			"  <disable/enable> <mode> <ptp_domain_num> <multicast_or_unicast>\n"
+			"           [disable/enable\n"
+			"                  0 - to disable ptp offloading\n"
+			"                  1 - to enable ptp offloading\n"
+			"            mode\n"
+			"                  1 - Ordinary or Boundary Slave\n"
+			"                  2 - Ordinary or Boundary Master\n"
+			"                  3 - Transparent Slave\n"
+			"                  4 - Transparent Master\n"
+			"                  5 - Peer-to-Peer Transparent\n"
+			"            ptp_domain_num\n"
+			"                  PTP domain number]\n"
+			"            multicast_or_unicast\n"
+			"                  0 - multicast address]\n"
+			"                  1 - unicast address]\n"
+			"\n");
+}
+
+
 void usage_rxoutervlanstrip()
 {
 	usage_common("rxoutervlanstrip");
@@ -3449,6 +3826,11 @@ void print_all_usage()
 	usage_arp();
 	usage_mac_lb();
 	usage_pfc();
+	usage_dvlan_tx_via_reg();
+	usage_dvlan_tx_via_desc();
+	usage_dvlan_rx();
+	usage_svlan_en();
+	usage_ptp_offload();
 	print_all = 0;
 }
 
@@ -3533,13 +3915,63 @@ main(int argc, char *argv[])
 				goto argc_failed;
 			}
 			ret = config_tx_pbl(sockfd, argv[1], argv[3], argv[4]);
-		} else if (0 == strcmp(argv[2], "rxoutervlanstrip")) {
+		}
+#if 0
+		else if (0 == strcmp(argv[2], "rxoutervlanstrip")) {
 			if (argc < 4) {
 				usage_rxoutervlanstrip();
 				goto argc_failed;
 			}
 			ret = rx_outer_vlan_strip(sockfd, argv[1], argv[3]);
-		} else if (0 == strcmp(argv[2], "rxinnervlanstrip")) {
+		}
+#endif
+		else if (0 == strcmp(argv[2], "dvlan_tx_via_reg")) {
+			if (argc < 4) {
+				usage_dvlan_tx_via_reg();
+				goto argc_failed;
+			}
+
+			ret = config_dvlan(sockfd, argc, argv,
+					DWC_ETH_QOS_VIA_REG);
+		} else if (0 == strcmp(argv[2], "dvlan_tx_via_desc")) {
+			if (argc < 4) {
+				usage_dvlan_tx_via_desc();
+				goto argc_failed;
+			}
+
+			ret = config_dvlan(sockfd, argc, argv,
+					DWC_ETH_QOS_VIA_DESC);
+		}
+        else if (0 == strcmp(argv[2], "dvlan_rx")) {
+			if (argc != 4) {
+				usage_dvlan_rx();
+				goto argc_failed;
+			}
+
+			ret = config_dvlan_rx_processing(sockfd,
+					argv[1], argv[3]);
+		} else if (0 == strcmp(argv[2], "svlan_en")) {
+			if (argc != 4) {
+				usage_svlan_en();
+				goto argc_failed;
+			}
+
+			ret = config_svlan(sockfd, argv[1], argv[3]);
+		}  else if (0 == strcmp(argv[2], "ptp_offload")) {
+			if (argc < 5) {
+				usage_ptp_offload();
+				goto argc_failed;
+			}
+
+			if (argc == 4)
+				ret = config_ptpoffloading(sockfd, argv[1],
+								argv[3], NULL, NULL, NULL);
+			else if (argc > 4)
+				ret = config_ptpoffloading(sockfd, argv[1],
+								argv[3], argv[4], argv[5], argv[6]);
+		}
+#if 0
+		else if (0 == strcmp(argv[2], "rxinnervlanstrip")) {
 			if (argc < 4) {
 				usage_rxinnervlanstrip();
 				goto argc_failed;
@@ -3557,7 +3989,9 @@ main(int argc, char *argv[])
 				goto argc_failed;
 			}
 			ret = tx_vlan_ctrl_via_reg(sockfd, argv[1], argv[3], argv[4]);
-		} else if (0 == strcmp(argv[2], "sa0_desc")) {
+		}
+#endif
+		else if (0 == strcmp(argv[2], "sa0_desc")) {
 			if (argc < 4) {
 				usage_sa0_desc();
 				goto argc_failed;
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c
index 0d30c03..347f6aa 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c
@@ -362,6 +362,11 @@ static unsigned int MAC_ANS_val;
 static unsigned int MAC_ANC_val;
 static unsigned int MAC_LPC_val;
 static unsigned int MAC_LPS_val;
+static unsigned int MAC_LMIR_val;
+static unsigned int MAC_SPI2R_val;
+static unsigned int MAC_SPI1R_val;
+static unsigned int MAC_SPI0R_val;
+static unsigned int MAC_PTO_CR_val;
 static unsigned int MAC_PPS_WIDTH3_val;
 static unsigned int MAC_PPS_WIDTH2_val;
 static unsigned int MAC_PPS_WIDTH1_val;
@@ -1569,6 +1574,16 @@ static ssize_t DWC_ETH_QOS_write(struct file *file, const char __user * buf,
 			MAC_LPC_RgWr(integer_value);
 		} else if (!strcmp(regName, "MAC_LPS")) {
 			MAC_LPS_RgWr(integer_value);
+		} else if(!strcmp(regName,"MAC_LMIR")){
+			MAC_LMIR_RgWr(integer_value);
+		} else if(!strcmp(regName,"MAC_SPI2R")){
+			MAC_SPI2R_RgWr(integer_value);
+		} else if(!strcmp(regName,"MAC_SPI1R")){
+			MAC_SPI1R_RgWr(integer_value);
+		} else if(!strcmp(regName,"MAC_SPI0R")){
+			MAC_SPI0R_RgWr(integer_value);
+		} else if(!strcmp(regName,"MAC_PTO_CR")){
+			MAC_PTO_CR_RgWr(integer_value);
 		} else if (!strcmp(regName, "MAC_PPS_WIDTH3")) {
 			MAC_PPS_WIDTH3_RgWr(integer_value);
 		} else if (!strcmp(regName, "MAC_PPS_WIDTH2")) {
@@ -1716,19 +1731,19 @@ static ssize_t DWC_ETH_QOS_write(struct file *file, const char __user * buf,
 		} else if (!strcmp(regName, "MTL_QOCR1")) {
 			MTL_QOCR1_RgWr(integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR7")) {
-			MTL_QROMR7_RgWr(integer_value);
+			MTL_QROMR_RgWr(7, integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR6")) {
-			MTL_QROMR6_RgWr(integer_value);
+			MTL_QROMR_RgWr(6, integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR5")) {
-			MTL_QROMR5_RgWr(integer_value);
+			MTL_QROMR_RgWr(5, integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR4")) {
-			MTL_QROMR4_RgWr(integer_value);
+			MTL_QROMR_RgWr(4, integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR3")) {
-			MTL_QROMR3_RgWr(integer_value);
+			MTL_QROMR_RgWr(3, integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR2")) {
-			MTL_QROMR2_RgWr(integer_value);
+			MTL_QROMR_RgWr(2, integer_value);
 		} else if (!strcmp(regName, "MTL_QROMR1")) {
-			MTL_QROMR1_RgWr(integer_value);
+			MTL_QROMR_RgWr(1, integer_value);
 		} else if (!strcmp(regName, "MTL_QLCR7")) {
 			MTL_QLCR7_RgWr(integer_value);
 		} else if (!strcmp(regName, "MTL_QLCR6")) {
@@ -2384,21 +2399,21 @@ static ssize_t DWC_ETH_QOS_write(struct file *file, const char __user * buf,
 		} else if (!strcmp(regName, "DMA_TDLAR0")) {
 			DMA_TDLAR0_RgWr(integer_value);
 		} else if (!strcmp(regName, "DMA_IER7")) {
-			DMA_IER7_RgWr(integer_value);
+			DMA_IER_RgWr(7, integer_value);
 		} else if (!strcmp(regName, "DMA_IER6")) {
-			DMA_IER6_RgWr(integer_value);
+			DMA_IER_RgWr(6, integer_value);
 		} else if (!strcmp(regName, "DMA_IER5")) {
-			DMA_IER5_RgWr(integer_value);
+			DMA_IER_RgWr(5, integer_value);
 		} else if (!strcmp(regName, "DMA_IER4")) {
-			DMA_IER4_RgWr(integer_value);
+			DMA_IER_RgWr(4, integer_value);
 		} else if (!strcmp(regName, "DMA_IER3")) {
-			DMA_IER3_RgWr(integer_value);
+			DMA_IER_RgWr(3, integer_value);
 		} else if (!strcmp(regName, "DMA_IER2")) {
-			DMA_IER2_RgWr(integer_value);
+			DMA_IER_RgWr(2, integer_value);
 		} else if (!strcmp(regName, "DMA_IER1")) {
-			DMA_IER1_RgWr(integer_value);
+			DMA_IER_RgWr(1, integer_value);
 		} else if (!strcmp(regName, "DMA_IER0")) {
-			DMA_IER0_RgWr(integer_value);
+			DMA_IER_RgWr(0, integer_value);
 		} else if (!strcmp(regName, "MAC_IMR")) {
 			MAC_IMR_RgWr(integer_value);
 		} else if (!strcmp(regName, "MAC_ISR")) {
@@ -2410,21 +2425,21 @@ static ssize_t DWC_ETH_QOS_write(struct file *file, const char __user * buf,
 			       "Could not complete Write Operation MTL_ISR : ReadOnly Register");
 			ret = -EFAULT;
 		} else if (!strcmp(regName, "DMA_SR7")) {
-			DMA_SR7_RgWr(integer_value);
+			DMA_SR_RgWr(7, integer_value);
 		} else if (!strcmp(regName, "DMA_SR6")) {
-			DMA_SR6_RgWr(integer_value);
+			DMA_SR_RgWr(6, integer_value);
 		} else if (!strcmp(regName, "DMA_SR5")) {
-			DMA_SR5_RgWr(integer_value);
+			DMA_SR_RgWr(5, integer_value);
 		} else if (!strcmp(regName, "DMA_SR4")) {
-			DMA_SR4_RgWr(integer_value);
+			DMA_SR_RgWr(4, integer_value);
 		} else if (!strcmp(regName, "DMA_SR3")) {
-			DMA_SR3_RgWr(integer_value);
+			DMA_SR_RgWr(3, integer_value);
 		} else if (!strcmp(regName, "DMA_SR2")) {
-			DMA_SR2_RgWr(integer_value);
+			DMA_SR_RgWr(2, integer_value);
 		} else if (!strcmp(regName, "DMA_SR1")) {
-			DMA_SR1_RgWr(integer_value);
+			DMA_SR_RgWr(1, integer_value);
 		} else if (!strcmp(regName, "DMA_SR0")) {
-			DMA_SR0_RgWr(integer_value);
+			DMA_SR_RgWr(0, integer_value);
 		} else if (!strcmp(regName, "DMA_ISR")) {
 			printk(KERN_ALERT
 			       "Could not complete Write Operation DMA_ISR : ReadOnly Register");
@@ -3160,6 +3175,11 @@ static ssize_t registers_read(struct file *file, char __user * userbuf,
 	MAC_ANC_RgRd(MAC_ANC_val);
 	MAC_LPC_RgRd(MAC_LPC_val);
 	MAC_LPS_RgRd(MAC_LPS_val);
+	MAC_SPI2R_RgRd(MAC_LMIR_val);
+	MAC_SPI2R_RgRd(MAC_SPI2R_val);
+	MAC_SPI1R_RgRd(MAC_SPI1R_val);
+	MAC_SPI0R_RgRd(MAC_SPI0R_val);
+	MAC_PTO_CR_RgRd(MAC_PTO_CR_val);
 	MAC_PPS_WIDTH3_RgRd(MAC_PPS_WIDTH3_val);
 	MAC_PPS_WIDTH2_RgRd(MAC_PPS_WIDTH2_val);
 	MAC_PPS_WIDTH1_RgRd(MAC_PPS_WIDTH1_val);
@@ -3218,13 +3238,13 @@ static ssize_t registers_read(struct file *file, char __user * userbuf,
 	MTL_QOCR3_RgRd(MTL_QOCR3_val);
 	MTL_QOCR2_RgRd(MTL_QOCR2_val);
 	MTL_QOCR1_RgRd(MTL_QOCR1_val);
-	MTL_QROMR7_RgRd(MTL_QROMR7_val);
-	MTL_QROMR6_RgRd(MTL_QROMR6_val);
-	MTL_QROMR5_RgRd(MTL_QROMR5_val);
-	MTL_QROMR4_RgRd(MTL_QROMR4_val);
-	MTL_QROMR3_RgRd(MTL_QROMR3_val);
-	MTL_QROMR2_RgRd(MTL_QROMR2_val);
-	MTL_QROMR1_RgRd(MTL_QROMR1_val);
+	MTL_QROMR_RgRd(7, MTL_QROMR7_val);
+	MTL_QROMR_RgRd(6, MTL_QROMR6_val);
+	MTL_QROMR_RgRd(5, MTL_QROMR5_val);
+	MTL_QROMR_RgRd(4, MTL_QROMR4_val);
+	MTL_QROMR_RgRd(3, MTL_QROMR3_val);
+	MTL_QROMR_RgRd(2, MTL_QROMR2_val);
+	MTL_QROMR_RgRd(1, MTL_QROMR1_val);
 	MTL_QLCR7_RgRd(MTL_QLCR7_val);
 	MTL_QLCR6_RgRd(MTL_QLCR6_val);
 	MTL_QLCR5_RgRd(MTL_QLCR5_val);
@@ -3454,25 +3474,25 @@ static ssize_t registers_read(struct file *file, char __user * userbuf,
 	DMA_TDLAR2_RgRd(DMA_TDLAR2_val);
 	DMA_TDLAR1_RgRd(DMA_TDLAR1_val);
 	DMA_TDLAR0_RgRd(DMA_TDLAR0_val);
-	DMA_IER7_RgRd(DMA_IER7_val);
-	DMA_IER6_RgRd(DMA_IER6_val);
-	DMA_IER5_RgRd(DMA_IER5_val);
-	DMA_IER4_RgRd(DMA_IER4_val);
-	DMA_IER3_RgRd(DMA_IER3_val);
-	DMA_IER2_RgRd(DMA_IER2_val);
-	DMA_IER1_RgRd(DMA_IER1_val);
-	DMA_IER0_RgRd(DMA_IER0_val);
+	DMA_IER_RgRd(7, DMA_IER7_val);
+	DMA_IER_RgRd(6, DMA_IER6_val);
+	DMA_IER_RgRd(5, DMA_IER5_val);
+	DMA_IER_RgRd(4, DMA_IER4_val);
+	DMA_IER_RgRd(3, DMA_IER3_val);
+	DMA_IER_RgRd(2, DMA_IER2_val);
+	DMA_IER_RgRd(1, DMA_IER1_val);
+	DMA_IER_RgRd(0, DMA_IER0_val);
 	MAC_IMR_RgRd(MAC_IMR_val);
 	MAC_ISR_RgRd(MAC_ISR_val);
 	MTL_ISR_RgRd(MTL_ISR_val);
-	DMA_SR7_RgRd(DMA_SR7_val);
-	DMA_SR6_RgRd(DMA_SR6_val);
-	DMA_SR5_RgRd(DMA_SR5_val);
-	DMA_SR4_RgRd(DMA_SR4_val);
-	DMA_SR3_RgRd(DMA_SR3_val);
-	DMA_SR2_RgRd(DMA_SR2_val);
-	DMA_SR1_RgRd(DMA_SR1_val);
-	DMA_SR0_RgRd(DMA_SR0_val);
+	DMA_SR_RgRd(7, DMA_SR7_val);
+	DMA_SR_RgRd(6, DMA_SR6_val);
+	DMA_SR_RgRd(5, DMA_SR5_val);
+	DMA_SR_RgRd(4, DMA_SR4_val);
+	DMA_SR_RgRd(3, DMA_SR3_val);
+	DMA_SR_RgRd(2, DMA_SR2_val);
+	DMA_SR_RgRd(1, DMA_SR1_val);
+	DMA_SR_RgRd(0, DMA_SR0_val);
 	DMA_ISR_RgRd(DMA_ISR_val);
 	DMA_DSR2_RgRd(DMA_DSR2_val);
 	DMA_DSR1_RgRd(DMA_DSR1_val);
@@ -3934,6 +3954,11 @@ static ssize_t registers_read(struct file *file, char __user * userbuf,
 		"MAC_ANC                    :%#x\n"
 		"MAC_LPC                    :%#x\n"
 		"MAC_LPS                    :%#x\n"
+        "MAC_LMIR                   :%#x\n"
+		"MAC_SPI2R                  :%#x\n"
+		"MAC_SPI1R                  :%#x\n"
+		"MAC_SPI0R                  :%#x\n"
+		"MAC_PTO_CR                 :%#x\n"
 		"MAC_PPS_WIDTH3             :%#x\n"
 		"MAC_PPS_WIDTH2             :%#x\n"
 		"MAC_PPS_WIDTH1             :%#x\n"
@@ -4690,6 +4715,11 @@ static ssize_t registers_read(struct file *file, char __user * userbuf,
 		MAC_ANC_val,
 		MAC_LPC_val,
 		MAC_LPS_val,
+		MAC_LMIR_val,
+		MAC_SPI2R_val,
+		MAC_SPI1R_val,
+		MAC_SPI0R_val,
+		MAC_PTO_CR_val,
 		MAC_PPS_WIDTH3_val,
 		MAC_PPS_WIDTH2_val,
 		MAC_PPS_WIDTH1_val,
@@ -10772,6 +10802,82 @@ static const struct file_operations MAC_LPS_fops = {
 	.write = DWC_ETH_QOS_write,
 };
 
+
+static ssize_t MAC_LMIR_read(struct file *file, char __user *userbuf,
+		size_t count, loff_t *ppos)
+{
+	ssize_t ret;
+	MAC_LMIR_RgRd(MAC_LMIR_val);
+	sprintf(debugfs_buf, "MAC_LMIR                  :%#x\n", MAC_LMIR_val);
+	ret = simple_read_from_buffer(userbuf, count, ppos, debugfs_buf, strlen(debugfs_buf));
+	return ret;
+}
+
+static const struct file_operations MAC_LMIR_fops = {
+	.read = MAC_LMIR_read,
+	.write = DWC_ETH_QOS_write,
+};
+
+static ssize_t MAC_SPI2R_read(struct file *file, char __user *userbuf,
+		size_t count, loff_t *ppos)
+{
+	ssize_t ret;
+	MAC_SPI2R_RgRd(MAC_SPI2R_val);
+	sprintf(debugfs_buf, "MAC_SPI2R                  :%#x\n", MAC_SPI2R_val);
+	ret = simple_read_from_buffer(userbuf, count, ppos, debugfs_buf, strlen(debugfs_buf));
+	return ret;
+}
+
+static const struct file_operations MAC_SPI2R_fops = {
+	.read = MAC_SPI2R_read,
+	.write = DWC_ETH_QOS_write,
+};
+
+static ssize_t MAC_SPI1R_read(struct file *file, char __user *userbuf,
+		size_t count, loff_t *ppos)
+{
+	ssize_t ret;
+	MAC_SPI1R_RgRd(MAC_SPI1R_val);
+	sprintf(debugfs_buf, "MAC_SPI1R                  :%#x\n", MAC_SPI1R_val);
+	ret = simple_read_from_buffer(userbuf, count, ppos, debugfs_buf, strlen(debugfs_buf));
+	return ret;
+}
+
+static const struct file_operations MAC_SPI1R_fops = {
+	.read = MAC_SPI1R_read,
+	.write = DWC_ETH_QOS_write,
+};
+
+static ssize_t MAC_SPI0R_read(struct file *file, char __user *userbuf,
+		size_t count, loff_t *ppos)
+{
+	ssize_t ret;
+	MAC_SPI0R_RgRd(MAC_SPI0R_val);
+	sprintf(debugfs_buf, "MAC_SPI0R                  :%#x\n", MAC_SPI0R_val);
+	ret = simple_read_from_buffer(userbuf, count, ppos, debugfs_buf, strlen(debugfs_buf));
+	return ret;
+}
+
+static const struct file_operations MAC_SPI0R_fops = {
+	.read = MAC_SPI0R_read,
+	.write = DWC_ETH_QOS_write,
+};
+
+static ssize_t MAC_PTO_CR_read(struct file *file, char __user *userbuf,
+		size_t count, loff_t *ppos)
+{
+	ssize_t ret;
+	MAC_PTO_CR_RgRd(MAC_PTO_CR_val);
+	sprintf(debugfs_buf, "MAC_PTO_CR                 :%#x\n", MAC_PTO_CR_val);
+	ret = simple_read_from_buffer(userbuf, count, ppos, debugfs_buf, strlen(debugfs_buf));
+	return ret;
+}
+
+static const struct file_operations MAC_PTO_CR_fops = {
+	.read = MAC_PTO_CR_read,
+	.write = DWC_ETH_QOS_write,
+};
+
 static ssize_t MAC_PPS_WIDTH3_read(struct file *file, char __user * userbuf,
 				   size_t count, loff_t * ppos)
 {
@@ -11804,7 +11910,7 @@ static ssize_t MTL_QROMR7_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR7_RgRd(MTL_QROMR7_val);
+	MTL_QROMR_RgRd(7, MTL_QROMR7_val);
 	sprintf(debugfs_buf, "MTL_QROMR7                 :%#x\n",
 		MTL_QROMR7_val);
 	ret =
@@ -11822,7 +11928,7 @@ static ssize_t MTL_QROMR6_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR6_RgRd(MTL_QROMR6_val);
+	MTL_QROMR_RgRd(6, MTL_QROMR6_val);
 	sprintf(debugfs_buf, "MTL_QROMR6                 :%#x\n",
 		MTL_QROMR6_val);
 	ret =
@@ -11840,7 +11946,7 @@ static ssize_t MTL_QROMR5_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR5_RgRd(MTL_QROMR5_val);
+	MTL_QROMR_RgRd(5, MTL_QROMR5_val);
 	sprintf(debugfs_buf, "MTL_QROMR5                 :%#x\n",
 		MTL_QROMR5_val);
 	ret =
@@ -11858,7 +11964,7 @@ static ssize_t MTL_QROMR4_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR4_RgRd(MTL_QROMR4_val);
+	MTL_QROMR_RgRd(4, MTL_QROMR4_val);
 	sprintf(debugfs_buf, "MTL_QROMR4                 :%#x\n",
 		MTL_QROMR4_val);
 	ret =
@@ -11876,7 +11982,7 @@ static ssize_t MTL_QROMR3_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR3_RgRd(MTL_QROMR3_val);
+	MTL_QROMR_RgRd(3, MTL_QROMR3_val);
 	sprintf(debugfs_buf, "MTL_QROMR3                 :%#x\n",
 		MTL_QROMR3_val);
 	ret =
@@ -11894,7 +12000,7 @@ static ssize_t MTL_QROMR2_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR2_RgRd(MTL_QROMR2_val);
+	MTL_QROMR_RgRd(2, MTL_QROMR2_val);
 	sprintf(debugfs_buf, "MTL_QROMR2                 :%#x\n",
 		MTL_QROMR2_val);
 	ret =
@@ -11912,7 +12018,7 @@ static ssize_t MTL_QROMR1_read(struct file *file, char __user * userbuf,
 			       size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	MTL_QROMR1_RgRd(MTL_QROMR1_val);
+	MTL_QROMR_RgRd(1, MTL_QROMR1_val);
 	sprintf(debugfs_buf, "MTL_QROMR1                 :%#x\n",
 		MTL_QROMR1_val);
 	ret =
@@ -16510,7 +16616,7 @@ static ssize_t DMA_IER7_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER7_RgRd(DMA_IER7_val);
+	DMA_IER_RgRd(7, DMA_IER7_val);
 	sprintf(debugfs_buf, "DMA_IER7        :%#x\n", DMA_IER7_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16527,7 +16633,7 @@ static ssize_t DMA_IER6_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER6_RgRd(DMA_IER6_val);
+	DMA_IER_RgRd(6, DMA_IER6_val);
 	sprintf(debugfs_buf, "DMA_IER6        :%#x\n", DMA_IER6_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16544,7 +16650,7 @@ static ssize_t DMA_IER5_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER5_RgRd(DMA_IER5_val);
+	DMA_IER_RgRd(5, DMA_IER5_val);
 	sprintf(debugfs_buf, "DMA_IER5        :%#x\n", DMA_IER5_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16561,7 +16667,7 @@ static ssize_t DMA_IER4_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER4_RgRd(DMA_IER4_val);
+	DMA_IER_RgRd(4, DMA_IER4_val);
 	sprintf(debugfs_buf, "DMA_IER4        :%#x\n", DMA_IER4_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16578,7 +16684,7 @@ static ssize_t DMA_IER3_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER3_RgRd(DMA_IER3_val);
+	DMA_IER_RgRd(3, DMA_IER3_val);
 	sprintf(debugfs_buf, "DMA_IER3        :%#x\n", DMA_IER3_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16595,7 +16701,7 @@ static ssize_t DMA_IER2_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER2_RgRd(DMA_IER2_val);
+	DMA_IER_RgRd(2, DMA_IER2_val);
 	sprintf(debugfs_buf, "DMA_IER2        :%#x\n", DMA_IER2_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16612,7 +16718,7 @@ static ssize_t DMA_IER1_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER1_RgRd(DMA_IER1_val);
+	DMA_IER_RgRd(1, DMA_IER1_val);
 	sprintf(debugfs_buf, "DMA_IER1        :%#x\n", DMA_IER1_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16629,7 +16735,7 @@ static ssize_t DMA_IER0_read(struct file *file, char __user * userbuf,
 			     size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_IER0_RgRd(DMA_IER0_val);
+	DMA_IER_RgRd(0, DMA_IER0_val);
 	sprintf(debugfs_buf, "DMA_IER0        :%#x\n", DMA_IER0_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16697,7 +16803,7 @@ static ssize_t DMA_SR7_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR7_RgRd(DMA_SR7_val);
+	DMA_SR_RgRd(7, DMA_SR7_val);
 	sprintf(debugfs_buf, "DMA_SR7         :%#x\n", DMA_SR7_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16714,7 +16820,7 @@ static ssize_t DMA_SR6_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR6_RgRd(DMA_SR6_val);
+	DMA_SR_RgRd(6, DMA_SR6_val);
 	sprintf(debugfs_buf, "DMA_SR6         :%#x\n", DMA_SR6_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16731,7 +16837,7 @@ static ssize_t DMA_SR5_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR5_RgRd(DMA_SR5_val);
+	DMA_SR_RgRd(5, DMA_SR5_val);
 	sprintf(debugfs_buf, "DMA_SR5         :%#x\n", DMA_SR5_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16748,7 +16854,7 @@ static ssize_t DMA_SR4_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR4_RgRd(DMA_SR4_val);
+	DMA_SR_RgRd(4, DMA_SR4_val);
 	sprintf(debugfs_buf, "DMA_SR4         :%#x\n", DMA_SR4_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16765,7 +16871,7 @@ static ssize_t DMA_SR3_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR3_RgRd(DMA_SR3_val);
+	DMA_SR_RgRd(3, DMA_SR3_val);
 	sprintf(debugfs_buf, "DMA_SR3         :%#x\n", DMA_SR3_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16782,7 +16888,7 @@ static ssize_t DMA_SR2_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR2_RgRd(DMA_SR2_val);
+	DMA_SR_RgRd(2, DMA_SR2_val);
 	sprintf(debugfs_buf, "DMA_SR2         :%#x\n", DMA_SR2_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16799,7 +16905,7 @@ static ssize_t DMA_SR1_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR1_RgRd(DMA_SR1_val);
+	DMA_SR_RgRd(1, DMA_SR1_val);
 	sprintf(debugfs_buf, "DMA_SR1         :%#x\n", DMA_SR1_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -16816,7 +16922,7 @@ static ssize_t DMA_SR0_read(struct file *file, char __user * userbuf,
 			    size_t count, loff_t * ppos)
 {
 	ssize_t ret;
-	DMA_SR0_RgRd(DMA_SR0_val);
+	DMA_SR_RgRd(0, DMA_SR0_val);
 	sprintf(debugfs_buf, "DMA_SR0         :%#x\n", DMA_SR0_val);
 	ret =
 	    simple_read_from_buffer(userbuf, count, ppos, debugfs_buf,
@@ -20994,6 +21100,11 @@ int create_debug_files()
 	struct dentry *MAC_ANC;
 	struct dentry *MAC_LPC;
 	struct dentry *MAC_LPS;
+    struct dentry *MAC_LMIR;
+	struct dentry *MAC_SPI2R;
+	struct dentry *MAC_SPI1R;
+	struct dentry *MAC_SPI0R;
+	struct dentry *MAC_PTO_CR;
 	struct dentry *MAC_PPS_WIDTH3;
 	struct dentry *MAC_PPS_WIDTH2;
 	struct dentry *MAC_PPS_WIDTH1;
@@ -24357,6 +24468,41 @@ int create_debug_files()
 		goto remove_debug_file;
 	}
 
+	MAC_LMIR = debugfs_create_file("MAC_LMIR", 744, dir, &MAC_LMIR_val, &MAC_LMIR_fops);
+	if(MAC_LMIR == NULL) {
+		printk(KERN_INFO "error creating file: MAC_LMIR\n");
+		ret = -ENODEV;
+		goto remove_debug_file;
+	}
+
+	MAC_SPI2R = debugfs_create_file("MAC_SPI2R", 744, dir, &MAC_SPI2R_val, &MAC_SPI2R_fops);
+	if(MAC_SPI2R == NULL) {
+		printk(KERN_INFO "error creating file: MAC_SPI2R\n");
+		ret = -ENODEV;
+		goto remove_debug_file;
+	}
+
+	MAC_SPI1R = debugfs_create_file("MAC_SPI1R", 744, dir, &MAC_SPI1R_val, &MAC_SPI1R_fops);
+	if(MAC_SPI1R == NULL) {
+		printk(KERN_INFO "error creating file: MAC_SPI1R\n");
+		ret = -ENODEV;
+		goto remove_debug_file;
+	}
+
+	MAC_SPI0R = debugfs_create_file("MAC_SPI0R", 744, dir, &MAC_SPI0R_val, &MAC_SPI0R_fops);
+	if(MAC_SPI0R == NULL) {
+		printk(KERN_INFO "error creating file: MAC_SPI0R\n");
+		ret = -ENODEV;
+		goto remove_debug_file;
+	}
+
+	MAC_PTO_CR = debugfs_create_file("MAC_PTO_CR", 744, dir, &MAC_PTO_CR_val, &MAC_PTO_CR_fops);
+	if(MAC_PTO_CR == NULL) {
+		printk(KERN_INFO "error creating file: MAC_PTO_CR\n");
+		ret = -ENODEV;
+		goto remove_debug_file;
+	}
+
 	MAC_PPS_WIDTH3 =
 	    debugfs_create_file("MAC_PPS_WIDTH3", 744, dir, &MAC_PPS_WIDTH3_val,
 				&MAC_PPS_WIDTH3_fops);
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c
index 5123eeb..53386e3 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c
@@ -1052,6 +1052,14 @@ static unsigned int DWC_ETH_QOS_map_skb(struct net_device *dev,
 		INCR_TX_DESC_INDEX(index, 1);
 		buffer = GET_TX_BUF_PTR(qInx, index);
 	}
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+	if (pdata->via_reg_or_desc) {
+		DBGPR("Skipped preparing index %d "\
+			"(Double VLAN Context descriptor)\n\n", index);
+		INCR_TX_DESC_INDEX(index, 1);
+		buffer = GET_TX_BUF_PTR(qInx, index);
+	}
+#endif /* End of DWC_ETH_QOS_ENABLE_DVLAN */
 
 	if (vartso_enable) {
 		hdr_len = skb_transport_offset(skb) + tcp_hdrlen(skb);
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c
index 1f39b19..aa6091f 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c
@@ -33,6 +33,7 @@
  * @brief: Driver functions.
  */
 #include "DWC_ETH_QOS_yheader.h"
+#include "DWC_ETH_QOS_yapphdr.h"
 
 extern ULONG dwc_eth_qos_pci_base_addr;
 
@@ -285,6 +286,85 @@ static void config_pfc(int enb_dis)
 	MAC_RFCR_PFCE_UdfWr(enb_dis);
 }
 
+/*!
+* \brief This sequence is used to configure mac double vlan processing feature.
+* \param[in] enb_dis
+* \return Success or Failure
+* \retval  0 Success
+* \retval -1 Failure
+*/
+
+static INT config_tx_outer_vlan(UINT op_type, UINT outer_vlt)
+{
+	printk(KERN_ALERT "--> config_tx_outer_vlan()\n");
+
+	MAC_VLANTIRR_VLTI_UdfWr(0x0);
+	MAC_VLANTIRR_VLT_UdfWr(outer_vlt);
+	MAC_VLANTIRR_VLP_UdfWr(0x1);
+	MAC_VLANTIRR_VLC_UdfWr(op_type);
+
+	if (op_type == DWC_ETH_QOS_DVLAN_NONE) {
+		MAC_VLANTIRR_VLP_UdfWr(0x0);
+		MAC_VLANTIRR_VLT_UdfWr(0x0);
+	}
+
+	printk(KERN_ALERT "<-- config_tx_outer_vlan()\n");
+
+	return Y_SUCCESS;
+}
+
+static INT config_tx_inner_vlan(UINT op_type, UINT inner_vlt)
+{
+	printk(KERN_ALERT "--> config_tx_inner_vlan()\n");
+
+	MAC_IVLANTIRR_VLTI_UdfWr(0x0);
+	MAC_IVLANTIRR_VLT_UdfWr(inner_vlt);
+	MAC_IVLANTIRR_VLP_UdfWr(0x1);
+	MAC_IVLANTIRR_VLC_UdfWr(op_type);
+
+	if (op_type == DWC_ETH_QOS_DVLAN_NONE) {
+		MAC_IVLANTIRR_VLP_UdfWr(0x0);
+		MAC_IVLANTIRR_VLT_UdfWr(0x0);
+	}
+
+	printk(KERN_ALERT "<-- config_tx_inner_vlan()\n");
+
+	return Y_SUCCESS;
+}
+
+static INT config_svlan(UINT flags)
+{
+	INT ret = Y_SUCCESS;
+
+	printk(KERN_ALERT "--> config_svlan()\n");
+
+	MAC_VLANTR_ESVL_UdfWr(1);
+	if (flags == DWC_ETH_QOS_DVLAN_NONE) {
+		MAC_VLANTR_ESVL_UdfWr(0);
+		MAC_IVLANTIRR_CSVL_UdfWr(0);
+		MAC_VLANTIRR_CSVL_UdfWr(0);
+	} else if (flags == DWC_ETH_QOS_DVLAN_INNER) {
+		MAC_IVLANTIRR_CSVL_UdfWr(1);
+	} else if (flags == DWC_ETH_QOS_DVLAN_OUTER) {
+		MAC_VLANTIRR_CSVL_UdfWr(1);
+	} else if (flags == DWC_ETH_QOS_DVLAN_BOTH) {
+		MAC_IVLANTIRR_CSVL_UdfWr(1);
+		MAC_VLANTIRR_CSVL_UdfWr(1);
+	} else {
+		printk(KERN_ALERT "ERROR : double VLAN enable SVLAN configuration - Invalid argument");
+		ret = Y_FAILURE;
+	}
+
+	printk(KERN_ALERT "<-- config_svlan()\n");
+
+	return ret;
+}
+
+static VOID config_dvlan(bool enb_dis)
+{
+	MAC_VLANTR_EDVLP_UdfWr(enb_dis);
+}
+
 
 /*!
 * \brief This sequence is used to enable/disable ARP offload
@@ -1712,6 +1792,10 @@ static INT config_idle_slope(UINT qInx,
 static INT config_low_credit(UINT qInx,
 			UINT lowCredit)
 {
+	INT lowCredit_neg = lowCredit;
+	printk(KERN_CRIT "lowCreidt = %08x lowCredit_neg:%08x\n",
+			lowCredit, lowCredit_neg);
+	MTL_QLCR_LC_UdfWr(qInx, lowCredit_neg);
 
   MTL_QLCR_LC_UdfWr(qInx, lowCredit);
 
@@ -1977,16 +2061,23 @@ static VOID configure_mac_addr0_reg(UCHAR *mac_addr)
 			(mac_addr[1] << 8) | (mac_addr[0])));
 }
 
-static VOID configure_rx_outer_vlan_stripping(u32 cmd)
+static VOID config_rx_outer_vlan_stripping(u32 cmd)
 {
 	MAC_VLANTR_EVLS_UdfWr(cmd);
 }
 
-static VOID configure_rx_inner_vlan_stripping(u32 cmd)
+static VOID config_rx_inner_vlan_stripping(u32 cmd)
 {
 	MAC_VLANTR_EIVLS_UdfWr(cmd);
 }
 
+static VOID config_ptpoffload_engine(UINT pto_cr, UINT mc_uc)
+{
+	MAC_PTO_CR_RgWr(pto_cr);
+    MAC_TCR_TSENMACADDR_UdfWr(mc_uc);
+}
+
+
 static VOID configure_reg_vlan_control(struct DWC_ETH_QOS_tx_wrapper_descriptor *desc_data)
 {
 	USHORT vlan_id = desc_data->vlan_tag_id;
@@ -2830,9 +2921,15 @@ static INT enable_dma_interrupts(UINT qInx)
 	/* FBE - Fatal Bus Error Enable */
 	DMA_IER_RgRd(qInx, varDMA_IER);
 	varDMA_IER = varDMA_IER & (ULONG) (0x2e00);
+#ifdef DWC_ETH_QOS_VER_4_0
 	varDMA_IER = varDMA_IER | ((0x1) << 1) |
 	    ((0x1) << 6) | ((0x1) << 7) | ((0x1) << 8) | ((0x1) << 15) |
 	    ((0x1) << 16) | ((0x1) << 12);
+#else
+	varDMA_IER = varDMA_IER | ((0x1) << 1) | ((0x1) << 2) |
+	    ((0x1) << 6) | ((0x1) << 7) | ((0x1) << 8) | ((0x1) << 14) |
+	    ((0x1) << 15) | ((0x1) << 12);
+#endif
 #ifndef DWC_ETH_QOS_TXPOLLING_MODE_ENABLE
 	/* TIE - Transmit Interrupt Enable */
 	/* TBUE - Transmit Buffer Unavailable Enable */
@@ -3530,6 +3627,36 @@ static void pre_transmit(struct DWC_ETH_QOS_prv_data *pdata,
 		buffer = GET_TX_BUF_PTR(qInx, tx_desc_data->cur_tx);
 	}
 #endif	/* DWC_ETH_QOS_ENABLE_VLAN_TAG */
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+	if (pdata->via_reg_or_desc == DWC_ETH_QOS_VIA_DESC) {
+		/* put vlan tag in contex descriptor and set other control
+		 * bits accordingly */
+
+		if (pdata->in_out & DWC_ETH_QOS_DVLAN_OUTER) {
+			TX_CONTEXT_DESC_TDES3_VT_Mlf_Wr(TX_CONTEXT_DESC->TDES3,
+					pdata->outer_vlan_tag);
+			TX_CONTEXT_DESC_TDES3_VLTV_Mlf_Wr(TX_CONTEXT_DESC->TDES3, 0x1);
+			/* operation (insertion/replacement/deletion/none) will be
+			 * specified in normal descriptor TDES2
+			 * */
+		}
+		if (pdata->in_out & DWC_ETH_QOS_DVLAN_INNER) {
+			TX_CONTEXT_DESC_TDES2_IVT_Mlf_Wr(TX_CONTEXT_DESC->TDES2,
+								pdata->inner_vlan_tag);
+			TX_CONTEXT_DESC_TDES3_IVLTV_Mlf_Wr(TX_CONTEXT_DESC->TDES3, 0x1);
+			TX_CONTEXT_DESC_TDES3_IVTIR_Mlf_Wr(TX_CONTEXT_DESC->TDES3,
+								pdata->op_type);
+		}
+		TX_CONTEXT_DESC_TDES3_CTXT_Mlf_Wr(TX_CONTEXT_DESC->TDES3, 0x1);
+		TX_CONTEXT_DESC_TDES3_OWN_Mlf_Wr(TX_CONTEXT_DESC->TDES3, 0x1);
+
+		original_start_index = tx_desc_data->cur_tx;
+		INCR_TX_DESC_INDEX(tx_desc_data->cur_tx, 1);
+		start_index = tx_desc_data->cur_tx;
+		TX_NORMAL_DESC = GET_TX_DESC_PTR(qInx, tx_desc_data->cur_tx);
+		buffer = GET_TX_BUF_PTR(qInx, tx_desc_data->cur_tx);
+	}
+#endif /* End of DWC_ETH_QOS_ENABLE_DVLAN */
 
 	/* prepare CONTEXT descriptor for TSO */
 	TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_Mlf_Rd(
@@ -3588,6 +3715,16 @@ static void pre_transmit(struct DWC_ETH_QOS_prv_data *pdata,
 	}
 #endif	/* DWC_ETH_QOS_ENABLE_VLAN_TAG */
 
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+	if (pdata->via_reg_or_desc == DWC_ETH_QOS_VIA_DESC) {
+		if (pdata->in_out & DWC_ETH_QOS_DVLAN_OUTER) {
+			TX_NORMAL_DESC_TDES2_VTIR_Mlf_Wr(TX_NORMAL_DESC->TDES2,
+								pdata->op_type);
+		}
+	}
+#endif /* End of DWC_ETH_QOS_ENABLE_DVLAN */
+
+
 	/* Mark it as First Descriptor */
 	TX_NORMAL_DESC_TDES3_FD_Mlf_Wr(TX_NORMAL_DESC->TDES3, 0x1);
 	/* Enable CRC and Pad Insertion (NOTE: set this only
@@ -3851,127 +3988,6 @@ static INT get_tx_descriptor_last(t_TX_NORMAL_DESC *txdesc)
 	}
 }
 
-/*!
-* \brief Save and restore device interrupt status
-* \details API used to save and restore the status of device interrupts.
-*
-* \param[in] int_state   - enum value for the ste, eSAVE or eRESTORE
-* \return none
-*/
-
-static void save_interrupt_status(e_int_state int_state)
-{
-	static UINT R0;
-	static UINT W0;
-
-	if (int_state == eSAVE) {
-		DMA_IER0_RgRd(R0);
-		R0 &= 0x11c7;
-	} else {
-		DMA_IER0_RgRd(W0);
-		W0 |= R0;
-		DMA_IER0_RgWr(W0);
-	}
-}
-
-/*!
-* \brief Enables the device interrupts
-* \details API that can be used to enable the device level interrupts
-*
-* \param[in] int_id      - enum value for the interrupt
-* \return returns integer
-* \retval Y_SUCCESS
-* \retval -Y_FAILURE
-*/
-
-static INT DWC_ETH_QOS_enable_interrupt(e_DWC_ETH_QOS_int_id int_id)
-{
-
-	switch (int_id) {
-	case eDWC_ETH_QOS_DMA_ISR_DC0IS:
-		DMA_IER0_TIE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_TI:
-		DMA_IER0_TIE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_TPS:
-		DMA_IER0_TXSE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_TBU:
-		DMA_IER0_TBUE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_RI:
-		DMA_IER0_RIE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_RBU:
-		DMA_IER0_RBUE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_RPS:
-		DMA_IER0_RSE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_FBE:
-		DMA_IER0_FBEE_UdfWr(1);
-		break;
-	case eDWC_ETH_QOS_ALL:
-		save_interrupt_status(eRESTORE);
-		break;
-	default:
-		return -Y_FAILURE;
-	}
-	return Y_SUCCESS;
-}
-
-/*!
-* \brief Disables the device interrupts
-* \details API that can be used to disable the device level interrupts.
-*
-* \param[in] int_id      - enum value for the interrupt
-* \return returns integer
-* \retval Y_SUCCESS
-* \retval -Y_FAILURE
-*/
-
-static INT DWC_ETH_QOS_disable_interrupt(e_DWC_ETH_QOS_int_id int_id)
-{
-	ULONG var;
-
-	switch (int_id) {
-	case eDWC_ETH_QOS_DMA_ISR_DC0IS:
-		DMA_IER0_TIE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_TI:
-		DMA_IER0_TIE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_TPS:
-		DMA_IER0_TXSE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_TBU:
-		DMA_IER0_TBUE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_RI:
-		DMA_IER0_RIE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_RBU:
-		DMA_IER0_RBUE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_RPS:
-		DMA_IER0_RSE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_DMA_SR0_FBE:
-		DMA_IER0_FBEE_UdfWr(0);
-		break;
-	case eDWC_ETH_QOS_ALL:
-		save_interrupt_status(eSAVE);
-
-		DMA_IER0_RgRd(var);
-		var = (var & (0xffffee38)) | (0);
-		DMA_IER0_RgWr(var);
-		break;
-	default:
-		return -Y_FAILURE;
-	}
-	return Y_SUCCESS;
-}
 
 /*!
 * \brief Exit routine
@@ -4158,6 +4174,7 @@ static INT configure_mtl_queue(UINT qInx, struct DWC_ETH_QOS_prv_data *pdata)
 
 			MTL_QROMR_EHFC_UdfWr(qInx, 0x1);
 
+#ifdef DWC_ETH_QOS_VER_4_0
 			/* Set Threshold for Activating Flow Contol space for min 2 frames
 			 * ie, (1500 * 2) + (64 * 2) = 3128 bytes, rounding off to 4k
 			 *
@@ -4182,6 +4199,33 @@ static INT configure_mtl_queue(UINT qInx, struct DWC_ETH_QOS_prv_data *pdata)
 				MTL_QROMR_RFD_UdfWr(qInx, 0x7);
 				MTL_QROMR_RFA_UdfWr(qInx, 0x2);
 			}
+#else
+			/* Set Threshold for Activating Flow Contol space for min 2 frames
+			 * ie, (1500 * 1) = 1500 bytes
+			 *
+			 * Set Threshold for Deactivating Flow Contol for space of
+			 * min 1 frame (frame size 1500bytes) in receive fifo */
+			if (p_rx_fifo == eDWC_ETH_QOS_4k) {
+				/* This violates the above formula because of FIFO size limit
+				 * therefore overflow may occur inspite of this
+				 * */
+				MTL_QROMR_RFD_UdfWr(qInx, 0x3); //Full - 3K
+				MTL_QROMR_RFA_UdfWr(qInx, 0x1); //Full - 1.5K
+			}
+			else if (p_rx_fifo == eDWC_ETH_QOS_8k) {
+				MTL_QROMR_RFD_UdfWr(qInx, 0x6); //Full - 4K
+				MTL_QROMR_RFA_UdfWr(qInx, 0xA); //Full - 6K
+			}
+			else if (p_rx_fifo == eDWC_ETH_QOS_16k) {
+				MTL_QROMR_RFD_UdfWr(qInx, 0x6); //Full - 4K
+				MTL_QROMR_RFA_UdfWr(qInx, 0x12); //Full - 10K
+			}
+			else if (p_rx_fifo == eDWC_ETH_QOS_32k) {
+				MTL_QROMR_RFD_UdfWr(qInx, 0x6); //Full - 4K
+				MTL_QROMR_RFA_UdfWr(qInx, 0x1E); //Full - 16K
+			}
+
+#endif
 		}
 	}
 
@@ -4235,6 +4279,12 @@ static INT configure_dma_channel(UINT qInx,
 	/* set RX PBL = 256 */
 	DMA_RCR_PBL_UdfWr(qInx, 32);
 
+    /* To get Best Performance */
+    DMA_SBUS_BLEN16_UdfWr(1);
+    DMA_SBUS_BLEN8_UdfWr(1);
+    DMA_SBUS_BLEN4_UdfWr(1);
+    DMA_SBUS_RD_OSR_LMT_UdfWr(2);
+
 	/* enable TSO if HW supports */
 	if (pdata->hw_feat.tso_en)
 		DMA_TCR_TSE_UdfWr(qInx, 0x1);
@@ -4392,8 +4442,8 @@ static INT configure_mac(struct DWC_ETH_QOS_prv_data *pdata)
 
 	/*Enable MAC Transmit process */
 	/*Enable MAC Receive process */
-	/*Enable padding - disabled */
-	/*Enable CRC stripping - disabled */
+	/*Automatic Pad or CRC Stripping (Bit 21) - disabled */
+	/*CRC stripping for Type packets (Bit 20) - disabled */
 	MAC_MCR_RgRd(varMAC_MCR);
 	varMAC_MCR = varMAC_MCR & (ULONG) (0xffcfff7c);
 	varMAC_MCR = varMAC_MCR | (0x1 << 0) | (0x1 << 1);
@@ -4626,8 +4676,6 @@ void DWC_ETH_QOS_init_function_ptrs_dev(struct hw_if_struct *hw_if)
 
 	hw_if->pre_xmit = pre_transmit;
 	hw_if->dev_read = device_read;
-	hw_if->enable_int = DWC_ETH_QOS_enable_interrupt;
-	hw_if->disable_int = DWC_ETH_QOS_disable_interrupt;
 	hw_if->init = DWC_ETH_QOS_yinit;
 	hw_if->exit = DWC_ETH_QOS_yexit;
 	/* Descriptor related Sequences have to be initialized here */
@@ -4652,15 +4700,17 @@ void DWC_ETH_QOS_init_function_ptrs_dev(struct hw_if_struct *hw_if)
 	hw_if->disable_remote_pmt = disable_remote_pmt_operation;
 	hw_if->configure_rwk_filter = configure_rwk_filter_registers;
 
-	/* for TX vlan control */
-	hw_if->enable_vlan_reg_control = configure_reg_vlan_control;
-	hw_if->enable_vlan_desc_control = configure_desc_vlan_control;
+    /* for TX vlan control */
+    hw_if->enable_vlan_reg_control = configure_reg_vlan_control;
+    hw_if->enable_vlan_desc_control = configure_desc_vlan_control;
+
+
 
 	/* for rx vlan stripping */
-	hw_if->configure_rx_outer_vlan_stripping =
-	    configure_rx_outer_vlan_stripping;
-	hw_if->configure_rx_inner_vlan_stripping =
-	    configure_rx_inner_vlan_stripping;
+	hw_if->config_rx_outer_vlan_stripping =
+	    config_rx_outer_vlan_stripping;
+	hw_if->config_rx_inner_vlan_stripping =
+	    config_rx_inner_vlan_stripping;
 
 	/* for sa(source address) insert/replace */
 	hw_if->configure_mac_addr0_reg = configure_mac_addr0_reg;
@@ -4769,6 +4819,7 @@ void DWC_ETH_QOS_init_function_ptrs_dev(struct hw_if_struct *hw_if)
 	hw_if->update_vlan_hash_table_reg = update_vlan_hash_table_reg;
 	hw_if->update_vlan_id = update_vlan_id;
 	hw_if->config_vlan_filtering = config_vlan_filtering;
+	hw_if->config_mac_for_vlan_pkt = configure_mac_for_vlan_pkt;
 	hw_if->get_vlan_tag_comparison = get_vlan_tag_comparison;
 
 	/* for differnet PHY interconnect */
@@ -4796,5 +4847,16 @@ void DWC_ETH_QOS_init_function_ptrs_dev(struct hw_if_struct *hw_if)
 	/* for PFC */
 	hw_if->config_pfc = config_pfc;
 
+    /* for MAC Double VLAN Processing config */
+	hw_if->config_tx_outer_vlan = config_tx_outer_vlan;
+	hw_if->config_tx_inner_vlan = config_tx_inner_vlan;
+	hw_if->config_svlan = config_svlan;
+	hw_if->config_dvlan = config_dvlan;
+	hw_if->config_rx_outer_vlan_stripping = config_rx_outer_vlan_stripping;
+	hw_if->config_rx_inner_vlan_stripping = config_rx_inner_vlan_stripping;
+
+	/* for PTP Offloading */
+	hw_if->config_ptpoffload_engine = config_ptpoffload_engine;
+
 	DBGPR("<--DWC_ETH_QOS_init_function_ptrs_dev\n");
 }
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
index a5319a6..695aa3a 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
@@ -509,6 +509,8 @@ irqreturn_t DWC_ETH_QOS_ISR_SW_DWC_ETH_QOS(int irq, void *device_id)
 		/* handle only those DMA interrupts which are enabled */
 		varDMA_SR = (varDMA_SR & varDMA_IER);
 
+		DBGPR("DMA_SR[%d] = %#lx\n", qInx, varDMA_SR);
+
 		if (varDMA_SR == 0)
 			continue;
 
@@ -1959,6 +1961,12 @@ UINT DWC_ETH_QOS_get_total_desc_cnt(struct DWC_ETH_QOS_prv_data *pdata,
 		pdata->xstats.tx_vlan_pkt_n++;
 	}
 #endif
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+	if (pdata->via_reg_or_desc == DWC_ETH_QOS_VIA_DESC) {
+		/* we need one context descriptor to carry vlan tag info */
+		count++;
+	}
+#endif /* End of DWC_ETH_QOS_ENABLE_DVLAN */
 
 	return count;
 }
@@ -2084,6 +2092,11 @@ static int DWC_ETH_QOS_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	if (varvlan_pkt == 0x1)
 		count++;
 #endif
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+	if (pdata->via_reg_or_desc == DWC_ETH_QOS_VIA_DESC) {
+		count++;
+	}
+#endif /* End of DWC_ETH_QOS_ENABLE_DVLAN */
 
 	desc_data->free_desc_cnt -= count;
 	desc_data->tx_pkt_queued += count;
@@ -3554,23 +3567,23 @@ static int DWC_ETH_QOS_set_features(struct net_device *dev, netdev_features_t fe
 	if (((features & NETIF_F_HW_VLAN_CTAG_RX) == NETIF_F_HW_VLAN_CTAG_RX)
 	    && !dev_rxvlan_enable) {
 		pdata->dev_state |= NETIF_F_HW_VLAN_CTAG_RX;
-		hw_if->configure_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_VLAN_STRIP_ALWAYS);
+		hw_if->config_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_VLAN_STRIP_ALWAYS);
 		printk(KERN_ALERT "State change - rxvlan enable\n");
 	} else if (((features & NETIF_F_HW_VLAN_CTAG_RX) == 0) &&
 			dev_rxvlan_enable) {
 		pdata->dev_state &= ~NETIF_F_HW_VLAN_CTAG_RX;
-		hw_if->configure_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_NO_VLAN_STRIP);
+		hw_if->config_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_NO_VLAN_STRIP);
 		printk(KERN_ALERT "State change - rxvlan disable\n");
 	}
 
 	dev_txvlan_enable = !!(pdata->dev_state & NETIF_F_HW_VLAN_CTAG_TX);
-	if (((features & NETIF_F_HW_VLAN_CTAG_RX) == NETIF_F_HW_VLAN_CTAG_RX)
+	if (((features & NETIF_F_HW_VLAN_CTAG_TX) == NETIF_F_HW_VLAN_CTAG_TX)
 	    && !dev_txvlan_enable) {
-		pdata->dev_state |= NETIF_F_HW_VLAN_CTAG_RX;
+		pdata->dev_state |= NETIF_F_HW_VLAN_CTAG_TX;
 		printk(KERN_ALERT "State change - txvlan enable\n");
-	} else if (((features & NETIF_F_HW_VLAN_CTAG_RX) == 0) &&
+	} else if (((features & NETIF_F_HW_VLAN_CTAG_TX) == 0) &&
 			dev_txvlan_enable) {
-		pdata->dev_state &= ~NETIF_F_HW_VLAN_CTAG_RX;
+		pdata->dev_state &= ~NETIF_F_HW_VLAN_CTAG_TX;
 		printk(KERN_ALERT "State change - txvlan disable\n");
 	}
 #endif	/* DWC_ETH_QOS_ENABLE_VLAN_TAG */
@@ -4018,6 +4031,7 @@ static int DWC_ETH_QOS_config_arp_offload(struct net_device *dev,
 	/* configure the L3 filters */
 	hw_if->config_arp_offload(req->flags);
 	hw_if->update_arp_offload_ip_addr(l_arp_offload.ip_addr);
+	pdata->arp_offload = req->flags;
 
 	printk(KERN_ALERT "Successfully %s arp Offload\n",
 		(req->flags ? "ENABLED" : "DISABLED"));
@@ -4124,6 +4138,299 @@ static int DWC_ETH_QOS_config_mac_loopback_mode(struct net_device *dev,
 	return ret;
 }
 
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+static INT config_tx_dvlan_processing_via_reg(struct DWC_ETH_QOS_prv_data *pdata,
+						UINT flags)
+{
+	struct hw_if_struct *hw_if = &(pdata->hw_if);
+
+	printk(KERN_ALERT "--> config_tx_dvlan_processing_via_reg()\n");
+
+	if (pdata->in_out & DWC_ETH_QOS_DVLAN_OUTER)
+		hw_if->config_tx_outer_vlan(pdata->op_type,
+					pdata->outer_vlan_tag);
+
+	if (pdata->in_out & DWC_ETH_QOS_DVLAN_INNER)
+		hw_if->config_tx_inner_vlan(pdata->op_type,
+					pdata->inner_vlan_tag);
+
+	if (flags == DWC_ETH_QOS_DVLAN_DISABLE)
+		hw_if->config_mac_for_vlan_pkt(); /* restore default configurations */
+	else
+		hw_if->config_dvlan(1);
+
+	printk(KERN_ALERT "<-- config_tx_dvlan_processing_via_reg()\n");
+
+	return Y_SUCCESS;
+}
+
+static int config_tx_dvlan_processing_via_desc(struct DWC_ETH_QOS_prv_data *pdata,
+						UINT flags)
+{
+	struct hw_if_struct *hw_if = &(pdata->hw_if);
+
+	printk(KERN_ALERT "-->config_tx_dvlan_processing_via_desc\n");
+
+	if (flags == DWC_ETH_QOS_DVLAN_DISABLE) {
+		hw_if->config_mac_for_vlan_pkt(); /* restore default configurations */
+		pdata->via_reg_or_desc = 0;
+	} else {
+		hw_if->config_dvlan(1);
+	}
+
+	if (pdata->in_out & DWC_ETH_QOS_DVLAN_INNER)
+			MAC_IVLANTIRR_VLTI_UdfWr(1);
+
+	if (pdata->in_out & DWC_ETH_QOS_DVLAN_OUTER)
+			MAC_VLANTIRR_VLTI_UdfWr(1);
+
+	printk(KERN_ALERT "<--config_tx_dvlan_processing_via_desc\n");
+
+	return Y_SUCCESS;
+}
+
+/*!
+ * \details This function is invoked by ioctl function when user issues
+ * an ioctl command to configure mac double vlan processing feature.
+ *
+ * \param[in] pdata - pointer to private data structure.
+ * \param[in] flags – Each bit in this variable carry some information related
+ *		      double vlan processing.
+ *
+ * \return integer
+ *
+ * \retval zero on success and -ve number on failure.
+ */
+static int DWC_ETH_QOS_config_tx_dvlan_processing(
+		struct DWC_ETH_QOS_prv_data *pdata,
+		struct ifr_data_struct *req)
+{
+	struct DWC_ETH_QOS_config_dvlan l_config_doubule_vlan,
+					  *u_config_doubule_vlan = req->ptr;
+	int ret = 0;
+
+	DBGPR("-->DWC_ETH_QOS_config_tx_dvlan_processing\n");
+
+	if(copy_from_user(&l_config_doubule_vlan, u_config_doubule_vlan,
+				sizeof(struct DWC_ETH_QOS_config_dvlan))) {
+		printk(KERN_ALERT "Failed to fetch Double vlan Struct info from user\n");
+		return DWC_ETH_QOS_CONFIG_FAIL;
+	}
+
+	pdata->inner_vlan_tag = l_config_doubule_vlan.inner_vlan_tag;
+	pdata->outer_vlan_tag = l_config_doubule_vlan.outer_vlan_tag;
+	pdata->op_type = l_config_doubule_vlan.op_type;
+	pdata->in_out = l_config_doubule_vlan.in_out;
+	pdata->via_reg_or_desc = l_config_doubule_vlan.via_reg_or_desc;
+
+	if (pdata->via_reg_or_desc == DWC_ETH_QOS_VIA_REG)
+		ret = config_tx_dvlan_processing_via_reg(pdata, req->flags);
+	else
+		ret = config_tx_dvlan_processing_via_desc(pdata, req->flags);
+
+	DBGPR("<--DWC_ETH_QOS_config_tx_dvlan_processing\n");
+
+	return ret;
+}
+
+/*!
+ * \details This function is invoked by ioctl function when user issues
+ * an ioctl command to configure mac double vlan processing feature.
+ *
+ * \param[in] pdata - pointer to private data structure.
+ * \param[in] flags – Each bit in this variable carry some information related
+ *		      double vlan processing.
+ *
+ * \return integer
+ *
+ * \retval zero on success and -ve number on failure.
+ */
+static int DWC_ETH_QOS_config_rx_dvlan_processing(
+		struct DWC_ETH_QOS_prv_data *pdata, unsigned int flags)
+{
+	struct hw_if_struct *hw_if = &(pdata->hw_if);
+	int ret = 0;
+
+	DBGPR("-->DWC_ETH_QOS_config_rx_dvlan_processing\n");
+
+	hw_if->config_dvlan(1);
+	if (flags == DWC_ETH_QOS_DVLAN_NONE) {
+		hw_if->config_dvlan(0);
+		hw_if->config_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_NO_VLAN_STRIP);
+		hw_if->config_rx_inner_vlan_stripping(DWC_ETH_QOS_RX_NO_VLAN_STRIP);
+	} else if (flags == DWC_ETH_QOS_DVLAN_INNER) {
+		hw_if->config_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_NO_VLAN_STRIP);
+		hw_if->config_rx_inner_vlan_stripping(DWC_ETH_QOS_RX_VLAN_STRIP_ALWAYS);
+	} else if (flags == DWC_ETH_QOS_DVLAN_OUTER) {
+		hw_if->config_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_VLAN_STRIP_ALWAYS);
+		hw_if->config_rx_inner_vlan_stripping(DWC_ETH_QOS_RX_NO_VLAN_STRIP);
+	} else if (flags == DWC_ETH_QOS_DVLAN_BOTH) {
+		hw_if->config_rx_outer_vlan_stripping(DWC_ETH_QOS_RX_VLAN_STRIP_ALWAYS);
+		hw_if->config_rx_inner_vlan_stripping(DWC_ETH_QOS_RX_VLAN_STRIP_ALWAYS);
+	} else {
+		printk(KERN_ALERT "ERROR : double VLAN Rx configuration - Invalid argument");
+		ret = DWC_ETH_QOS_CONFIG_FAIL;
+	}
+
+	DBGPR("<--DWC_ETH_QOS_config_rx_dvlan_processing\n");
+
+	return ret;
+}
+
+/*!
+ * \details This function is invoked by ioctl function when user issues
+ * an ioctl command to configure mac double vlan (svlan) processing feature.
+ *
+ * \param[in] pdata - pointer to private data structure.
+ * \param[in] flags – Each bit in this variable carry some information related
+ *		      double vlan processing.
+ *
+ * \return integer
+ *
+ * \retval zero on success and -ve number on failure.
+ */
+static int DWC_ETH_QOS_config_svlan(struct DWC_ETH_QOS_prv_data *pdata,
+					unsigned int flags)
+{
+	struct hw_if_struct *hw_if = &(pdata->hw_if);
+	int ret = 0;
+
+	DBGPR("-->DWC_ETH_QOS_config_svlan\n");
+
+	ret = hw_if->config_svlan(flags);
+	if (ret == Y_FAILURE)
+		ret = DWC_ETH_QOS_CONFIG_FAIL;
+
+	DBGPR("<--DWC_ETH_QOS_config_svlan\n");
+
+	return ret;
+}
+#endif /* end of DWC_ETH_QOS_ENABLE_DVLAN */
+
+static VOID DWC_ETH_QOS_config_timer_registers(
+				struct DWC_ETH_QOS_prv_data *pdata)
+{
+		struct timespec now;
+		struct hw_if_struct *hw_if = &(pdata->hw_if);
+		u64 temp;
+
+		DBGPR("-->DWC_ETH_QOS_config_timer_registers\n");
+
+		/* program Sub Second Increment Reg */
+		hw_if->config_sub_second_increment(DWC_ETH_QOS_SYSCLOCK);
+
+		/* formula is :
+		 * addend = 2^32/freq_div_ratio;
+		 *
+		 * where, freq_div_ratio = DWC_ETH_QOS_SYSCLOCK/50MHz
+		 *
+		 * hence, addend = ((2^32) * 50MHz)/DWC_ETH_QOS_SYSCLOCK;
+		 *
+		 * NOTE: DWC_ETH_QOS_SYSCLOCK should be >= 50MHz to
+		 *       achive 20ns accuracy.
+		 *
+		 * 2^x * y == (y << x), hence
+		 * 2^32 * 50000000 ==> (50000000 << 32)
+		 * */
+		temp = (u64)(50000000ULL << 32);
+		pdata->default_addend = div_u64(temp, 62500000);
+
+		hw_if->config_addend(pdata->default_addend);
+
+		/* initialize system time */
+		getnstimeofday(&now);
+		hw_if->init_systime(now.tv_sec, now.tv_nsec);
+
+		DBGPR("-->DWC_ETH_QOS_config_timer_registers\n");
+}
+
+/*!
+ * \details This function is invoked by ioctl function when user issues
+ * an ioctl command to configure PTP offloading feature.
+ *
+ * \param[in] pdata - pointer to private data structure.
+ * \param[in] flags – Each bit in this variable carry some information related
+ *		      double vlan processing.
+ *
+ * \return integer
+ *
+ * \retval zero on success and -ve number on failure.
+ */
+static int DWC_ETH_QOS_config_ptpoffload(
+		struct DWC_ETH_QOS_prv_data *pdata,
+		struct DWC_ETH_QOS_config_ptpoffloading *u_conf_ptp)
+{
+	UINT pto_cntrl;
+	UINT varMAC_TCR;
+	struct DWC_ETH_QOS_config_ptpoffloading l_conf_ptp;
+	struct hw_if_struct *hw_if = &(pdata->hw_if);
+
+
+	if(copy_from_user(&l_conf_ptp, u_conf_ptp,
+				sizeof(struct DWC_ETH_QOS_config_ptpoffloading))) {
+		printk(KERN_ALERT "Failed to fetch Double vlan Struct info from user\n");
+		return DWC_ETH_QOS_CONFIG_FAIL;
+	}
+
+	printk(KERN_ALERT"-->DWC_ETH_QOS_config_ptpoffload - %d\n",l_conf_ptp.mode);
+
+	pto_cntrl = MAC_PTOCR_PTOEN; /* enable ptp offloading */
+	varMAC_TCR = MAC_TCR_TSENA | MAC_TCR_TSIPENA | MAC_TCR_TSVER2ENA
+			| MAC_TCR_TSCFUPDT | MAC_TCR_TSCTRLSSR;
+	if (l_conf_ptp.mode == DWC_ETH_QOS_PTP_ORDINARY_SLAVE) {
+
+		varMAC_TCR |= MAC_TCR_TSEVENTENA;
+		pdata->ptp_offloading_mode = DWC_ETH_QOS_PTP_ORDINARY_SLAVE;
+
+	} else if (l_conf_ptp.mode == DWC_ETH_QOS_PTP_TRASPARENT_SLAVE) {
+
+		pto_cntrl |= MAC_PTOCR_APDREQEN;
+		varMAC_TCR |= MAC_TCR_TSEVENTENA;
+		varMAC_TCR |= MAC_TCR_SNAPTYPSEL_1;
+		pdata->ptp_offloading_mode =
+			DWC_ETH_QOS_PTP_TRASPARENT_SLAVE;
+
+	} else if (l_conf_ptp.mode == DWC_ETH_QOS_PTP_ORDINARY_MASTER) {
+
+		pto_cntrl |= MAC_PTOCR_ASYNCEN;
+		varMAC_TCR |= MAC_TCR_TSEVENTENA;
+		varMAC_TCR |= MAC_TCR_TSMASTERENA;
+		pdata->ptp_offloading_mode = DWC_ETH_QOS_PTP_ORDINARY_MASTER;
+
+	} else if(l_conf_ptp.mode == DWC_ETH_QOS_PTP_TRASPARENT_MASTER) {
+
+		pto_cntrl |= MAC_PTOCR_ASYNCEN | MAC_PTOCR_APDREQEN;
+		varMAC_TCR |= MAC_TCR_SNAPTYPSEL_1;
+		varMAC_TCR |= MAC_TCR_TSEVENTENA;
+		varMAC_TCR |= MAC_TCR_TSMASTERENA;
+		pdata->ptp_offloading_mode =
+			DWC_ETH_QOS_PTP_TRASPARENT_MASTER;
+
+	} else if (l_conf_ptp.mode == DWC_ETH_QOS_PTP_PEER_TO_PEER_TRANSPARENT) {
+
+		pto_cntrl |= MAC_PTOCR_APDREQEN;
+		varMAC_TCR |= MAC_TCR_SNAPTYPSEL_3;
+		pdata->ptp_offloading_mode =
+			DWC_ETH_QOS_PTP_PEER_TO_PEER_TRANSPARENT;
+	}
+
+	pdata->ptp_offload = 1;
+	if (l_conf_ptp.en_dis == DWC_ETH_QOS_PTP_OFFLOADING_DISABLE) {
+		pto_cntrl = 0;
+		varMAC_TCR = 0;
+		pdata->ptp_offload = 0;
+	}
+
+	pto_cntrl |= (l_conf_ptp.domain_num << 8);
+	hw_if->config_hw_time_stamping(varMAC_TCR);
+	DWC_ETH_QOS_config_timer_registers(pdata);
+	hw_if->config_ptpoffload_engine(pto_cntrl, l_conf_ptp.mc_uc);
+
+	printk(KERN_ALERT"<--DWC_ETH_QOS_config_ptpoffload\n");
+
+	return Y_SUCCESS;
+}
+
 /*!
  * \details This function is invoked by ioctl function when user issues
  * an ioctl command to enable/disable pfc.
@@ -4187,7 +4494,6 @@ static int DWC_ETH_QOS_handle_prv_ioctl(struct DWC_ETH_QOS_prv_data *pdata,
 	    GET_RX_WRAPPER_DESC(qInx);
 	struct hw_if_struct *hw_if = &(pdata->hw_if);
 	struct net_device *dev = pdata->dev;
-	int i;
 	int ret = 0;
 
 	DBGPR("-->DWC_ETH_QOS_handle_prv_ioctl\n");
@@ -4305,45 +4611,38 @@ static int DWC_ETH_QOS_handle_prv_ioctl(struct DWC_ETH_QOS_prv_data *pdata,
 		DWC_ETH_QOS_config_tx_pbl(pdata, tx_desc_data->tx_pbl, qInx);
 		break;
 
-	case DWC_ETH_QOS_RX_OUTER_VLAN_STRIPPING_CMD:
-		for ( i = 0; i < DWC_ETH_QOS_RX_QUEUE_CNT; i++) {
-			rx_desc_data = GET_RX_WRAPPER_DESC(i);
-			rx_desc_data->rx_outer_vlan_strip = req->flags;
+#ifdef DWC_ETH_QOS_ENABLE_DVLAN
+	case DWC_ETH_QOS_DVLAN_TX_PROCESSING_CMD:
+		if (pdata->hw_feat.sa_vlan_ins) {
+			ret = DWC_ETH_QOS_config_tx_dvlan_processing(pdata, req);
+		} else {
+			printk(KERN_ALERT "No HW support for Single/Double VLAN\n");
+			ret = DWC_ETH_QOS_NO_HW_SUPPORT;
 		}
-		hw_if->configure_rx_outer_vlan_stripping(rx_desc_data->rx_outer_vlan_strip);
 		break;
-
-	case DWC_ETH_QOS_RX_INNER_VLAN_STRIPPING_CMD:
-		for ( i = 0; i < DWC_ETH_QOS_RX_QUEUE_CNT; i++) {
-			rx_desc_data = GET_RX_WRAPPER_DESC(i);
-			rx_desc_data->rx_inner_vlan_strip = req->flags;
+	case DWC_ETH_QOS_DVLAN_RX_PROCESSING_CMD:
+		if (pdata->hw_feat.sa_vlan_ins) {
+			ret = DWC_ETH_QOS_config_rx_dvlan_processing(pdata, req->flags);
+		} else {
+			printk(KERN_ALERT "No HW support for Single/Double VLAN\n");
+			ret = DWC_ETH_QOS_NO_HW_SUPPORT;
 		}
-		hw_if->configure_rx_inner_vlan_stripping(rx_desc_data->rx_inner_vlan_strip);
 		break;
-
-	case DWC_ETH_QOS_TX_VLAN_DESC_CMD:
+	case DWC_ETH_QOS_SVLAN_CMD:
 		if (pdata->hw_feat.sa_vlan_ins) {
-			tx_desc_data->tx_vlan_tag_via_reg = Y_FALSE;
-			tx_desc_data->tx_vlan_tag_ctrl = req->flags;
-			hw_if->enable_vlan_desc_control(pdata);
+			ret = DWC_ETH_QOS_config_svlan(pdata, req->flags);
 		} else {
-			printk(KERN_ALERT "Device doesn't supports VLAN"\
-				"Insertion/Deletion/Replacement\n");
+			printk(KERN_ALERT "No HW support for Single/Double VLAN\n");
 			ret = DWC_ETH_QOS_NO_HW_SUPPORT;
 		}
 		break;
-
-	case DWC_ETH_QOS_TX_VLAN_REG_CMD:
-		if (pdata->hw_feat.sa_vlan_ins) {
-			tx_desc_data->tx_vlan_tag_via_reg = Y_TRUE;
-			tx_desc_data->tx_vlan_tag_ctrl = req->flags;
-			hw_if->enable_vlan_reg_control(tx_desc_data);
-			printk("VLAN control via register now --- %d %d\n\n",
-			       tx_desc_data->tx_vlan_tag_via_reg,
-			       tx_desc_data->tx_vlan_tag_ctrl);
+#endif /* end of DWC_ETH_QOS_ENABLE_DVLAN */
+	case DWC_ETH_QOS_PTPOFFLOADING_CMD:
+		if (pdata->hw_feat.tsstssel) {
+			ret = DWC_ETH_QOS_config_ptpoffload(pdata,
+					req->ptr);
 		} else {
-			printk(KERN_ALERT
-			       "Device doesn't supports VLAN Insertion/Deletion/Replacement\n");
+			printk(KERN_ALERT "No HW support for PTP\n");
 			ret = DWC_ETH_QOS_NO_HW_SUPPORT;
 		}
 		break;
@@ -4965,6 +5264,25 @@ u16	DWC_ETH_QOS_select_queue(struct net_device *dev,
 }
 #endif
 
+unsigned int crc32_snps_le(unsigned int initval, unsigned char *data, unsigned int size)
+{
+	unsigned int crc = initval;
+	unsigned int poly = 0x04c11db7;
+	unsigned int temp = 0;
+	unsigned char my_data = 0;
+	int bit_count;
+	for(bit_count = 0; bit_count < size; bit_count++) {
+		if((bit_count % 8) == 0) my_data = data[bit_count/8];
+		DBGPR_FILTER("%s my_data = %x crc=%x\n", __func__, my_data,crc);
+		temp = ((crc >> 31) ^  my_data) &  0x1;
+		crc <<= 1;
+		if(temp != 0) crc ^= poly;
+		my_data >>=1;
+	}
+		DBGPR_FILTER("%s my_data = %x crc=%x\n", __func__, my_data,crc);
+	return ~crc;
+}
+
 /*!
 * \brief API to delete vid to HW filter.
 *
@@ -5459,7 +5777,7 @@ static void DWC_ETH_QOS_program_avb_algorithm(struct DWC_ETH_QOS_prv_data *pdata
 *
 * \return none
 */
-
+#if 0
 void dbgpr_regs(void)
 {
 	UINT val0;
@@ -6200,6 +6518,7 @@ void dbgpr_regs(void)
 
 	return;
 }
+#endif
 
 /*!
  * \details This function is invoked by DWC_ETH_QOS_start_xmit and
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c
index 7f618a1..7ca9e1b 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c
@@ -487,10 +487,6 @@ static int DWC_ETH_QOS_init_phy(struct net_device *dev)
 	phydev->supported |= (SUPPORTED_Pause | SUPPORTED_Asym_Pause);
 #endif
 
-#ifdef DWC_ETH_QOS_CONFIG_PGTEST
-	phydev->supported = PHY_BASIC_FEATURES;
-#endif
-
 	phydev->advertising = phydev->supported;
 
 	DBGPR_MDIO("%s: attached to PHY (UID 0x%x) Link = %d\n", dev->name,
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
index 50faca7..dcfd1f8 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
@@ -183,7 +183,7 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 	struct desc_if_struct *desc_if = NULL;
 	UCHAR tx_q_count = 0, rx_q_count = 0;
 	void __iomem *gbe_base;
-   unsigned int gbe_mux_cfg;
+	unsigned int gbe_mux_cfg;
 
 	DBGPR("--> DWC_ETH_QOS_probe\n");
 
@@ -199,7 +199,7 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 	}
 
    if (DWC_ETH_QOS_init_general_gbe(&gbe_base, &gbe_mux_cfg)) {
-      goto err_out_req_reg_failed;
+		goto err_out_req_reg_failed;
    }
 #endif
 
@@ -312,7 +312,9 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 
 	for (i = 0; i < DWC_ETH_QOS_RX_QUEUE_CNT; i++) {
 		struct DWC_ETH_QOS_rx_queue *rx_queue = GET_RX_QUEUE_PTR(i);
-		netif_napi_add(dev, &rx_queue->napi, DWC_ETH_QOS_poll_mq, 64);
+
+		netif_napi_add(dev, &rx_queue->napi, DWC_ETH_QOS_poll_mq,
+				(64 * DWC_ETH_QOS_RX_QUEUE_CNT));
 	}
 
 	SET_ETHTOOL_OPS(dev, DWC_ETH_QOS_get_ethtool_ops());
@@ -338,7 +340,7 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 	dev->vlan_features |= dev->hw_features;
 	dev->hw_features |= NETIF_F_HW_VLAN_CTAG_RX;
 	if (pdata->hw_feat.sa_vlan_ins) {
-		dev->hw_features |= NETIF_F_HW_VLAN_CTAG_RX;
+		dev->hw_features |= NETIF_F_HW_VLAN_CTAG_TX;
 		printk(KERN_ALERT "VLAN Feature enabled\n");
 	}
 	if (pdata->hw_feat.vlan_hash_en) {
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c
index 89bba4c..2395f41 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c
@@ -804,6 +804,7 @@ static void DWC_ETH_QOS_prepare_hw_for_pg_test(struct DWC_ETH_QOS_prv_data *pdat
 	hw_if->set_tx_rx_prio_ratio(pg_struct->ch_tx_rx_prio_ratio);
 	hw_if->set_dma_tx_arb_algorithm(pg_struct->dma_tx_arb_algo);
 	hw_if->set_dcb_algorithm(pg_struct->queue_dcb_algorithm);
+    hw_if->config_mac_loopback_mode(pg_struct->mac_lb_mode);
 
 	/* Timer programming */
 	hw_if->config_sub_second_increment(DWC_ETH_QOS_SYSCLOCK);
@@ -1038,6 +1039,9 @@ static void DWC_ETH_QOS_print_pg_struct(struct DWC_ETH_QOS_prv_data *pdata)
 		pg_struct->ch_tx_rx_prio_ratio);
 	printk(KERN_ALERT "dma_tx_arb_algo                     = %#02x\n",
 			pg_struct->dma_tx_arb_algo);
+    printk(KERN_ALERT "mac_lb_mode                         = %#02x\n",
+			pg_struct->mac_lb_mode);
+
 	if (display_dcb_params) {
 		switch (pg_struct->queue_dcb_algorithm) {
 			case eDWC_ETH_QOS_DCB_WRR:
@@ -1056,6 +1060,7 @@ static void DWC_ETH_QOS_print_pg_struct(struct DWC_ETH_QOS_prv_data *pdata)
 		printk(KERN_ALERT "queue_dcb_algorithm                 = %s\n",
 				strptr);
 	}
+
 	printk(KERN_ALERT "PrioTagForAV (not used)             = %#02x\n",
 		pg_struct->PrioTagForAV);
 
@@ -1281,8 +1286,9 @@ static void DWC_ETH_QOS_pg_get_result(struct DWC_ETH_QOS_prv_data *pdata,
 	unsigned int qInx;
 
 	DBGPR_PG("-->DWC_ETH_QOS_pg_get_result\n");
-
 	copy_PGStruct_members(&l_pg_struct, pg_struct);
+	l_pg_struct.speed_100M_1G = pdata->speed;/* Update the speed information */
+	printk(KERN_CRIT "l_pg_struct->speed_100M_1G: %d\n",l_pg_struct.speed_100M_1G);
 	for (qInx = 0; qInx < DWC_ETH_QOS_TX_QUEUE_CNT; qInx++) {
 		copy_pg_ch_input_members(&(l_pg_struct.pg_ch_input[qInx]), &(pg_ch_input[qInx]));
 	}
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h
index 6ecde26..67bd85c 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h
@@ -62,6 +62,11 @@
 /* INCR and INCRX mode */
 #define DWC_ETH_QOS_INCR_INCRX_CMD	12
 
+/* for MAC Double VLAN Processing config */
+#define DWC_ETH_QOS_DVLAN_TX_PROCESSING_CMD		13
+#define DWC_ETH_QOS_DVLAN_RX_PROCESSING_CMD		14
+#define DWC_ETH_QOS_SVLAN_CMD				15
+
 /* RX/TX VLAN */
 #define DWC_ETH_QOS_RX_OUTER_VLAN_STRIPPING_CMD	13
 #define DWC_ETH_QOS_RX_INNER_VLAN_STRIPPING_CMD	14
@@ -117,6 +122,8 @@
 #define DWC_ETH_QOS_MAC_LOOPBACK_MODE_CMD	40
 /* PFC(Priority Based Flow Control) mode */
 #define DWC_ETH_QOS_PFC_CMD			41
+/* for PTP OFFLOADING configuration */
+#define DWC_ETH_QOS_PTPOFFLOADING_CMD			42
 
 #define DWC_ETH_QOS_RWK_FILTER_LENGTH	8
 
@@ -232,7 +239,7 @@
 
 #define DWC_ETH_QOS_MAX_WFQ_WEIGHT	0X7FFF /* value for bandwidth calculation */
 
-#define DWC_ETH_QOS_MAX_INT_FRAME_SIZE (1024* 64)
+#define DWC_ETH_QOS_MAX_INT_FRAME_SIZE (1024* 16)
 
 typedef enum {
 	eDWC_ETH_QOS_DMA_TX_FP = 0,
@@ -331,6 +338,55 @@ struct DWC_ETH_QOS_arp_offload {
 	unsigned char ip_addr[4];
 };
 
+#define DWC_ETH_QOS_VIA_REG	0
+#define DWC_ETH_QOS_VIA_DESC	1
+
+/* for MAC Double VLAN Processing config */
+#define DWC_ETH_QOS_DVLAN_OUTER	(1)
+#define DWC_ETH_QOS_DVLAN_INNER	(1 << 1)
+#define DWC_ETH_QOS_DVLAN_BOTH	(DWC_ETH_QOS_DVLAN_OUTER | DWC_ETH_QOS_DVLAN_INNER)
+
+#define DWC_ETH_QOS_DVLAN_NONE	0
+#define DWC_ETH_QOS_DVLAN_DELETE	1
+#define DWC_ETH_QOS_DVLAN_INSERT	2
+#define DWC_ETH_QOS_DVLAN_REPLACE	3
+
+#define DWC_ETH_QOS_DVLAN_DISABLE	0
+#define DWC_ETH_QOS_DVLAN_ENABLE	1
+
+struct DWC_ETH_QOS_config_dvlan {
+	int inner_vlan_tag;
+	int outer_vlan_tag;
+	/* op_type will be
+	 * 0/1/2/3 for none/delet/insert/replace respectively
+	 * */
+	int op_type;
+	/* in_out will be
+	 * 1/2/3 for outer/inner/both respectively.
+	 * */
+	int in_out;
+	/* 0 for via registers and 1 for via descriptor */
+	int via_reg_or_desc;
+};
+
+
+/* for PTP offloading configuration */
+#define DWC_ETH_QOS_PTP_OFFLOADING_DISABLE 		0
+#define DWC_ETH_QOS_PTP_OFFLOADING_ENABLE	 		1
+
+#define DWC_ETH_QOS_PTP_ORDINARY_SLAVE	 		1
+#define DWC_ETH_QOS_PTP_ORDINARY_MASTER	 		2
+#define DWC_ETH_QOS_PTP_TRASPARENT_SLAVE	 		3
+#define DWC_ETH_QOS_PTP_TRASPARENT_MASTER	 		4
+#define DWC_ETH_QOS_PTP_PEER_TO_PEER_TRANSPARENT	5
+
+struct DWC_ETH_QOS_config_ptpoffloading {
+	int en_dis;
+	int mode;
+	int domain_num;
+	int mc_uc;
+};
+
 
 #ifdef DWC_ETH_QOS_CONFIG_PGTEST
 
@@ -391,6 +447,9 @@ struct DWC_ETH_QOS_pg_user_input {
 
 	unsigned char queue_dcb_algorithm;
 
+	unsigned char mac_lb_mode; /* 0 => No MAC Loopback; 1 => MAC Loopback On */
+	unsigned int speed_100M_1G; /* 0 => No MAC Loopback; 1 => MAC Loopback On */
+
 	struct DWC_ETH_QOS_pg_user_ch_input ch_input[DWC_ETH_QOS_MAX_TX_QUEUE_CNT];
 };
 
@@ -466,6 +525,7 @@ struct DWC_ETH_QOS_pg_ch_input {
 	(to)->ch_use_tx_high_prio = (from)->ch_use_tx_high_prio; \
 	(to)->ch_tx_rx_prio_ratio = (from)->ch_tx_rx_prio_ratio; \
 	(to)->dma_tx_arb_algo = (from)->dma_tx_arb_algo; \
+	(to)->mac_lb_mode = (from)->mac_lb_mode; \
 } while (0)
 
 struct DWC_ETH_QOS_PGStruct {
@@ -498,6 +558,8 @@ struct DWC_ETH_QOS_PGStruct {
 	unsigned char ch_tx_rx_prio_ratio;	/* For RR what is the ratio between Tx:Rx/Rx:Tx */
 	unsigned char dma_tx_arb_algo; /* Refer DMA Mode register TAA field */
 
+	unsigned char mac_lb_mode; /* 0 => No MAC Loopback; 1 => MAC Loopback On */
+	unsigned int speed_100M_1G;
 	struct DWC_ETH_QOS_pg_ch_input pg_ch_input[DWC_ETH_QOS_MAX_TX_QUEUE_CNT];
 	unsigned char channel_running[DWC_ETH_QOS_MAX_TX_QUEUE_CNT];
 };
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
index a9c7e61..cebfb6a 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
@@ -88,6 +88,9 @@
 #include <linux/ptp_clock_kernel.h>
 #include <linux/clocksource.h>
 
+/* QOS Version Control Macros */
+#define DWC_ETH_QOS_VER_4_0
+
 /* Macro definitions*/
 
 #include <asm-generic/errno.h>
@@ -139,6 +142,9 @@
 #undef DWC_ETH_QOS_TXPOLLING_MODE_ENABLE
 #endif
 
+/* Uncomment below macro to enable Double VLAN support. */
+//#define DWC_ETH_QOS_ENABLE_DVLAN
+
 /* Uncomment below macro to test EEE feature Tx path with
  * no EEE supported PHY card
  * */
@@ -421,6 +427,11 @@
 #define MAC_TCR_SNAPTYPSEL_3  0x00030000
 #define MAC_TCR_AV8021ASMEN   0x10000000 /* Enable AV 802.1AS Mode */
 
+/* PTP Offloading control register bits (MAC_PTO_control)*/
+#define MAC_PTOCR_PTOEN		  0x00000001 /* PTP offload Enable */
+#define MAC_PTOCR_ASYNCEN	  0x00000002 /* Automatic PTP Sync message enable */
+#define MAC_PTOCR_APDREQEN	  0x00000004 /* Automatic PTP Pdelay_Req message enable */
+
 /* Hash Table Reg count */
 #define DWC_ETH_QOS_HTR_CNT (pdata->max_hash_table_size/32)
 
@@ -688,8 +699,8 @@ struct hw_if_struct {
 	 VOID(*enable_vlan_desc_control) (struct DWC_ETH_QOS_prv_data *pdata);
 
 	/* for rx vlan stripping */
-	 VOID(*configure_rx_outer_vlan_stripping) (u32);
-	 VOID(*configure_rx_inner_vlan_stripping) (u32);
+//	 VOID(*config_rx_outer_vlan_stripping) (u32);
+//	 VOID(*config_rx_inner_vlan_stripping) (u32);
 
 	/* for sa(source address) insert/replace */
 	 VOID(*configure_mac_addr0_reg) (UCHAR *);
@@ -775,6 +786,7 @@ struct hw_if_struct {
 	INT(*config_vlan_filtering)(INT filter_enb_dis,
 				INT perfect_hash_filtering,
 				INT perfect_inverse_match);
+    INT(*config_mac_for_vlan_pkt)(void);
 	UINT(*get_vlan_tag_comparison)(void);
 
 	/* for differnet PHY interconnect */
@@ -799,8 +811,20 @@ struct hw_if_struct {
 	/* for MAC loopback */
 	INT(*config_mac_loopback_mode)(UINT);
 
+	/* for MAC Double VLAN Processing config */
+	INT(*config_tx_outer_vlan)(UINT op_type, UINT outer_vlt);
+	INT(*config_tx_inner_vlan)(UINT op_type, UINT inner_vlt);
+	INT(*config_svlan)(UINT);
+	VOID(*config_dvlan)(bool enb_dis);
+	VOID(*config_rx_outer_vlan_stripping)(u32);
+	VOID(*config_rx_inner_vlan_stripping)(u32);
+
 	/* for PFC */
 	void (*config_pfc)(int enb_dis);
+
+    /* for PTP offloading */
+	VOID(*config_ptpoffload_engine)(UINT, UINT);
+
 };
 
 /* wrapper buffer structure to hold transmit pkt details */
@@ -1286,6 +1310,30 @@ struct DWC_ETH_QOS_prv_data {
 	int eee_active;
 	int tx_lpi_timer;
 
+	/* arp offload enable/disable. */
+	u32 arp_offload;
+
+	/* set to 1 when ptp offload is enabled, else 0. */
+	u32 ptp_offload;
+	/* ptp offloading mode - ORDINARY_SLAVE, ORDINARY_MASTER,
+     * TRANSPARENT_SLAVE, TRANSPARENT_MASTER, PTOP_TRANSPERENT.
+     * */
+	u32 ptp_offloading_mode;
+
+	/* For configuring double VLAN via descriptor/reg */
+	int inner_vlan_tag;
+	int outer_vlan_tag;
+	/* op_type will be
+	 * 0/1/2/3 for none/delet/insert/replace respectively
+	 * */
+	int op_type;
+	/* in_out will be
+	 * 1/2/3 for outer/inner/both respectively.
+	 * */
+	int in_out;
+	/* 0 for via registers and 1 for via descriptor */
+	int via_reg_or_desc;
+
 	/* this variable will hold vlan table value if vlan hash filtering
 	 * is enabled else hold vlan id that is programmed in HW. Same is
 	 * used to configure back into HW when device is reset during
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h
index 29e4bee..30f6191 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h
@@ -63,8 +63,11 @@
 #define TX_CONTEXT_DESC_TDES3_OSTC_LBIT_POS  0x1b
 #define TX_CONTEXT_DESC_TDES3_TCMSSV_LBIT_POS  0x1a
 #define TX_CONTEXT_DESC_TDES3_CDX_LBIT_POS  0x17
+#define TX_CONTEXT_DESC_TDES3_IVTIR_LBIT_POS  0x12
 #define TX_CONTEXT_DESC_TDES3_SVLTV_LBIT_POS  0x11
+#define TX_CONTEXT_DESC_TDES3_IVLTV_LBIT_POS  0x11
 #define TX_CONTEXT_DESC_TDES3_VLTV_LBIT_POS  0x10
+#define TX_CONTEXT_DESC_TDES2_IVT_LBIT_POS  0x10
 #define TX_CONTEXT_DESC_TDES3_VT_LBIT_POS  0
 #define TX_CONTEXT_DESC_TDES2_SVT_LBIT_POS  0xf
 #define TX_CONTEXT_DESC_TDES2_MSS_LBIT_POS  0
@@ -163,9 +166,12 @@
 #define TX_CONTEXT_DESC_TDES3_OSTC_HBIT_POS  0x1b
 #define TX_CONTEXT_DESC_TDES3_TCMSSV_HBIT_POS  0x1a
 #define TX_CONTEXT_DESC_TDES3_CDX_HBIT_POS  0x17
+#define TX_CONTEXT_DESC_TDES3_IVTIR_HBIT_POS  0x13
 #define TX_CONTEXT_DESC_TDES3_SVLTV_HBIT_POS  0x11
+#define TX_CONTEXT_DESC_TDES3_IVLTV_HBIT_POS  0x11
 #define TX_CONTEXT_DESC_TDES3_VLTV_HBIT_POS  0x10
 #define TX_CONTEXT_DESC_TDES3_VT_HBIT_POS  0xf
+#define TX_CONTEXT_DESC_TDES2_IVT_HBIT_POS  0x1f
 #define TX_CONTEXT_DESC_TDES2_SVT_HBIT_POS  0x1f
 #define TX_CONTEXT_DESC_TDES2_MSS_HBIT_POS  0xe
 #define TX_CONTEXT_DESC_TDES1_NDAP_HBIT_POS  0x1f
@@ -342,6 +348,14 @@
   SET_BITS(TX_CONTEXT_DESC_TDES3_CDX_HBIT_POS, TX_CONTEXT_DESC_TDES3_CDX_LBIT_POS, ptr, data); \
 } while(0)
 
+#define TX_CONTEXT_DESC_TDES3_IVTIR_Mlf_Rd(ptr, data) do { \
+  GET_BITS(TX_CONTEXT_DESC_TDES3_IVTIR_HBIT_POS, TX_CONTEXT_DESC_TDES3_IVTIR_LBIT_POS, ptr, data); \
+} while(0)
+
+#define TX_CONTEXT_DESC_TDES3_IVTIR_Mlf_Wr(ptr, data) do { \
+  SET_BITS(TX_CONTEXT_DESC_TDES3_IVTIR_HBIT_POS, TX_CONTEXT_DESC_TDES3_IVTIR_LBIT_POS, ptr, data); \
+} while(0)
+
 
 #define TX_CONTEXT_DESC_TDES3_SVLTV_Mlf_Rd(ptr, data) do { \
   GET_BITS(TX_CONTEXT_DESC_TDES3_SVLTV_HBIT_POS, TX_CONTEXT_DESC_TDES3_SVLTV_LBIT_POS, ptr, data); \
@@ -351,6 +365,13 @@
   SET_BITS(TX_CONTEXT_DESC_TDES3_SVLTV_HBIT_POS, TX_CONTEXT_DESC_TDES3_SVLTV_LBIT_POS, ptr, data); \
 } while(0)
 
+#define TX_CONTEXT_DESC_TDES3_IVLTV_Mlf_Rd(ptr, data) do { \
+  GET_BITS(TX_CONTEXT_DESC_TDES3_IVLTV_HBIT_POS, TX_CONTEXT_DESC_TDES3_IVLTV_LBIT_POS, ptr, data); \
+} while(0)
+
+#define TX_CONTEXT_DESC_TDES3_IVLTV_Mlf_Wr(ptr, data) do { \
+  SET_BITS(TX_CONTEXT_DESC_TDES3_IVLTV_HBIT_POS, TX_CONTEXT_DESC_TDES3_IVLTV_LBIT_POS, ptr, data); \
+} while(0)
 
 #define TX_CONTEXT_DESC_TDES3_VLTV_Mlf_Rd(ptr, data) do { \
   GET_BITS(TX_CONTEXT_DESC_TDES3_VLTV_HBIT_POS, TX_CONTEXT_DESC_TDES3_VLTV_LBIT_POS, ptr, data); \
@@ -369,6 +390,15 @@
   SET_BITS(TX_CONTEXT_DESC_TDES3_VT_HBIT_POS, TX_CONTEXT_DESC_TDES3_VT_LBIT_POS, ptr, data); \
 } while(0)
 
+#define TX_CONTEXT_DESC_TDES2_IVT_Mlf_Rd(ptr, data) do { \
+  GET_BITS(TX_CONTEXT_DESC_TDES2_IVT_HBIT_POS, TX_CONTEXT_DESC_TDES2_IVT_LBIT_POS, ptr, data); \
+} while(0)
+
+#define TX_CONTEXT_DESC_TDES2_IVT_Mlf_Wr(ptr, data) do { \
+  SET_BITS(TX_CONTEXT_DESC_TDES2_IVT_HBIT_POS, TX_CONTEXT_DESC_TDES2_IVT_LBIT_POS, ptr, data); \
+} while(0)
+
+
 
 #define TX_CONTEXT_DESC_TDES2_SVT_Mlf_Rd(ptr, data) do { \
   GET_BITS(TX_CONTEXT_DESC_TDES2_SVT_HBIT_POS, TX_CONTEXT_DESC_TDES2_SVT_LBIT_POS, ptr, data); \
@@ -1490,8 +1520,11 @@
 
 
 #define  BASE_ADDRESS dwc_eth_qos_pci_base_addr
-
-#define MAC_ARPA_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xae0))
+#ifdef DWC_ETH_QOS_VER_4_0
+#define MAC_ARPA_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x0ae0))
+#else
+#define MAC_ARPA_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x0210))
+#endif 
 
 #define MAC_ARPA_RgWr(data) do {\
 		iowrite32(data, (void *)MAC_ARPA_RgOffAddr);\
@@ -6366,6 +6399,293 @@
 } while(0)
 
 
+
+
+
+
+
+
+#define MAC_LMIR_RgOffAddr ((volatile unsigned int *)(BASE_ADDRESS + 0xbd0))
+
+#define MAC_LMIR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_LMIR_RgOffAddr);\
+} while(0)
+
+#define MAC_LMIR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_LMIR_RgOffAddr);\
+} while(0)
+
+#define MAC_SPI2R_RgOffAddr ((volatile unsigned int *)(BASE_ADDRESS + 0xbcc))
+
+#define MAC_SPI2R_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_SPI2R_RgOffAddr);\
+} while(0)
+
+#define MAC_SPI2R_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_SPI2R_RgOffAddr);\
+} while(0)
+
+/*#define  MAC_SPI2R_Mask_16 (unsigned int)(~(~0<<(16)))*/
+
+#define  MAC_SPI2R_Mask_16 (unsigned int)(0xffff)
+
+/*#define MAC_SPI2R_RES_Wr_Mask_16 (unsigned int)(~((~(~0<<(16)))<<(16)))*/
+
+#define MAC_SPI2R_RES_Wr_Mask_16 (unsigned int)(0xffff)
+
+/*#define MAC_SPI2R_SPIO_Mask (unsigned int)(~(~0<<(16)))*/
+
+#define MAC_SPI2R_SPIO_Mask (unsigned int)(0xffff)
+
+/*#define MAC_SPI2R_SPIO_Wr_Mask (unsigned int)(~((~(~0 << (16))) << (0)))*/
+
+#define MAC_SPI2R_SPIO_Wr_Mask (unsigned int)(0xffff0000)
+
+#define MAC_SPI2R_SPIO_UdfWr(data) do {\
+		unsigned int v = 0; \
+		v = (v & (MAC_SPI2R_RES_Wr_Mask_16))|((( 0) & (MAC_SPI2R_Mask_16))<<16);\
+		(v) = ((v & MAC_SPI2R_SPIO_Wr_Mask) | ((data & MAC_SPI2R_SPIO_Mask)<<0));\
+		MAC_SPI2R_RgWr(v);\
+} while(0)
+
+#define MAC_SPI2R_SPIO_UdfRd(data) do {\
+		MAC_SPI2R_RgRd(data);\
+		data = ((data >> 0) & MAC_SPI2R_SPIO_Mask);\
+} while(0)
+
+
+#define MAC_SPI1R_RgOffAddr ((volatile unsigned int *)(BASE_ADDRESS + 0xbc8))
+
+#define MAC_SPI1R_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_SPI1R_RgOffAddr);\
+} while(0)
+
+#define MAC_SPI1R_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_SPI1R_RgOffAddr);\
+} while(0)
+
+#define MAC_SPI1R_SPIO_UdfWr(data) do {\
+		MAC_SPI1R_RgWr(data);\
+} while(0)
+
+#define MAC_SPI1R_SPIO_UdfRd(data) do {\
+		MAC_SPI1R_RgRd(data);\
+} while(0)
+
+
+#define MAC_SPI0R_RgOffAddr ((volatile unsigned int *)(BASE_ADDRESS + 0xbc4))
+
+#define MAC_SPI0R_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_SPI0R_RgOffAddr);\
+} while(0)
+
+#define MAC_SPI0R_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_SPI0R_RgOffAddr);\
+} while(0)
+
+#define MAC_SPI0R_SPIO_UdfWr(data) do {\
+		MAC_SPI0R_RgWr(data);\
+} while(0)
+
+#define MAC_SPI0R_SPIO_UdfRd(data) do {\
+		MAC_SPI0R_RgRd(data);\
+} while(0)
+
+
+#define MAC_PTO_CR_RgOffAddr ((volatile unsigned int *)(BASE_ADDRESS + 0xbc0))
+
+#define MAC_PTO_CR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_PTO_CR_RgOffAddr);\
+} while(0)
+
+#define MAC_PTO_CR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_PTO_CR_RgOffAddr);\
+} while(0)
+
+/*#define  MAC_PTO_CR_Mask_16 (unsigned int)(~(~0<<(16)))*/
+
+#define  MAC_PTO_CR_Mask_16 (unsigned int)(0xffff)
+
+/*#define MAC_PTO_CR_RES_Wr_Mask_16 (unsigned int)(~((~(~0<<(16)))<<(16)))*/
+
+#define MAC_PTO_CR_RES_Wr_Mask_16 (unsigned int)(0xffff)
+
+/*#define  MAC_PTO_CR_Mask_6 (unsigned int)(~(~0<<(2)))*/
+
+#define  MAC_PTO_CR_Mask_6 (unsigned int)(0x3)
+
+/*#define MAC_PTO_CR_RES_Wr_Mask_6 (unsigned int)(~((~(~0<<(2)))<<(6)))*/
+
+#define MAC_PTO_CR_RES_Wr_Mask_6 (unsigned int)(0xffffff3f)
+
+/*#define  MAC_PTO_CR_Mask_3 (unsigned int)(~(~0<<(1)))*/
+
+#define  MAC_PTO_CR_Mask_3 (unsigned int)(0x1)
+
+/*#define MAC_PTO_CR_RES_Wr_Mask_3 (unsigned int)(~((~(~0<<(1)))<<(3)))*/
+
+#define MAC_PTO_CR_RES_Wr_Mask_3 (unsigned int)(0xfffffff7)
+
+/*#define MAC_PTO_CR_DN_Mask (unsigned int)(~(~0<<(8)))*/
+
+#define MAC_PTO_CR_DN_Mask (unsigned int)(0xff)
+
+/*#define MAC_PTO_CR_DN_Wr_Mask (unsigned int)(~((~(~0 << (8))) << (8)))*/
+
+#define MAC_PTO_CR_DN_Wr_Mask (unsigned int)(0xffff00ff)
+
+#define MAC_PTO_CR_DN_UdfWr(data) do {\
+		unsigned int v;\
+		MAC_PTO_CR_RgRd(v);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_16))|((( 0) & (MAC_PTO_CR_Mask_16))<<16);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_6))|((( 0) & (MAC_PTO_CR_Mask_6))<<6);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_3))|((( 0) & (MAC_PTO_CR_Mask_3))<<3);\
+		v = ((v & MAC_PTO_CR_DN_Wr_Mask) | ((data & MAC_PTO_CR_DN_Mask)<<8));\
+		MAC_PTO_CR_RgWr(v);\
+} while(0)
+
+#define MAC_PTO_CR_DN_UdfRd(data) do {\
+		MAC_PTO_CR_RgRd(data);\
+		data = ((data >> 8) & MAC_PTO_CR_DN_Mask);\
+} while(0)
+
+/*#define MAC_PTO_CR_APDREQTRIG_Mask (unsigned int)(~(~0<<(1)))*/
+
+#define MAC_PTO_CR_APDREQTRIG_Mask (unsigned int)(0x1)
+
+/*#define MAC_PTO_CR_APDREQTRIG_Wr_Mask (unsigned int)(~((~(~0 << (1))) << (5)))*/
+
+#define MAC_PTO_CR_APDREQTRIG_Wr_Mask (unsigned int)(0xffffffdf)
+
+#define MAC_PTO_CR_APDREQTRIG_UdfWr(data) do {\
+		unsigned int v;\
+		MAC_PTO_CR_RgRd(v);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_16))|((( 0) & (MAC_PTO_CR_Mask_16))<<16);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_6))|((( 0) & (MAC_PTO_CR_Mask_6))<<6);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_3))|((( 0) & (MAC_PTO_CR_Mask_3))<<3);\
+		v = ((v & MAC_PTO_CR_APDREQTRIG_Wr_Mask) | ((data & MAC_PTO_CR_APDREQTRIG_Mask)<<5));\
+		MAC_PTO_CR_RgWr(v);\
+} while(0)
+
+#define MAC_PTO_CR_APDREQTRIG_UdfRd(data) do {\
+		MAC_PTO_CR_RgRd(data);\
+		data = ((data >> 5) & MAC_PTO_CR_APDREQTRIG_Mask);\
+} while(0)
+
+/*#define MAC_PTO_CR_ASYNCTRIG_Mask (unsigned int)(~(~0<<(1)))*/
+
+#define MAC_PTO_CR_ASYNCTRIG_Mask (unsigned int)(0x1)
+
+/*#define MAC_PTO_CR_ASYNCTRIG_Wr_Mask (unsigned int)(~((~(~0 << (1))) << (4)))*/
+
+#define MAC_PTO_CR_ASYNCTRIG_Wr_Mask (unsigned int)(0xffffffef)
+
+#define MAC_PTO_CR_ASYNCTRIG_UdfWr(data) do {\
+		unsigned int v;\
+		MAC_PTO_CR_RgRd(v);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_16))|((( 0) & (MAC_PTO_CR_Mask_16))<<16);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_6))|((( 0) & (MAC_PTO_CR_Mask_6))<<6);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_3))|((( 0) & (MAC_PTO_CR_Mask_3))<<3);\
+		v = ((v & MAC_PTO_CR_ASYNCTRIG_Wr_Mask) | ((data & MAC_PTO_CR_ASYNCTRIG_Mask)<<4));\
+		MAC_PTO_CR_RgWr(v);\
+} while(0)
+
+#define MAC_PTO_CR_ASYNCTRIG_UdfRd(data) do {\
+		MAC_PTO_CR_RgRd(data);\
+		data = ((data >> 4) & MAC_PTO_CR_ASYNCTRIG_Mask);\
+} while(0)
+
+/*#define MAC_PTO_CR_APDREQEN_Mask (unsigned int)(~(~0<<(1)))*/
+
+#define MAC_PTO_CR_APDREQEN_Mask (unsigned int)(0x1)
+
+/*#define MAC_PTO_CR_APDREQEN_Wr_Mask (unsigned int)(~((~(~0 << (1))) << (2)))*/
+
+#define MAC_PTO_CR_APDREQEN_Wr_Mask (unsigned int)(0xfffffffb)
+
+#define MAC_PTO_CR_APDREQEN_UdfWr(data) do {\
+		unsigned int v;\
+		MAC_PTO_CR_RgRd(v);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_16))|((( 0) & (MAC_PTO_CR_Mask_16))<<16);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_6))|((( 0) & (MAC_PTO_CR_Mask_6))<<6);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_3))|((( 0) & (MAC_PTO_CR_Mask_3))<<3);\
+		v = ((v & MAC_PTO_CR_APDREQEN_Wr_Mask) | ((data & MAC_PTO_CR_APDREQEN_Mask)<<2));\
+		MAC_PTO_CR_RgWr(v);\
+} while(0)
+
+#define MAC_PTO_CR_APDREQEN_UdfRd(data) do {\
+		MAC_PTO_CR_RgRd(data);\
+		data = ((data >> 2) & MAC_PTO_CR_APDREQEN_Mask);\
+} while(0)
+
+/*#define MAC_PTO_CR_ASYNCEN_Mask (unsigned int)(~(~0<<(1)))*/
+
+#define MAC_PTO_CR_ASYNCEN_Mask (unsigned int)(0x1)
+
+/*#define MAC_PTO_CR_ASYNCEN_Wr_Mask (unsigned int)(~((~(~0 << (1))) << (1)))*/
+
+#define MAC_PTO_CR_ASYNCEN_Wr_Mask (unsigned int)(0xfffffffd)
+
+#define MAC_PTO_CR_ASYNCEN_UdfWr(data) do {\
+		unsigned int v;\
+		MAC_PTO_CR_RgRd(v);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_16))|((( 0) & (MAC_PTO_CR_Mask_16))<<16);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_6))|((( 0) & (MAC_PTO_CR_Mask_6))<<6);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_3))|((( 0) & (MAC_PTO_CR_Mask_3))<<3);\
+		v = ((v & MAC_PTO_CR_ASYNCEN_Wr_Mask) | ((data & MAC_PTO_CR_ASYNCEN_Mask)<<1));\
+		MAC_PTO_CR_RgWr(v);\
+} while(0)
+
+#define MAC_PTO_CR_ASYNCEN_UdfRd(data) do {\
+		MAC_PTO_CR_RgRd(data);\
+		data = ((data >> 1) & MAC_PTO_CR_ASYNCEN_Mask);\
+} while(0)
+
+/*#define MAC_PTO_CR_PTOEN_Mask (unsigned int)(~(~0<<(1)))*/
+
+#define MAC_PTO_CR_PTOEN_Mask (unsigned int)(0x1)
+
+/*#define MAC_PTO_CR_PTOEN_Wr_Mask (unsigned int)(~((~(~0 << (1))) << (0)))*/
+
+#define MAC_PTO_CR_PTOEN_Wr_Mask (unsigned int)(0xfffffffe)
+
+#define MAC_PTO_CR_PTOEN_UdfWr(data) do {\
+		unsigned int v;\
+		MAC_PTO_CR_RgRd(v);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_16))|((( 0) & (MAC_PTO_CR_Mask_16))<<16);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_6))|((( 0) & (MAC_PTO_CR_Mask_6))<<6);\
+		v = (v & (MAC_PTO_CR_RES_Wr_Mask_3))|((( 0) & (MAC_PTO_CR_Mask_3))<<3);\
+		v = ((v & MAC_PTO_CR_PTOEN_Wr_Mask) | ((data & MAC_PTO_CR_PTOEN_Mask)<<0));\
+		MAC_PTO_CR_RgWr(v);\
+} while(0)
+
+#define MAC_PTO_CR_PTOEN_UdfRd(data) do {\
+		MAC_PTO_CR_RgRd(data);\
+		data = ((data >> 0) & MAC_PTO_CR_PTOEN_Mask);\
+} while(0)
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 #define MAC_PPS_TTNS1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xb94))
 
 #define MAC_PPS_TTNS1_RgWr(data) do {\
@@ -10078,18606 +10398,11544 @@
 		data = ((data >> 27) & MTL_QOCR1_MISCNTOVF_Mask);\
 } while(0)
 
+#define MTL_QLCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xee4))
 
-#define MTL_QROMR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xef0))
-
-#define MTL_QROMR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR7_RgOffAddr);\
+#define MTL_QLCR7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR7_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR7_RgOffAddr);\
+#define MTL_QLCR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR7_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QROMR7_Mask_2 (ULONG)(~(~0<<(1)))*/
-
-#define  MTL_QROMR7_Mask_2 (ULONG)(0x1)
-
-/*#define MTL_QROMR7_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
-
-#define MTL_QROMR7_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
-
-/*#define  MTL_QROMR7_Mask_11 (ULONG)(~(~0<<(2)))*/
-
-#define  MTL_QROMR7_Mask_11 (ULONG)(0x3)
-
-/*#define MTL_QROMR7_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
-
-#define MTL_QROMR7_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
-
-/*#define  MTL_QROMR7_Mask_16 (ULONG)(~(~0<<(4)))*/
+/*#define  MTL_QLCR7_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define  MTL_QROMR7_Mask_16 (ULONG)(0xf)
+#define  MTL_QLCR7_Mask_29 (ULONG)(0x7)
 
-/*#define MTL_QROMR7_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
+/*#define MTL_QLCR7_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR7_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+#define MTL_QLCR7_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define  MTL_QROMR7_Mask_30 (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QLCR7_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define  MTL_QROMR7_Mask_30 (ULONG)(0x3)
+#define MTL_QLCR7_LC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+/*#define MTL_QLCR7_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR7_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+#define MTL_QLCR7_LC_Wr_Mask (ULONG)(0xe0000000)
 
-/*#define MTL_QROMR7_RTC_Mask (ULONG)(~(~0<<(2)))*/
+#define MTL_QLCR7_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR7_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR7_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR7_LC_Wr_Mask) | ((data & MTL_QLCR7_LC_Mask)<<0));\
+		MTL_QLCR7_RgWr(v);\
+} while(0)
 
-#define MTL_QROMR7_RTC_Mask (ULONG)(0x3)
+#define MTL_QLCR7_LC_UdfRd(data) do {\
+		MTL_QLCR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR7_LC_Mask);\
+} while(0)
 
-/*#define MTL_QROMR7_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
 
-#define MTL_QROMR7_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define MTL_QLCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xea4))
 
-#define MTL_QROMR7_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_RTC_Wr_Mask) | ((data & MTL_QROMR7_RTC_Mask)<<0));\
-		MTL_QROMR7_RgWr(v);\
+#define MTL_QLCR6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR6_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR7_RTC_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR7_RTC_Mask);\
+#define MTL_QLCR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR6_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR7_FUP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR7_FUP_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR7_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define  MTL_QLCR6_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR7_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define  MTL_QLCR6_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR7_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_FUP_Wr_Mask) | ((data & MTL_QROMR7_FUP_Mask)<<3));\
-		MTL_QROMR7_RgWr(v);\
-} while(0)
+/*#define MTL_QLCR6_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR7_FUP_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR7_FUP_Mask);\
-} while(0)
+#define MTL_QLCR6_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_FEP_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QLCR6_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR7_FEP_Mask (ULONG)(0x1)
+#define MTL_QLCR6_LC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+/*#define MTL_QLCR6_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR7_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define MTL_QLCR6_LC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR7_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_FEP_Wr_Mask) | ((data & MTL_QROMR7_FEP_Mask)<<4));\
-		MTL_QROMR7_RgWr(v);\
+#define MTL_QLCR6_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR6_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR6_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR6_LC_Wr_Mask) | ((data & MTL_QLCR6_LC_Mask)<<0));\
+		MTL_QLCR6_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR7_FEP_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR7_FEP_Mask);\
+#define MTL_QLCR6_LC_UdfRd(data) do {\
+		MTL_QLCR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR6_LC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR7_RSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR7_RSF_Mask (ULONG)(0x1)
 
-/*#define MTL_QROMR7_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MTL_QROMR7_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define MTL_QLCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe64))
 
-#define MTL_QROMR7_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_RSF_Wr_Mask) | ((data & MTL_QROMR7_RSF_Mask)<<5));\
-		MTL_QROMR7_RgWr(v);\
+#define MTL_QLCR5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR5_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR7_RSF_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR7_RSF_Mask);\
+#define MTL_QLCR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR5_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR7_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR7_DIS_TCP_EF_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR7_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define  MTL_QLCR5_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR7_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define  MTL_QLCR5_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR7_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR7_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR7_RgWr(v);\
-} while(0)
+/*#define MTL_QLCR5_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR7_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR7_DIS_TCP_EF_Mask);\
-} while(0)
+#define MTL_QLCR5_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_EHFC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QLCR5_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR7_EHFC_Mask (ULONG)(0x1)
+#define MTL_QLCR5_LC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MTL_QLCR5_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR7_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define MTL_QLCR5_LC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR7_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_EHFC_Wr_Mask) | ((data & MTL_QROMR7_EHFC_Mask)<<7));\
-		MTL_QROMR7_RgWr(v);\
+#define MTL_QLCR5_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR5_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR5_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR5_LC_Wr_Mask) | ((data & MTL_QLCR5_LC_Mask)<<0));\
+		MTL_QLCR5_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR7_EHFC_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR7_EHFC_Mask);\
+#define MTL_QLCR5_LC_UdfRd(data) do {\
+		MTL_QLCR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR5_LC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR7_RFA_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QROMR7_RFA_Mask (ULONG)(0x7)
 
-/*#define MTL_QROMR7_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
-
-#define MTL_QROMR7_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QLCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe24))
 
-#define MTL_QROMR7_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_RFA_Wr_Mask) | ((data & MTL_QROMR7_RFA_Mask)<<8));\
-		MTL_QROMR7_RgWr(v);\
+#define MTL_QLCR4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR4_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR7_RFA_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR7_RFA_Mask);\
+#define MTL_QLCR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR4_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR7_RFD_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QROMR7_RFD_Mask (ULONG)(0x7)
-
-/*#define MTL_QROMR7_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
+/*#define  MTL_QLCR4_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR7_RFD_Wr_Mask (ULONG)(0xffff1fff)
+#define  MTL_QLCR4_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR7_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_RFD_Wr_Mask) | ((data & MTL_QROMR7_RFD_Mask)<<13));\
-		MTL_QROMR7_RgWr(v);\
-} while(0)
+/*#define MTL_QLCR4_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR7_RFD_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR7_RFD_Mask);\
-} while(0)
+#define MTL_QLCR4_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_RQS_Mask (ULONG)(~(~0<<(10)))*/
+/*#define MTL_QLCR4_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR7_RQS_Mask (ULONG)(0x3ff)
+#define MTL_QLCR4_LC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR7_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+/*#define MTL_QLCR4_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR7_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QLCR4_LC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR7_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR7_RgRd(v);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR7_Mask_2))<<2);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR7_Mask_11))<<11);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR7_Mask_16))<<16);\
-		v = (v & (MTL_QROMR7_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR7_Mask_30))<<30);\
-		v = ((v & MTL_QROMR7_RQS_Wr_Mask) | ((data & MTL_QROMR7_RQS_Mask)<<20));\
-		MTL_QROMR7_RgWr(v);\
+#define MTL_QLCR4_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR4_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR4_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR4_LC_Wr_Mask) | ((data & MTL_QLCR4_LC_Mask)<<0));\
+		MTL_QLCR4_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR7_RQS_UdfRd(data) do {\
-		MTL_QROMR7_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR7_RQS_Mask);\
+#define MTL_QLCR4_LC_UdfRd(data) do {\
+		MTL_QLCR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR4_LC_Mask);\
 } while(0)
 
 
-#define MTL_QROMR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xeb0))
+#define MTL_QLCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xde4))
 
-#define MTL_QROMR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR6_RgOffAddr);\
+#define MTL_QLCR3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR3_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR6_RgOffAddr);\
+#define MTL_QLCR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR3_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QROMR6_Mask_2 (ULONG)(~(~0<<(1)))*/
+/*#define  MTL_QLCR3_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define  MTL_QROMR6_Mask_2 (ULONG)(0x1)
+#define  MTL_QLCR3_Mask_29 (ULONG)(0x7)
 
-/*#define MTL_QROMR6_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
+/*#define MTL_QLCR3_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR6_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
+#define MTL_QLCR3_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define  MTL_QROMR6_Mask_11 (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QLCR3_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define  MTL_QROMR6_Mask_11 (ULONG)(0x3)
+#define MTL_QLCR3_LC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR6_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+/*#define MTL_QLCR3_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR6_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+#define MTL_QLCR3_LC_Wr_Mask (ULONG)(0xe0000000)
 
-/*#define  MTL_QROMR6_Mask_16 (ULONG)(~(~0<<(4)))*/
+#define MTL_QLCR3_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR3_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR3_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR3_LC_Wr_Mask) | ((data & MTL_QLCR3_LC_Mask)<<0));\
+		MTL_QLCR3_RgWr(v);\
+} while(0)
 
-#define  MTL_QROMR6_Mask_16 (ULONG)(0xf)
+#define MTL_QLCR3_LC_UdfRd(data) do {\
+		MTL_QLCR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR3_LC_Mask);\
+} while(0)
 
-/*#define MTL_QROMR6_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
 
-#define MTL_QROMR6_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+#define MTL_QLCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xda4))
 
-/*#define  MTL_QROMR6_Mask_30 (ULONG)(~(~0<<(2)))*/
+#define MTL_QLCR2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR2_RgOffAddr);\
+} while(0)
 
-#define  MTL_QROMR6_Mask_30 (ULONG)(0x3)
+#define MTL_QLCR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR2_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QROMR6_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+/*#define  MTL_QLCR2_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR6_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+#define  MTL_QLCR2_Mask_29 (ULONG)(0x7)
 
-/*#define MTL_QROMR6_RTC_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QLCR2_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR6_RTC_Mask (ULONG)(0x3)
+#define MTL_QLCR2_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR6_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
+/*#define MTL_QLCR2_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR6_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define MTL_QLCR2_LC_Mask (ULONG)(0x1fffffff)
 
-#define MTL_QROMR6_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_RTC_Wr_Mask) | ((data & MTL_QROMR6_RTC_Mask)<<0));\
-		MTL_QROMR6_RgWr(v);\
-} while(0)
+/*#define MTL_QLCR2_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR6_RTC_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR6_RTC_Mask);\
-} while(0)
+#define MTL_QLCR2_LC_Wr_Mask (ULONG)(0xe0000000)
 
-/*#define MTL_QROMR6_FUP_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QLCR2_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR2_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR2_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR2_LC_Wr_Mask) | ((data & MTL_QLCR2_LC_Mask)<<0));\
+		MTL_QLCR2_RgWr(v);\
+} while(0)
 
-#define MTL_QROMR6_FUP_Mask (ULONG)(0x1)
+#define MTL_QLCR2_LC_UdfRd(data) do {\
+		MTL_QLCR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR2_LC_Mask);\
+} while(0)
 
-/*#define MTL_QROMR6_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QROMR6_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QLCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd64))
 
-#define MTL_QROMR6_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_FUP_Wr_Mask) | ((data & MTL_QROMR6_FUP_Mask)<<3));\
-		MTL_QROMR6_RgWr(v);\
+#define MTL_QLCR1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QLCR1_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR6_FUP_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR6_FUP_Mask);\
+#define MTL_QLCR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QLCR1_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR6_FEP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR6_FEP_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR6_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+/*#define  MTL_QLCR1_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR6_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define  MTL_QLCR1_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR6_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_FEP_Wr_Mask) | ((data & MTL_QROMR6_FEP_Mask)<<4));\
-		MTL_QROMR6_RgWr(v);\
-} while(0)
+/*#define MTL_QLCR1_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR6_FEP_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR6_FEP_Mask);\
-} while(0)
+#define MTL_QLCR1_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR6_RSF_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QLCR1_LC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR6_RSF_Mask (ULONG)(0x1)
+#define MTL_QLCR1_LC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR6_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+/*#define MTL_QLCR1_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR6_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define MTL_QLCR1_LC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR6_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_RSF_Wr_Mask) | ((data & MTL_QROMR6_RSF_Mask)<<5));\
-		MTL_QROMR6_RgWr(v);\
+#define MTL_QLCR1_LC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QLCR1_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR1_Mask_29))<<29);\
+		(v) = ((v & MTL_QLCR1_LC_Wr_Mask) | ((data & MTL_QLCR1_LC_Mask)<<0));\
+		MTL_QLCR1_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR6_RSF_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR6_RSF_Mask);\
+#define MTL_QLCR1_LC_UdfRd(data) do {\
+		MTL_QLCR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QLCR1_LC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR6_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR6_DIS_TCP_EF_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR6_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define MTL_QROMR6_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define MTL_QHCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xee0))
 
-#define MTL_QROMR6_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR6_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR6_RgWr(v);\
+#define MTL_QHCR7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR7_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR6_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR6_DIS_TCP_EF_Mask);\
+#define MTL_QHCR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR7_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR6_EHFC_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR6_EHFC_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR6_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define  MTL_QHCR7_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR6_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define  MTL_QHCR7_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR6_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_EHFC_Wr_Mask) | ((data & MTL_QROMR6_EHFC_Mask)<<7));\
-		MTL_QROMR6_RgWr(v);\
-} while(0)
+/*#define MTL_QHCR7_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR6_EHFC_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR6_EHFC_Mask);\
-} while(0)
+#define MTL_QHCR7_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR6_RFA_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QHCR7_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR6_RFA_Mask (ULONG)(0x7)
+#define MTL_QHCR7_HC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR6_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
+/*#define MTL_QHCR7_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR6_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QHCR7_HC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR6_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_RFA_Wr_Mask) | ((data & MTL_QROMR6_RFA_Mask)<<8));\
-		MTL_QROMR6_RgWr(v);\
+#define MTL_QHCR7_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR7_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR7_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR7_HC_Wr_Mask) | ((data & MTL_QHCR7_HC_Mask)<<0));\
+		MTL_QHCR7_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR6_RFA_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR6_RFA_Mask);\
+#define MTL_QHCR7_HC_UdfRd(data) do {\
+		MTL_QHCR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR7_HC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR6_RFD_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR6_RFD_Mask (ULONG)(0x7)
-
-/*#define MTL_QROMR6_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
-
-#define MTL_QROMR6_RFD_Wr_Mask (ULONG)(0xffff1fff)
+#define MTL_QHCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xea0))
 
-#define MTL_QROMR6_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_RFD_Wr_Mask) | ((data & MTL_QROMR6_RFD_Mask)<<13));\
-		MTL_QROMR6_RgWr(v);\
+#define MTL_QHCR6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR6_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR6_RFD_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR6_RFD_Mask);\
+#define MTL_QHCR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR6_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR6_RQS_Mask (ULONG)(~(~0<<(10)))*/
+/*#define  MTL_QHCR6_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR6_RQS_Mask (ULONG)(0x3ff)
+#define  MTL_QHCR6_Mask_29 (ULONG)(0x7)
 
-/*#define MTL_QROMR6_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+/*#define MTL_QHCR6_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR6_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QHCR6_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-#define MTL_QROMR6_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR6_RgRd(v);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR6_Mask_2))<<2);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR6_Mask_11))<<11);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR6_Mask_16))<<16);\
-		v = (v & (MTL_QROMR6_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR6_Mask_30))<<30);\
-		v = ((v & MTL_QROMR6_RQS_Wr_Mask) | ((data & MTL_QROMR6_RQS_Mask)<<20));\
-		MTL_QROMR6_RgWr(v);\
-} while(0)
+/*#define MTL_QHCR6_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR6_RQS_UdfRd(data) do {\
-		MTL_QROMR6_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR6_RQS_Mask);\
-} while(0)
+#define MTL_QHCR6_HC_Mask (ULONG)(0x1fffffff)
 
+/*#define MTL_QHCR6_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe70))
+#define MTL_QHCR6_HC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR5_RgOffAddr);\
+#define MTL_QHCR6_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR6_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR6_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR6_HC_Wr_Mask) | ((data & MTL_QHCR6_HC_Mask)<<0));\
+		MTL_QHCR6_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR5_RgOffAddr);\
+#define MTL_QHCR6_HC_UdfRd(data) do {\
+		MTL_QHCR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR6_HC_Mask);\
 } while(0)
 
-/*#define  MTL_QROMR5_Mask_2 (ULONG)(~(~0<<(1)))*/
 
-#define  MTL_QROMR5_Mask_2 (ULONG)(0x1)
+#define MTL_QHCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe60))
 
-/*#define MTL_QROMR5_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
+#define MTL_QHCR5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR5_RgOffAddr);\
+} while(0)
 
-#define MTL_QROMR5_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
+#define MTL_QHCR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR5_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QROMR5_Mask_11 (ULONG)(~(~0<<(2)))*/
+/*#define  MTL_QHCR5_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define  MTL_QROMR5_Mask_11 (ULONG)(0x3)
+#define  MTL_QHCR5_Mask_29 (ULONG)(0x7)
 
-/*#define MTL_QROMR5_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+/*#define MTL_QHCR5_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR5_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+#define MTL_QHCR5_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define  MTL_QROMR5_Mask_16 (ULONG)(~(~0<<(4)))*/
+/*#define MTL_QHCR5_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define  MTL_QROMR5_Mask_16 (ULONG)(0xf)
+#define MTL_QHCR5_HC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR5_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
+/*#define MTL_QHCR5_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR5_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+#define MTL_QHCR5_HC_Wr_Mask (ULONG)(0xe0000000)
 
-/*#define  MTL_QROMR5_Mask_30 (ULONG)(~(~0<<(2)))*/
+#define MTL_QHCR5_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR5_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR5_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR5_HC_Wr_Mask) | ((data & MTL_QHCR5_HC_Mask)<<0));\
+		MTL_QHCR5_RgWr(v);\
+} while(0)
 
-#define  MTL_QROMR5_Mask_30 (ULONG)(0x3)
+#define MTL_QHCR5_HC_UdfRd(data) do {\
+		MTL_QHCR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR5_HC_Mask);\
+} while(0)
 
-/*#define MTL_QROMR5_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
 
-#define MTL_QROMR5_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+#define MTL_QHCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe20))
 
-/*#define MTL_QROMR5_RTC_Mask (ULONG)(~(~0<<(2)))*/
+#define MTL_QHCR4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR4_RgOffAddr);\
+} while(0)
 
-#define MTL_QROMR5_RTC_Mask (ULONG)(0x3)
+#define MTL_QHCR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR4_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QROMR5_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
+/*#define  MTL_QHCR4_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR5_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define  MTL_QHCR4_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR5_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_RTC_Wr_Mask) | ((data & MTL_QROMR5_RTC_Mask)<<0));\
-		MTL_QROMR5_RgWr(v);\
-} while(0)
+/*#define MTL_QHCR4_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR5_RTC_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR5_RTC_Mask);\
-} while(0)
+#define MTL_QHCR4_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR5_FUP_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QHCR4_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR5_FUP_Mask (ULONG)(0x1)
+#define MTL_QHCR4_HC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR5_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QHCR4_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR5_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QHCR4_HC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR5_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_FUP_Wr_Mask) | ((data & MTL_QROMR5_FUP_Mask)<<3));\
-		MTL_QROMR5_RgWr(v);\
+#define MTL_QHCR4_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR4_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR4_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR4_HC_Wr_Mask) | ((data & MTL_QHCR4_HC_Mask)<<0));\
+		MTL_QHCR4_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR5_FUP_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR5_FUP_Mask);\
+#define MTL_QHCR4_HC_UdfRd(data) do {\
+		MTL_QHCR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR4_HC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR5_FEP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR5_FEP_Mask (ULONG)(0x1)
 
-/*#define MTL_QROMR5_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MTL_QROMR5_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define MTL_QHCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xde0))
 
-#define MTL_QROMR5_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_FEP_Wr_Mask) | ((data & MTL_QROMR5_FEP_Mask)<<4));\
-		MTL_QROMR5_RgWr(v);\
+#define MTL_QHCR3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR3_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR5_FEP_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR5_FEP_Mask);\
+#define MTL_QHCR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR3_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR5_RSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR5_RSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR5_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+/*#define  MTL_QHCR3_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR5_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define  MTL_QHCR3_Mask_29 (ULONG)(0x7)
 
-#define MTL_QROMR5_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_RSF_Wr_Mask) | ((data & MTL_QROMR5_RSF_Mask)<<5));\
-		MTL_QROMR5_RgWr(v);\
-} while(0)
+/*#define MTL_QHCR3_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR5_RSF_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR5_RSF_Mask);\
-} while(0)
+#define MTL_QHCR3_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR5_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QHCR3_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR5_DIS_TCP_EF_Mask (ULONG)(0x1)
+#define MTL_QHCR3_HC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR5_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MTL_QHCR3_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR5_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define MTL_QHCR3_HC_Wr_Mask (ULONG)(0xe0000000)
 
-#define MTL_QROMR5_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR5_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR5_RgWr(v);\
+#define MTL_QHCR3_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR3_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR3_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR3_HC_Wr_Mask) | ((data & MTL_QHCR3_HC_Mask)<<0));\
+		MTL_QHCR3_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR5_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR5_DIS_TCP_EF_Mask);\
+#define MTL_QHCR3_HC_UdfRd(data) do {\
+		MTL_QHCR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR3_HC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR5_EHFC_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR5_EHFC_Mask (ULONG)(0x1)
 
-/*#define MTL_QROMR5_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define MTL_QROMR5_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define MTL_QHCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xda0))
 
-#define MTL_QROMR5_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_EHFC_Wr_Mask) | ((data & MTL_QROMR5_EHFC_Mask)<<7));\
-		MTL_QROMR5_RgWr(v);\
+#define MTL_QHCR2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR2_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR5_EHFC_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR5_EHFC_Mask);\
+#define MTL_QHCR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR5_RFA_Mask (ULONG)(~(~0<<(3)))*/
+/*#define  MTL_QHCR2_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR5_RFA_Mask (ULONG)(0x7)
+#define  MTL_QHCR2_Mask_29 (ULONG)(0x7)
 
-/*#define MTL_QROMR5_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
+/*#define MTL_QHCR2_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QROMR5_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QHCR2_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-#define MTL_QROMR5_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_RFA_Wr_Mask) | ((data & MTL_QROMR5_RFA_Mask)<<8));\
-		MTL_QROMR5_RgWr(v);\
-} while(0)
+/*#define MTL_QHCR2_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR5_RFA_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR5_RFA_Mask);\
-} while(0)
+#define MTL_QHCR2_HC_Mask (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR5_RFD_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QHCR2_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define MTL_QROMR5_RFD_Mask (ULONG)(0x7)
+#define MTL_QHCR2_HC_Wr_Mask (ULONG)(0xe0000000)
 
-/*#define MTL_QROMR5_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
-
-#define MTL_QROMR5_RFD_Wr_Mask (ULONG)(0xffff1fff)
-
-#define MTL_QROMR5_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_RFD_Wr_Mask) | ((data & MTL_QROMR5_RFD_Mask)<<13));\
-		MTL_QROMR5_RgWr(v);\
+#define MTL_QHCR2_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR2_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR2_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR2_HC_Wr_Mask) | ((data & MTL_QHCR2_HC_Mask)<<0));\
+		MTL_QHCR2_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR5_RFD_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR5_RFD_Mask);\
+#define MTL_QHCR2_HC_UdfRd(data) do {\
+		MTL_QHCR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR2_HC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR5_RQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QROMR5_RQS_Mask (ULONG)(0x3ff)
 
-/*#define MTL_QROMR5_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
-
-#define MTL_QROMR5_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QHCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd60))
 
-#define MTL_QROMR5_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR5_RgRd(v);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR5_Mask_2))<<2);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR5_Mask_11))<<11);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR5_Mask_16))<<16);\
-		v = (v & (MTL_QROMR5_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR5_Mask_30))<<30);\
-		v = ((v & MTL_QROMR5_RQS_Wr_Mask) | ((data & MTL_QROMR5_RQS_Mask)<<20));\
-		MTL_QROMR5_RgWr(v);\
+#define MTL_QHCR1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QHCR1_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR5_RQS_UdfRd(data) do {\
-		MTL_QROMR5_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR5_RQS_Mask);\
+#define MTL_QHCR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QHCR1_RgOffAddr);\
 } while(0)
 
+/*#define  MTL_QHCR1_Mask_29 (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QROMR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe30))
-
-#define MTL_QROMR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR4_RgOffAddr);\
-} while(0)
-
-#define MTL_QROMR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR4_RgOffAddr);\
-} while(0)
+#define  MTL_QHCR1_Mask_29 (ULONG)(0x7)
 
-/*#define  MTL_QROMR4_Mask_2 (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QHCR1_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define  MTL_QROMR4_Mask_2 (ULONG)(0x1)
+#define MTL_QHCR1_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
 
-/*#define MTL_QROMR4_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
+/*#define MTL_QHCR1_HC_Mask (ULONG)(~(~0<<(29)))*/
 
-#define MTL_QROMR4_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
+#define MTL_QHCR1_HC_Mask (ULONG)(0x1fffffff)
 
-/*#define  MTL_QROMR4_Mask_11 (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QHCR1_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
 
-#define  MTL_QROMR4_Mask_11 (ULONG)(0x3)
+#define MTL_QHCR1_HC_Wr_Mask (ULONG)(0xe0000000)
 
-/*#define MTL_QROMR4_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+#define MTL_QHCR1_HC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QHCR1_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR1_Mask_29))<<29);\
+		(v) = ((v & MTL_QHCR1_HC_Wr_Mask) | ((data & MTL_QHCR1_HC_Mask)<<0));\
+		MTL_QHCR1_RgWr(v);\
+} while(0)
 
-#define MTL_QROMR4_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+#define MTL_QHCR1_HC_UdfRd(data) do {\
+		MTL_QHCR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QHCR1_HC_Mask);\
+} while(0)
 
-/*#define  MTL_QROMR4_Mask_16 (ULONG)(~(~0<<(4)))*/
 
-#define  MTL_QROMR4_Mask_16 (ULONG)(0xf)
+#define MTL_QSSCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xedc))
 
-/*#define MTL_QROMR4_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
+#define MTL_QSSCR7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR7_RgOffAddr);\
+} while(0)
 
-#define MTL_QROMR4_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+#define MTL_QSSCR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR7_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QROMR4_Mask_30 (ULONG)(~(~0<<(2)))*/
+/*#define  MTL_QSSCR7_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define  MTL_QROMR4_Mask_30 (ULONG)(0x3)
+#define  MTL_QSSCR7_Mask_14 (ULONG)(0x3ffff)
 
-/*#define MTL_QROMR4_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+/*#define MTL_QSSCR7_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR4_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+#define MTL_QSSCR7_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-/*#define MTL_QROMR4_RTC_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QSSCR7_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QROMR4_RTC_Mask (ULONG)(0x3)
+#define MTL_QSSCR7_SSC_Mask (ULONG)(0x3fff)
 
-/*#define MTL_QROMR4_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
+/*#define MTL_QSSCR7_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR4_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define MTL_QSSCR7_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-#define MTL_QROMR4_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_RTC_Wr_Mask) | ((data & MTL_QROMR4_RTC_Mask)<<0));\
-		MTL_QROMR4_RgWr(v);\
+#define MTL_QSSCR7_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR7_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR7_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR7_SSC_Wr_Mask) | ((data & MTL_QSSCR7_SSC_Mask)<<0));\
+		MTL_QSSCR7_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR4_RTC_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR4_RTC_Mask);\
+#define MTL_QSSCR7_SSC_UdfRd(data) do {\
+		MTL_QSSCR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR7_SSC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR4_FUP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR4_FUP_Mask (ULONG)(0x1)
 
-/*#define MTL_QROMR4_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MTL_QROMR4_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QSSCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe9c))
 
-#define MTL_QROMR4_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_FUP_Wr_Mask) | ((data & MTL_QROMR4_FUP_Mask)<<3));\
-		MTL_QROMR4_RgWr(v);\
+#define MTL_QSSCR6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR6_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR4_FUP_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR4_FUP_Mask);\
+#define MTL_QSSCR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR6_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR4_FEP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR4_FEP_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR4_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+/*#define  MTL_QSSCR6_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define MTL_QROMR4_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define  MTL_QSSCR6_Mask_14 (ULONG)(0x3ffff)
 
-#define MTL_QROMR4_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_FEP_Wr_Mask) | ((data & MTL_QROMR4_FEP_Mask)<<4));\
-		MTL_QROMR4_RgWr(v);\
-} while(0)
+/*#define MTL_QSSCR6_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR4_FEP_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR4_FEP_Mask);\
-} while(0)
+#define MTL_QSSCR6_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-/*#define MTL_QROMR4_RSF_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QSSCR6_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QROMR4_RSF_Mask (ULONG)(0x1)
+#define MTL_QSSCR6_SSC_Mask (ULONG)(0x3fff)
 
-/*#define MTL_QROMR4_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+/*#define MTL_QSSCR6_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR4_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define MTL_QSSCR6_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-#define MTL_QROMR4_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_RSF_Wr_Mask) | ((data & MTL_QROMR4_RSF_Mask)<<5));\
-		MTL_QROMR4_RgWr(v);\
+#define MTL_QSSCR6_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR6_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR6_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR6_SSC_Wr_Mask) | ((data & MTL_QSSCR6_SSC_Mask)<<0));\
+		MTL_QSSCR6_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR4_RSF_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR4_RSF_Mask);\
+#define MTL_QSSCR6_SSC_UdfRd(data) do {\
+		MTL_QSSCR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR6_SSC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR4_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR4_DIS_TCP_EF_Mask (ULONG)(0x1)
 
-/*#define MTL_QROMR4_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MTL_QROMR4_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define MTL_QSSCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe5c))
 
-#define MTL_QROMR4_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR4_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR4_RgWr(v);\
+#define MTL_QSSCR5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR5_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR4_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR4_DIS_TCP_EF_Mask);\
+#define MTL_QSSCR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR5_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR4_EHFC_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR4_EHFC_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR4_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define  MTL_QSSCR5_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define MTL_QROMR4_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define  MTL_QSSCR5_Mask_14 (ULONG)(0x3ffff)
 
-#define MTL_QROMR4_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_EHFC_Wr_Mask) | ((data & MTL_QROMR4_EHFC_Mask)<<7));\
-		MTL_QROMR4_RgWr(v);\
-} while(0)
+/*#define MTL_QSSCR5_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR4_EHFC_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR4_EHFC_Mask);\
-} while(0)
+#define MTL_QSSCR5_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-/*#define MTL_QROMR4_RFA_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QSSCR5_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QROMR4_RFA_Mask (ULONG)(0x7)
+#define MTL_QSSCR5_SSC_Mask (ULONG)(0x3fff)
 
-/*#define MTL_QROMR4_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
+/*#define MTL_QSSCR5_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR4_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QSSCR5_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-#define MTL_QROMR4_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_RFA_Wr_Mask) | ((data & MTL_QROMR4_RFA_Mask)<<8));\
-		MTL_QROMR4_RgWr(v);\
+#define MTL_QSSCR5_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR5_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR5_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR5_SSC_Wr_Mask) | ((data & MTL_QSSCR5_SSC_Mask)<<0));\
+		MTL_QSSCR5_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR4_RFA_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR4_RFA_Mask);\
+#define MTL_QSSCR5_SSC_UdfRd(data) do {\
+		MTL_QSSCR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR5_SSC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR4_RFD_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QROMR4_RFD_Mask (ULONG)(0x7)
 
-/*#define MTL_QROMR4_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
-
-#define MTL_QROMR4_RFD_Wr_Mask (ULONG)(0xffff1fff)
+#define MTL_QSSCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe1c))
 
-#define MTL_QROMR4_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_RFD_Wr_Mask) | ((data & MTL_QROMR4_RFD_Mask)<<13));\
-		MTL_QROMR4_RgWr(v);\
+#define MTL_QSSCR4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR4_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR4_RFD_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR4_RFD_Mask);\
+#define MTL_QSSCR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR4_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR4_RQS_Mask (ULONG)(~(~0<<(10)))*/
+/*#define  MTL_QSSCR4_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define MTL_QROMR4_RQS_Mask (ULONG)(0x3ff)
+#define  MTL_QSSCR4_Mask_14 (ULONG)(0x3ffff)
 
-/*#define MTL_QROMR4_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+/*#define MTL_QSSCR4_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR4_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QSSCR4_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-#define MTL_QROMR4_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR4_RgRd(v);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR4_Mask_2))<<2);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR4_Mask_11))<<11);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR4_Mask_16))<<16);\
-		v = (v & (MTL_QROMR4_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR4_Mask_30))<<30);\
-		v = ((v & MTL_QROMR4_RQS_Wr_Mask) | ((data & MTL_QROMR4_RQS_Mask)<<20));\
-		MTL_QROMR4_RgWr(v);\
-} while(0)
+/*#define MTL_QSSCR4_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QROMR4_RQS_UdfRd(data) do {\
-		MTL_QROMR4_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR4_RQS_Mask);\
-} while(0)
+#define MTL_QSSCR4_SSC_Mask (ULONG)(0x3fff)
 
+/*#define MTL_QSSCR4_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdf0))
+#define MTL_QSSCR4_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-#define MTL_QROMR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR3_RgOffAddr);\
+#define MTL_QSSCR4_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR4_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR4_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR4_SSC_Wr_Mask) | ((data & MTL_QSSCR4_SSC_Mask)<<0));\
+		MTL_QSSCR4_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR3_RgOffAddr);\
+#define MTL_QSSCR4_SSC_UdfRd(data) do {\
+		MTL_QSSCR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR4_SSC_Mask);\
 } while(0)
 
-/*#define  MTL_QROMR3_Mask_2 (ULONG)(~(~0<<(1)))*/
 
-#define  MTL_QROMR3_Mask_2 (ULONG)(0x1)
-
-/*#define MTL_QROMR3_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
-
-#define MTL_QROMR3_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
-
-/*#define  MTL_QROMR3_Mask_11 (ULONG)(~(~0<<(2)))*/
-
-#define  MTL_QROMR3_Mask_11 (ULONG)(0x3)
+#define MTL_QSSCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xddc))
 
-/*#define MTL_QROMR3_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+#define MTL_QSSCR3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR3_RgOffAddr);\
+} while(0)
 
-#define MTL_QROMR3_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+#define MTL_QSSCR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR3_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QROMR3_Mask_16 (ULONG)(~(~0<<(4)))*/
+/*#define  MTL_QSSCR3_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define  MTL_QROMR3_Mask_16 (ULONG)(0xf)
+#define  MTL_QSSCR3_Mask_14 (ULONG)(0x3ffff)
 
-/*#define MTL_QROMR3_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
+/*#define MTL_QSSCR3_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR3_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+#define MTL_QSSCR3_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-/*#define  MTL_QROMR3_Mask_30 (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QSSCR3_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define  MTL_QROMR3_Mask_30 (ULONG)(0x3)
+#define MTL_QSSCR3_SSC_Mask (ULONG)(0x3fff)
 
-/*#define MTL_QROMR3_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+/*#define MTL_QSSCR3_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR3_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+#define MTL_QSSCR3_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-/*#define MTL_QROMR3_RTC_Mask (ULONG)(~(~0<<(2)))*/
+#define MTL_QSSCR3_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR3_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR3_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR3_SSC_Wr_Mask) | ((data & MTL_QSSCR3_SSC_Mask)<<0));\
+		MTL_QSSCR3_RgWr(v);\
+} while(0)
 
-#define MTL_QROMR3_RTC_Mask (ULONG)(0x3)
+#define MTL_QSSCR3_SSC_UdfRd(data) do {\
+		MTL_QSSCR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR3_SSC_Mask);\
+} while(0)
 
-/*#define MTL_QROMR3_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
 
-#define MTL_QROMR3_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define MTL_QSSCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd9c))
 
-#define MTL_QROMR3_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_RTC_Wr_Mask) | ((data & MTL_QROMR3_RTC_Mask)<<0));\
-		MTL_QROMR3_RgWr(v);\
+#define MTL_QSSCR2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR2_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR3_RTC_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR3_RTC_Mask);\
+#define MTL_QSSCR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR3_FUP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR3_FUP_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR3_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define  MTL_QSSCR2_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define MTL_QROMR3_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define  MTL_QSSCR2_Mask_14 (ULONG)(0x3ffff)
 
-#define MTL_QROMR3_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_FUP_Wr_Mask) | ((data & MTL_QROMR3_FUP_Mask)<<3));\
-		MTL_QROMR3_RgWr(v);\
-} while(0)
+/*#define MTL_QSSCR2_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR3_FUP_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR3_FUP_Mask);\
-} while(0)
+#define MTL_QSSCR2_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-/*#define MTL_QROMR3_FEP_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QSSCR2_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QROMR3_FEP_Mask (ULONG)(0x1)
+#define MTL_QSSCR2_SSC_Mask (ULONG)(0x3fff)
 
-/*#define MTL_QROMR3_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+/*#define MTL_QSSCR2_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR3_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define MTL_QSSCR2_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-#define MTL_QROMR3_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_FEP_Wr_Mask) | ((data & MTL_QROMR3_FEP_Mask)<<4));\
-		MTL_QROMR3_RgWr(v);\
+#define MTL_QSSCR2_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR2_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR2_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR2_SSC_Wr_Mask) | ((data & MTL_QSSCR2_SSC_Mask)<<0));\
+		MTL_QSSCR2_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR3_FEP_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR3_FEP_Mask);\
+#define MTL_QSSCR2_SSC_UdfRd(data) do {\
+		MTL_QSSCR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR2_SSC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR3_RSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR3_RSF_Mask (ULONG)(0x1)
 
-/*#define MTL_QROMR3_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MTL_QROMR3_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define MTL_QSSCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd5c))
 
-#define MTL_QROMR3_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_RSF_Wr_Mask) | ((data & MTL_QROMR3_RSF_Mask)<<5));\
-		MTL_QROMR3_RgWr(v);\
+#define MTL_QSSCR1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QSSCR1_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR3_RSF_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR3_RSF_Mask);\
+#define MTL_QSSCR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QSSCR1_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR3_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR3_DIS_TCP_EF_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR3_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define  MTL_QSSCR1_Mask_14 (ULONG)(~(~0<<(18)))*/
 
-#define MTL_QROMR3_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define  MTL_QSSCR1_Mask_14 (ULONG)(0x3ffff)
 
-#define MTL_QROMR3_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR3_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR3_RgWr(v);\
-} while(0)
+/*#define MTL_QSSCR1_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
 
-#define MTL_QROMR3_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR3_DIS_TCP_EF_Mask);\
-} while(0)
+#define MTL_QSSCR1_RES_Wr_Mask_14 (ULONG)(0x3fff)
 
-/*#define MTL_QROMR3_EHFC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QSSCR1_SSC_Mask (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QROMR3_EHFC_Mask (ULONG)(0x1)
+#define MTL_QSSCR1_SSC_Mask (ULONG)(0x3fff)
 
-/*#define MTL_QROMR3_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MTL_QSSCR1_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QROMR3_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define MTL_QSSCR1_SSC_Wr_Mask (ULONG)(0xffffc000)
 
-#define MTL_QROMR3_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_EHFC_Wr_Mask) | ((data & MTL_QROMR3_EHFC_Mask)<<7));\
-		MTL_QROMR3_RgWr(v);\
+#define MTL_QSSCR1_SSC_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QSSCR1_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR1_Mask_14))<<14);\
+		(v) = ((v & MTL_QSSCR1_SSC_Wr_Mask) | ((data & MTL_QSSCR1_SSC_Mask)<<0));\
+		MTL_QSSCR1_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR3_EHFC_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR3_EHFC_Mask);\
+#define MTL_QSSCR1_SSC_UdfRd(data) do {\
+		MTL_QSSCR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QSSCR1_SSC_Mask);\
 } while(0)
 
-/*#define MTL_QROMR3_RFA_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QROMR3_RFA_Mask (ULONG)(0x7)
 
-/*#define MTL_QROMR3_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
-
-#define MTL_QROMR3_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QW7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xed8))
 
-#define MTL_QROMR3_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_RFA_Wr_Mask) | ((data & MTL_QROMR3_RFA_Mask)<<8));\
-		MTL_QROMR3_RgWr(v);\
+#define MTL_QW7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW7_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR3_RFA_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR3_RFA_Mask);\
+#define MTL_QW7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW7_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR3_RFD_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QROMR3_RFD_Mask (ULONG)(0x7)
-
-/*#define MTL_QROMR3_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
+/*#define  MTL_QW7_Mask_21 (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QROMR3_RFD_Wr_Mask (ULONG)(0xffff1fff)
+#define  MTL_QW7_Mask_21 (ULONG)(0x7ff)
 
-#define MTL_QROMR3_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_RFD_Wr_Mask) | ((data & MTL_QROMR3_RFD_Mask)<<13));\
-		MTL_QROMR3_RgWr(v);\
-} while(0)
+/*#define MTL_QW7_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-#define MTL_QROMR3_RFD_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR3_RFD_Mask);\
-} while(0)
+#define MTL_QW7_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR3_RQS_Mask (ULONG)(~(~0<<(10)))*/
+/*#define MTL_QW7_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-#define MTL_QROMR3_RQS_Mask (ULONG)(0x3ff)
+#define MTL_QW7_ISCQW_Mask (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR3_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+/*#define MTL_QW7_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-#define MTL_QROMR3_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QW7_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-#define MTL_QROMR3_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR3_RgRd(v);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR3_Mask_2))<<2);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR3_Mask_11))<<11);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR3_Mask_16))<<16);\
-		v = (v & (MTL_QROMR3_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR3_Mask_30))<<30);\
-		v = ((v & MTL_QROMR3_RQS_Wr_Mask) | ((data & MTL_QROMR3_RQS_Mask)<<20));\
-		MTL_QROMR3_RgWr(v);\
+#define MTL_QW7_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW7_RES_Wr_Mask_21))|((( 0) & (MTL_QW7_Mask_21))<<21);\
+		(v) = ((v & MTL_QW7_ISCQW_Wr_Mask) | ((data & MTL_QW7_ISCQW_Mask)<<0));\
+		MTL_QW7_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR3_RQS_UdfRd(data) do {\
-		MTL_QROMR3_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR3_RQS_Mask);\
+#define MTL_QW7_ISCQW_UdfRd(data) do {\
+		MTL_QW7_RgRd(data);\
+		data = ((data >> 0) & MTL_QW7_ISCQW_Mask);\
 } while(0)
 
 
-#define MTL_QROMR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdb0))
+#define MTL_QW6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe98))
 
-#define MTL_QROMR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR2_RgOffAddr);\
+#define MTL_QW6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW6_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR2_RgOffAddr);\
+#define MTL_QW6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW6_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QROMR2_Mask_2 (ULONG)(~(~0<<(1)))*/
+/*#define  MTL_QW6_Mask_21 (ULONG)(~(~0<<(11)))*/
+
+#define  MTL_QW6_Mask_21 (ULONG)(0x7ff)
+
+/*#define MTL_QW6_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-#define  MTL_QROMR2_Mask_2 (ULONG)(0x1)
+#define MTL_QW6_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
+/*#define MTL_QW6_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-#define MTL_QROMR2_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
+#define MTL_QW6_ISCQW_Mask (ULONG)(0x1fffff)
 
-/*#define  MTL_QROMR2_Mask_11 (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QW6_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-#define  MTL_QROMR2_Mask_11 (ULONG)(0x3)
+#define MTL_QW6_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-/*#define MTL_QROMR2_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+#define MTL_QW6_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW6_RES_Wr_Mask_21))|((( 0) & (MTL_QW6_Mask_21))<<21);\
+		(v) = ((v & MTL_QW6_ISCQW_Wr_Mask) | ((data & MTL_QW6_ISCQW_Mask)<<0));\
+		MTL_QW6_RgWr(v);\
+} while(0)
 
-#define MTL_QROMR2_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+#define MTL_QW6_ISCQW_UdfRd(data) do {\
+		MTL_QW6_RgRd(data);\
+		data = ((data >> 0) & MTL_QW6_ISCQW_Mask);\
+} while(0)
 
-/*#define  MTL_QROMR2_Mask_16 (ULONG)(~(~0<<(4)))*/
 
-#define  MTL_QROMR2_Mask_16 (ULONG)(0xf)
+#define MTL_QW5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe58))
 
-/*#define MTL_QROMR2_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
+#define MTL_QW5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW5_RgOffAddr);\
+} while(0)
 
-#define MTL_QROMR2_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+#define MTL_QW5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW5_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QROMR2_Mask_30 (ULONG)(~(~0<<(2)))*/
+/*#define  MTL_QW5_Mask_21 (ULONG)(~(~0<<(11)))*/
 
-#define  MTL_QROMR2_Mask_30 (ULONG)(0x3)
+#define  MTL_QW5_Mask_21 (ULONG)(0x7ff)
 
-/*#define MTL_QROMR2_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+/*#define MTL_QW5_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-#define MTL_QROMR2_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+#define MTL_QW5_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RTC_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QW5_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-#define MTL_QROMR2_RTC_Mask (ULONG)(0x3)
+#define MTL_QW5_ISCQW_Mask (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
+/*#define MTL_QW5_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-#define MTL_QROMR2_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define MTL_QW5_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-#define MTL_QROMR2_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_RTC_Wr_Mask) | ((data & MTL_QROMR2_RTC_Mask)<<0));\
-		MTL_QROMR2_RgWr(v);\
+#define MTL_QW5_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW5_RES_Wr_Mask_21))|((( 0) & (MTL_QW5_Mask_21))<<21);\
+		(v) = ((v & MTL_QW5_ISCQW_Wr_Mask) | ((data & MTL_QW5_ISCQW_Mask)<<0));\
+		MTL_QW5_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR2_RTC_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR2_RTC_Mask);\
+#define MTL_QW5_ISCQW_UdfRd(data) do {\
+		MTL_QW5_RgRd(data);\
+		data = ((data >> 0) & MTL_QW5_ISCQW_Mask);\
 } while(0)
 
-/*#define MTL_QROMR2_FUP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR2_FUP_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR2_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QROMR2_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QW4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe18))
 
-#define MTL_QROMR2_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_FUP_Wr_Mask) | ((data & MTL_QROMR2_FUP_Mask)<<3));\
-		MTL_QROMR2_RgWr(v);\
+#define MTL_QW4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW4_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR2_FUP_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR2_FUP_Mask);\
+#define MTL_QW4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW4_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR2_FEP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR2_FEP_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR2_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+/*#define  MTL_QW4_Mask_21 (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QROMR2_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define  MTL_QW4_Mask_21 (ULONG)(0x7ff)
 
-#define MTL_QROMR2_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_FEP_Wr_Mask) | ((data & MTL_QROMR2_FEP_Mask)<<4));\
-		MTL_QROMR2_RgWr(v);\
-} while(0)
+/*#define MTL_QW4_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-#define MTL_QROMR2_FEP_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR2_FEP_Mask);\
-} while(0)
+#define MTL_QW4_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RSF_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QW4_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-#define MTL_QROMR2_RSF_Mask (ULONG)(0x1)
+#define MTL_QW4_ISCQW_Mask (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+/*#define MTL_QW4_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-#define MTL_QROMR2_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define MTL_QW4_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-#define MTL_QROMR2_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_RSF_Wr_Mask) | ((data & MTL_QROMR2_RSF_Mask)<<5));\
-		MTL_QROMR2_RgWr(v);\
+#define MTL_QW4_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW4_RES_Wr_Mask_21))|((( 0) & (MTL_QW4_Mask_21))<<21);\
+		(v) = ((v & MTL_QW4_ISCQW_Wr_Mask) | ((data & MTL_QW4_ISCQW_Mask)<<0));\
+		MTL_QW4_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR2_RSF_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR2_RSF_Mask);\
+#define MTL_QW4_ISCQW_UdfRd(data) do {\
+		MTL_QW4_RgRd(data);\
+		data = ((data >> 0) & MTL_QW4_ISCQW_Mask);\
 } while(0)
 
-/*#define MTL_QROMR2_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QROMR2_DIS_TCP_EF_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR2_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MTL_QROMR2_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define MTL_QW3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdd8))
 
-#define MTL_QROMR2_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR2_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR2_RgWr(v);\
+#define MTL_QW3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW3_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR2_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR2_DIS_TCP_EF_Mask);\
+#define MTL_QW3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW3_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR2_EHFC_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QROMR2_EHFC_Mask (ULONG)(0x1)
-
-/*#define MTL_QROMR2_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define  MTL_QW3_Mask_21 (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QROMR2_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define  MTL_QW3_Mask_21 (ULONG)(0x7ff)
 
-#define MTL_QROMR2_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_EHFC_Wr_Mask) | ((data & MTL_QROMR2_EHFC_Mask)<<7));\
-		MTL_QROMR2_RgWr(v);\
-} while(0)
+/*#define MTL_QW3_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-#define MTL_QROMR2_EHFC_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR2_EHFC_Mask);\
-} while(0)
+#define MTL_QW3_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RFA_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QW3_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-#define MTL_QROMR2_RFA_Mask (ULONG)(0x7)
+#define MTL_QW3_ISCQW_Mask (ULONG)(0x1fffff)
 
-/*#define MTL_QROMR2_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
+/*#define MTL_QW3_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-#define MTL_QROMR2_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QW3_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-#define MTL_QROMR2_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_RFA_Wr_Mask) | ((data & MTL_QROMR2_RFA_Mask)<<8));\
-		MTL_QROMR2_RgWr(v);\
+#define MTL_QW3_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW3_RES_Wr_Mask_21))|((( 0) & (MTL_QW3_Mask_21))<<21);\
+		(v) = ((v & MTL_QW3_ISCQW_Wr_Mask) | ((data & MTL_QW3_ISCQW_Mask)<<0));\
+		MTL_QW3_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR2_RFA_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR2_RFA_Mask);\
+#define MTL_QW3_ISCQW_UdfRd(data) do {\
+		MTL_QW3_RgRd(data);\
+		data = ((data >> 0) & MTL_QW3_ISCQW_Mask);\
 } while(0)
 
-/*#define MTL_QROMR2_RFD_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QROMR2_RFD_Mask (ULONG)(0x7)
-
-/*#define MTL_QROMR2_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
 
-#define MTL_QROMR2_RFD_Wr_Mask (ULONG)(0xffff1fff)
+#define MTL_QW2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd98))
 
-#define MTL_QROMR2_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_RFD_Wr_Mask) | ((data & MTL_QROMR2_RFD_Mask)<<13));\
-		MTL_QROMR2_RgWr(v);\
+#define MTL_QW2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW2_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR2_RFD_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR2_RFD_Mask);\
+#define MTL_QW2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QROMR2_RQS_Mask (ULONG)(~(~0<<(10)))*/
+/*#define  MTL_QW2_Mask_21 (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QROMR2_RQS_Mask (ULONG)(0x3ff)
+#define  MTL_QW2_Mask_21 (ULONG)(0x7ff)
 
-/*#define MTL_QROMR2_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+/*#define MTL_QW2_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-#define MTL_QROMR2_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QW2_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-#define MTL_QROMR2_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR2_RgRd(v);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR2_Mask_2))<<2);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR2_Mask_11))<<11);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR2_Mask_16))<<16);\
-		v = (v & (MTL_QROMR2_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR2_Mask_30))<<30);\
-		v = ((v & MTL_QROMR2_RQS_Wr_Mask) | ((data & MTL_QROMR2_RQS_Mask)<<20));\
-		MTL_QROMR2_RgWr(v);\
-} while(0)
+/*#define MTL_QW2_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-#define MTL_QROMR2_RQS_UdfRd(data) do {\
-		MTL_QROMR2_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR2_RQS_Mask);\
-} while(0)
+#define MTL_QW2_ISCQW_Mask (ULONG)(0x1fffff)
 
+/*#define MTL_QW2_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-#define MTL_QROMR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd70))
+#define MTL_QW2_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-#define MTL_QROMR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QROMR1_RgOffAddr);\
+#define MTL_QW2_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW2_RES_Wr_Mask_21))|((( 0) & (MTL_QW2_Mask_21))<<21);\
+		(v) = ((v & MTL_QW2_ISCQW_Wr_Mask) | ((data & MTL_QW2_ISCQW_Mask)<<0));\
+		MTL_QW2_RgWr(v);\
 } while(0)
 
-#define MTL_QROMR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QROMR1_RgOffAddr);\
+#define MTL_QW2_ISCQW_UdfRd(data) do {\
+		MTL_QW2_RgRd(data);\
+		data = ((data >> 0) & MTL_QW2_ISCQW_Mask);\
 } while(0)
 
-/*#define  MTL_QROMR1_Mask_2 (ULONG)(~(~0<<(1)))*/
-
-#define  MTL_QROMR1_Mask_2 (ULONG)(0x1)
 
-/*#define MTL_QROMR1_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
+#define MTL_QW1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd58))
 
-#define MTL_QROMR1_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
+#define MTL_QW1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QW1_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QROMR1_Mask_11 (ULONG)(~(~0<<(2)))*/
+#define MTL_QW1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QW1_RgOffAddr);\
+} while(0)
 
-#define  MTL_QROMR1_Mask_11 (ULONG)(0x3)
+/*#define  MTL_QW1_Mask_21 (ULONG)(~(~0<<(11)))*/
 
-/*#define MTL_QROMR1_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+#define  MTL_QW1_Mask_21 (ULONG)(0x7ff)
 
-#define MTL_QROMR1_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+/*#define MTL_QW1_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
 
-/*#define  MTL_QROMR1_Mask_16 (ULONG)(~(~0<<(4)))*/
+#define MTL_QW1_RES_Wr_Mask_21 (ULONG)(0x1fffff)
 
-#define  MTL_QROMR1_Mask_16 (ULONG)(0xf)
+/*#define MTL_QW1_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
 
-/*#define MTL_QROMR1_RES_Wr_Mask_16 (ULONG)(~((~(~0<<(4)))<<(16)))*/
+#define MTL_QW1_ISCQW_Mask (ULONG)(0x1fffff)
 
-#define MTL_QROMR1_RES_Wr_Mask_16 (ULONG)(0xfff0ffff)
+/*#define MTL_QW1_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
 
-/*#define  MTL_QROMR1_Mask_30 (ULONG)(~(~0<<(2)))*/
+#define MTL_QW1_ISCQW_Wr_Mask (ULONG)(0xffe00000)
 
-#define  MTL_QROMR1_Mask_30 (ULONG)(0x3)
+#define MTL_QW1_ISCQW_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (MTL_QW1_RES_Wr_Mask_21))|((( 0) & (MTL_QW1_Mask_21))<<21);\
+		(v) = ((v & MTL_QW1_ISCQW_Wr_Mask) | ((data & MTL_QW1_ISCQW_Mask)<<0));\
+		MTL_QW1_RgWr(v);\
+} while(0)
 
-/*#define MTL_QROMR1_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+#define MTL_QW1_ISCQW_UdfRd(data) do {\
+		MTL_QW1_RgRd(data);\
+		data = ((data >> 0) & MTL_QW1_ISCQW_Mask);\
+} while(0)
 
-#define MTL_QROMR1_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
 
-/*#define MTL_QROMR1_RTC_Mask (ULONG)(~(~0<<(2)))*/
+#define MTL_QESR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xed4))
 
-#define MTL_QROMR1_RTC_Mask (ULONG)(0x3)
+#define MTL_QESR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR7_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QROMR1_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
+/*#define MTL_QESR7_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-#define MTL_QROMR1_RTC_Wr_Mask (ULONG)(0xfffffffc)
+#define MTL_QESR7_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QROMR1_RTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_RTC_Wr_Mask) | ((data & MTL_QROMR1_RTC_Mask)<<0));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR7_ABS_UdfRd(data) do {\
+		MTL_QESR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR7_ABS_Mask);\
 } while(0)
 
-#define MTL_QROMR1_RTC_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QROMR1_RTC_Mask);\
-} while(0)
+/*#define MTL_QESR7_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QROMR1_FUP_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QESR7_ABSU_Mask (ULONG)(0x1)
 
-#define MTL_QROMR1_FUP_Mask (ULONG)(0x1)
+#define MTL_QESR7_ABSU_UdfRd(data) do {\
+		MTL_QESR7_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR7_ABSU_Mask);\
+} while(0)
 
-/*#define MTL_QROMR1_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QROMR1_FUP_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QESR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe94))
 
-#define MTL_QROMR1_FUP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_FUP_Wr_Mask) | ((data & MTL_QROMR1_FUP_Mask)<<3));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR6_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR1_FUP_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 3) & MTL_QROMR1_FUP_Mask);\
-} while(0)
+/*#define MTL_QESR6_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-/*#define MTL_QROMR1_FEP_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QESR6_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QROMR1_FEP_Mask (ULONG)(0x1)
+#define MTL_QESR6_ABS_UdfRd(data) do {\
+		MTL_QESR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR6_ABS_Mask);\
+} while(0)
 
-/*#define MTL_QROMR1_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+/*#define MTL_QESR6_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QROMR1_FEP_Wr_Mask (ULONG)(0xffffffef)
+#define MTL_QESR6_ABSU_Mask (ULONG)(0x1)
 
-#define MTL_QROMR1_FEP_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_FEP_Wr_Mask) | ((data & MTL_QROMR1_FEP_Mask)<<4));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR6_ABSU_UdfRd(data) do {\
+		MTL_QESR6_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR6_ABSU_Mask);\
 } while(0)
 
-#define MTL_QROMR1_FEP_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 4) & MTL_QROMR1_FEP_Mask);\
-} while(0)
 
-/*#define MTL_QROMR1_RSF_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QESR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe54))
 
-#define MTL_QROMR1_RSF_Mask (ULONG)(0x1)
+#define MTL_QESR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR5_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QROMR1_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+/*#define MTL_QESR5_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-#define MTL_QROMR1_RSF_Wr_Mask (ULONG)(0xffffffdf)
+#define MTL_QESR5_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QROMR1_RSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_RSF_Wr_Mask) | ((data & MTL_QROMR1_RSF_Mask)<<5));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR5_ABS_UdfRd(data) do {\
+		MTL_QESR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR5_ABS_Mask);\
 } while(0)
 
-#define MTL_QROMR1_RSF_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 5) & MTL_QROMR1_RSF_Mask);\
-} while(0)
+/*#define MTL_QESR5_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QROMR1_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QESR5_ABSU_Mask (ULONG)(0x1)
 
-#define MTL_QROMR1_DIS_TCP_EF_Mask (ULONG)(0x1)
+#define MTL_QESR5_ABSU_UdfRd(data) do {\
+		MTL_QESR5_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR5_ABSU_Mask);\
+} while(0)
 
-/*#define MTL_QROMR1_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define MTL_QROMR1_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+#define MTL_QESR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe14))
 
-#define MTL_QROMR1_DIS_TCP_EF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR1_DIS_TCP_EF_Mask)<<6));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR4_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR1_DIS_TCP_EF_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 6) & MTL_QROMR1_DIS_TCP_EF_Mask);\
-} while(0)
+/*#define MTL_QESR4_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-/*#define MTL_QROMR1_EHFC_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QESR4_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QROMR1_EHFC_Mask (ULONG)(0x1)
+#define MTL_QESR4_ABS_UdfRd(data) do {\
+		MTL_QESR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR4_ABS_Mask);\
+} while(0)
 
-/*#define MTL_QROMR1_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MTL_QESR4_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QROMR1_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+#define MTL_QESR4_ABSU_Mask (ULONG)(0x1)
 
-#define MTL_QROMR1_EHFC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_EHFC_Wr_Mask) | ((data & MTL_QROMR1_EHFC_Mask)<<7));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR4_ABSU_UdfRd(data) do {\
+		MTL_QESR4_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR4_ABSU_Mask);\
 } while(0)
 
-#define MTL_QROMR1_EHFC_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 7) & MTL_QROMR1_EHFC_Mask);\
-} while(0)
 
-/*#define MTL_QROMR1_RFA_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QESR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdd4))
 
-#define MTL_QROMR1_RFA_Mask (ULONG)(0x7)
+#define MTL_QESR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR3_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QROMR1_RFA_Wr_Mask (ULONG)(~((~(~0 << (3))) << (8)))*/
+/*#define MTL_QESR3_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-#define MTL_QROMR1_RFA_Wr_Mask (ULONG)(0xfffff8ff)
+#define MTL_QESR3_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QROMR1_RFA_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_RFA_Wr_Mask) | ((data & MTL_QROMR1_RFA_Mask)<<8));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR3_ABS_UdfRd(data) do {\
+		MTL_QESR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR3_ABS_Mask);\
 } while(0)
 
-#define MTL_QROMR1_RFA_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 8) & MTL_QROMR1_RFA_Mask);\
-} while(0)
+/*#define MTL_QESR3_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QROMR1_RFD_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QESR3_ABSU_Mask (ULONG)(0x1)
 
-#define MTL_QROMR1_RFD_Mask (ULONG)(0x7)
+#define MTL_QESR3_ABSU_UdfRd(data) do {\
+		MTL_QESR3_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR3_ABSU_Mask);\
+} while(0)
 
-/*#define MTL_QROMR1_RFD_Wr_Mask (ULONG)(~((~(~0 << (3))) << (13)))*/
 
-#define MTL_QROMR1_RFD_Wr_Mask (ULONG)(0xffff1fff)
+#define MTL_QESR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd94))
 
-#define MTL_QROMR1_RFD_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_RFD_Wr_Mask) | ((data & MTL_QROMR1_RFD_Mask)<<13));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR2_RgOffAddr);\
 } while(0)
 
-#define MTL_QROMR1_RFD_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 13) & MTL_QROMR1_RFD_Mask);\
-} while(0)
+/*#define MTL_QESR2_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-/*#define MTL_QROMR1_RQS_Mask (ULONG)(~(~0<<(10)))*/
+#define MTL_QESR2_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QROMR1_RQS_Mask (ULONG)(0x3ff)
+#define MTL_QESR2_ABS_UdfRd(data) do {\
+		MTL_QESR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR2_ABS_Mask);\
+} while(0)
 
-/*#define MTL_QROMR1_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+/*#define MTL_QESR2_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QROMR1_RQS_Wr_Mask (ULONG)(0xc00fffff)
+#define MTL_QESR2_ABSU_Mask (ULONG)(0x1)
 
-#define MTL_QROMR1_RQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QROMR1_RgRd(v);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR1_Mask_2))<<2);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR1_Mask_11))<<11);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_16))|((( 0) & (MTL_QROMR1_Mask_16))<<16);\
-		v = (v & (MTL_QROMR1_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR1_Mask_30))<<30);\
-		v = ((v & MTL_QROMR1_RQS_Wr_Mask) | ((data & MTL_QROMR1_RQS_Mask)<<20));\
-		MTL_QROMR1_RgWr(v);\
+#define MTL_QESR2_ABSU_UdfRd(data) do {\
+		MTL_QESR2_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR2_ABSU_Mask);\
 } while(0)
 
-#define MTL_QROMR1_RQS_UdfRd(data) do {\
-		MTL_QROMR1_RgRd(data);\
-		data = ((data >> 20) & MTL_QROMR1_RQS_Mask);\
+
+#define MTL_QESR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd54))
+
+#define MTL_QESR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QESR1_RgOffAddr);\
 } while(0)
 
+/*#define MTL_QESR1_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-#define MTL_QLCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xee4))
+#define MTL_QESR1_ABS_Mask (ULONG)(0xffffff)
 
-#define MTL_QLCR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR7_RgOffAddr);\
+#define MTL_QESR1_ABS_UdfRd(data) do {\
+		MTL_QESR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QESR1_ABS_Mask);\
 } while(0)
 
-#define MTL_QLCR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR7_RgOffAddr);\
-} while(0)
+/*#define MTL_QESR1_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define  MTL_QLCR7_Mask_29 (ULONG)(~(~0<<(3)))*/
+#define MTL_QESR1_ABSU_Mask (ULONG)(0x1)
 
-#define  MTL_QLCR7_Mask_29 (ULONG)(0x7)
+#define MTL_QESR1_ABSU_UdfRd(data) do {\
+		MTL_QESR1_RgRd(data);\
+		data = ((data >> 24) & MTL_QESR1_ABSU_Mask);\
+} while(0)
 
-/*#define MTL_QLCR7_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
 
-#define MTL_QLCR7_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xed0))
 
-/*#define MTL_QLCR7_LC_Mask (ULONG)(~(~0<<(29)))*/
+#define MTL_QECR7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR7_RgOffAddr);\
+} while(0)
 
-#define MTL_QLCR7_LC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR7_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QLCR7_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define  MTL_QECR7_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QLCR7_LC_Wr_Mask (ULONG)(0xe0000000)
+#define  MTL_QECR7_Mask_0 (ULONG)(0x3)
 
-#define MTL_QLCR7_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR7_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR7_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR7_LC_Wr_Mask) | ((data & MTL_QLCR7_LC_Mask)<<0));\
-		MTL_QLCR7_RgWr(v);\
-} while(0)
+/*#define MTL_QECR7_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QLCR7_LC_UdfRd(data) do {\
-		MTL_QLCR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR7_LC_Mask);\
-} while(0)
+#define MTL_QECR7_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
+/*#define  MTL_QECR7_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define MTL_QLCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xea4))
+#define  MTL_QECR7_Mask_7 (ULONG)(0x1ffff)
 
-#define MTL_QLCR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR6_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR7_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QLCR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR6_RgOffAddr);\
-} while(0)
+#define MTL_QECR7_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-/*#define  MTL_QLCR6_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define  MTL_QECR7_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define  MTL_QLCR6_Mask_29 (ULONG)(0x7)
+#define  MTL_QECR7_Mask_25 (ULONG)(0x7f)
 
-/*#define MTL_QLCR6_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+/*#define MTL_QECR7_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QLCR6_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR7_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-/*#define MTL_QLCR6_LC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR7_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QLCR6_LC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR7_AVALG_Mask (ULONG)(0x1)
 
-/*#define MTL_QLCR6_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR7_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define MTL_QLCR6_LC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR7_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-#define MTL_QLCR6_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR6_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR6_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR6_LC_Wr_Mask) | ((data & MTL_QLCR6_LC_Mask)<<0));\
-		MTL_QLCR6_RgWr(v);\
+#define MTL_QECR7_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR7_RgRd(v);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
+		v = ((v & MTL_QECR7_AVALG_Wr_Mask) | ((data & MTL_QECR7_AVALG_Mask)<<2));\
+		MTL_QECR7_RgWr(v);\
 } while(0)
 
-#define MTL_QLCR6_LC_UdfRd(data) do {\
-		MTL_QLCR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR6_LC_Mask);\
+#define MTL_QECR7_AVALG_UdfRd(data) do {\
+		MTL_QECR7_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR7_AVALG_Mask);\
 } while(0)
 
+/*#define MTL_QECR7_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QLCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe64))
+#define MTL_QECR7_CC_Mask (ULONG)(0x1)
 
-#define MTL_QLCR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR5_RgOffAddr);\
+/*#define MTL_QECR7_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+
+#define MTL_QECR7_CC_Wr_Mask (ULONG)(0xfffffff7)
+
+#define MTL_QECR7_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR7_RgRd(v);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
+		v = ((v & MTL_QECR7_CC_Wr_Mask) | ((data & MTL_QECR7_CC_Mask)<<3));\
+		MTL_QECR7_RgWr(v);\
 } while(0)
 
-#define MTL_QLCR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR5_RgOffAddr);\
+#define MTL_QECR7_CC_UdfRd(data) do {\
+		MTL_QECR7_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR7_CC_Mask);\
 } while(0)
 
-/*#define  MTL_QLCR5_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR7_SLC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define  MTL_QLCR5_Mask_29 (ULONG)(0x7)
+#define MTL_QECR7_SLC_Mask (ULONG)(0x7)
 
-/*#define MTL_QLCR5_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+/*#define MTL_QECR7_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QLCR5_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR7_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-/*#define MTL_QLCR5_LC_Mask (ULONG)(~(~0<<(29)))*/
+#define MTL_QECR7_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR7_RgRd(v);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
+		v = ((v & MTL_QECR7_SLC_Wr_Mask) | ((data & MTL_QECR7_SLC_Mask)<<4));\
+		MTL_QECR7_RgWr(v);\
+} while(0)
 
-#define MTL_QLCR5_LC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR7_SLC_UdfRd(data) do {\
+		MTL_QECR7_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR7_SLC_Mask);\
+} while(0)
 
-/*#define MTL_QLCR5_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR7_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QLCR5_LC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR7_ABPSSIE_Mask (ULONG)(0x1)
 
-#define MTL_QLCR5_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR5_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR5_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR5_LC_Wr_Mask) | ((data & MTL_QLCR5_LC_Mask)<<0));\
-		MTL_QLCR5_RgWr(v);\
+/*#define MTL_QECR7_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+
+#define MTL_QECR7_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+
+#define MTL_QECR7_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR7_RgRd(v);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
+		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
+		v = ((v & MTL_QECR7_ABPSSIE_Wr_Mask) | ((data & MTL_QECR7_ABPSSIE_Mask)<<24));\
+		MTL_QECR7_RgWr(v);\
 } while(0)
 
-#define MTL_QLCR5_LC_UdfRd(data) do {\
-		MTL_QLCR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR5_LC_Mask);\
+#define MTL_QECR7_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR7_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR7_ABPSSIE_Mask);\
 } while(0)
 
 
-#define MTL_QLCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe24))
+#define MTL_QECR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe90))
 
-#define MTL_QLCR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR4_RgOffAddr);\
+#define MTL_QECR6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR6_RgOffAddr);\
 } while(0)
 
-#define MTL_QLCR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR4_RgOffAddr);\
+#define MTL_QECR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR6_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QLCR4_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define  MTL_QECR6_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QLCR4_Mask_29 (ULONG)(0x7)
+#define  MTL_QECR6_Mask_0 (ULONG)(0x3)
 
-/*#define MTL_QLCR4_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+/*#define MTL_QECR6_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QLCR4_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR6_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
-/*#define MTL_QLCR4_LC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define  MTL_QECR6_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define MTL_QLCR4_LC_Mask (ULONG)(0x1fffffff)
+#define  MTL_QECR6_Mask_7 (ULONG)(0x1ffff)
 
-/*#define MTL_QLCR4_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR6_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QLCR4_LC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR6_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-#define MTL_QLCR4_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR4_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR4_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR4_LC_Wr_Mask) | ((data & MTL_QLCR4_LC_Mask)<<0));\
-		MTL_QLCR4_RgWr(v);\
-} while(0)
+/*#define  MTL_QECR6_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define MTL_QLCR4_LC_UdfRd(data) do {\
-		MTL_QLCR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR4_LC_Mask);\
-} while(0)
+#define  MTL_QECR6_Mask_25 (ULONG)(0x7f)
 
+/*#define MTL_QECR6_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QLCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xde4))
+#define MTL_QECR6_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-#define MTL_QLCR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR3_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR6_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QLCR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR3_RgOffAddr);\
-} while(0)
+#define MTL_QECR6_AVALG_Mask (ULONG)(0x1)
 
-/*#define  MTL_QLCR3_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR6_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define  MTL_QLCR3_Mask_29 (ULONG)(0x7)
+#define MTL_QECR6_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-/*#define MTL_QLCR3_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR6_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR6_RgRd(v);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
+		v = ((v & MTL_QECR6_AVALG_Wr_Mask) | ((data & MTL_QECR6_AVALG_Mask)<<2));\
+		MTL_QECR6_RgWr(v);\
+} while(0)
 
-#define MTL_QLCR3_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR6_AVALG_UdfRd(data) do {\
+		MTL_QECR6_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR6_AVALG_Mask);\
+} while(0)
 
-/*#define MTL_QLCR3_LC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR6_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QLCR3_LC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR6_CC_Mask (ULONG)(0x1)
 
-/*#define MTL_QLCR3_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR6_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QLCR3_LC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR6_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-#define MTL_QLCR3_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR3_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR3_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR3_LC_Wr_Mask) | ((data & MTL_QLCR3_LC_Mask)<<0));\
-		MTL_QLCR3_RgWr(v);\
+#define MTL_QECR6_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR6_RgRd(v);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
+		v = ((v & MTL_QECR6_CC_Wr_Mask) | ((data & MTL_QECR6_CC_Mask)<<3));\
+		MTL_QECR6_RgWr(v);\
 } while(0)
 
-#define MTL_QLCR3_LC_UdfRd(data) do {\
-		MTL_QLCR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR3_LC_Mask);\
+#define MTL_QECR6_CC_UdfRd(data) do {\
+		MTL_QECR6_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR6_CC_Mask);\
 } while(0)
 
+/*#define MTL_QECR6_SLC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QLCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xda4))
-
-#define MTL_QLCR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR2_RgOffAddr);\
-} while(0)
-
-#define MTL_QLCR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR2_RgOffAddr);\
-} while(0)
+#define MTL_QECR6_SLC_Mask (ULONG)(0x7)
 
-/*#define  MTL_QLCR2_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR6_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define  MTL_QLCR2_Mask_29 (ULONG)(0x7)
+#define MTL_QECR6_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-/*#define MTL_QLCR2_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR6_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR6_RgRd(v);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
+		v = ((v & MTL_QECR6_SLC_Wr_Mask) | ((data & MTL_QECR6_SLC_Mask)<<4));\
+		MTL_QECR6_RgWr(v);\
+} while(0)
 
-#define MTL_QLCR2_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR6_SLC_UdfRd(data) do {\
+		MTL_QECR6_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR6_SLC_Mask);\
+} while(0)
 
-/*#define MTL_QLCR2_LC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR6_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QLCR2_LC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR6_ABPSSIE_Mask (ULONG)(0x1)
 
-/*#define MTL_QLCR2_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR6_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MTL_QLCR2_LC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR6_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
 
-#define MTL_QLCR2_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR2_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR2_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR2_LC_Wr_Mask) | ((data & MTL_QLCR2_LC_Mask)<<0));\
-		MTL_QLCR2_RgWr(v);\
+#define MTL_QECR6_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR6_RgRd(v);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
+		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
+		v = ((v & MTL_QECR6_ABPSSIE_Wr_Mask) | ((data & MTL_QECR6_ABPSSIE_Mask)<<24));\
+		MTL_QECR6_RgWr(v);\
 } while(0)
 
-#define MTL_QLCR2_LC_UdfRd(data) do {\
-		MTL_QLCR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR2_LC_Mask);\
+#define MTL_QECR6_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR6_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR6_ABPSSIE_Mask);\
 } while(0)
 
 
-#define MTL_QLCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd64))
+#define MTL_QECR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe50))
 
-#define MTL_QLCR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QLCR1_RgOffAddr);\
+#define MTL_QECR5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR5_RgOffAddr);\
 } while(0)
 
-#define MTL_QLCR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QLCR1_RgOffAddr);\
+#define MTL_QECR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR5_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QLCR1_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define  MTL_QECR5_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QLCR1_Mask_29 (ULONG)(0x7)
+#define  MTL_QECR5_Mask_0 (ULONG)(0x3)
 
-/*#define MTL_QLCR1_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+/*#define MTL_QECR5_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QLCR1_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR5_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
-/*#define MTL_QLCR1_LC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define  MTL_QECR5_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define MTL_QLCR1_LC_Mask (ULONG)(0x1fffffff)
+#define  MTL_QECR5_Mask_7 (ULONG)(0x1ffff)
 
-/*#define MTL_QLCR1_LC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR5_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QLCR1_LC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR5_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-#define MTL_QLCR1_LC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QLCR1_RES_Wr_Mask_29))|((( 0) & (MTL_QLCR1_Mask_29))<<29);\
-		(v) = ((v & MTL_QLCR1_LC_Wr_Mask) | ((data & MTL_QLCR1_LC_Mask)<<0));\
-		MTL_QLCR1_RgWr(v);\
-} while(0)
+/*#define  MTL_QECR5_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define MTL_QLCR1_LC_UdfRd(data) do {\
-		MTL_QLCR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QLCR1_LC_Mask);\
-} while(0)
+#define  MTL_QECR5_Mask_25 (ULONG)(0x7f)
 
+/*#define MTL_QECR5_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QHCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xee0))
+#define MTL_QECR5_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-#define MTL_QHCR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR7_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR5_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR7_RgOffAddr);\
-} while(0)
+#define MTL_QECR5_AVALG_Mask (ULONG)(0x1)
 
-/*#define  MTL_QHCR7_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR5_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define  MTL_QHCR7_Mask_29 (ULONG)(0x7)
+#define MTL_QECR5_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-/*#define MTL_QHCR7_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR5_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR5_RgRd(v);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
+		v = ((v & MTL_QECR5_AVALG_Wr_Mask) | ((data & MTL_QECR5_AVALG_Mask)<<2));\
+		MTL_QECR5_RgWr(v);\
+} while(0)
 
-#define MTL_QHCR7_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR5_AVALG_UdfRd(data) do {\
+		MTL_QECR5_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR5_AVALG_Mask);\
+} while(0)
 
-/*#define MTL_QHCR7_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR5_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR7_HC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR5_CC_Mask (ULONG)(0x1)
 
-/*#define MTL_QHCR7_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR5_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QHCR7_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR5_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-#define MTL_QHCR7_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR7_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR7_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR7_HC_Wr_Mask) | ((data & MTL_QHCR7_HC_Mask)<<0));\
-		MTL_QHCR7_RgWr(v);\
+#define MTL_QECR5_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR5_RgRd(v);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
+		v = ((v & MTL_QECR5_CC_Wr_Mask) | ((data & MTL_QECR5_CC_Mask)<<3));\
+		MTL_QECR5_RgWr(v);\
 } while(0)
 
-#define MTL_QHCR7_HC_UdfRd(data) do {\
-		MTL_QHCR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR7_HC_Mask);\
+#define MTL_QECR5_CC_UdfRd(data) do {\
+		MTL_QECR5_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR5_CC_Mask);\
 } while(0)
 
+/*#define MTL_QECR5_SLC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QHCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xea0))
-
-#define MTL_QHCR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR6_RgOffAddr);\
-} while(0)
-
-#define MTL_QHCR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR6_RgOffAddr);\
-} while(0)
+#define MTL_QECR5_SLC_Mask (ULONG)(0x7)
 
-/*#define  MTL_QHCR6_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR5_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define  MTL_QHCR6_Mask_29 (ULONG)(0x7)
+#define MTL_QECR5_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-/*#define MTL_QHCR6_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR5_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR5_RgRd(v);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
+		v = ((v & MTL_QECR5_SLC_Wr_Mask) | ((data & MTL_QECR5_SLC_Mask)<<4));\
+		MTL_QECR5_RgWr(v);\
+} while(0)
 
-#define MTL_QHCR6_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR5_SLC_UdfRd(data) do {\
+		MTL_QECR5_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR5_SLC_Mask);\
+} while(0)
 
-/*#define MTL_QHCR6_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR5_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR6_HC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR5_ABPSSIE_Mask (ULONG)(0x1)
 
-/*#define MTL_QHCR6_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR5_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MTL_QHCR6_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR5_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
 
-#define MTL_QHCR6_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR6_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR6_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR6_HC_Wr_Mask) | ((data & MTL_QHCR6_HC_Mask)<<0));\
-		MTL_QHCR6_RgWr(v);\
+#define MTL_QECR5_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR5_RgRd(v);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
+		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
+		v = ((v & MTL_QECR5_ABPSSIE_Wr_Mask) | ((data & MTL_QECR5_ABPSSIE_Mask)<<24));\
+		MTL_QECR5_RgWr(v);\
 } while(0)
 
-#define MTL_QHCR6_HC_UdfRd(data) do {\
-		MTL_QHCR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR6_HC_Mask);\
+#define MTL_QECR5_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR5_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR5_ABPSSIE_Mask);\
 } while(0)
 
 
-#define MTL_QHCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe60))
+#define MTL_QECR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe10))
 
-#define MTL_QHCR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR5_RgOffAddr);\
+#define MTL_QECR4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR4_RgOffAddr);\
 } while(0)
 
-#define MTL_QHCR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR5_RgOffAddr);\
+#define MTL_QECR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR4_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QHCR5_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define  MTL_QECR4_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QHCR5_Mask_29 (ULONG)(0x7)
+#define  MTL_QECR4_Mask_0 (ULONG)(0x3)
 
-/*#define MTL_QHCR5_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+/*#define MTL_QECR4_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QHCR5_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR4_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
-/*#define MTL_QHCR5_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define  MTL_QECR4_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define MTL_QHCR5_HC_Mask (ULONG)(0x1fffffff)
+#define  MTL_QECR4_Mask_7 (ULONG)(0x1ffff)
 
-/*#define MTL_QHCR5_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR4_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QHCR5_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR4_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-#define MTL_QHCR5_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR5_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR5_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR5_HC_Wr_Mask) | ((data & MTL_QHCR5_HC_Mask)<<0));\
-		MTL_QHCR5_RgWr(v);\
-} while(0)
+/*#define  MTL_QECR4_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define MTL_QHCR5_HC_UdfRd(data) do {\
-		MTL_QHCR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR5_HC_Mask);\
-} while(0)
+#define  MTL_QECR4_Mask_25 (ULONG)(0x7f)
 
+/*#define MTL_QECR4_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QHCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe20))
+#define MTL_QECR4_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-#define MTL_QHCR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR4_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR4_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR4_RgOffAddr);\
-} while(0)
+#define MTL_QECR4_AVALG_Mask (ULONG)(0x1)
 
-/*#define  MTL_QHCR4_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR4_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define  MTL_QHCR4_Mask_29 (ULONG)(0x7)
+#define MTL_QECR4_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-/*#define MTL_QHCR4_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR4_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR4_RgRd(v);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
+		v = ((v & MTL_QECR4_AVALG_Wr_Mask) | ((data & MTL_QECR4_AVALG_Mask)<<2));\
+		MTL_QECR4_RgWr(v);\
+} while(0)
 
-#define MTL_QHCR4_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR4_AVALG_UdfRd(data) do {\
+		MTL_QECR4_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR4_AVALG_Mask);\
+} while(0)
 
-/*#define MTL_QHCR4_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR4_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR4_HC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR4_CC_Mask (ULONG)(0x1)
 
-/*#define MTL_QHCR4_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR4_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QHCR4_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR4_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-#define MTL_QHCR4_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR4_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR4_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR4_HC_Wr_Mask) | ((data & MTL_QHCR4_HC_Mask)<<0));\
-		MTL_QHCR4_RgWr(v);\
+#define MTL_QECR4_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR4_RgRd(v);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
+		v = ((v & MTL_QECR4_CC_Wr_Mask) | ((data & MTL_QECR4_CC_Mask)<<3));\
+		MTL_QECR4_RgWr(v);\
 } while(0)
 
-#define MTL_QHCR4_HC_UdfRd(data) do {\
-		MTL_QHCR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR4_HC_Mask);\
+#define MTL_QECR4_CC_UdfRd(data) do {\
+		MTL_QECR4_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR4_CC_Mask);\
 } while(0)
 
+/*#define MTL_QECR4_SLC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QHCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xde0))
-
-#define MTL_QHCR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR3_RgOffAddr);\
-} while(0)
-
-#define MTL_QHCR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR3_RgOffAddr);\
-} while(0)
+#define MTL_QECR4_SLC_Mask (ULONG)(0x7)
 
-/*#define  MTL_QHCR3_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR4_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define  MTL_QHCR3_Mask_29 (ULONG)(0x7)
+#define MTL_QECR4_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-/*#define MTL_QHCR3_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR4_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR4_RgRd(v);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
+		v = ((v & MTL_QECR4_SLC_Wr_Mask) | ((data & MTL_QECR4_SLC_Mask)<<4));\
+		MTL_QECR4_RgWr(v);\
+} while(0)
 
-#define MTL_QHCR3_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR4_SLC_UdfRd(data) do {\
+		MTL_QECR4_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR4_SLC_Mask);\
+} while(0)
 
-/*#define MTL_QHCR3_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR4_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR3_HC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR4_ABPSSIE_Mask (ULONG)(0x1)
 
-/*#define MTL_QHCR3_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR4_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MTL_QHCR3_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR4_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
 
-#define MTL_QHCR3_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR3_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR3_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR3_HC_Wr_Mask) | ((data & MTL_QHCR3_HC_Mask)<<0));\
-		MTL_QHCR3_RgWr(v);\
+#define MTL_QECR4_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR4_RgRd(v);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
+		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
+		v = ((v & MTL_QECR4_ABPSSIE_Wr_Mask) | ((data & MTL_QECR4_ABPSSIE_Mask)<<24));\
+		MTL_QECR4_RgWr(v);\
 } while(0)
 
-#define MTL_QHCR3_HC_UdfRd(data) do {\
-		MTL_QHCR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR3_HC_Mask);\
+#define MTL_QECR4_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR4_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR4_ABPSSIE_Mask);\
 } while(0)
 
 
-#define MTL_QHCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xda0))
+#define MTL_QECR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdd0))
 
-#define MTL_QHCR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR2_RgOffAddr);\
+#define MTL_QECR3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR3_RgOffAddr);\
 } while(0)
 
-#define MTL_QHCR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR2_RgOffAddr);\
+#define MTL_QECR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR3_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QHCR2_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define  MTL_QECR3_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QHCR2_Mask_29 (ULONG)(0x7)
+#define  MTL_QECR3_Mask_0 (ULONG)(0x3)
 
-/*#define MTL_QHCR2_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+/*#define MTL_QECR3_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QHCR2_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR3_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
-/*#define MTL_QHCR2_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define  MTL_QECR3_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define MTL_QHCR2_HC_Mask (ULONG)(0x1fffffff)
+#define  MTL_QECR3_Mask_7 (ULONG)(0x1ffff)
 
-/*#define MTL_QHCR2_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR3_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QHCR2_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR3_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-#define MTL_QHCR2_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR2_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR2_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR2_HC_Wr_Mask) | ((data & MTL_QHCR2_HC_Mask)<<0));\
-		MTL_QHCR2_RgWr(v);\
-} while(0)
+/*#define  MTL_QECR3_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define MTL_QHCR2_HC_UdfRd(data) do {\
-		MTL_QHCR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR2_HC_Mask);\
-} while(0)
+#define  MTL_QECR3_Mask_25 (ULONG)(0x7f)
 
+/*#define MTL_QECR3_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QHCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd60))
+#define MTL_QECR3_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-#define MTL_QHCR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QHCR1_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR3_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QHCR1_RgOffAddr);\
-} while(0)
+#define MTL_QECR3_AVALG_Mask (ULONG)(0x1)
 
-/*#define  MTL_QHCR1_Mask_29 (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QECR3_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define  MTL_QHCR1_Mask_29 (ULONG)(0x7)
+#define MTL_QECR3_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-/*#define MTL_QHCR1_RES_Wr_Mask_29 (ULONG)(~((~(~0<<(3)))<<(29)))*/
+#define MTL_QECR3_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR3_RgRd(v);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
+		v = ((v & MTL_QECR3_AVALG_Wr_Mask) | ((data & MTL_QECR3_AVALG_Mask)<<2));\
+		MTL_QECR3_RgWr(v);\
+} while(0)
 
-#define MTL_QHCR1_RES_Wr_Mask_29 (ULONG)(0x1fffffff)
+#define MTL_QECR3_AVALG_UdfRd(data) do {\
+		MTL_QECR3_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR3_AVALG_Mask);\
+} while(0)
 
-/*#define MTL_QHCR1_HC_Mask (ULONG)(~(~0<<(29)))*/
+/*#define MTL_QECR3_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QHCR1_HC_Mask (ULONG)(0x1fffffff)
+#define MTL_QECR3_CC_Mask (ULONG)(0x1)
 
-/*#define MTL_QHCR1_HC_Wr_Mask (ULONG)(~((~(~0 << (29))) << (0)))*/
+/*#define MTL_QECR3_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QHCR1_HC_Wr_Mask (ULONG)(0xe0000000)
+#define MTL_QECR3_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-#define MTL_QHCR1_HC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QHCR1_RES_Wr_Mask_29))|((( 0) & (MTL_QHCR1_Mask_29))<<29);\
-		(v) = ((v & MTL_QHCR1_HC_Wr_Mask) | ((data & MTL_QHCR1_HC_Mask)<<0));\
-		MTL_QHCR1_RgWr(v);\
+#define MTL_QECR3_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR3_RgRd(v);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
+		v = ((v & MTL_QECR3_CC_Wr_Mask) | ((data & MTL_QECR3_CC_Mask)<<3));\
+		MTL_QECR3_RgWr(v);\
 } while(0)
 
-#define MTL_QHCR1_HC_UdfRd(data) do {\
-		MTL_QHCR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QHCR1_HC_Mask);\
+#define MTL_QECR3_CC_UdfRd(data) do {\
+		MTL_QECR3_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR3_CC_Mask);\
 } while(0)
 
+/*#define MTL_QECR3_SLC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QSSCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xedc))
-
-#define MTL_QSSCR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR7_RgOffAddr);\
-} while(0)
-
-#define MTL_QSSCR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR7_RgOffAddr);\
-} while(0)
+#define MTL_QECR3_SLC_Mask (ULONG)(0x7)
 
-/*#define  MTL_QSSCR7_Mask_14 (ULONG)(~(~0<<(18)))*/
+/*#define MTL_QECR3_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define  MTL_QSSCR7_Mask_14 (ULONG)(0x3ffff)
+#define MTL_QECR3_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-/*#define MTL_QSSCR7_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+#define MTL_QECR3_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR3_RgRd(v);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
+		v = ((v & MTL_QECR3_SLC_Wr_Mask) | ((data & MTL_QECR3_SLC_Mask)<<4));\
+		MTL_QECR3_RgWr(v);\
+} while(0)
 
-#define MTL_QSSCR7_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR3_SLC_UdfRd(data) do {\
+		MTL_QECR3_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR3_SLC_Mask);\
+} while(0)
 
-/*#define MTL_QSSCR7_SSC_Mask (ULONG)(~(~0<<(14)))*/
+/*#define MTL_QECR3_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QSSCR7_SSC_Mask (ULONG)(0x3fff)
+#define MTL_QECR3_ABPSSIE_Mask (ULONG)(0x1)
 
-/*#define MTL_QSSCR7_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
+/*#define MTL_QECR3_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MTL_QSSCR7_SSC_Wr_Mask (ULONG)(0xffffc000)
+#define MTL_QECR3_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
 
-#define MTL_QSSCR7_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR7_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR7_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR7_SSC_Wr_Mask) | ((data & MTL_QSSCR7_SSC_Mask)<<0));\
-		MTL_QSSCR7_RgWr(v);\
+#define MTL_QECR3_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR3_RgRd(v);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
+		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
+		v = ((v & MTL_QECR3_ABPSSIE_Wr_Mask) | ((data & MTL_QECR3_ABPSSIE_Mask)<<24));\
+		MTL_QECR3_RgWr(v);\
 } while(0)
 
-#define MTL_QSSCR7_SSC_UdfRd(data) do {\
-		MTL_QSSCR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR7_SSC_Mask);\
+#define MTL_QECR3_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR3_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR3_ABPSSIE_Mask);\
 } while(0)
 
 
-#define MTL_QSSCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe9c))
+#define MTL_QECR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd90))
 
-#define MTL_QSSCR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR6_RgOffAddr);\
+#define MTL_QECR2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR2_RgOffAddr);\
 } while(0)
 
-#define MTL_QSSCR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR6_RgOffAddr);\
+#define MTL_QECR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR2_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QSSCR6_Mask_14 (ULONG)(~(~0<<(18)))*/
+/*#define  MTL_QECR2_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QSSCR6_Mask_14 (ULONG)(0x3ffff)
+#define  MTL_QECR2_Mask_0 (ULONG)(0x3)
 
-/*#define MTL_QSSCR6_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+/*#define MTL_QECR2_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QSSCR6_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR2_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
-/*#define MTL_QSSCR6_SSC_Mask (ULONG)(~(~0<<(14)))*/
+/*#define  MTL_QECR2_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define MTL_QSSCR6_SSC_Mask (ULONG)(0x3fff)
+#define  MTL_QECR2_Mask_7 (ULONG)(0x1ffff)
 
-/*#define MTL_QSSCR6_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
+/*#define MTL_QECR2_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QSSCR6_SSC_Wr_Mask (ULONG)(0xffffc000)
+#define MTL_QECR2_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-#define MTL_QSSCR6_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR6_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR6_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR6_SSC_Wr_Mask) | ((data & MTL_QSSCR6_SSC_Mask)<<0));\
-		MTL_QSSCR6_RgWr(v);\
-} while(0)
+/*#define  MTL_QECR2_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define MTL_QSSCR6_SSC_UdfRd(data) do {\
-		MTL_QSSCR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR6_SSC_Mask);\
-} while(0)
+#define  MTL_QECR2_Mask_25 (ULONG)(0x7f)
 
+/*#define MTL_QECR2_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QSSCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe5c))
+#define MTL_QECR2_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-#define MTL_QSSCR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR5_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR2_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QSSCR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR5_RgOffAddr);\
-} while(0)
+#define MTL_QECR2_AVALG_Mask (ULONG)(0x1)
 
-/*#define  MTL_QSSCR5_Mask_14 (ULONG)(~(~0<<(18)))*/
+/*#define MTL_QECR2_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define  MTL_QSSCR5_Mask_14 (ULONG)(0x3ffff)
+#define MTL_QECR2_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-/*#define MTL_QSSCR5_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+#define MTL_QECR2_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR2_RgRd(v);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
+		v = ((v & MTL_QECR2_AVALG_Wr_Mask) | ((data & MTL_QECR2_AVALG_Mask)<<2));\
+		MTL_QECR2_RgWr(v);\
+} while(0)
 
-#define MTL_QSSCR5_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR2_AVALG_UdfRd(data) do {\
+		MTL_QECR2_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR2_AVALG_Mask);\
+} while(0)
 
-/*#define MTL_QSSCR5_SSC_Mask (ULONG)(~(~0<<(14)))*/
+/*#define MTL_QECR2_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QSSCR5_SSC_Mask (ULONG)(0x3fff)
+#define MTL_QECR2_CC_Mask (ULONG)(0x1)
 
-/*#define MTL_QSSCR5_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
+/*#define MTL_QECR2_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QSSCR5_SSC_Wr_Mask (ULONG)(0xffffc000)
+#define MTL_QECR2_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-#define MTL_QSSCR5_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR5_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR5_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR5_SSC_Wr_Mask) | ((data & MTL_QSSCR5_SSC_Mask)<<0));\
-		MTL_QSSCR5_RgWr(v);\
+#define MTL_QECR2_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR2_RgRd(v);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
+		v = ((v & MTL_QECR2_CC_Wr_Mask) | ((data & MTL_QECR2_CC_Mask)<<3));\
+		MTL_QECR2_RgWr(v);\
 } while(0)
 
-#define MTL_QSSCR5_SSC_UdfRd(data) do {\
-		MTL_QSSCR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR5_SSC_Mask);\
+#define MTL_QECR2_CC_UdfRd(data) do {\
+		MTL_QECR2_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR2_CC_Mask);\
 } while(0)
 
+/*#define MTL_QECR2_SLC_Mask (ULONG)(~(~0<<(3)))*/
+
+#define MTL_QECR2_SLC_Mask (ULONG)(0x7)
 
-#define MTL_QSSCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe1c))
+/*#define MTL_QECR2_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QSSCR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR4_RgOffAddr);\
+#define MTL_QECR2_SLC_Wr_Mask (ULONG)(0xffffff8f)
+
+#define MTL_QECR2_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR2_RgRd(v);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
+		v = ((v & MTL_QECR2_SLC_Wr_Mask) | ((data & MTL_QECR2_SLC_Mask)<<4));\
+		MTL_QECR2_RgWr(v);\
 } while(0)
 
-#define MTL_QSSCR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR4_RgOffAddr);\
+#define MTL_QECR2_SLC_UdfRd(data) do {\
+		MTL_QECR2_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR2_SLC_Mask);\
 } while(0)
 
-/*#define  MTL_QSSCR4_Mask_14 (ULONG)(~(~0<<(18)))*/
+/*#define MTL_QECR2_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  MTL_QSSCR4_Mask_14 (ULONG)(0x3ffff)
+#define MTL_QECR2_ABPSSIE_Mask (ULONG)(0x1)
 
-/*#define MTL_QSSCR4_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+/*#define MTL_QECR2_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MTL_QSSCR4_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR2_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
 
-/*#define MTL_QSSCR4_SSC_Mask (ULONG)(~(~0<<(14)))*/
+#define MTL_QECR2_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR2_RgRd(v);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
+		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
+		v = ((v & MTL_QECR2_ABPSSIE_Wr_Mask) | ((data & MTL_QECR2_ABPSSIE_Mask)<<24));\
+		MTL_QECR2_RgWr(v);\
+} while(0)
 
-#define MTL_QSSCR4_SSC_Mask (ULONG)(0x3fff)
+#define MTL_QECR2_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR2_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR2_ABPSSIE_Mask);\
+} while(0)
 
-/*#define MTL_QSSCR4_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
 
-#define MTL_QSSCR4_SSC_Wr_Mask (ULONG)(0xffffc000)
+#define MTL_QECR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd50))
 
-#define MTL_QSSCR4_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR4_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR4_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR4_SSC_Wr_Mask) | ((data & MTL_QSSCR4_SSC_Mask)<<0));\
-		MTL_QSSCR4_RgWr(v);\
+#define MTL_QECR1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QECR1_RgOffAddr);\
 } while(0)
 
-#define MTL_QSSCR4_SSC_UdfRd(data) do {\
-		MTL_QSSCR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR4_SSC_Mask);\
+#define MTL_QECR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QECR1_RgOffAddr);\
 } while(0)
 
+/*#define  MTL_QECR1_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QSSCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xddc))
+#define  MTL_QECR1_Mask_0 (ULONG)(0x3)
 
-#define MTL_QSSCR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR3_RgOffAddr);\
-} while(0)
+/*#define MTL_QECR1_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
 
-#define MTL_QSSCR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR3_RgOffAddr);\
-} while(0)
+#define MTL_QECR1_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
 
-/*#define  MTL_QSSCR3_Mask_14 (ULONG)(~(~0<<(18)))*/
+/*#define  MTL_QECR1_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define  MTL_QSSCR3_Mask_14 (ULONG)(0x3ffff)
+#define  MTL_QECR1_Mask_7 (ULONG)(0x1ffff)
 
-/*#define MTL_QSSCR3_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+/*#define MTL_QECR1_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
 
-#define MTL_QSSCR3_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR1_RES_Wr_Mask_7 (ULONG)(0xff00007f)
 
-/*#define MTL_QSSCR3_SSC_Mask (ULONG)(~(~0<<(14)))*/
+/*#define  MTL_QECR1_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define MTL_QSSCR3_SSC_Mask (ULONG)(0x3fff)
+#define  MTL_QECR1_Mask_25 (ULONG)(0x7f)
 
-/*#define MTL_QSSCR3_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
+/*#define MTL_QECR1_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define MTL_QSSCR3_SSC_Wr_Mask (ULONG)(0xffffc000)
+#define MTL_QECR1_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-#define MTL_QSSCR3_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR3_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR3_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR3_SSC_Wr_Mask) | ((data & MTL_QSSCR3_SSC_Mask)<<0));\
-		MTL_QSSCR3_RgWr(v);\
-} while(0)
+/*#define MTL_QECR1_AVALG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QSSCR3_SSC_UdfRd(data) do {\
-		MTL_QSSCR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR3_SSC_Mask);\
-} while(0)
+#define MTL_QECR1_AVALG_Mask (ULONG)(0x1)
 
+/*#define MTL_QECR1_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define MTL_QSSCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd9c))
+#define MTL_QECR1_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-#define MTL_QSSCR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR2_RgOffAddr);\
+#define MTL_QECR1_AVALG_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR1_RgRd(v);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
+		v = ((v & MTL_QECR1_AVALG_Wr_Mask) | ((data & MTL_QECR1_AVALG_Mask)<<2));\
+		MTL_QECR1_RgWr(v);\
 } while(0)
 
-#define MTL_QSSCR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR2_RgOffAddr);\
+#define MTL_QECR1_AVALG_UdfRd(data) do {\
+		MTL_QECR1_RgRd(data);\
+		data = ((data >> 2) & MTL_QECR1_AVALG_Mask);\
 } while(0)
 
-/*#define  MTL_QSSCR2_Mask_14 (ULONG)(~(~0<<(18)))*/
-
-#define  MTL_QSSCR2_Mask_14 (ULONG)(0x3ffff)
-
-/*#define MTL_QSSCR2_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+/*#define MTL_QECR1_CC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QSSCR2_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR1_CC_Mask (ULONG)(0x1)
 
-/*#define MTL_QSSCR2_SSC_Mask (ULONG)(~(~0<<(14)))*/
+/*#define MTL_QECR1_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define MTL_QSSCR2_SSC_Mask (ULONG)(0x3fff)
+#define MTL_QECR1_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-/*#define MTL_QSSCR2_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
-
-#define MTL_QSSCR2_SSC_Wr_Mask (ULONG)(0xffffc000)
-
-#define MTL_QSSCR2_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR2_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR2_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR2_SSC_Wr_Mask) | ((data & MTL_QSSCR2_SSC_Mask)<<0));\
-		MTL_QSSCR2_RgWr(v);\
+#define MTL_QECR1_CC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR1_RgRd(v);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
+		v = ((v & MTL_QECR1_CC_Wr_Mask) | ((data & MTL_QECR1_CC_Mask)<<3));\
+		MTL_QECR1_RgWr(v);\
 } while(0)
 
-#define MTL_QSSCR2_SSC_UdfRd(data) do {\
-		MTL_QSSCR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR2_SSC_Mask);\
+#define MTL_QECR1_CC_UdfRd(data) do {\
+		MTL_QECR1_RgRd(data);\
+		data = ((data >> 3) & MTL_QECR1_CC_Mask);\
 } while(0)
 
+/*#define MTL_QECR1_SLC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QSSCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd5c))
-
-#define MTL_QSSCR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QSSCR1_RgOffAddr);\
-} while(0)
-
-#define MTL_QSSCR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QSSCR1_RgOffAddr);\
-} while(0)
+#define MTL_QECR1_SLC_Mask (ULONG)(0x7)
 
-/*#define  MTL_QSSCR1_Mask_14 (ULONG)(~(~0<<(18)))*/
+/*#define MTL_QECR1_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define  MTL_QSSCR1_Mask_14 (ULONG)(0x3ffff)
+#define MTL_QECR1_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-/*#define MTL_QSSCR1_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(18)))<<(14)))*/
+#define MTL_QECR1_SLC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR1_RgRd(v);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
+		v = ((v & MTL_QECR1_SLC_Wr_Mask) | ((data & MTL_QECR1_SLC_Mask)<<4));\
+		MTL_QECR1_RgWr(v);\
+} while(0)
 
-#define MTL_QSSCR1_RES_Wr_Mask_14 (ULONG)(0x3fff)
+#define MTL_QECR1_SLC_UdfRd(data) do {\
+		MTL_QECR1_RgRd(data);\
+		data = ((data >> 4) & MTL_QECR1_SLC_Mask);\
+} while(0)
 
-/*#define MTL_QSSCR1_SSC_Mask (ULONG)(~(~0<<(14)))*/
+/*#define MTL_QECR1_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QSSCR1_SSC_Mask (ULONG)(0x3fff)
+#define MTL_QECR1_ABPSSIE_Mask (ULONG)(0x1)
 
-/*#define MTL_QSSCR1_SSC_Wr_Mask (ULONG)(~((~(~0 << (14))) << (0)))*/
+/*#define MTL_QECR1_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MTL_QSSCR1_SSC_Wr_Mask (ULONG)(0xffffc000)
+#define MTL_QECR1_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
 
-#define MTL_QSSCR1_SSC_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QSSCR1_RES_Wr_Mask_14))|((( 0) & (MTL_QSSCR1_Mask_14))<<14);\
-		(v) = ((v & MTL_QSSCR1_SSC_Wr_Mask) | ((data & MTL_QSSCR1_SSC_Mask)<<0));\
-		MTL_QSSCR1_RgWr(v);\
+#define MTL_QECR1_ABPSSIE_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QECR1_RgRd(v);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
+		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
+		v = ((v & MTL_QECR1_ABPSSIE_Wr_Mask) | ((data & MTL_QECR1_ABPSSIE_Mask)<<24));\
+		MTL_QECR1_RgWr(v);\
 } while(0)
 
-#define MTL_QSSCR1_SSC_UdfRd(data) do {\
-		MTL_QSSCR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QSSCR1_SSC_Mask);\
+#define MTL_QECR1_ABPSSIE_UdfRd(data) do {\
+		MTL_QECR1_RgRd(data);\
+		data = ((data >> 24) & MTL_QECR1_ABPSSIE_Mask);\
 } while(0)
 
 
-#define MTL_QW7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xed8))
-
-#define MTL_QW7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW7_RgOffAddr);\
-} while(0)
+#define MTL_QTDR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xec8))
 
-#define MTL_QW7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW7_RgOffAddr);\
+#define MTL_QTDR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR7_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QW7_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW7_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR7_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW7_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR7_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QW7_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR7_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR7_TXQPAUSED_Mask);\
+} while(0)
 
-/*#define MTL_QW7_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR7_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QW7_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR7_TRCSTS_Mask (ULONG)(0x3)
 
-/*#define MTL_QW7_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR7_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR7_TRCSTS_Mask);\
+} while(0)
 
-#define MTL_QW7_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR7_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW7_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW7_RES_Wr_Mask_21))|((( 0) & (MTL_QW7_Mask_21))<<21);\
-		(v) = ((v & MTL_QW7_ISCQW_Wr_Mask) | ((data & MTL_QW7_ISCQW_Mask)<<0));\
-		MTL_QW7_RgWr(v);\
-} while(0)
+#define MTL_QTDR7_TWCSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW7_ISCQW_UdfRd(data) do {\
-		MTL_QW7_RgRd(data);\
-		data = ((data >> 0) & MTL_QW7_ISCQW_Mask);\
+#define MTL_QTDR7_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR7_TWCSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR7_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe98))
-
-#define MTL_QW6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW6_RgOffAddr);\
-} while(0)
+#define MTL_QTDR7_TXQSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW6_RgOffAddr);\
+#define MTL_QTDR7_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR7_TXQSTS_Mask);\
 } while(0)
 
-/*#define  MTL_QW6_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW6_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR7_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW6_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR7_TXSTSFSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW6_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR7_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR7_TXSTSFSTS_Mask);\
+} while(0)
 
-/*#define MTL_QW6_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR7_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QW6_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR7_PTXQ_Mask (ULONG)(0x7)
 
-/*#define MTL_QW6_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR7_PTXQ_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR7_PTXQ_Mask);\
+} while(0)
 
-#define MTL_QW6_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR7_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QW6_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW6_RES_Wr_Mask_21))|((( 0) & (MTL_QW6_Mask_21))<<21);\
-		(v) = ((v & MTL_QW6_ISCQW_Wr_Mask) | ((data & MTL_QW6_ISCQW_Mask)<<0));\
-		MTL_QW6_RgWr(v);\
-} while(0)
+#define MTL_QTDR7_STXSTSF_Mask (ULONG)(0x7)
 
-#define MTL_QW6_ISCQW_UdfRd(data) do {\
-		MTL_QW6_RgRd(data);\
-		data = ((data >> 0) & MTL_QW6_ISCQW_Mask);\
+#define MTL_QTDR7_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR7_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR7_STXSTSF_Mask);\
 } while(0)
 
 
-#define MTL_QW5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe58))
-
-#define MTL_QW5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW5_RgOffAddr);\
-} while(0)
+#define MTL_QTDR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe88))
 
-#define MTL_QW5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW5_RgOffAddr);\
+#define MTL_QTDR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR6_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QW5_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW5_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR6_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW5_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR6_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QW5_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR6_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR6_TXQPAUSED_Mask);\
+} while(0)
 
-/*#define MTL_QW5_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR6_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QW5_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR6_TRCSTS_Mask (ULONG)(0x3)
 
-/*#define MTL_QW5_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR6_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR6_TRCSTS_Mask);\
+} while(0)
 
-#define MTL_QW5_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR6_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW5_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW5_RES_Wr_Mask_21))|((( 0) & (MTL_QW5_Mask_21))<<21);\
-		(v) = ((v & MTL_QW5_ISCQW_Wr_Mask) | ((data & MTL_QW5_ISCQW_Mask)<<0));\
-		MTL_QW5_RgWr(v);\
-} while(0)
+#define MTL_QTDR6_TWCSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW5_ISCQW_UdfRd(data) do {\
-		MTL_QW5_RgRd(data);\
-		data = ((data >> 0) & MTL_QW5_ISCQW_Mask);\
+#define MTL_QTDR6_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR6_TWCSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR6_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe18))
-
-#define MTL_QW4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW4_RgOffAddr);\
-} while(0)
+#define MTL_QTDR6_TXQSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW4_RgOffAddr);\
+#define MTL_QTDR6_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR6_TXQSTS_Mask);\
 } while(0)
 
-/*#define  MTL_QW4_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW4_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR6_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW4_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR6_TXSTSFSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW4_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR6_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR6_TXSTSFSTS_Mask);\
+} while(0)
 
-/*#define MTL_QW4_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR6_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QW4_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR6_PTXQ_Mask (ULONG)(0x7)
 
-/*#define MTL_QW4_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR6_PTXQ_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR6_PTXQ_Mask);\
+} while(0)
 
-#define MTL_QW4_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR6_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QW4_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW4_RES_Wr_Mask_21))|((( 0) & (MTL_QW4_Mask_21))<<21);\
-		(v) = ((v & MTL_QW4_ISCQW_Wr_Mask) | ((data & MTL_QW4_ISCQW_Mask)<<0));\
-		MTL_QW4_RgWr(v);\
-} while(0)
+#define MTL_QTDR6_STXSTSF_Mask (ULONG)(0x7)
 
-#define MTL_QW4_ISCQW_UdfRd(data) do {\
-		MTL_QW4_RgRd(data);\
-		data = ((data >> 0) & MTL_QW4_ISCQW_Mask);\
+#define MTL_QTDR6_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR6_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR6_STXSTSF_Mask);\
 } while(0)
 
 
-#define MTL_QW3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdd8))
-
-#define MTL_QW3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW3_RgOffAddr);\
-} while(0)
+#define MTL_QTDR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe48))
 
-#define MTL_QW3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW3_RgOffAddr);\
+#define MTL_QTDR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR5_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QW3_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW3_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR5_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW3_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR5_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QW3_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR5_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR5_TXQPAUSED_Mask);\
+} while(0)
 
-/*#define MTL_QW3_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR5_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QW3_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR5_TRCSTS_Mask (ULONG)(0x3)
 
-/*#define MTL_QW3_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR5_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR5_TRCSTS_Mask);\
+} while(0)
 
-#define MTL_QW3_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR5_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW3_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW3_RES_Wr_Mask_21))|((( 0) & (MTL_QW3_Mask_21))<<21);\
-		(v) = ((v & MTL_QW3_ISCQW_Wr_Mask) | ((data & MTL_QW3_ISCQW_Mask)<<0));\
-		MTL_QW3_RgWr(v);\
-} while(0)
+#define MTL_QTDR5_TWCSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW3_ISCQW_UdfRd(data) do {\
-		MTL_QW3_RgRd(data);\
-		data = ((data >> 0) & MTL_QW3_ISCQW_Mask);\
+#define MTL_QTDR5_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR5_TWCSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR5_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd98))
-
-#define MTL_QW2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW2_RgOffAddr);\
-} while(0)
+#define MTL_QTDR5_TXQSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW2_RgOffAddr);\
+#define MTL_QTDR5_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR5_TXQSTS_Mask);\
 } while(0)
 
-/*#define  MTL_QW2_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW2_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR5_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW2_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR5_TXSTSFSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW2_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR5_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR5_TXSTSFSTS_Mask);\
+} while(0)
 
-/*#define MTL_QW2_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR5_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QW2_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR5_PTXQ_Mask (ULONG)(0x7)
 
-/*#define MTL_QW2_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR5_PTXQ_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR5_PTXQ_Mask);\
+} while(0)
 
-#define MTL_QW2_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR5_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QW2_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW2_RES_Wr_Mask_21))|((( 0) & (MTL_QW2_Mask_21))<<21);\
-		(v) = ((v & MTL_QW2_ISCQW_Wr_Mask) | ((data & MTL_QW2_ISCQW_Mask)<<0));\
-		MTL_QW2_RgWr(v);\
-} while(0)
+#define MTL_QTDR5_STXSTSF_Mask (ULONG)(0x7)
 
-#define MTL_QW2_ISCQW_UdfRd(data) do {\
-		MTL_QW2_RgRd(data);\
-		data = ((data >> 0) & MTL_QW2_ISCQW_Mask);\
+#define MTL_QTDR5_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR5_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR5_STXSTSF_Mask);\
 } while(0)
 
 
-#define MTL_QW1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd58))
-
-#define MTL_QW1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QW1_RgOffAddr);\
-} while(0)
+#define MTL_QTDR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe08))
 
-#define MTL_QW1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QW1_RgOffAddr);\
+#define MTL_QTDR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR4_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QW1_Mask_21 (ULONG)(~(~0<<(11)))*/
-
-#define  MTL_QW1_Mask_21 (ULONG)(0x7ff)
+/*#define MTL_QTDR4_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QW1_RES_Wr_Mask_21 (ULONG)(~((~(~0<<(11)))<<(21)))*/
+#define MTL_QTDR4_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QW1_RES_Wr_Mask_21 (ULONG)(0x1fffff)
+#define MTL_QTDR4_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR4_TXQPAUSED_Mask);\
+} while(0)
 
-/*#define MTL_QW1_ISCQW_Mask (ULONG)(~(~0<<(21)))*/
+/*#define MTL_QTDR4_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QW1_ISCQW_Mask (ULONG)(0x1fffff)
+#define MTL_QTDR4_TRCSTS_Mask (ULONG)(0x3)
 
-/*#define MTL_QW1_ISCQW_Wr_Mask (ULONG)(~((~(~0 << (21))) << (0)))*/
+#define MTL_QTDR4_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR4_TRCSTS_Mask);\
+} while(0)
 
-#define MTL_QW1_ISCQW_Wr_Mask (ULONG)(0xffe00000)
+/*#define MTL_QTDR4_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QW1_ISCQW_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (MTL_QW1_RES_Wr_Mask_21))|((( 0) & (MTL_QW1_Mask_21))<<21);\
-		(v) = ((v & MTL_QW1_ISCQW_Wr_Mask) | ((data & MTL_QW1_ISCQW_Mask)<<0));\
-		MTL_QW1_RgWr(v);\
-} while(0)
+#define MTL_QTDR4_TWCSTS_Mask (ULONG)(0x1)
 
-#define MTL_QW1_ISCQW_UdfRd(data) do {\
-		MTL_QW1_RgRd(data);\
-		data = ((data >> 0) & MTL_QW1_ISCQW_Mask);\
+#define MTL_QTDR4_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR4_TWCSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR4_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xed4))
+#define MTL_QTDR4_TXQSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR7_RgOffAddr);\
+#define MTL_QTDR4_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR4_TXQSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR7_ABS_Mask (ULONG)(~(~0<<(24)))*/
+/*#define MTL_QTDR4_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR7_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR4_TXSTSFSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR7_ABS_UdfRd(data) do {\
-		MTL_QESR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR7_ABS_Mask);\
+#define MTL_QTDR4_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR4_TXSTSFSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR7_ABSU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR4_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QESR7_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR4_PTXQ_Mask (ULONG)(0x7)
 
-#define MTL_QESR7_ABSU_UdfRd(data) do {\
-		MTL_QESR7_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR7_ABSU_Mask);\
+#define MTL_QTDR4_PTXQ_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR4_PTXQ_Mask);\
 } while(0)
 
+/*#define MTL_QTDR4_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QESR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe94))
+#define MTL_QTDR4_STXSTSF_Mask (ULONG)(0x7)
 
-#define MTL_QESR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR6_RgOffAddr);\
+#define MTL_QTDR4_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR4_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR4_STXSTSF_Mask);\
 } while(0)
 
-/*#define MTL_QESR6_ABS_Mask (ULONG)(~(~0<<(24)))*/
 
-#define MTL_QESR6_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdc8))
 
-#define MTL_QESR6_ABS_UdfRd(data) do {\
-		MTL_QESR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR6_ABS_Mask);\
+#define MTL_QTDR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR3_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QESR6_ABSU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR3_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR6_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR3_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QESR6_ABSU_UdfRd(data) do {\
-		MTL_QESR6_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR6_ABSU_Mask);\
+#define MTL_QTDR3_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR3_TXQPAUSED_Mask);\
 } while(0)
 
+/*#define MTL_QTDR3_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QESR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe54))
+#define MTL_QTDR3_TRCSTS_Mask (ULONG)(0x3)
 
-#define MTL_QESR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR5_RgOffAddr);\
+#define MTL_QTDR3_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR3_TRCSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR5_ABS_Mask (ULONG)(~(~0<<(24)))*/
+/*#define MTL_QTDR3_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR5_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR3_TWCSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR5_ABS_UdfRd(data) do {\
-		MTL_QESR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR5_ABS_Mask);\
+#define MTL_QTDR3_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR3_TWCSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR5_ABSU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR3_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR5_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR3_TXQSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR5_ABSU_UdfRd(data) do {\
-		MTL_QESR5_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR5_ABSU_Mask);\
+#define MTL_QTDR3_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR3_TXQSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR3_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe14))
+#define MTL_QTDR3_TXSTSFSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR4_RgOffAddr);\
+#define MTL_QTDR3_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR3_TXSTSFSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR4_ABS_Mask (ULONG)(~(~0<<(24)))*/
+/*#define MTL_QTDR3_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QESR4_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR3_PTXQ_Mask (ULONG)(0x7)
 
-#define MTL_QESR4_ABS_UdfRd(data) do {\
-		MTL_QESR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR4_ABS_Mask);\
+#define MTL_QTDR3_PTXQ_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR3_PTXQ_Mask);\
 } while(0)
 
-/*#define MTL_QESR4_ABSU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR3_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QESR4_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR3_STXSTSF_Mask (ULONG)(0x7)
 
-#define MTL_QESR4_ABSU_UdfRd(data) do {\
-		MTL_QESR4_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR4_ABSU_Mask);\
+#define MTL_QTDR3_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR3_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR3_STXSTSF_Mask);\
 } while(0)
 
 
-#define MTL_QESR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdd4))
+#define MTL_QTDR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd88))
 
-#define MTL_QESR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR3_RgOffAddr);\
+#define MTL_QTDR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QESR3_ABS_Mask (ULONG)(~(~0<<(24)))*/
+/*#define MTL_QTDR2_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR3_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR2_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QESR3_ABS_UdfRd(data) do {\
-		MTL_QESR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR3_ABS_Mask);\
+#define MTL_QTDR2_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR2_TXQPAUSED_Mask);\
 } while(0)
 
-/*#define MTL_QESR3_ABSU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR2_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QESR3_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR2_TRCSTS_Mask (ULONG)(0x3)
 
-#define MTL_QESR3_ABSU_UdfRd(data) do {\
-		MTL_QESR3_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR3_ABSU_Mask);\
+#define MTL_QTDR2_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR2_TRCSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR2_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd94))
+#define MTL_QTDR2_TWCSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR2_RgOffAddr);\
+#define MTL_QTDR2_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR2_TWCSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR2_ABS_Mask (ULONG)(~(~0<<(24)))*/
+/*#define MTL_QTDR2_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR2_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR2_TXQSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR2_ABS_UdfRd(data) do {\
-		MTL_QESR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR2_ABS_Mask);\
+#define MTL_QTDR2_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR2_TXQSTS_Mask);\
 } while(0)
 
-/*#define MTL_QESR2_ABSU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR2_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR2_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR2_TXSTSFSTS_Mask (ULONG)(0x1)
 
-#define MTL_QESR2_ABSU_UdfRd(data) do {\
-		MTL_QESR2_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR2_ABSU_Mask);\
+#define MTL_QTDR2_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR2_TXSTSFSTS_Mask);\
 } while(0)
 
+/*#define MTL_QTDR2_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QESR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd54))
+#define MTL_QTDR2_PTXQ_Mask (ULONG)(0x7)
 
-#define MTL_QESR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QESR1_RgOffAddr);\
+#define MTL_QTDR2_PTXQ_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR2_PTXQ_Mask);\
 } while(0)
 
-/*#define MTL_QESR1_ABS_Mask (ULONG)(~(~0<<(24)))*/
+/*#define MTL_QTDR2_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QESR1_ABS_Mask (ULONG)(0xffffff)
+#define MTL_QTDR2_STXSTSF_Mask (ULONG)(0x7)
 
-#define MTL_QESR1_ABS_UdfRd(data) do {\
-		MTL_QESR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QESR1_ABS_Mask);\
+#define MTL_QTDR2_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR2_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR2_STXSTSF_Mask);\
 } while(0)
 
-/*#define MTL_QESR1_ABSU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QESR1_ABSU_Mask (ULONG)(0x1)
+#define MTL_QTDR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd48))
 
-#define MTL_QESR1_ABSU_UdfRd(data) do {\
-		MTL_QESR1_RgRd(data);\
-		data = ((data >> 24) & MTL_QESR1_ABSU_Mask);\
+#define MTL_QTDR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTDR1_RgOffAddr);\
 } while(0)
 
+/*#define MTL_QTDR1_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xed0))
+#define MTL_QTDR1_TXQPAUSED_Mask (ULONG)(0x1)
 
-#define MTL_QECR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR7_RgOffAddr);\
+#define MTL_QTDR1_TXQPAUSED_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QTDR1_TXQPAUSED_Mask);\
 } while(0)
 
-#define MTL_QECR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR7_RgOffAddr);\
+/*#define MTL_QTDR1_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+
+#define MTL_QTDR1_TRCSTS_Mask (ULONG)(0x3)
+
+#define MTL_QTDR1_TRCSTS_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 1) & MTL_QTDR1_TRCSTS_Mask);\
 } while(0)
 
-/*#define  MTL_QECR7_Mask_0 (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QTDR1_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  MTL_QECR7_Mask_0 (ULONG)(0x3)
+#define MTL_QTDR1_TWCSTS_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR7_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define MTL_QTDR1_TWCSTS_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 3) & MTL_QTDR1_TWCSTS_Mask);\
+} while(0)
 
-#define MTL_QECR7_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+/*#define MTL_QTDR1_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define  MTL_QECR7_Mask_7 (ULONG)(~(~0<<(17)))*/
+#define MTL_QTDR1_TXQSTS_Mask (ULONG)(0x1)
 
-#define  MTL_QECR7_Mask_7 (ULONG)(0x1ffff)
+#define MTL_QTDR1_TXQSTS_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 4) & MTL_QTDR1_TXQSTS_Mask);\
+} while(0)
 
-/*#define MTL_QECR7_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+/*#define MTL_QTDR1_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR7_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+#define MTL_QTDR1_TXSTSFSTS_Mask (ULONG)(0x1)
 
-/*#define  MTL_QECR7_Mask_25 (ULONG)(~(~0<<(7)))*/
+#define MTL_QTDR1_TXSTSFSTS_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 5) & MTL_QTDR1_TXSTSFSTS_Mask);\
+} while(0)
 
-#define  MTL_QECR7_Mask_25 (ULONG)(0x7f)
+/*#define MTL_QTDR1_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-/*#define MTL_QECR7_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+#define MTL_QTDR1_PTXQ_Mask (ULONG)(0x7)
 
-#define MTL_QECR7_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+#define MTL_QTDR1_PTXQ_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 16) & MTL_QTDR1_PTXQ_Mask);\
+} while(0)
 
-/*#define MTL_QECR7_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTDR1_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QECR7_AVALG_Mask (ULONG)(0x1)
+#define MTL_QTDR1_STXSTSF_Mask (ULONG)(0x7)
 
-/*#define MTL_QECR7_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+#define MTL_QTDR1_STXSTSF_UdfRd(data) do {\
+		MTL_QTDR1_RgRd(data);\
+		data = ((data >> 20) & MTL_QTDR1_STXSTSF_Mask);\
+} while(0)
 
-#define MTL_QECR7_AVALG_Wr_Mask (ULONG)(0xfffffffb)
 
-#define MTL_QECR7_AVALG_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR7_RgRd(v);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
-		v = ((v & MTL_QECR7_AVALG_Wr_Mask) | ((data & MTL_QECR7_AVALG_Mask)<<2));\
-		MTL_QECR7_RgWr(v);\
+#define MTL_QUCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xec4))
+
+#define MTL_QUCR7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR7_RgOffAddr);\
 } while(0)
 
-#define MTL_QECR7_AVALG_UdfRd(data) do {\
-		MTL_QECR7_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR7_AVALG_Mask);\
+#define MTL_QUCR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR7_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QECR7_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MTL_QUCR7_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define MTL_QECR7_CC_Mask (ULONG)(0x1)
+#define  MTL_QUCR7_Mask_12 (ULONG)(0xfffff)
 
-/*#define MTL_QECR7_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QUCR7_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QECR7_CC_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QUCR7_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-#define MTL_QECR7_CC_UdfWr(data) do {\
+/*#define MTL_QUCR7_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+
+#define MTL_QUCR7_UFPKTCNT_Mask (ULONG)(0x7ff)
+
+/*#define MTL_QUCR7_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
+
+#define MTL_QUCR7_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+
+#define MTL_QUCR7_UFPKTCNT_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR7_RgRd(v);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
-		v = ((v & MTL_QECR7_CC_Wr_Mask) | ((data & MTL_QECR7_CC_Mask)<<3));\
-		MTL_QECR7_RgWr(v);\
+		MTL_QUCR7_RgRd(v);\
+		v = (v & (MTL_QUCR7_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR7_Mask_12))<<12);\
+		v = ((v & MTL_QUCR7_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR7_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR7_RgWr(v);\
 } while(0)
 
-#define MTL_QECR7_CC_UdfRd(data) do {\
-		MTL_QECR7_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR7_CC_Mask);\
+#define MTL_QUCR7_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR7_UFPKTCNT_Mask);\
 } while(0)
 
-/*#define MTL_QECR7_SLC_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QUCR7_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR7_SLC_Mask (ULONG)(0x7)
+#define MTL_QUCR7_UFCNTOVF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR7_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+#define MTL_QUCR7_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR7_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR7_UFCNTOVF_Mask);\
+} while(0)
 
-#define MTL_QECR7_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QECR7_SLC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR7_RgRd(v);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
-		v = ((v & MTL_QECR7_SLC_Wr_Mask) | ((data & MTL_QECR7_SLC_Mask)<<4));\
-		MTL_QECR7_RgWr(v);\
+#define MTL_QUCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe84))
+
+#define MTL_QUCR6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR6_RgOffAddr);\
 } while(0)
 
-#define MTL_QECR7_SLC_UdfRd(data) do {\
-		MTL_QECR7_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR7_SLC_Mask);\
+#define MTL_QUCR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR6_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QECR7_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MTL_QUCR6_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define MTL_QECR7_ABPSSIE_Mask (ULONG)(0x1)
+#define  MTL_QUCR6_Mask_12 (ULONG)(0xfffff)
 
-/*#define MTL_QECR7_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QUCR6_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QECR7_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QUCR6_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-#define MTL_QECR7_ABPSSIE_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR7_RgRd(v);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_0))|((( 0) & (MTL_QECR7_Mask_0))<<0);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_7))|((( 0) & (MTL_QECR7_Mask_7))<<7);\
-		v = (v & (MTL_QECR7_RES_Wr_Mask_25))|((( 0) & (MTL_QECR7_Mask_25))<<25);\
-		v = ((v & MTL_QECR7_ABPSSIE_Wr_Mask) | ((data & MTL_QECR7_ABPSSIE_Mask)<<24));\
-		MTL_QECR7_RgWr(v);\
-} while(0)
+/*#define MTL_QUCR6_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QECR7_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR7_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR7_ABPSSIE_Mask);\
-} while(0)
+#define MTL_QUCR6_UFPKTCNT_Mask (ULONG)(0x7ff)
 
+/*#define MTL_QUCR6_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QECR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe90))
+#define MTL_QUCR6_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
 
-#define MTL_QECR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR6_RgOffAddr);\
+#define MTL_QUCR6_UFPKTCNT_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QUCR6_RgRd(v);\
+		v = (v & (MTL_QUCR6_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR6_Mask_12))<<12);\
+		v = ((v & MTL_QUCR6_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR6_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR6_RgWr(v);\
 } while(0)
 
-#define MTL_QECR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR6_RgOffAddr);\
+#define MTL_QUCR6_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR6_UFPKTCNT_Mask);\
 } while(0)
 
-/*#define  MTL_QECR6_Mask_0 (ULONG)(~(~0<<(2)))*/
-
-#define  MTL_QECR6_Mask_0 (ULONG)(0x3)
+/*#define MTL_QUCR6_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QECR6_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define MTL_QUCR6_UFCNTOVF_Mask (ULONG)(0x1)
 
-#define MTL_QECR6_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+#define MTL_QUCR6_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR6_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR6_UFCNTOVF_Mask);\
+} while(0)
 
-/*#define  MTL_QECR6_Mask_7 (ULONG)(~(~0<<(17)))*/
 
-#define  MTL_QECR6_Mask_7 (ULONG)(0x1ffff)
+#define MTL_QUCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe44))
 
-/*#define MTL_QECR6_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+#define MTL_QUCR5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR5_RgOffAddr);\
+} while(0)
 
-#define MTL_QECR6_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+#define MTL_QUCR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR5_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QECR6_Mask_25 (ULONG)(~(~0<<(7)))*/
+/*#define  MTL_QUCR5_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define  MTL_QECR6_Mask_25 (ULONG)(0x7f)
+#define  MTL_QUCR5_Mask_12 (ULONG)(0xfffff)
 
-/*#define MTL_QECR6_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+/*#define MTL_QUCR5_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QECR6_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+#define MTL_QUCR5_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-/*#define MTL_QECR6_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QUCR5_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QECR6_AVALG_Mask (ULONG)(0x1)
+#define MTL_QUCR5_UFPKTCNT_Mask (ULONG)(0x7ff)
 
-/*#define MTL_QECR6_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MTL_QUCR5_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QECR6_AVALG_Wr_Mask (ULONG)(0xfffffffb)
+#define MTL_QUCR5_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
 
-#define MTL_QECR6_AVALG_UdfWr(data) do {\
+#define MTL_QUCR5_UFPKTCNT_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR6_RgRd(v);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
-		v = ((v & MTL_QECR6_AVALG_Wr_Mask) | ((data & MTL_QECR6_AVALG_Mask)<<2));\
-		MTL_QECR6_RgWr(v);\
+		MTL_QUCR5_RgRd(v);\
+		v = (v & (MTL_QUCR5_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR5_Mask_12))<<12);\
+		v = ((v & MTL_QUCR5_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR5_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR5_RgWr(v);\
 } while(0)
 
-#define MTL_QECR6_AVALG_UdfRd(data) do {\
-		MTL_QECR6_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR6_AVALG_Mask);\
+#define MTL_QUCR5_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR5_UFPKTCNT_Mask);\
 } while(0)
 
-/*#define MTL_QECR6_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QUCR5_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR6_CC_Mask (ULONG)(0x1)
+#define MTL_QUCR5_UFCNTOVF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR6_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+#define MTL_QUCR5_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR5_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR5_UFCNTOVF_Mask);\
+} while(0)
 
-#define MTL_QECR6_CC_Wr_Mask (ULONG)(0xfffffff7)
 
-#define MTL_QECR6_CC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR6_RgRd(v);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
-		v = ((v & MTL_QECR6_CC_Wr_Mask) | ((data & MTL_QECR6_CC_Mask)<<3));\
-		MTL_QECR6_RgWr(v);\
-} while(0)
+#define MTL_QUCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe04))
 
-#define MTL_QECR6_CC_UdfRd(data) do {\
-		MTL_QECR6_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR6_CC_Mask);\
+#define MTL_QUCR4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR4_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QECR6_SLC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QECR6_SLC_Mask (ULONG)(0x7)
+#define MTL_QUCR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR4_RgOffAddr);\
+} while(0)
 
-/*#define MTL_QECR6_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+/*#define  MTL_QUCR4_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define MTL_QECR6_SLC_Wr_Mask (ULONG)(0xffffff8f)
+#define  MTL_QUCR4_Mask_12 (ULONG)(0xfffff)
 
-#define MTL_QECR6_SLC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR6_RgRd(v);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
-		v = ((v & MTL_QECR6_SLC_Wr_Mask) | ((data & MTL_QECR6_SLC_Mask)<<4));\
-		MTL_QECR6_RgWr(v);\
-} while(0)
+/*#define MTL_QUCR4_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QECR6_SLC_UdfRd(data) do {\
-		MTL_QECR6_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR6_SLC_Mask);\
-} while(0)
+#define MTL_QUCR4_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-/*#define MTL_QECR6_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QUCR4_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QECR6_ABPSSIE_Mask (ULONG)(0x1)
+#define MTL_QUCR4_UFPKTCNT_Mask (ULONG)(0x7ff)
 
-/*#define MTL_QECR6_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QUCR4_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QECR6_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QUCR4_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
 
-#define MTL_QECR6_ABPSSIE_UdfWr(data) do {\
+#define MTL_QUCR4_UFPKTCNT_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR6_RgRd(v);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_0))|((( 0) & (MTL_QECR6_Mask_0))<<0);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_7))|((( 0) & (MTL_QECR6_Mask_7))<<7);\
-		v = (v & (MTL_QECR6_RES_Wr_Mask_25))|((( 0) & (MTL_QECR6_Mask_25))<<25);\
-		v = ((v & MTL_QECR6_ABPSSIE_Wr_Mask) | ((data & MTL_QECR6_ABPSSIE_Mask)<<24));\
-		MTL_QECR6_RgWr(v);\
+		MTL_QUCR4_RgRd(v);\
+		v = (v & (MTL_QUCR4_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR4_Mask_12))<<12);\
+		v = ((v & MTL_QUCR4_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR4_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR4_RgWr(v);\
 } while(0)
 
-#define MTL_QECR6_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR6_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR6_ABPSSIE_Mask);\
+#define MTL_QUCR4_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR4_UFPKTCNT_Mask);\
 } while(0)
 
+/*#define MTL_QUCR4_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe50))
+#define MTL_QUCR4_UFCNTOVF_Mask (ULONG)(0x1)
 
-#define MTL_QECR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR5_RgOffAddr);\
+#define MTL_QUCR4_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR4_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR4_UFCNTOVF_Mask);\
 } while(0)
 
-#define MTL_QECR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR5_RgOffAddr);\
+
+#define MTL_QUCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdc4))
+
+#define MTL_QUCR3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR3_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QECR5_Mask_0 (ULONG)(~(~0<<(2)))*/
+#define MTL_QUCR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR3_RgOffAddr);\
+} while(0)
 
-#define  MTL_QECR5_Mask_0 (ULONG)(0x3)
+/*#define  MTL_QUCR3_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-/*#define MTL_QECR5_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define  MTL_QUCR3_Mask_12 (ULONG)(0xfffff)
 
-#define MTL_QECR5_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+/*#define MTL_QUCR3_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-/*#define  MTL_QECR5_Mask_7 (ULONG)(~(~0<<(17)))*/
+#define MTL_QUCR3_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-#define  MTL_QECR5_Mask_7 (ULONG)(0x1ffff)
+/*#define MTL_QUCR3_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
 
-/*#define MTL_QECR5_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+#define MTL_QUCR3_UFPKTCNT_Mask (ULONG)(0x7ff)
 
-#define MTL_QECR5_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+/*#define MTL_QUCR3_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-/*#define  MTL_QECR5_Mask_25 (ULONG)(~(~0<<(7)))*/
+#define MTL_QUCR3_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
 
-#define  MTL_QECR5_Mask_25 (ULONG)(0x7f)
+#define MTL_QUCR3_UFPKTCNT_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QUCR3_RgRd(v);\
+		v = (v & (MTL_QUCR3_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR3_Mask_12))<<12);\
+		v = ((v & MTL_QUCR3_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR3_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR3_RgWr(v);\
+} while(0)
 
-/*#define MTL_QECR5_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+#define MTL_QUCR3_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR3_UFPKTCNT_Mask);\
+} while(0)
 
-#define MTL_QECR5_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+/*#define MTL_QUCR3_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MTL_QECR5_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QUCR3_UFCNTOVF_Mask (ULONG)(0x1)
 
-#define MTL_QECR5_AVALG_Mask (ULONG)(0x1)
+#define MTL_QUCR3_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR3_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR3_UFCNTOVF_Mask);\
+} while(0)
 
-/*#define MTL_QECR5_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define MTL_QECR5_AVALG_Wr_Mask (ULONG)(0xfffffffb)
+#define MTL_QUCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd84))
 
-#define MTL_QECR5_AVALG_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR5_RgRd(v);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
-		v = ((v & MTL_QECR5_AVALG_Wr_Mask) | ((data & MTL_QECR5_AVALG_Mask)<<2));\
-		MTL_QECR5_RgWr(v);\
+#define MTL_QUCR2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR2_RgOffAddr);\
 } while(0)
 
-#define MTL_QECR5_AVALG_UdfRd(data) do {\
-		MTL_QECR5_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR5_AVALG_Mask);\
+#define MTL_QUCR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QECR5_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MTL_QUCR2_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define MTL_QECR5_CC_Mask (ULONG)(0x1)
+#define  MTL_QUCR2_Mask_12 (ULONG)(0xfffff)
 
-/*#define MTL_QECR5_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QUCR2_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QECR5_CC_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QUCR2_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-#define MTL_QECR5_CC_UdfWr(data) do {\
+/*#define MTL_QUCR2_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+
+#define MTL_QUCR2_UFPKTCNT_Mask (ULONG)(0x7ff)
+
+/*#define MTL_QUCR2_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
+
+#define MTL_QUCR2_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+
+#define MTL_QUCR2_UFPKTCNT_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR5_RgRd(v);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
-		v = ((v & MTL_QECR5_CC_Wr_Mask) | ((data & MTL_QECR5_CC_Mask)<<3));\
-		MTL_QECR5_RgWr(v);\
+		MTL_QUCR2_RgRd(v);\
+		v = (v & (MTL_QUCR2_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR2_Mask_12))<<12);\
+		v = ((v & MTL_QUCR2_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR2_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR2_RgWr(v);\
 } while(0)
 
-#define MTL_QECR5_CC_UdfRd(data) do {\
-		MTL_QECR5_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR5_CC_Mask);\
+#define MTL_QUCR2_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR2_UFPKTCNT_Mask);\
 } while(0)
 
-/*#define MTL_QECR5_SLC_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QUCR2_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR5_SLC_Mask (ULONG)(0x7)
+#define MTL_QUCR2_UFCNTOVF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR5_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+#define MTL_QUCR2_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR2_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR2_UFCNTOVF_Mask);\
+} while(0)
 
-#define MTL_QECR5_SLC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QECR5_SLC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QECR5_RgRd(v);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
-		v = ((v & MTL_QECR5_SLC_Wr_Mask) | ((data & MTL_QECR5_SLC_Mask)<<4));\
-		MTL_QECR5_RgWr(v);\
+#define MTL_QUCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd44))
+
+#define MTL_QUCR1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QUCR1_RgOffAddr);\
 } while(0)
 
-#define MTL_QECR5_SLC_UdfRd(data) do {\
-		MTL_QECR5_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR5_SLC_Mask);\
+#define MTL_QUCR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QUCR1_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QECR5_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MTL_QUCR1_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define MTL_QECR5_ABPSSIE_Mask (ULONG)(0x1)
+#define  MTL_QUCR1_Mask_12 (ULONG)(0xfffff)
 
-/*#define MTL_QECR5_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QUCR1_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QECR5_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QUCR1_RES_Wr_Mask_12 (ULONG)(0xfff)
 
-#define MTL_QECR5_ABPSSIE_UdfWr(data) do {\
+/*#define MTL_QUCR1_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+
+#define MTL_QUCR1_UFPKTCNT_Mask (ULONG)(0x7ff)
+
+/*#define MTL_QUCR1_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
+
+#define MTL_QUCR1_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+
+#define MTL_QUCR1_UFPKTCNT_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR5_RgRd(v);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_0))|((( 0) & (MTL_QECR5_Mask_0))<<0);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_7))|((( 0) & (MTL_QECR5_Mask_7))<<7);\
-		v = (v & (MTL_QECR5_RES_Wr_Mask_25))|((( 0) & (MTL_QECR5_Mask_25))<<25);\
-		v = ((v & MTL_QECR5_ABPSSIE_Wr_Mask) | ((data & MTL_QECR5_ABPSSIE_Mask)<<24));\
-		MTL_QECR5_RgWr(v);\
+		MTL_QUCR1_RgRd(v);\
+		v = (v & (MTL_QUCR1_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR1_Mask_12))<<12);\
+		v = ((v & MTL_QUCR1_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR1_UFPKTCNT_Mask)<<0));\
+		MTL_QUCR1_RgWr(v);\
 } while(0)
 
-#define MTL_QECR5_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR5_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR5_ABPSSIE_Mask);\
+#define MTL_QUCR1_UFPKTCNT_UdfRd(data) do {\
+		MTL_QUCR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QUCR1_UFPKTCNT_Mask);\
 } while(0)
 
+/*#define MTL_QUCR1_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe10))
-
-#define MTL_QECR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR4_RgOffAddr);\
-} while(0)
+#define MTL_QUCR1_UFCNTOVF_Mask (ULONG)(0x1)
 
-#define MTL_QECR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR4_RgOffAddr);\
+#define MTL_QUCR1_UFCNTOVF_UdfRd(data) do {\
+		MTL_QUCR1_RgRd(data);\
+		data = ((data >> 11) & MTL_QUCR1_UFCNTOVF_Mask);\
 } while(0)
 
-/*#define  MTL_QECR4_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QECR4_Mask_0 (ULONG)(0x3)
+#define MTL_QTOMR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xec0))
 
-/*#define MTL_QECR4_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define MTL_QTOMR7_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR7_RgOffAddr);\
+} while(0)
 
-#define MTL_QECR4_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+#define MTL_QTOMR7_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR7_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QECR4_Mask_7 (ULONG)(~(~0<<(17)))*/
+/*#define  MTL_QTOMR7_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define  MTL_QECR4_Mask_7 (ULONG)(0x1ffff)
+#define  MTL_QTOMR7_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QECR4_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+/*#define MTL_QTOMR7_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QECR4_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+#define MTL_QTOMR7_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-/*#define  MTL_QECR4_Mask_25 (ULONG)(~(~0<<(7)))*/
+/*#define  MTL_QTOMR7_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  MTL_QECR4_Mask_25 (ULONG)(0x7f)
+#define  MTL_QTOMR7_Mask_26 (ULONG)(0x3f)
 
-/*#define MTL_QECR4_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+/*#define MTL_QTOMR7_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QECR4_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+#define MTL_QTOMR7_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QECR4_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR7_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR4_AVALG_Mask (ULONG)(0x1)
+#define MTL_QTOMR7_FTQ_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR4_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MTL_QTOMR7_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QECR4_AVALG_Wr_Mask (ULONG)(0xfffffffb)
+#define MTL_QTOMR7_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QECR4_AVALG_UdfWr(data) do {\
+#define MTL_QTOMR7_FTQ_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR4_RgRd(v);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
-		v = ((v & MTL_QECR4_AVALG_Wr_Mask) | ((data & MTL_QECR4_AVALG_Mask)<<2));\
-		MTL_QECR4_RgWr(v);\
+		MTL_QTOMR7_RgRd(v);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR7_FTQ_Wr_Mask) | ((data & MTL_QTOMR7_FTQ_Mask)<<0));\
+		MTL_QTOMR7_RgWr(v);\
 } while(0)
 
-#define MTL_QECR4_AVALG_UdfRd(data) do {\
-		MTL_QECR4_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR4_AVALG_Mask);\
+#define MTL_QTOMR7_FTQ_UdfRd(data) do {\
+		MTL_QTOMR7_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR7_FTQ_Mask);\
 } while(0)
 
-/*#define MTL_QECR4_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR7_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR4_CC_Mask (ULONG)(0x1)
+#define MTL_QTOMR7_TSF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR4_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QTOMR7_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QECR4_CC_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QTOMR7_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QECR4_CC_UdfWr(data) do {\
+#define MTL_QTOMR7_TSF_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR4_RgRd(v);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
-		v = ((v & MTL_QECR4_CC_Wr_Mask) | ((data & MTL_QECR4_CC_Mask)<<3));\
-		MTL_QECR4_RgWr(v);\
+		MTL_QTOMR7_RgRd(v);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR7_TSF_Wr_Mask) | ((data & MTL_QTOMR7_TSF_Mask)<<1));\
+		MTL_QTOMR7_RgWr(v);\
 } while(0)
 
-#define MTL_QECR4_CC_UdfRd(data) do {\
-		MTL_QECR4_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR4_CC_Mask);\
+#define MTL_QTOMR7_TSF_UdfRd(data) do {\
+		MTL_QTOMR7_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR7_TSF_Mask);\
 } while(0)
 
-/*#define MTL_QECR4_SLC_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR7_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QECR4_SLC_Mask (ULONG)(0x7)
+#define MTL_QTOMR7_TXQEN_Mask (ULONG)(0x3)
 
-/*#define MTL_QECR4_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+/*#define MTL_QTOMR7_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QECR4_SLC_Wr_Mask (ULONG)(0xffffff8f)
+#define MTL_QTOMR7_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QECR4_SLC_UdfWr(data) do {\
+#define MTL_QTOMR7_TXQEN_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR4_RgRd(v);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
-		v = ((v & MTL_QECR4_SLC_Wr_Mask) | ((data & MTL_QECR4_SLC_Mask)<<4));\
-		MTL_QECR4_RgWr(v);\
+		MTL_QTOMR7_RgRd(v);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR7_TXQEN_Wr_Mask) | ((data & MTL_QTOMR7_TXQEN_Mask)<<2));\
+		MTL_QTOMR7_RgWr(v);\
 } while(0)
 
-#define MTL_QECR4_SLC_UdfRd(data) do {\
-		MTL_QECR4_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR4_SLC_Mask);\
+#define MTL_QTOMR7_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR7_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR7_TXQEN_Mask);\
 } while(0)
 
-/*#define MTL_QECR4_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR7_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QECR4_ABPSSIE_Mask (ULONG)(0x1)
+#define MTL_QTOMR7_TTC_Mask (ULONG)(0x7)
 
-/*#define MTL_QECR4_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QTOMR7_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QECR4_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QTOMR7_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QECR4_ABPSSIE_UdfWr(data) do {\
+#define MTL_QTOMR7_TTC_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR4_RgRd(v);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_0))|((( 0) & (MTL_QECR4_Mask_0))<<0);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_7))|((( 0) & (MTL_QECR4_Mask_7))<<7);\
-		v = (v & (MTL_QECR4_RES_Wr_Mask_25))|((( 0) & (MTL_QECR4_Mask_25))<<25);\
-		v = ((v & MTL_QECR4_ABPSSIE_Wr_Mask) | ((data & MTL_QECR4_ABPSSIE_Mask)<<24));\
-		MTL_QECR4_RgWr(v);\
+		MTL_QTOMR7_RgRd(v);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR7_TTC_Wr_Mask) | ((data & MTL_QTOMR7_TTC_Mask)<<4));\
+		MTL_QTOMR7_RgWr(v);\
 } while(0)
 
-#define MTL_QECR4_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR4_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR4_ABPSSIE_Mask);\
+#define MTL_QTOMR7_TTC_UdfRd(data) do {\
+		MTL_QTOMR7_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR7_TTC_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR7_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QECR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdd0))
+#define MTL_QTOMR7_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QECR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR3_RgOffAddr);\
+/*#define MTL_QTOMR7_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
+
+#define MTL_QTOMR7_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+
+#define MTL_QTOMR7_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR7_RgRd(v);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR7_TQS_Wr_Mask) | ((data & MTL_QTOMR7_TQS_Mask)<<16));\
+		MTL_QTOMR7_RgWr(v);\
 } while(0)
 
-#define MTL_QECR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR3_RgOffAddr);\
+#define MTL_QTOMR7_TQS_UdfRd(data) do {\
+		MTL_QTOMR7_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR7_TQS_Mask);\
 } while(0)
 
-/*#define  MTL_QECR3_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QECR3_Mask_0 (ULONG)(0x3)
+#define MTL_QTOMR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe80))
 
-/*#define MTL_QECR3_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define MTL_QTOMR6_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR6_RgOffAddr);\
+} while(0)
 
-#define MTL_QECR3_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+#define MTL_QTOMR6_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR6_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QECR3_Mask_7 (ULONG)(~(~0<<(17)))*/
+/*#define  MTL_QTOMR6_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define  MTL_QECR3_Mask_7 (ULONG)(0x1ffff)
+#define  MTL_QTOMR6_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QECR3_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+/*#define MTL_QTOMR6_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QECR3_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+#define MTL_QTOMR6_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-/*#define  MTL_QECR3_Mask_25 (ULONG)(~(~0<<(7)))*/
+/*#define  MTL_QTOMR6_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  MTL_QECR3_Mask_25 (ULONG)(0x7f)
+#define  MTL_QTOMR6_Mask_26 (ULONG)(0x3f)
 
-/*#define MTL_QECR3_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+/*#define MTL_QTOMR6_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QECR3_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+#define MTL_QTOMR6_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QECR3_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR6_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR3_AVALG_Mask (ULONG)(0x1)
+#define MTL_QTOMR6_FTQ_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR3_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MTL_QTOMR6_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QECR3_AVALG_Wr_Mask (ULONG)(0xfffffffb)
+#define MTL_QTOMR6_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QECR3_AVALG_UdfWr(data) do {\
+#define MTL_QTOMR6_FTQ_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR3_RgRd(v);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
-		v = ((v & MTL_QECR3_AVALG_Wr_Mask) | ((data & MTL_QECR3_AVALG_Mask)<<2));\
-		MTL_QECR3_RgWr(v);\
+		MTL_QTOMR6_RgRd(v);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR6_FTQ_Wr_Mask) | ((data & MTL_QTOMR6_FTQ_Mask)<<0));\
+		MTL_QTOMR6_RgWr(v);\
 } while(0)
 
-#define MTL_QECR3_AVALG_UdfRd(data) do {\
-		MTL_QECR3_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR3_AVALG_Mask);\
+#define MTL_QTOMR6_FTQ_UdfRd(data) do {\
+		MTL_QTOMR6_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR6_FTQ_Mask);\
 } while(0)
 
-/*#define MTL_QECR3_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR6_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR3_CC_Mask (ULONG)(0x1)
+#define MTL_QTOMR6_TSF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR3_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QTOMR6_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QECR3_CC_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QTOMR6_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QECR3_CC_UdfWr(data) do {\
+#define MTL_QTOMR6_TSF_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR3_RgRd(v);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
-		v = ((v & MTL_QECR3_CC_Wr_Mask) | ((data & MTL_QECR3_CC_Mask)<<3));\
-		MTL_QECR3_RgWr(v);\
+		MTL_QTOMR6_RgRd(v);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR6_TSF_Wr_Mask) | ((data & MTL_QTOMR6_TSF_Mask)<<1));\
+		MTL_QTOMR6_RgWr(v);\
 } while(0)
 
-#define MTL_QECR3_CC_UdfRd(data) do {\
-		MTL_QECR3_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR3_CC_Mask);\
+#define MTL_QTOMR6_TSF_UdfRd(data) do {\
+		MTL_QTOMR6_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR6_TSF_Mask);\
 } while(0)
 
-/*#define MTL_QECR3_SLC_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR6_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QECR3_SLC_Mask (ULONG)(0x7)
+#define MTL_QTOMR6_TXQEN_Mask (ULONG)(0x3)
 
-/*#define MTL_QECR3_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+/*#define MTL_QTOMR6_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QECR3_SLC_Wr_Mask (ULONG)(0xffffff8f)
+#define MTL_QTOMR6_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QECR3_SLC_UdfWr(data) do {\
+#define MTL_QTOMR6_TXQEN_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR3_RgRd(v);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
-		v = ((v & MTL_QECR3_SLC_Wr_Mask) | ((data & MTL_QECR3_SLC_Mask)<<4));\
-		MTL_QECR3_RgWr(v);\
+		MTL_QTOMR6_RgRd(v);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR6_TXQEN_Wr_Mask) | ((data & MTL_QTOMR6_TXQEN_Mask)<<2));\
+		MTL_QTOMR6_RgWr(v);\
 } while(0)
 
-#define MTL_QECR3_SLC_UdfRd(data) do {\
-		MTL_QECR3_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR3_SLC_Mask);\
+#define MTL_QTOMR6_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR6_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR6_TXQEN_Mask);\
 } while(0)
 
-/*#define MTL_QECR3_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR6_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QECR3_ABPSSIE_Mask (ULONG)(0x1)
+#define MTL_QTOMR6_TTC_Mask (ULONG)(0x7)
 
-/*#define MTL_QECR3_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QTOMR6_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QECR3_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QTOMR6_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QECR3_ABPSSIE_UdfWr(data) do {\
+#define MTL_QTOMR6_TTC_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR3_RgRd(v);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_0))|((( 0) & (MTL_QECR3_Mask_0))<<0);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_7))|((( 0) & (MTL_QECR3_Mask_7))<<7);\
-		v = (v & (MTL_QECR3_RES_Wr_Mask_25))|((( 0) & (MTL_QECR3_Mask_25))<<25);\
-		v = ((v & MTL_QECR3_ABPSSIE_Wr_Mask) | ((data & MTL_QECR3_ABPSSIE_Mask)<<24));\
-		MTL_QECR3_RgWr(v);\
+		MTL_QTOMR6_RgRd(v);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR6_TTC_Wr_Mask) | ((data & MTL_QTOMR6_TTC_Mask)<<4));\
+		MTL_QTOMR6_RgWr(v);\
 } while(0)
 
-#define MTL_QECR3_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR3_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR3_ABPSSIE_Mask);\
+#define MTL_QTOMR6_TTC_UdfRd(data) do {\
+		MTL_QTOMR6_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR6_TTC_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR6_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QECR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd90))
+#define MTL_QTOMR6_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QECR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR2_RgOffAddr);\
+/*#define MTL_QTOMR6_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
+
+#define MTL_QTOMR6_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+
+#define MTL_QTOMR6_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR6_RgRd(v);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR6_TQS_Wr_Mask) | ((data & MTL_QTOMR6_TQS_Mask)<<16));\
+		MTL_QTOMR6_RgWr(v);\
 } while(0)
 
-#define MTL_QECR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR2_RgOffAddr);\
+#define MTL_QTOMR6_TQS_UdfRd(data) do {\
+		MTL_QTOMR6_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR6_TQS_Mask);\
 } while(0)
 
-/*#define  MTL_QECR2_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QECR2_Mask_0 (ULONG)(0x3)
+#define MTL_QTOMR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe40))
 
-/*#define MTL_QECR2_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define MTL_QTOMR5_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR5_RgOffAddr);\
+} while(0)
 
-#define MTL_QECR2_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+#define MTL_QTOMR5_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR5_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QECR2_Mask_7 (ULONG)(~(~0<<(17)))*/
+/*#define  MTL_QTOMR5_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define  MTL_QECR2_Mask_7 (ULONG)(0x1ffff)
+#define  MTL_QTOMR5_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QECR2_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+/*#define MTL_QTOMR5_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QECR2_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+#define MTL_QTOMR5_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-/*#define  MTL_QECR2_Mask_25 (ULONG)(~(~0<<(7)))*/
+/*#define  MTL_QTOMR5_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  MTL_QECR2_Mask_25 (ULONG)(0x7f)
+#define  MTL_QTOMR5_Mask_26 (ULONG)(0x3f)
 
-/*#define MTL_QECR2_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+/*#define MTL_QTOMR5_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QECR2_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+#define MTL_QTOMR5_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QECR2_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR5_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR2_AVALG_Mask (ULONG)(0x1)
+#define MTL_QTOMR5_FTQ_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR2_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MTL_QTOMR5_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QECR2_AVALG_Wr_Mask (ULONG)(0xfffffffb)
+#define MTL_QTOMR5_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QECR2_AVALG_UdfWr(data) do {\
+#define MTL_QTOMR5_FTQ_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR2_RgRd(v);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
-		v = ((v & MTL_QECR2_AVALG_Wr_Mask) | ((data & MTL_QECR2_AVALG_Mask)<<2));\
-		MTL_QECR2_RgWr(v);\
+		MTL_QTOMR5_RgRd(v);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR5_FTQ_Wr_Mask) | ((data & MTL_QTOMR5_FTQ_Mask)<<0));\
+		MTL_QTOMR5_RgWr(v);\
 } while(0)
 
-#define MTL_QECR2_AVALG_UdfRd(data) do {\
-		MTL_QECR2_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR2_AVALG_Mask);\
+#define MTL_QTOMR5_FTQ_UdfRd(data) do {\
+		MTL_QTOMR5_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR5_FTQ_Mask);\
 } while(0)
 
-/*#define MTL_QECR2_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR5_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR2_CC_Mask (ULONG)(0x1)
+#define MTL_QTOMR5_TSF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR2_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QTOMR5_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QECR2_CC_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QTOMR5_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QECR2_CC_UdfWr(data) do {\
+#define MTL_QTOMR5_TSF_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR2_RgRd(v);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
-		v = ((v & MTL_QECR2_CC_Wr_Mask) | ((data & MTL_QECR2_CC_Mask)<<3));\
-		MTL_QECR2_RgWr(v);\
+		MTL_QTOMR5_RgRd(v);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR5_TSF_Wr_Mask) | ((data & MTL_QTOMR5_TSF_Mask)<<1));\
+		MTL_QTOMR5_RgWr(v);\
 } while(0)
 
-#define MTL_QECR2_CC_UdfRd(data) do {\
-		MTL_QECR2_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR2_CC_Mask);\
+#define MTL_QTOMR5_TSF_UdfRd(data) do {\
+		MTL_QTOMR5_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR5_TSF_Mask);\
 } while(0)
 
-/*#define MTL_QECR2_SLC_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR5_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QECR2_SLC_Mask (ULONG)(0x7)
+#define MTL_QTOMR5_TXQEN_Mask (ULONG)(0x3)
 
-/*#define MTL_QECR2_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+/*#define MTL_QTOMR5_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QECR2_SLC_Wr_Mask (ULONG)(0xffffff8f)
+#define MTL_QTOMR5_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QECR2_SLC_UdfWr(data) do {\
+#define MTL_QTOMR5_TXQEN_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR2_RgRd(v);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
-		v = ((v & MTL_QECR2_SLC_Wr_Mask) | ((data & MTL_QECR2_SLC_Mask)<<4));\
-		MTL_QECR2_RgWr(v);\
+		MTL_QTOMR5_RgRd(v);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR5_TXQEN_Wr_Mask) | ((data & MTL_QTOMR5_TXQEN_Mask)<<2));\
+		MTL_QTOMR5_RgWr(v);\
 } while(0)
 
-#define MTL_QECR2_SLC_UdfRd(data) do {\
-		MTL_QECR2_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR2_SLC_Mask);\
+#define MTL_QTOMR5_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR5_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR5_TXQEN_Mask);\
 } while(0)
 
-/*#define MTL_QECR2_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR5_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QECR2_ABPSSIE_Mask (ULONG)(0x1)
+#define MTL_QTOMR5_TTC_Mask (ULONG)(0x7)
 
-/*#define MTL_QECR2_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QTOMR5_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QECR2_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QTOMR5_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QECR2_ABPSSIE_UdfWr(data) do {\
+#define MTL_QTOMR5_TTC_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR2_RgRd(v);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_0))|((( 0) & (MTL_QECR2_Mask_0))<<0);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_7))|((( 0) & (MTL_QECR2_Mask_7))<<7);\
-		v = (v & (MTL_QECR2_RES_Wr_Mask_25))|((( 0) & (MTL_QECR2_Mask_25))<<25);\
-		v = ((v & MTL_QECR2_ABPSSIE_Wr_Mask) | ((data & MTL_QECR2_ABPSSIE_Mask)<<24));\
-		MTL_QECR2_RgWr(v);\
+		MTL_QTOMR5_RgRd(v);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR5_TTC_Wr_Mask) | ((data & MTL_QTOMR5_TTC_Mask)<<4));\
+		MTL_QTOMR5_RgWr(v);\
 } while(0)
 
-#define MTL_QECR2_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR2_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR2_ABPSSIE_Mask);\
+#define MTL_QTOMR5_TTC_UdfRd(data) do {\
+		MTL_QTOMR5_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR5_TTC_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR5_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QECR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd50))
+#define MTL_QTOMR5_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QECR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QECR1_RgOffAddr);\
+/*#define MTL_QTOMR5_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
+
+#define MTL_QTOMR5_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+
+#define MTL_QTOMR5_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR5_RgRd(v);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR5_TQS_Wr_Mask) | ((data & MTL_QTOMR5_TQS_Mask)<<16));\
+		MTL_QTOMR5_RgWr(v);\
 } while(0)
 
-#define MTL_QECR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QECR1_RgOffAddr);\
+#define MTL_QTOMR5_TQS_UdfRd(data) do {\
+		MTL_QTOMR5_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR5_TQS_Mask);\
 } while(0)
 
-/*#define  MTL_QECR1_Mask_0 (ULONG)(~(~0<<(2)))*/
 
-#define  MTL_QECR1_Mask_0 (ULONG)(0x3)
+#define MTL_QTOMR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe00))
 
-/*#define MTL_QECR1_RES_Wr_Mask_0 (ULONG)(~((~(~0<<(2)))<<(0)))*/
+#define MTL_QTOMR4_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR4_RgOffAddr);\
+} while(0)
 
-#define MTL_QECR1_RES_Wr_Mask_0 (ULONG)(0xfffffffc)
+#define MTL_QTOMR4_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR4_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QECR1_Mask_7 (ULONG)(~(~0<<(17)))*/
+/*#define  MTL_QTOMR4_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define  MTL_QECR1_Mask_7 (ULONG)(0x1ffff)
+#define  MTL_QTOMR4_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QECR1_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(17)))<<(7)))*/
+/*#define MTL_QTOMR4_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QECR1_RES_Wr_Mask_7 (ULONG)(0xff00007f)
+#define MTL_QTOMR4_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-/*#define  MTL_QECR1_Mask_25 (ULONG)(~(~0<<(7)))*/
+/*#define  MTL_QTOMR4_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  MTL_QECR1_Mask_25 (ULONG)(0x7f)
+#define  MTL_QTOMR4_Mask_26 (ULONG)(0x3f)
 
-/*#define MTL_QECR1_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
+/*#define MTL_QTOMR4_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QECR1_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
+#define MTL_QTOMR4_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QECR1_AVALG_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR4_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR1_AVALG_Mask (ULONG)(0x1)
+#define MTL_QTOMR4_FTQ_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR1_AVALG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MTL_QTOMR4_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QECR1_AVALG_Wr_Mask (ULONG)(0xfffffffb)
+#define MTL_QTOMR4_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QECR1_AVALG_UdfWr(data) do {\
+#define MTL_QTOMR4_FTQ_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR1_RgRd(v);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
-		v = ((v & MTL_QECR1_AVALG_Wr_Mask) | ((data & MTL_QECR1_AVALG_Mask)<<2));\
-		MTL_QECR1_RgWr(v);\
+		MTL_QTOMR4_RgRd(v);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR4_FTQ_Wr_Mask) | ((data & MTL_QTOMR4_FTQ_Mask)<<0));\
+		MTL_QTOMR4_RgWr(v);\
 } while(0)
 
-#define MTL_QECR1_AVALG_UdfRd(data) do {\
-		MTL_QECR1_RgRd(data);\
-		data = ((data >> 2) & MTL_QECR1_AVALG_Mask);\
+#define MTL_QTOMR4_FTQ_UdfRd(data) do {\
+		MTL_QTOMR4_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR4_FTQ_Mask);\
 } while(0)
 
-/*#define MTL_QECR1_CC_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR4_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QECR1_CC_Mask (ULONG)(0x1)
+#define MTL_QTOMR4_TSF_Mask (ULONG)(0x1)
 
-/*#define MTL_QECR1_CC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+/*#define MTL_QTOMR4_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QECR1_CC_Wr_Mask (ULONG)(0xfffffff7)
+#define MTL_QTOMR4_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QECR1_CC_UdfWr(data) do {\
+#define MTL_QTOMR4_TSF_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR1_RgRd(v);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
-		v = ((v & MTL_QECR1_CC_Wr_Mask) | ((data & MTL_QECR1_CC_Mask)<<3));\
-		MTL_QECR1_RgWr(v);\
+		MTL_QTOMR4_RgRd(v);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR4_TSF_Wr_Mask) | ((data & MTL_QTOMR4_TSF_Mask)<<1));\
+		MTL_QTOMR4_RgWr(v);\
 } while(0)
 
-#define MTL_QECR1_CC_UdfRd(data) do {\
-		MTL_QECR1_RgRd(data);\
-		data = ((data >> 3) & MTL_QECR1_CC_Mask);\
+#define MTL_QTOMR4_TSF_UdfRd(data) do {\
+		MTL_QTOMR4_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR4_TSF_Mask);\
 } while(0)
 
-/*#define MTL_QECR1_SLC_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR4_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QECR1_SLC_Mask (ULONG)(0x7)
+#define MTL_QTOMR4_TXQEN_Mask (ULONG)(0x3)
 
-/*#define MTL_QECR1_SLC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
+/*#define MTL_QTOMR4_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QECR1_SLC_Wr_Mask (ULONG)(0xffffff8f)
+#define MTL_QTOMR4_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QECR1_SLC_UdfWr(data) do {\
+#define MTL_QTOMR4_TXQEN_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR1_RgRd(v);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
-		v = ((v & MTL_QECR1_SLC_Wr_Mask) | ((data & MTL_QECR1_SLC_Mask)<<4));\
-		MTL_QECR1_RgWr(v);\
+		MTL_QTOMR4_RgRd(v);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR4_TXQEN_Wr_Mask) | ((data & MTL_QTOMR4_TXQEN_Mask)<<2));\
+		MTL_QTOMR4_RgWr(v);\
 } while(0)
 
-#define MTL_QECR1_SLC_UdfRd(data) do {\
-		MTL_QECR1_RgRd(data);\
-		data = ((data >> 4) & MTL_QECR1_SLC_Mask);\
+#define MTL_QTOMR4_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR4_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR4_TXQEN_Mask);\
 } while(0)
 
-/*#define MTL_QECR1_ABPSSIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR4_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QECR1_ABPSSIE_Mask (ULONG)(0x1)
+#define MTL_QTOMR4_TTC_Mask (ULONG)(0x7)
 
-/*#define MTL_QECR1_ABPSSIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
+/*#define MTL_QTOMR4_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QECR1_ABPSSIE_Wr_Mask (ULONG)(0xfeffffff)
+#define MTL_QTOMR4_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QECR1_ABPSSIE_UdfWr(data) do {\
+#define MTL_QTOMR4_TTC_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QECR1_RgRd(v);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_0))|((( 0) & (MTL_QECR1_Mask_0))<<0);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_7))|((( 0) & (MTL_QECR1_Mask_7))<<7);\
-		v = (v & (MTL_QECR1_RES_Wr_Mask_25))|((( 0) & (MTL_QECR1_Mask_25))<<25);\
-		v = ((v & MTL_QECR1_ABPSSIE_Wr_Mask) | ((data & MTL_QECR1_ABPSSIE_Mask)<<24));\
-		MTL_QECR1_RgWr(v);\
+		MTL_QTOMR4_RgRd(v);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR4_TTC_Wr_Mask) | ((data & MTL_QTOMR4_TTC_Mask)<<4));\
+		MTL_QTOMR4_RgWr(v);\
 } while(0)
 
-#define MTL_QECR1_ABPSSIE_UdfRd(data) do {\
-		MTL_QECR1_RgRd(data);\
-		data = ((data >> 24) & MTL_QECR1_ABPSSIE_Mask);\
+#define MTL_QTOMR4_TTC_UdfRd(data) do {\
+		MTL_QTOMR4_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR4_TTC_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR4_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QTDR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xec8))
+#define MTL_QTOMR4_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QTDR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR7_RgOffAddr);\
-} while(0)
+/*#define MTL_QTOMR4_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-/*#define MTL_QTDR7_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR4_TQS_Wr_Mask (ULONG)(0xfc00ffff)
 
-#define MTL_QTDR7_TXQPAUSED_Mask (ULONG)(0x1)
+#define MTL_QTOMR4_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR4_RgRd(v);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR4_TQS_Wr_Mask) | ((data & MTL_QTOMR4_TQS_Mask)<<16));\
+		MTL_QTOMR4_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR7_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR7_TXQPAUSED_Mask);\
+#define MTL_QTOMR4_TQS_UdfRd(data) do {\
+		MTL_QTOMR4_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR4_TQS_Mask);\
 } while(0)
 
-/*#define MTL_QTDR7_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QTDR7_TRCSTS_Mask (ULONG)(0x3)
+#define MTL_QTOMR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdc0))
 
-#define MTL_QTDR7_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR7_TRCSTS_Mask);\
+#define MTL_QTOMR3_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR3_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QTDR7_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR3_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR3_RgOffAddr);\
+} while(0)
 
-#define MTL_QTDR7_TWCSTS_Mask (ULONG)(0x1)
+/*#define  MTL_QTOMR3_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define MTL_QTDR7_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR7_TWCSTS_Mask);\
-} while(0)
+#define  MTL_QTOMR3_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QTDR7_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR3_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTDR7_TXQSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR3_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-#define MTL_QTDR7_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR7_TXQSTS_Mask);\
-} while(0)
+/*#define  MTL_QTOMR3_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-/*#define MTL_QTDR7_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define  MTL_QTOMR3_Mask_26 (ULONG)(0x3f)
 
-#define MTL_QTDR7_TXSTSFSTS_Mask (ULONG)(0x1)
+/*#define MTL_QTOMR3_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTDR7_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR7_TXSTSFSTS_Mask);\
-} while(0)
+#define MTL_QTOMR3_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QTDR7_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR3_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR7_PTXQ_Mask (ULONG)(0x7)
+#define MTL_QTOMR3_FTQ_Mask (ULONG)(0x1)
 
-#define MTL_QTDR7_PTXQ_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR7_PTXQ_Mask);\
-} while(0)
+/*#define MTL_QTOMR3_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-/*#define MTL_QTDR7_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QTOMR3_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QTDR7_STXSTSF_Mask (ULONG)(0x7)
+#define MTL_QTOMR3_FTQ_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR3_RgRd(v);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR3_FTQ_Wr_Mask) | ((data & MTL_QTOMR3_FTQ_Mask)<<0));\
+		MTL_QTOMR3_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR7_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR7_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR7_STXSTSF_Mask);\
+#define MTL_QTOMR3_FTQ_UdfRd(data) do {\
+		MTL_QTOMR3_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR3_FTQ_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR3_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe88))
+#define MTL_QTOMR3_TSF_Mask (ULONG)(0x1)
 
-#define MTL_QTDR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR6_RgOffAddr);\
-} while(0)
+/*#define MTL_QTOMR3_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-/*#define MTL_QTDR6_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR3_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QTDR6_TXQPAUSED_Mask (ULONG)(0x1)
+#define MTL_QTOMR3_TSF_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR3_RgRd(v);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR3_TSF_Wr_Mask) | ((data & MTL_QTOMR3_TSF_Mask)<<1));\
+		MTL_QTOMR3_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR6_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR6_TXQPAUSED_Mask);\
+#define MTL_QTOMR3_TSF_UdfRd(data) do {\
+		MTL_QTOMR3_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR3_TSF_Mask);\
 } while(0)
 
-/*#define MTL_QTDR6_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QTOMR3_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QTDR6_TRCSTS_Mask (ULONG)(0x3)
+#define MTL_QTOMR3_TXQEN_Mask (ULONG)(0x3)
 
-#define MTL_QTDR6_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR6_TRCSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR3_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-/*#define MTL_QTDR6_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR3_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QTDR6_TWCSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR3_TXQEN_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR3_RgRd(v);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR3_TXQEN_Wr_Mask) | ((data & MTL_QTOMR3_TXQEN_Mask)<<2));\
+		MTL_QTOMR3_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR6_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR6_TWCSTS_Mask);\
+#define MTL_QTOMR3_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR3_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR3_TXQEN_Mask);\
 } while(0)
 
-/*#define MTL_QTDR6_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR3_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QTDR6_TXQSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR3_TTC_Mask (ULONG)(0x7)
 
-#define MTL_QTDR6_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR6_TXQSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR3_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-/*#define MTL_QTDR6_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR3_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QTDR6_TXSTSFSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR3_TTC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR3_RgRd(v);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR3_TTC_Wr_Mask) | ((data & MTL_QTOMR3_TTC_Mask)<<4));\
+		MTL_QTOMR3_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR6_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR6_TXSTSFSTS_Mask);\
+#define MTL_QTOMR3_TTC_UdfRd(data) do {\
+		MTL_QTOMR3_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR3_TTC_Mask);\
 } while(0)
 
-/*#define MTL_QTDR6_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR3_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QTDR6_PTXQ_Mask (ULONG)(0x7)
+#define MTL_QTOMR3_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QTDR6_PTXQ_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR6_PTXQ_Mask);\
-} while(0)
+/*#define MTL_QTOMR3_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-/*#define MTL_QTDR6_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QTOMR3_TQS_Wr_Mask (ULONG)(0xfc00ffff)
 
-#define MTL_QTDR6_STXSTSF_Mask (ULONG)(0x7)
+#define MTL_QTOMR3_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR3_RgRd(v);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR3_TQS_Wr_Mask) | ((data & MTL_QTOMR3_TQS_Mask)<<16));\
+		MTL_QTOMR3_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR6_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR6_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR6_STXSTSF_Mask);\
+#define MTL_QTOMR3_TQS_UdfRd(data) do {\
+		MTL_QTOMR3_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR3_TQS_Mask);\
 } while(0)
 
 
-#define MTL_QTDR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe48))
+#define MTL_QTOMR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd80))
 
-#define MTL_QTDR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR5_RgOffAddr);\
+#define MTL_QTOMR2_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QTDR5_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR2_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR2_RgOffAddr);\
+} while(0)
 
-#define MTL_QTDR5_TXQPAUSED_Mask (ULONG)(0x1)
+/*#define  MTL_QTOMR2_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define MTL_QTDR5_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR5_TXQPAUSED_Mask);\
-} while(0)
+#define  MTL_QTOMR2_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QTDR5_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QTOMR2_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTDR5_TRCSTS_Mask (ULONG)(0x3)
+#define MTL_QTOMR2_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-#define MTL_QTDR5_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR5_TRCSTS_Mask);\
-} while(0)
+/*#define  MTL_QTOMR2_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-/*#define MTL_QTDR5_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define  MTL_QTOMR2_Mask_26 (ULONG)(0x3f)
 
-#define MTL_QTDR5_TWCSTS_Mask (ULONG)(0x1)
+/*#define MTL_QTOMR2_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTDR5_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR5_TWCSTS_Mask);\
-} while(0)
+#define MTL_QTOMR2_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QTDR5_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR2_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR5_TXQSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR2_FTQ_Mask (ULONG)(0x1)
 
-#define MTL_QTDR5_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR5_TXQSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR2_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-/*#define MTL_QTDR5_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR2_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QTDR5_TXSTSFSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR2_FTQ_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR2_RgRd(v);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR2_FTQ_Wr_Mask) | ((data & MTL_QTOMR2_FTQ_Mask)<<0));\
+		MTL_QTOMR2_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR5_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR5_TXSTSFSTS_Mask);\
+#define MTL_QTOMR2_FTQ_UdfRd(data) do {\
+		MTL_QTOMR2_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR2_FTQ_Mask);\
 } while(0)
 
-/*#define MTL_QTDR5_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR2_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR5_PTXQ_Mask (ULONG)(0x7)
+#define MTL_QTOMR2_TSF_Mask (ULONG)(0x1)
 
-#define MTL_QTDR5_PTXQ_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR5_PTXQ_Mask);\
-} while(0)
+/*#define MTL_QTOMR2_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-/*#define MTL_QTDR5_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QTOMR2_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QTDR5_STXSTSF_Mask (ULONG)(0x7)
+#define MTL_QTOMR2_TSF_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR2_RgRd(v);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR2_TSF_Wr_Mask) | ((data & MTL_QTOMR2_TSF_Mask)<<1));\
+		MTL_QTOMR2_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR5_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR5_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR5_STXSTSF_Mask);\
+#define MTL_QTOMR2_TSF_UdfRd(data) do {\
+		MTL_QTOMR2_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR2_TSF_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR2_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QTDR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe08))
+#define MTL_QTOMR2_TXQEN_Mask (ULONG)(0x3)
 
-#define MTL_QTDR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR4_RgOffAddr);\
-} while(0)
+/*#define MTL_QTOMR2_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-/*#define MTL_QTDR4_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR2_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QTDR4_TXQPAUSED_Mask (ULONG)(0x1)
+#define MTL_QTOMR2_TXQEN_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR2_RgRd(v);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR2_TXQEN_Wr_Mask) | ((data & MTL_QTOMR2_TXQEN_Mask)<<2));\
+		MTL_QTOMR2_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR4_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR4_TXQPAUSED_Mask);\
+#define MTL_QTOMR2_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR2_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR2_TXQEN_Mask);\
 } while(0)
 
-/*#define MTL_QTDR4_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QTOMR2_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QTDR4_TRCSTS_Mask (ULONG)(0x3)
+#define MTL_QTOMR2_TTC_Mask (ULONG)(0x7)
 
-#define MTL_QTDR4_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR4_TRCSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR2_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-/*#define MTL_QTDR4_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR2_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QTDR4_TWCSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR2_TTC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR2_RgRd(v);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR2_TTC_Wr_Mask) | ((data & MTL_QTOMR2_TTC_Mask)<<4));\
+		MTL_QTOMR2_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR4_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR4_TWCSTS_Mask);\
+#define MTL_QTOMR2_TTC_UdfRd(data) do {\
+		MTL_QTOMR2_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR2_TTC_Mask);\
 } while(0)
 
-/*#define MTL_QTDR4_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR2_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QTDR4_TXQSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR2_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QTDR4_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR4_TXQSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR2_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-/*#define MTL_QTDR4_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR2_TQS_Wr_Mask (ULONG)(0xfc00ffff)
 
-#define MTL_QTDR4_TXSTSFSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR2_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR2_RgRd(v);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR2_TQS_Wr_Mask) | ((data & MTL_QTOMR2_TQS_Mask)<<16));\
+		MTL_QTOMR2_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR4_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR4_TXSTSFSTS_Mask);\
+#define MTL_QTOMR2_TQS_UdfRd(data) do {\
+		MTL_QTOMR2_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR2_TQS_Mask);\
 } while(0)
 
-/*#define MTL_QTDR4_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QTDR4_PTXQ_Mask (ULONG)(0x7)
+#define MTL_QTOMR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd40))
 
-#define MTL_QTDR4_PTXQ_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR4_PTXQ_Mask);\
+#define MTL_QTOMR1_RgWr(data) do {\
+		iowrite32(data, (void *)MTL_QTOMR1_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QTDR4_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QTOMR1_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_QTOMR1_RgOffAddr);\
+} while(0)
 
-#define MTL_QTDR4_STXSTSF_Mask (ULONG)(0x7)
+/*#define  MTL_QTOMR1_Mask_7 (ULONG)(~(~0<<(9)))*/
 
-#define MTL_QTDR4_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR4_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR4_STXSTSF_Mask);\
-} while(0)
+#define  MTL_QTOMR1_Mask_7 (ULONG)(0x1ff)
 
+/*#define MTL_QTOMR1_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTDR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdc8))
+#define MTL_QTOMR1_RES_Wr_Mask_7 (ULONG)(0xffff007f)
 
-#define MTL_QTDR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR3_RgOffAddr);\
-} while(0)
+/*#define  MTL_QTOMR1_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-/*#define MTL_QTDR3_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define  MTL_QTOMR1_Mask_26 (ULONG)(0x3f)
 
-#define MTL_QTDR3_TXQPAUSED_Mask (ULONG)(0x1)
+/*#define MTL_QTOMR1_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTDR3_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR3_TXQPAUSED_Mask);\
-} while(0)
+#define MTL_QTOMR1_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define MTL_QTDR3_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QTOMR1_FTQ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR3_TRCSTS_Mask (ULONG)(0x3)
+#define MTL_QTOMR1_FTQ_Mask (ULONG)(0x1)
 
-#define MTL_QTDR3_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR3_TRCSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR1_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-/*#define MTL_QTDR3_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR1_FTQ_Wr_Mask (ULONG)(0xfffffffe)
 
-#define MTL_QTDR3_TWCSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR1_FTQ_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR1_RgRd(v);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR1_FTQ_Wr_Mask) | ((data & MTL_QTOMR1_FTQ_Mask)<<0));\
+		MTL_QTOMR1_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR3_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR3_TWCSTS_Mask);\
+#define MTL_QTOMR1_FTQ_UdfRd(data) do {\
+		MTL_QTOMR1_RgRd(data);\
+		data = ((data >> 0) & MTL_QTOMR1_FTQ_Mask);\
 } while(0)
 
-/*#define MTL_QTDR3_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_QTOMR1_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR3_TXQSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR1_TSF_Mask (ULONG)(0x1)
 
-#define MTL_QTDR3_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR3_TXQSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR1_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-/*#define MTL_QTDR3_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR1_TSF_Wr_Mask (ULONG)(0xfffffffd)
 
-#define MTL_QTDR3_TXSTSFSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR1_TSF_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR1_RgRd(v);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR1_TSF_Wr_Mask) | ((data & MTL_QTOMR1_TSF_Mask)<<1));\
+		MTL_QTOMR1_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR3_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR3_TXSTSFSTS_Mask);\
+#define MTL_QTOMR1_TSF_UdfRd(data) do {\
+		MTL_QTOMR1_RgRd(data);\
+		data = ((data >> 1) & MTL_QTOMR1_TSF_Mask);\
 } while(0)
 
-/*#define MTL_QTDR3_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_QTOMR1_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QTDR3_PTXQ_Mask (ULONG)(0x7)
+#define MTL_QTOMR1_TXQEN_Mask (ULONG)(0x3)
 
-#define MTL_QTDR3_PTXQ_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR3_PTXQ_Mask);\
-} while(0)
+/*#define MTL_QTOMR1_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-/*#define MTL_QTDR3_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
+#define MTL_QTOMR1_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
 
-#define MTL_QTDR3_STXSTSF_Mask (ULONG)(0x7)
+#define MTL_QTOMR1_TXQEN_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR1_RgRd(v);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR1_TXQEN_Wr_Mask) | ((data & MTL_QTOMR1_TXQEN_Mask)<<2));\
+		MTL_QTOMR1_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR3_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR3_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR3_STXSTSF_Mask);\
+#define MTL_QTOMR1_TXQEN_UdfRd(data) do {\
+		MTL_QTOMR1_RgRd(data);\
+		data = ((data >> 2) & MTL_QTOMR1_TXQEN_Mask);\
 } while(0)
 
+/*#define MTL_QTOMR1_TTC_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QTDR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd88))
+#define MTL_QTOMR1_TTC_Mask (ULONG)(0x7)
 
-#define MTL_QTDR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR2_RgOffAddr);\
-} while(0)
+/*#define MTL_QTOMR1_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-/*#define MTL_QTDR2_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR1_TTC_Wr_Mask (ULONG)(0xffffff8f)
 
-#define MTL_QTDR2_TXQPAUSED_Mask (ULONG)(0x1)
+#define MTL_QTOMR1_TTC_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR1_RgRd(v);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR1_TTC_Wr_Mask) | ((data & MTL_QTOMR1_TTC_Mask)<<4));\
+		MTL_QTOMR1_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR2_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR2_TXQPAUSED_Mask);\
+#define MTL_QTOMR1_TTC_UdfRd(data) do {\
+		MTL_QTOMR1_RgRd(data);\
+		data = ((data >> 4) & MTL_QTOMR1_TTC_Mask);\
 } while(0)
 
-/*#define MTL_QTDR2_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+/*#define MTL_QTOMR1_TQS_Mask (ULONG)(~(~0<<(10)))*/
 
-#define MTL_QTDR2_TRCSTS_Mask (ULONG)(0x3)
+#define MTL_QTOMR1_TQS_Mask (ULONG)(0x3ff)
 
-#define MTL_QTDR2_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR2_TRCSTS_Mask);\
-} while(0)
+/*#define MTL_QTOMR1_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-/*#define MTL_QTDR2_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MTL_QTOMR1_TQS_Wr_Mask (ULONG)(0xfc00ffff)
 
-#define MTL_QTDR2_TWCSTS_Mask (ULONG)(0x1)
+#define MTL_QTOMR1_TQS_UdfWr(data) do {\
+		ULONG v;\
+		MTL_QTOMR1_RgRd(v);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
+		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
+		v = ((v & MTL_QTOMR1_TQS_Wr_Mask) | ((data & MTL_QTOMR1_TQS_Mask)<<16));\
+		MTL_QTOMR1_RgWr(v);\
+} while(0)
 
-#define MTL_QTDR2_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR2_TWCSTS_Mask);\
+#define MTL_QTOMR1_TQS_UdfRd(data) do {\
+		MTL_QTOMR1_RgRd(data);\
+		data = ((data >> 16) & MTL_QTOMR1_TQS_Mask);\
 } while(0)
 
-/*#define MTL_QTDR2_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR2_TXQSTS_Mask (ULONG)(0x1)
+#define MAC_PMTCSR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xc0))
 
-#define MTL_QTDR2_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR2_TXQSTS_Mask);\
+#define MAC_PMTCSR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_PMTCSR_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QTDR2_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTDR2_TXSTSFSTS_Mask (ULONG)(0x1)
-
-#define MTL_QTDR2_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR2_TXSTSFSTS_Mask);\
+#define MAC_PMTCSR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_PMTCSR_RgOffAddr);\
 } while(0)
 
-/*#define MTL_QTDR2_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
+/*#define  MAC_PMTCSR_Mask_27 (ULONG)(~(~0<<(4)))*/
 
-#define MTL_QTDR2_PTXQ_Mask (ULONG)(0x7)
+#define  MAC_PMTCSR_Mask_27 (ULONG)(0xf)
 
-#define MTL_QTDR2_PTXQ_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR2_PTXQ_Mask);\
-} while(0)
+/*#define MAC_PMTCSR_RES_Wr_Mask_27 (ULONG)(~((~(~0<<(4)))<<(27)))*/
 
-/*#define MTL_QTDR2_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
+#define MAC_PMTCSR_RES_Wr_Mask_27 (ULONG)(0x87ffffff)
 
-#define MTL_QTDR2_STXSTSF_Mask (ULONG)(0x7)
+/*#define  MAC_PMTCSR_Mask_10 (ULONG)(~(~0<<(14)))*/
 
-#define MTL_QTDR2_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR2_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR2_STXSTSF_Mask);\
-} while(0)
+#define  MAC_PMTCSR_Mask_10 (ULONG)(0x3fff)
 
+/*#define MAC_PMTCSR_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(14)))<<(10)))*/
 
-#define MTL_QTDR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd48))
+#define MAC_PMTCSR_RES_Wr_Mask_10 (ULONG)(0xff0003ff)
 
-#define MTL_QTDR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTDR1_RgOffAddr);\
-} while(0)
+/*#define  MAC_PMTCSR_Mask_7 (ULONG)(~(~0<<(2)))*/
 
-/*#define MTL_QTDR1_TXQPAUSED_Mask (ULONG)(~(~0<<(1)))*/
+#define  MAC_PMTCSR_Mask_7 (ULONG)(0x3)
 
-#define MTL_QTDR1_TXQPAUSED_Mask (ULONG)(0x1)
+/*#define MAC_PMTCSR_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(2)))<<(7)))*/
 
-#define MTL_QTDR1_TXQPAUSED_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QTDR1_TXQPAUSED_Mask);\
-} while(0)
+#define MAC_PMTCSR_RES_Wr_Mask_7 (ULONG)(0xfffffe7f)
 
-/*#define MTL_QTDR1_TRCSTS_Mask (ULONG)(~(~0<<(2)))*/
+/*#define  MAC_PMTCSR_Mask_3 (ULONG)(~(~0<<(2)))*/
 
-#define MTL_QTDR1_TRCSTS_Mask (ULONG)(0x3)
+#define  MAC_PMTCSR_Mask_3 (ULONG)(0x3)
 
-#define MTL_QTDR1_TRCSTS_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 1) & MTL_QTDR1_TRCSTS_Mask);\
-} while(0)
+/*#define MAC_PMTCSR_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(2)))<<(3)))*/
 
-/*#define MTL_QTDR1_TWCSTS_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_PMTCSR_RES_Wr_Mask_3 (ULONG)(0xffffffe7)
 
-#define MTL_QTDR1_TWCSTS_Mask (ULONG)(0x1)
+/*#define MAC_PMTCSR_RWKFILTRST_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR1_TWCSTS_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 3) & MTL_QTDR1_TWCSTS_Mask);\
-} while(0)
+#define MAC_PMTCSR_RWKFILTRST_Mask (ULONG)(0x1)
 
-/*#define MTL_QTDR1_TXQSTS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_PMTCSR_RWKFILTRST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (31)))*/
 
-#define MTL_QTDR1_TXQSTS_Mask (ULONG)(0x1)
+#define MAC_PMTCSR_RWKFILTRST_Wr_Mask (ULONG)(0x7fffffff)
 
-#define MTL_QTDR1_TXQSTS_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 4) & MTL_QTDR1_TXQSTS_Mask);\
+#define MAC_PMTCSR_RWKFILTRST_UdfWr(data) do {\
+		ULONG v;\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_RWKFILTRST_Wr_Mask) | ((data & MAC_PMTCSR_RWKFILTRST_Mask)<<31));\
+		MAC_PMTCSR_RgWr(v);\
 } while(0)
 
-/*#define MTL_QTDR1_TXSTSFSTS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTDR1_TXSTSFSTS_Mask (ULONG)(0x1)
-
-#define MTL_QTDR1_TXSTSFSTS_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 5) & MTL_QTDR1_TXSTSFSTS_Mask);\
+#define MAC_PMTCSR_RWKFILTRST_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 31) & MAC_PMTCSR_RWKFILTRST_Mask);\
 } while(0)
 
-/*#define MTL_QTDR1_PTXQ_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MAC_PMTCSR_RWKPTR_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MTL_QTDR1_PTXQ_Mask (ULONG)(0x7)
+#define MAC_PMTCSR_RWKPTR_Mask (ULONG)(0x7)
 
-#define MTL_QTDR1_PTXQ_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 16) & MTL_QTDR1_PTXQ_Mask);\
+#define MAC_PMTCSR_RWKPTR_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 24) & MAC_PMTCSR_RWKPTR_Mask);\
 } while(0)
 
-/*#define MTL_QTDR1_STXSTSF_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTDR1_STXSTSF_Mask (ULONG)(0x7)
+/*#define MAC_PMTCSR_GLBLUCAST_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTDR1_STXSTSF_UdfRd(data) do {\
-		MTL_QTDR1_RgRd(data);\
-		data = ((data >> 20) & MTL_QTDR1_STXSTSF_Mask);\
-} while(0)
+#define MAC_PMTCSR_GLBLUCAST_Mask (ULONG)(0x1)
 
+/*#define MAC_PMTCSR_GLBLUCAST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define MTL_QUCR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xec4))
+#define MAC_PMTCSR_GLBLUCAST_Wr_Mask (ULONG)(0xfffffdff)
 
-#define MTL_QUCR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR7_RgOffAddr);\
+#define MAC_PMTCSR_GLBLUCAST_UdfWr(data) do {\
+		ULONG v;\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_GLBLUCAST_Wr_Mask) | ((data & MAC_PMTCSR_GLBLUCAST_Mask)<<9));\
+		MAC_PMTCSR_RgWr(v);\
 } while(0)
 
-#define MTL_QUCR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR7_RgOffAddr);\
+#define MAC_PMTCSR_GLBLUCAST_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 9) & MAC_PMTCSR_GLBLUCAST_Mask);\
 } while(0)
 
-/*#define  MTL_QUCR7_Mask_12 (ULONG)(~(~0<<(20)))*/
+/*#define MAC_PMTCSR_RWKPRCVD_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  MTL_QUCR7_Mask_12 (ULONG)(0xfffff)
+#define MAC_PMTCSR_RWKPRCVD_Mask (ULONG)(0x1)
 
-/*#define MTL_QUCR7_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
+/*#define MAC_PMTCSR_RWKPRCVD_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define MTL_QUCR7_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MAC_PMTCSR_RWKPRCVD_Wr_Mask (ULONG)(0xffffffbf)
 
-/*#define MTL_QUCR7_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+#define MAC_PMTCSR_RWKPRCVD_UdfWr(data) do {\
+		ULONG v;\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_RWKPRCVD_Wr_Mask) | ((data & MAC_PMTCSR_RWKPRCVD_Mask)<<6));\
+		MAC_PMTCSR_RgWr(v);\
+} while(0)
 
-#define MTL_QUCR7_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MAC_PMTCSR_RWKPRCVD_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 6) & MAC_PMTCSR_RWKPRCVD_Mask);\
+} while(0)
 
-/*#define MTL_QUCR7_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
+/*#define MAC_PMTCSR_MGKPRCVD_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR7_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+#define MAC_PMTCSR_MGKPRCVD_Mask (ULONG)(0x1)
 
-#define MTL_QUCR7_UFPKTCNT_UdfWr(data) do {\
+/*#define MAC_PMTCSR_MGKPRCVD_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+
+#define MAC_PMTCSR_MGKPRCVD_Wr_Mask (ULONG)(0xffffffdf)
+
+#define MAC_PMTCSR_MGKPRCVD_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QUCR7_RgRd(v);\
-		v = (v & (MTL_QUCR7_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR7_Mask_12))<<12);\
-		v = ((v & MTL_QUCR7_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR7_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR7_RgWr(v);\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_MGKPRCVD_Wr_Mask) | ((data & MAC_PMTCSR_MGKPRCVD_Mask)<<5));\
+		MAC_PMTCSR_RgWr(v);\
 } while(0)
 
-#define MTL_QUCR7_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR7_UFPKTCNT_Mask);\
+#define MAC_PMTCSR_MGKPRCVD_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 5) & MAC_PMTCSR_MGKPRCVD_Mask);\
 } while(0)
 
-/*#define MTL_QUCR7_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QUCR7_UFCNTOVF_Mask (ULONG)(0x1)
+/*#define MAC_PMTCSR_RWKPKTEN_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR7_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR7_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR7_UFCNTOVF_Mask);\
-} while(0)
+#define MAC_PMTCSR_RWKPKTEN_Mask (ULONG)(0x1)
 
+/*#define MAC_PMTCSR_RWKPKTEN_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define MTL_QUCR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe84))
+#define MAC_PMTCSR_RWKPKTEN_Wr_Mask (ULONG)(0xfffffffb)
 
-#define MTL_QUCR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR6_RgOffAddr);\
+#define MAC_PMTCSR_RWKPKTEN_UdfWr(data) do {\
+		ULONG v;\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_RWKPKTEN_Wr_Mask) | ((data & MAC_PMTCSR_RWKPKTEN_Mask)<<2));\
+		MAC_PMTCSR_RgWr(v);\
 } while(0)
 
-#define MTL_QUCR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR6_RgOffAddr);\
+#define MAC_PMTCSR_RWKPKTEN_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 2) & MAC_PMTCSR_RWKPKTEN_Mask);\
 } while(0)
 
-/*#define  MTL_QUCR6_Mask_12 (ULONG)(~(~0<<(20)))*/
+/*#define MAC_PMTCSR_MGKPKTEN_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  MTL_QUCR6_Mask_12 (ULONG)(0xfffff)
+#define MAC_PMTCSR_MGKPKTEN_Mask (ULONG)(0x1)
 
-/*#define MTL_QUCR6_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
+/*#define MAC_PMTCSR_MGKPKTEN_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QUCR6_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MAC_PMTCSR_MGKPKTEN_Wr_Mask (ULONG)(0xfffffffd)
 
-/*#define MTL_QUCR6_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+#define MAC_PMTCSR_MGKPKTEN_UdfWr(data) do {\
+		ULONG v;\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_MGKPKTEN_Wr_Mask) | ((data & MAC_PMTCSR_MGKPKTEN_Mask)<<1));\
+		MAC_PMTCSR_RgWr(v);\
+} while(0)
 
-#define MTL_QUCR6_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MAC_PMTCSR_MGKPKTEN_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 1) & MAC_PMTCSR_MGKPKTEN_Mask);\
+} while(0)
 
-/*#define MTL_QUCR6_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
+/*#define MAC_PMTCSR_PWRDWN_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR6_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+#define MAC_PMTCSR_PWRDWN_Mask (ULONG)(0x1)
 
-#define MTL_QUCR6_UFPKTCNT_UdfWr(data) do {\
+/*#define MAC_PMTCSR_PWRDWN_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+
+#define MAC_PMTCSR_PWRDWN_Wr_Mask (ULONG)(0xfffffffe)
+
+#define MAC_PMTCSR_PWRDWN_UdfWr(data) do {\
 		ULONG v;\
-		MTL_QUCR6_RgRd(v);\
-		v = (v & (MTL_QUCR6_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR6_Mask_12))<<12);\
-		v = ((v & MTL_QUCR6_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR6_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR6_RgWr(v);\
+		MAC_PMTCSR_RgRd(v);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
+		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
+		v = ((v & MAC_PMTCSR_PWRDWN_Wr_Mask) | ((data & MAC_PMTCSR_PWRDWN_Mask)<<0));\
+		MAC_PMTCSR_RgWr(v);\
 } while(0)
 
-#define MTL_QUCR6_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR6_UFPKTCNT_Mask);\
+#define MAC_PMTCSR_PWRDWN_UdfRd(data) do {\
+		MAC_PMTCSR_RgRd(data);\
+		data = ((data >> 0) & MAC_PMTCSR_PWRDWN_Mask);\
 } while(0)
 
-/*#define MTL_QUCR6_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR6_UFCNTOVF_Mask (ULONG)(0x1)
+#define MMC_RXICMP_ERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x884))
 
-#define MTL_QUCR6_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR6_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR6_UFCNTOVF_Mask);\
+#define MMC_RXICMP_ERR_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXICMP_ERR_OCTETS_RgOffAddr);\
 } while(0)
 
+#define MMC_RXICMP_ERR_OCTETS_RXICMP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_RXICMP_ERR_OCTETS_RgRd(data);\
+} while(0)
 
-#define MTL_QUCR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe44))
 
-#define MTL_QUCR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR5_RgOffAddr);\
-} while(0)
+#define MMC_RXICMP_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x880))
 
-#define MTL_QUCR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR5_RgOffAddr);\
+#define MMC_RXICMP_GD_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXICMP_GD_OCTETS_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QUCR5_Mask_12 (ULONG)(~(~0<<(20)))*/
-
-#define  MTL_QUCR5_Mask_12 (ULONG)(0xfffff)
+#define MMC_RXICMP_GD_OCTETS_RXICMP_GD_OCTETS_UdfRd(data) do {\
+		MMC_RXICMP_GD_OCTETS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR5_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QUCR5_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MMC_RXTCP_ERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x87c))
 
-/*#define MTL_QUCR5_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+#define MMC_RXTCP_ERR_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXTCP_ERR_OCTETS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR5_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MMC_RXTCP_ERR_OCTETS_RXTCP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_RXTCP_ERR_OCTETS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR5_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QUCR5_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+#define MMC_RXTCP_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x878))
 
-#define MTL_QUCR5_UFPKTCNT_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QUCR5_RgRd(v);\
-		v = (v & (MTL_QUCR5_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR5_Mask_12))<<12);\
-		v = ((v & MTL_QUCR5_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR5_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR5_RgWr(v);\
+#define MMC_RXTCP_GD_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXTCP_GD_OCTETS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR5_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR5_UFPKTCNT_Mask);\
+#define MMC_RXTCP_GD_OCTETS_RXTCP_GD_OCTETS_UdfRd(data) do {\
+		MMC_RXTCP_GD_OCTETS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QUCR5_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR5_UFCNTOVF_Mask (ULONG)(0x1)
+#define MMC_RXUDP_ERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x874))
 
-#define MTL_QUCR5_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR5_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR5_UFCNTOVF_Mask);\
+#define MMC_RXUDP_ERR_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXUDP_ERR_OCTETS_RgOffAddr);\
+} while(0)
+
+#define MMC_RXUDP_ERR_OCTETS_RXUDP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_RXUDP_ERR_OCTETS_RgRd(data);\
 } while(0)
 
 
-#define MTL_QUCR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe04))
+#define MMC_RXUDP_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x870))
 
-#define MTL_QUCR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR4_RgOffAddr);\
+#define MMC_RXUDP_GD_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXUDP_GD_OCTETS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR4_RgOffAddr);\
+#define MMC_RXUDP_GD_OCTETS_RXUDP_GD_OCTETS_UdfRd(data) do {\
+		MMC_RXUDP_GD_OCTETS_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QUCR4_Mask_12 (ULONG)(~(~0<<(20)))*/
 
-#define  MTL_QUCR4_Mask_12 (ULONG)(0xfffff)
+#define MMC_RXIPV6_NOPAY_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x86c))
 
-/*#define MTL_QUCR4_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
+#define MMC_RXIPV6_NOPAY_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV6_NOPAY_OCTETS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR4_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MMC_RXIPV6_NOPAY_OCTETS_RXIPV6_NOPAY_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV6_NOPAY_OCTETS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR4_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
 
-#define MTL_QUCR4_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MMC_RXIPV6_HDRERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x868))
 
-/*#define MTL_QUCR4_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
+#define MMC_RXIPV6_HDRERR_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV6_HDRERR_OCTETS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR4_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
-
-#define MTL_QUCR4_UFPKTCNT_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QUCR4_RgRd(v);\
-		v = (v & (MTL_QUCR4_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR4_Mask_12))<<12);\
-		v = ((v & MTL_QUCR4_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR4_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR4_RgWr(v);\
+#define MMC_RXIPV6_HDRERR_OCTETS_RXIPV6_HDRERR_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV6_HDRERR_OCTETS_RgRd(data);\
 } while(0)
 
-#define MTL_QUCR4_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR4_UFPKTCNT_Mask);\
-} while(0)
 
-/*#define MTL_QUCR4_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_RXIPV6_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x864))
 
-#define MTL_QUCR4_UFCNTOVF_Mask (ULONG)(0x1)
+#define MMC_RXIPV6_GD_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV6_GD_OCTETS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR4_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR4_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR4_UFCNTOVF_Mask);\
+#define MMC_RXIPV6_GD_OCTETS_RXIPV6_GD_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV6_GD_OCTETS_RgRd(data);\
 } while(0)
 
 
-#define MTL_QUCR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdc4))
+#define MMC_RXIPV4_UDSBL_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x860))
 
-#define MTL_QUCR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR3_RgOffAddr);\
+#define MMC_RXIPV4_UDSBL_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_UDSBL_OCTETS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR3_RgOffAddr);\
+#define MMC_RXIPV4_UDSBL_OCTETS_RXIPV4_UDSBL_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV4_UDSBL_OCTETS_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QUCR3_Mask_12 (ULONG)(~(~0<<(20)))*/
-
-#define  MTL_QUCR3_Mask_12 (ULONG)(0xfffff)
-
-/*#define MTL_QUCR3_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QUCR3_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MMC_RXIPV4_FRAG_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x85c))
 
-/*#define MTL_QUCR3_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+#define MMC_RXIPV4_FRAG_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_FRAG_OCTETS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR3_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MMC_RXIPV4_FRAG_OCTETS_RXIPV4_FRAG_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV4_FRAG_OCTETS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR3_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QUCR3_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+#define MMC_RXIPV4_NOPAY_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x858))
 
-#define MTL_QUCR3_UFPKTCNT_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QUCR3_RgRd(v);\
-		v = (v & (MTL_QUCR3_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR3_Mask_12))<<12);\
-		v = ((v & MTL_QUCR3_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR3_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR3_RgWr(v);\
+#define MMC_RXIPV4_NOPAY_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_NOPAY_OCTETS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR3_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR3_UFPKTCNT_Mask);\
+#define MMC_RXIPV4_NOPAY_OCTETS_RXIPV4_NOPAY_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV4_NOPAY_OCTETS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QUCR3_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR3_UFCNTOVF_Mask (ULONG)(0x1)
+#define MMC_RXIPV4_HDRERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x854))
 
-#define MTL_QUCR3_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR3_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR3_UFCNTOVF_Mask);\
+#define MMC_RXIPV4_HDRERR_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_HDRERR_OCTETS_RgOffAddr);\
 } while(0)
 
+#define MMC_RXIPV4_HDRERR_OCTETS_RXIPV4_HDRERR_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV4_HDRERR_OCTETS_RgRd(data);\
+} while(0)
 
-#define MTL_QUCR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd84))
 
-#define MTL_QUCR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR2_RgOffAddr);\
-} while(0)
+#define MMC_RXIPV4_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x850))
 
-#define MTL_QUCR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR2_RgOffAddr);\
+#define MMC_RXIPV4_GD_OCTETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_GD_OCTETS_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QUCR2_Mask_12 (ULONG)(~(~0<<(20)))*/
-
-#define  MTL_QUCR2_Mask_12 (ULONG)(0xfffff)
+#define MMC_RXIPV4_GD_OCTETS_RXIPV4_GD_OCTETS_UdfRd(data) do {\
+		MMC_RXIPV4_GD_OCTETS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR2_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QUCR2_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MMC_RXICMP_ERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x844))
 
-/*#define MTL_QUCR2_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+#define MMC_RXICMP_ERR_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXICMP_ERR_PKTS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR2_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MMC_RXICMP_ERR_PKTS_RXICMP_ERR_PKTS_UdfRd(data) do {\
+		MMC_RXICMP_ERR_PKTS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR2_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QUCR2_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+#define MMC_RXICMP_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x840))
 
-#define MTL_QUCR2_UFPKTCNT_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QUCR2_RgRd(v);\
-		v = (v & (MTL_QUCR2_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR2_Mask_12))<<12);\
-		v = ((v & MTL_QUCR2_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR2_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR2_RgWr(v);\
+#define MMC_RXICMP_GD_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXICMP_GD_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR2_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR2_UFPKTCNT_Mask);\
+#define MMC_RXICMP_GD_PKTS_RXICMP_GD_PKTS_UdfRd(data) do {\
+		MMC_RXICMP_GD_PKTS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QUCR2_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR2_UFCNTOVF_Mask (ULONG)(0x1)
+#define MMC_RXTCP_ERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x83c))
 
-#define MTL_QUCR2_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR2_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR2_UFCNTOVF_Mask);\
+#define MMC_RXTCP_ERR_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXTCP_ERR_PKTS_RgOffAddr);\
+} while(0)
+
+#define MMC_RXTCP_ERR_PKTS_RXTCP_ERR_PKTS_UdfRd(data) do {\
+		MMC_RXTCP_ERR_PKTS_RgRd(data);\
 } while(0)
 
 
-#define MTL_QUCR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd44))
+#define MMC_RXTCP_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x838))
 
-#define MTL_QUCR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QUCR1_RgOffAddr);\
+#define MMC_RXTCP_GD_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXTCP_GD_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QUCR1_RgOffAddr);\
+#define MMC_RXTCP_GD_PKTS_RXTCP_GD_PKTS_UdfRd(data) do {\
+		MMC_RXTCP_GD_PKTS_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QUCR1_Mask_12 (ULONG)(~(~0<<(20)))*/
-
-#define  MTL_QUCR1_Mask_12 (ULONG)(0xfffff)
-
-/*#define MTL_QUCR1_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(20)))<<(12)))*/
 
-#define MTL_QUCR1_RES_Wr_Mask_12 (ULONG)(0xfff)
+#define MMC_RXUDP_ERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x834))
 
-/*#define MTL_QUCR1_UFPKTCNT_Mask (ULONG)(~(~0<<(11)))*/
+#define MMC_RXUDP_ERR_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXUDP_ERR_PKTS_RgOffAddr);\
+} while(0)
 
-#define MTL_QUCR1_UFPKTCNT_Mask (ULONG)(0x7ff)
+#define MMC_RXUDP_ERR_PKTS_RXUDP_ERR_PKTS_UdfRd(data) do {\
+		MMC_RXUDP_ERR_PKTS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QUCR1_UFPKTCNT_Wr_Mask (ULONG)(~((~(~0 << (11))) << (0)))*/
 
-#define MTL_QUCR1_UFPKTCNT_Wr_Mask (ULONG)(0xfffff800)
+#define MMC_RXUDP_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x830))
 
-#define MTL_QUCR1_UFPKTCNT_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QUCR1_RgRd(v);\
-		v = (v & (MTL_QUCR1_RES_Wr_Mask_12))|((( 0) & (MTL_QUCR1_Mask_12))<<12);\
-		v = ((v & MTL_QUCR1_UFPKTCNT_Wr_Mask) | ((data & MTL_QUCR1_UFPKTCNT_Mask)<<0));\
-		MTL_QUCR1_RgWr(v);\
+#define MMC_RXUDP_GD_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXUDP_GD_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QUCR1_UFPKTCNT_UdfRd(data) do {\
-		MTL_QUCR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QUCR1_UFPKTCNT_Mask);\
+#define MMC_RXUDP_GD_PKTS_RXUDP_GD_PKTS_UdfRd(data) do {\
+		MMC_RXUDP_GD_PKTS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QUCR1_UFCNTOVF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QUCR1_UFCNTOVF_Mask (ULONG)(0x1)
+#define MMC_RXIPV6_NOPAY_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x82c))
 
-#define MTL_QUCR1_UFCNTOVF_UdfRd(data) do {\
-		MTL_QUCR1_RgRd(data);\
-		data = ((data >> 11) & MTL_QUCR1_UFCNTOVF_Mask);\
+#define MMC_RXIPV6_NOPAY_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV6_NOPAY_PKTS_RgOffAddr);\
 } while(0)
 
+#define MMC_RXIPV6_NOPAY_PKTS_RXIPV6_NOPAY_PKTS_UdfRd(data) do {\
+		MMC_RXIPV6_NOPAY_PKTS_RgRd(data);\
+} while(0)
 
-#define MTL_QTOMR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xec0))
 
-#define MTL_QTOMR7_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR7_RgOffAddr);\
-} while(0)
+#define MMC_RXIPV6_HDRERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x828))
 
-#define MTL_QTOMR7_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR7_RgOffAddr);\
+#define MMC_RXIPV6_HDRERR_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV6_HDRERR_PKTS_RgOffAddr);\
 } while(0)
 
-/*#define  MTL_QTOMR7_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR7_Mask_7 (ULONG)(0x1ff)
+#define MMC_RXIPV6_HDRERR_PKTS_RXIPV6_HDRERR_PKTS_UdfRd(data) do {\
+		MMC_RXIPV6_HDRERR_PKTS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR7_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTOMR7_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_RXIPV6_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x824))
 
-/*#define  MTL_QTOMR7_Mask_26 (ULONG)(~(~0<<(6)))*/
+#define MMC_RXIPV6_GD_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV6_GD_PKTS_RgOffAddr);\
+} while(0)
 
-#define  MTL_QTOMR7_Mask_26 (ULONG)(0x3f)
+#define MMC_RXIPV6_GD_PKTS_RXIPV6_GD_PKTS_UdfRd(data) do {\
+		MMC_RXIPV6_GD_PKTS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR7_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR7_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_RXIPV4_UBSBL_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x820))
 
-/*#define MTL_QTOMR7_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_RXIPV4_UBSBL_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_UBSBL_PKTS_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR7_FTQ_Mask (ULONG)(0x1)
+#define MMC_RXIPV4_UBSBL_PKTS_RXIPV4_UBSBL_PKTS_UdfRd(data) do {\
+		MMC_RXIPV4_UBSBL_PKTS_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR7_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR7_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_RXIPV4_FRAG_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x81c))
 
-#define MTL_QTOMR7_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR7_RgRd(v);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR7_FTQ_Wr_Mask) | ((data & MTL_QTOMR7_FTQ_Mask)<<0));\
-		MTL_QTOMR7_RgWr(v);\
+#define MMC_RXIPV4_FRAG_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_FRAG_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR7_FTQ_UdfRd(data) do {\
-		MTL_QTOMR7_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR7_FTQ_Mask);\
+#define MMC_RXIPV4_FRAG_PKTS_RXIPV4_FRAG_PKTS_UdfRd(data) do {\
+		MMC_RXIPV4_FRAG_PKTS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR7_TSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTOMR7_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR7_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QTOMR7_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_RXIPV4_NOPAY_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x818))
 
-#define MTL_QTOMR7_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR7_RgRd(v);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR7_TSF_Wr_Mask) | ((data & MTL_QTOMR7_TSF_Mask)<<1));\
-		MTL_QTOMR7_RgWr(v);\
+#define MMC_RXIPV4_NOPAY_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_NOPAY_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR7_TSF_UdfRd(data) do {\
-		MTL_QTOMR7_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR7_TSF_Mask);\
+#define MMC_RXIPV4_NOPAY_PKTS_RXIPV4_NOPAY_PKTS_UdfRd(data) do {\
+		MMC_RXIPV4_NOPAY_PKTS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR7_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR7_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR7_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR7_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_RXIPV4_HDRERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x814))
 
-#define MTL_QTOMR7_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR7_RgRd(v);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR7_TXQEN_Wr_Mask) | ((data & MTL_QTOMR7_TXQEN_Mask)<<2));\
-		MTL_QTOMR7_RgWr(v);\
+#define MMC_RXIPV4_HDRERR_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_HDRERR_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR7_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR7_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR7_TXQEN_Mask);\
+#define MMC_RXIPV4_HDRERR_PKTS_RXIPV4_HDRERR_PKTS_UdfRd(data) do {\
+		MMC_RXIPV4_HDRERR_PKTS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR7_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR7_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR7_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR7_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_RXIPV4_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x810))
 
-#define MTL_QTOMR7_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR7_RgRd(v);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR7_TTC_Wr_Mask) | ((data & MTL_QTOMR7_TTC_Mask)<<4));\
-		MTL_QTOMR7_RgWr(v);\
+#define MMC_RXIPV4_GD_PKTS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXIPV4_GD_PKTS_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR7_TTC_UdfRd(data) do {\
-		MTL_QTOMR7_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR7_TTC_Mask);\
+#define MMC_RXIPV4_GD_PKTS_RXIPV4_GD_PKTS_UdfRd(data) do {\
+		MMC_RXIPV4_GD_PKTS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR7_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR7_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR7_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR7_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_RXCTRLPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7e4))
 
-#define MTL_QTOMR7_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR7_RgRd(v);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR7_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR7_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR7_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR7_TQS_Wr_Mask) | ((data & MTL_QTOMR7_TQS_Mask)<<16));\
-		MTL_QTOMR7_RgWr(v);\
+#define MMC_RXCTRLPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXCTRLPACKETS_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR7_TQS_UdfRd(data) do {\
-		MTL_QTOMR7_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR7_TQS_Mask);\
+#define MMC_RXCTRLPACKETS_G_RXCTRLPACKETS_G_UdfRd(data) do {\
+		MMC_RXCTRLPACKETS_G_RgRd(data);\
 } while(0)
 
 
-#define MTL_QTOMR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe80))
+#define MMC_RXRCVERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7e0))
 
-#define MTL_QTOMR6_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR6_RgOffAddr);\
+#define MMC_RXRCVERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXRCVERROR_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR6_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR6_RgOffAddr);\
+#define MMC_RXRCVERROR_RXRCVERROR_UdfRd(data) do {\
+		MMC_RXRCVERROR_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QTOMR6_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR6_Mask_7 (ULONG)(0x1ff)
-
-/*#define MTL_QTOMR6_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTOMR6_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_RXWATCHDOGERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7dc))
 
-/*#define  MTL_QTOMR6_Mask_26 (ULONG)(~(~0<<(6)))*/
+#define MMC_RXWATCHDOGERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXWATCHDOGERROR_RgOffAddr);\
+} while(0)
 
-#define  MTL_QTOMR6_Mask_26 (ULONG)(0x3f)
+#define MMC_RXWATCHDOGERROR_RXWATCHDOGERROR_UdfRd(data) do {\
+		MMC_RXWATCHDOGERROR_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR6_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR6_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_RXVLANPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7d8))
 
-/*#define MTL_QTOMR6_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_RXVLANPACKETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXVLANPACKETS_GB_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR6_FTQ_Mask (ULONG)(0x1)
+#define MMC_RXVLANPACKETS_GB_RXVLANPACKETS_GB_UdfRd(data) do {\
+		MMC_RXVLANPACKETS_GB_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR6_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR6_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_RXFIFOOVERFLOW_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7d4))
 
-#define MTL_QTOMR6_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR6_RgRd(v);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR6_FTQ_Wr_Mask) | ((data & MTL_QTOMR6_FTQ_Mask)<<0));\
-		MTL_QTOMR6_RgWr(v);\
+#define MMC_RXFIFOOVERFLOW_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXFIFOOVERFLOW_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR6_FTQ_UdfRd(data) do {\
-		MTL_QTOMR6_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR6_FTQ_Mask);\
+#define MMC_RXFIFOOVERFLOW_RXFIFOOVERFLOW_UdfRd(data) do {\
+		MMC_RXFIFOOVERFLOW_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR6_TSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTOMR6_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR6_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QTOMR6_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_RXPAUSEPACKETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7d0))
 
-#define MTL_QTOMR6_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR6_RgRd(v);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR6_TSF_Wr_Mask) | ((data & MTL_QTOMR6_TSF_Mask)<<1));\
-		MTL_QTOMR6_RgWr(v);\
+#define MMC_RXPAUSEPACKETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXPAUSEPACKETS_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR6_TSF_UdfRd(data) do {\
-		MTL_QTOMR6_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR6_TSF_Mask);\
+#define MMC_RXPAUSEPACKETS_RXPAUSEPACKETS_UdfRd(data) do {\
+		MMC_RXPAUSEPACKETS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR6_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR6_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR6_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR6_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_RXOUTOFRANGETYPE_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7cc))
 
-#define MTL_QTOMR6_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR6_RgRd(v);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR6_TXQEN_Wr_Mask) | ((data & MTL_QTOMR6_TXQEN_Mask)<<2));\
-		MTL_QTOMR6_RgWr(v);\
+#define MMC_RXOUTOFRANGETYPE_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXOUTOFRANGETYPE_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR6_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR6_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR6_TXQEN_Mask);\
+#define MMC_RXOUTOFRANGETYPE_RXOUTOFRANGETYPE_UdfRd(data) do {\
+		MMC_RXOUTOFRANGETYPE_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR6_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR6_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR6_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR6_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_RXLENGTHERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7c8))
 
-#define MTL_QTOMR6_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR6_RgRd(v);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR6_TTC_Wr_Mask) | ((data & MTL_QTOMR6_TTC_Mask)<<4));\
-		MTL_QTOMR6_RgWr(v);\
+#define MMC_RXLENGTHERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXLENGTHERROR_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR6_TTC_UdfRd(data) do {\
-		MTL_QTOMR6_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR6_TTC_Mask);\
+#define MMC_RXLENGTHERROR_RXLENGTHERROR_UdfRd(data) do {\
+		MMC_RXLENGTHERROR_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR6_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR6_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR6_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR6_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_RXUNICASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7c4))
 
-#define MTL_QTOMR6_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR6_RgRd(v);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR6_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR6_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR6_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR6_TQS_Wr_Mask) | ((data & MTL_QTOMR6_TQS_Mask)<<16));\
-		MTL_QTOMR6_RgWr(v);\
+#define MMC_RXUNICASTPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXUNICASTPACKETS_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR6_TQS_UdfRd(data) do {\
-		MTL_QTOMR6_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR6_TQS_Mask);\
+#define MMC_RXUNICASTPACKETS_G_RXUNICASTPACKETS_G_UdfRd(data) do {\
+		MMC_RXUNICASTPACKETS_G_RgRd(data);\
 } while(0)
 
 
-#define MTL_QTOMR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe40))
+#define MMC_RX1024TOMAXOCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7c0))
 
-#define MTL_QTOMR5_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR5_RgOffAddr);\
+#define MMC_RX1024TOMAXOCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RX1024TOMAXOCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR5_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR5_RgOffAddr);\
+#define MMC_RX1024TOMAXOCTETS_GB_RX1024TOMAXOCTETS_GB_UdfRd(data) do {\
+		MMC_RX1024TOMAXOCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QTOMR5_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR5_Mask_7 (ULONG)(0x1ff)
-
-/*#define MTL_QTOMR5_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTOMR5_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_RX512TO1023OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7bc))
 
-/*#define  MTL_QTOMR5_Mask_26 (ULONG)(~(~0<<(6)))*/
+#define MMC_RX512TO1023OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RX512TO1023OCTETS_GB_RgOffAddr);\
+} while(0)
 
-#define  MTL_QTOMR5_Mask_26 (ULONG)(0x3f)
+#define MMC_RX512TO1023OCTETS_GB_RX512TO1023OCTETS_GB_UdfRd(data) do {\
+		MMC_RX512TO1023OCTETS_GB_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR5_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR5_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_RX256TO511OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7b8))
 
-/*#define MTL_QTOMR5_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_RX256TO511OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RX256TO511OCTETS_GB_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR5_FTQ_Mask (ULONG)(0x1)
+#define MMC_RX256TO511OCTETS_GB_RX256TO511OCTETS_GB_UdfRd(data) do {\
+		MMC_RX256TO511OCTETS_GB_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR5_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR5_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_RX128TO255OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7b4))
 
-#define MTL_QTOMR5_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR5_RgRd(v);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR5_FTQ_Wr_Mask) | ((data & MTL_QTOMR5_FTQ_Mask)<<0));\
-		MTL_QTOMR5_RgWr(v);\
+#define MMC_RX128TO255OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RX128TO255OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR5_FTQ_UdfRd(data) do {\
-		MTL_QTOMR5_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR5_FTQ_Mask);\
+#define MMC_RX128TO255OCTETS_GB_RX128TO255OCTETS_GB_UdfRd(data) do {\
+		MMC_RX128TO255OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR5_TSF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_QTOMR5_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR5_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MTL_QTOMR5_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_RX65TO127OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7b0))
 
-#define MTL_QTOMR5_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR5_RgRd(v);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR5_TSF_Wr_Mask) | ((data & MTL_QTOMR5_TSF_Mask)<<1));\
-		MTL_QTOMR5_RgWr(v);\
+#define MMC_RX65TO127OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RX65TO127OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR5_TSF_UdfRd(data) do {\
-		MTL_QTOMR5_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR5_TSF_Mask);\
+#define MMC_RX65TO127OCTETS_GB_RX65TO127OCTETS_GB_UdfRd(data) do {\
+		MMC_RX65TO127OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR5_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR5_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR5_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR5_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_RX64OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7ac))
 
-#define MTL_QTOMR5_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR5_RgRd(v);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR5_TXQEN_Wr_Mask) | ((data & MTL_QTOMR5_TXQEN_Mask)<<2));\
-		MTL_QTOMR5_RgWr(v);\
+#define MMC_RX64OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RX64OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR5_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR5_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR5_TXQEN_Mask);\
+#define MMC_RX64OCTETS_GB_RX64OCTETS_GB_UdfRd(data) do {\
+		MMC_RX64OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR5_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR5_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR5_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR5_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_RXOVERSIZE_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7a8))
 
-#define MTL_QTOMR5_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR5_RgRd(v);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR5_TTC_Wr_Mask) | ((data & MTL_QTOMR5_TTC_Mask)<<4));\
-		MTL_QTOMR5_RgWr(v);\
+#define MMC_RXOVERSIZE_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXOVERSIZE_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR5_TTC_UdfRd(data) do {\
-		MTL_QTOMR5_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR5_TTC_Mask);\
+#define MMC_RXOVERSIZE_G_RXOVERSIZE_G_UdfRd(data) do {\
+		MMC_RXOVERSIZE_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR5_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR5_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR5_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR5_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_RXUNDERSIZE_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7a4))
 
-#define MTL_QTOMR5_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR5_RgRd(v);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR5_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR5_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR5_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR5_TQS_Wr_Mask) | ((data & MTL_QTOMR5_TQS_Mask)<<16));\
-		MTL_QTOMR5_RgWr(v);\
+#define MMC_RXUNDERSIZE_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXUNDERSIZE_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR5_TQS_UdfRd(data) do {\
-		MTL_QTOMR5_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR5_TQS_Mask);\
+#define MMC_RXUNDERSIZE_G_RXUNDERSIZE_G_UdfRd(data) do {\
+		MMC_RXUNDERSIZE_G_RgRd(data);\
 } while(0)
 
 
-#define MTL_QTOMR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xe00))
+#define MMC_RXJABBERERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7a0))
 
-#define MTL_QTOMR4_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR4_RgOffAddr);\
+#define MMC_RXJABBERERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXJABBERERROR_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR4_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR4_RgOffAddr);\
+#define MMC_RXJABBERERROR_RXJABBERERROR_UdfRd(data) do {\
+		MMC_RXJABBERERROR_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QTOMR4_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR4_Mask_7 (ULONG)(0x1ff)
-
-/*#define MTL_QTOMR4_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTOMR4_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_RXRUNTERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x79c))
 
-/*#define  MTL_QTOMR4_Mask_26 (ULONG)(~(~0<<(6)))*/
+#define MMC_RXRUNTERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXRUNTERROR_RgOffAddr);\
+} while(0)
 
-#define  MTL_QTOMR4_Mask_26 (ULONG)(0x3f)
+#define MMC_RXRUNTERROR_RXRUNTERROR_UdfRd(data) do {\
+		MMC_RXRUNTERROR_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR4_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR4_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_RXALIGNMENTERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x798))
 
-/*#define MTL_QTOMR4_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_RXALIGNMENTERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXALIGNMENTERROR_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR4_FTQ_Mask (ULONG)(0x1)
+#define MMC_RXALIGNMENTERROR_RXALIGNMENTERROR_UdfRd(data) do {\
+		MMC_RXALIGNMENTERROR_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR4_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR4_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_RXCRCERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x794))
 
-#define MTL_QTOMR4_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR4_RgRd(v);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR4_FTQ_Wr_Mask) | ((data & MTL_QTOMR4_FTQ_Mask)<<0));\
-		MTL_QTOMR4_RgWr(v);\
+#define MMC_RXCRCERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXCRCERROR_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR4_FTQ_UdfRd(data) do {\
-		MTL_QTOMR4_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR4_FTQ_Mask);\
+#define MMC_RXCRCERROR_RXCRCERROR_UdfRd(data) do {\
+		MMC_RXCRCERROR_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR4_TSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTOMR4_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR4_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QTOMR4_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_RXMULTICASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x790))
 
-#define MTL_QTOMR4_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR4_RgRd(v);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR4_TSF_Wr_Mask) | ((data & MTL_QTOMR4_TSF_Mask)<<1));\
-		MTL_QTOMR4_RgWr(v);\
+#define MMC_RXMULTICASTPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXMULTICASTPACKETS_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR4_TSF_UdfRd(data) do {\
-		MTL_QTOMR4_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR4_TSF_Mask);\
+#define MMC_RXMULTICASTPACKETS_G_RXMULTICASTPACKETS_G_UdfRd(data) do {\
+		MMC_RXMULTICASTPACKETS_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR4_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR4_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR4_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR4_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_RXBROADCASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x78c))
 
-#define MTL_QTOMR4_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR4_RgRd(v);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR4_TXQEN_Wr_Mask) | ((data & MTL_QTOMR4_TXQEN_Mask)<<2));\
-		MTL_QTOMR4_RgWr(v);\
+#define MMC_RXBROADCASTPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXBROADCASTPACKETS_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR4_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR4_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR4_TXQEN_Mask);\
+#define MMC_RXBROADCASTPACKETS_G_RXBROADCASTPACKETS_G_UdfRd(data) do {\
+		MMC_RXBROADCASTPACKETS_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR4_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR4_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR4_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR4_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_RXOCTETCOUNT_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x788))
 
-#define MTL_QTOMR4_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR4_RgRd(v);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR4_TTC_Wr_Mask) | ((data & MTL_QTOMR4_TTC_Mask)<<4));\
-		MTL_QTOMR4_RgWr(v);\
+#define MMC_RXOCTETCOUNT_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXOCTETCOUNT_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR4_TTC_UdfRd(data) do {\
-		MTL_QTOMR4_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR4_TTC_Mask);\
+#define MMC_RXOCTETCOUNT_G_RXOCTETCOUNT_G_UdfRd(data) do {\
+		MMC_RXOCTETCOUNT_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR4_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR4_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR4_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR4_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_RXOCTETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x784))
 
-#define MTL_QTOMR4_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR4_RgRd(v);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR4_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR4_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR4_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR4_TQS_Wr_Mask) | ((data & MTL_QTOMR4_TQS_Mask)<<16));\
-		MTL_QTOMR4_RgWr(v);\
+#define MMC_RXOCTETCOUNT_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXOCTETCOUNT_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR4_TQS_UdfRd(data) do {\
-		MTL_QTOMR4_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR4_TQS_Mask);\
+#define MMC_RXOCTETCOUNT_GB_RXOCTETCOUNT_GB_UdfRd(data) do {\
+		MMC_RXOCTETCOUNT_GB_RgRd(data);\
 } while(0)
 
 
-#define MTL_QTOMR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xdc0))
+#define MMC_RXPACKETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x780))
 
-#define MTL_QTOMR3_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR3_RgOffAddr);\
+#define MMC_RXPACKETCOUNT_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_RXPACKETCOUNT_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR3_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR3_RgOffAddr);\
+#define MMC_RXPACKETCOUNT_GB_RXPACKETCOUNT_GB_UdfRd(data) do {\
+		MMC_RXPACKETCOUNT_GB_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QTOMR3_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR3_Mask_7 (ULONG)(0x1ff)
-
-/*#define MTL_QTOMR3_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTOMR3_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_TXOVERSIZE_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x778))
 
-/*#define  MTL_QTOMR3_Mask_26 (ULONG)(~(~0<<(6)))*/
+#define MMC_TXOVERSIZE_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXOVERSIZE_G_RgOffAddr);\
+} while(0)
 
-#define  MTL_QTOMR3_Mask_26 (ULONG)(0x3f)
+#define MMC_TXOVERSIZE_G_TXOVERSIZE_G_UdfRd(data) do {\
+		MMC_TXOVERSIZE_G_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR3_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR3_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_TXVLANPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x774))
 
-/*#define MTL_QTOMR3_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_TXVLANPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXVLANPACKETS_G_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR3_FTQ_Mask (ULONG)(0x1)
+#define MMC_TXVLANPACKETS_G_TXVLANPACKETS_G_UdfRd(data) do {\
+		MMC_TXVLANPACKETS_G_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR3_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR3_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_TXPAUSEPACKETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x770))
 
-#define MTL_QTOMR3_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR3_RgRd(v);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR3_FTQ_Wr_Mask) | ((data & MTL_QTOMR3_FTQ_Mask)<<0));\
-		MTL_QTOMR3_RgWr(v);\
+#define MMC_TXPAUSEPACKETS_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXPAUSEPACKETS_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR3_FTQ_UdfRd(data) do {\
-		MTL_QTOMR3_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR3_FTQ_Mask);\
+#define MMC_TXPAUSEPACKETS_TXPAUSEPACKETS_UdfRd(data) do {\
+		MMC_TXPAUSEPACKETS_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR3_TSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTOMR3_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR3_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QTOMR3_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_TXEXCESSDEF_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x76c))
 
-#define MTL_QTOMR3_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR3_RgRd(v);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR3_TSF_Wr_Mask) | ((data & MTL_QTOMR3_TSF_Mask)<<1));\
-		MTL_QTOMR3_RgWr(v);\
+#define MMC_TXEXCESSDEF_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXEXCESSDEF_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR3_TSF_UdfRd(data) do {\
-		MTL_QTOMR3_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR3_TSF_Mask);\
+#define MMC_TXEXCESSDEF_TXEXCESSDEF_UdfRd(data) do {\
+		MMC_TXEXCESSDEF_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR3_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR3_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR3_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR3_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_TXPACKETSCOUNT_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x768))
 
-#define MTL_QTOMR3_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR3_RgRd(v);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR3_TXQEN_Wr_Mask) | ((data & MTL_QTOMR3_TXQEN_Mask)<<2));\
-		MTL_QTOMR3_RgWr(v);\
+#define MMC_TXPACKETSCOUNT_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXPACKETSCOUNT_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR3_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR3_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR3_TXQEN_Mask);\
+#define MMC_TXPACKETSCOUNT_G_TXPACKETSCOUNT_G_UdfRd(data) do {\
+		MMC_TXPACKETSCOUNT_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR3_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR3_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR3_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR3_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_TXOCTETCOUNT_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x764))
 
-#define MTL_QTOMR3_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR3_RgRd(v);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR3_TTC_Wr_Mask) | ((data & MTL_QTOMR3_TTC_Mask)<<4));\
-		MTL_QTOMR3_RgWr(v);\
+#define MMC_TXOCTETCOUNT_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXOCTETCOUNT_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR3_TTC_UdfRd(data) do {\
-		MTL_QTOMR3_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR3_TTC_Mask);\
+#define MMC_TXOCTETCOUNT_G_TXOCTETCOUNT_G_UdfRd(data) do {\
+		MMC_TXOCTETCOUNT_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR3_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR3_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR3_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR3_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_TXCARRIERERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x760))
 
-#define MTL_QTOMR3_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR3_RgRd(v);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR3_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR3_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR3_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR3_TQS_Wr_Mask) | ((data & MTL_QTOMR3_TQS_Mask)<<16));\
-		MTL_QTOMR3_RgWr(v);\
+#define MMC_TXCARRIERERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXCARRIERERROR_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR3_TQS_UdfRd(data) do {\
-		MTL_QTOMR3_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR3_TQS_Mask);\
+#define MMC_TXCARRIERERROR_TXCARRIERERROR_UdfRd(data) do {\
+		MMC_TXCARRIERERROR_RgRd(data);\
 } while(0)
 
 
-#define MTL_QTOMR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd80))
+#define MMC_TXEXESSCOL_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x75c))
 
-#define MTL_QTOMR2_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR2_RgOffAddr);\
+#define MMC_TXEXESSCOL_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXEXESSCOL_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR2_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR2_RgOffAddr);\
+#define MMC_TXEXESSCOL_TXEXESSCOL_UdfRd(data) do {\
+		MMC_TXEXESSCOL_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QTOMR2_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR2_Mask_7 (ULONG)(0x1ff)
-
-/*#define MTL_QTOMR2_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
 
-#define MTL_QTOMR2_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_TXLATECOL_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x758))
 
-/*#define  MTL_QTOMR2_Mask_26 (ULONG)(~(~0<<(6)))*/
+#define MMC_TXLATECOL_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXLATECOL_RgOffAddr);\
+} while(0)
 
-#define  MTL_QTOMR2_Mask_26 (ULONG)(0x3f)
+#define MMC_TXLATECOL_TXLATECOL_UdfRd(data) do {\
+		MMC_TXLATECOL_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR2_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR2_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_TXDEFERRED_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x754))
 
-/*#define MTL_QTOMR2_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_TXDEFERRED_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXDEFERRED_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR2_FTQ_Mask (ULONG)(0x1)
+#define MMC_TXDEFERRED_TXDEFERRED_UdfRd(data) do {\
+		MMC_TXDEFERRED_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR2_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR2_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_TXMULTICOL_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x750))
 
-#define MTL_QTOMR2_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR2_RgRd(v);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR2_FTQ_Wr_Mask) | ((data & MTL_QTOMR2_FTQ_Mask)<<0));\
-		MTL_QTOMR2_RgWr(v);\
+#define MMC_TXMULTICOL_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXMULTICOL_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR2_FTQ_UdfRd(data) do {\
-		MTL_QTOMR2_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR2_FTQ_Mask);\
+#define MMC_TXMULTICOL_G_TXMULTICOL_G_UdfRd(data) do {\
+		MMC_TXMULTICOL_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR2_TSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTOMR2_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR2_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QTOMR2_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_TXSINGLECOL_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x74c))
 
-#define MTL_QTOMR2_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR2_RgRd(v);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR2_TSF_Wr_Mask) | ((data & MTL_QTOMR2_TSF_Mask)<<1));\
-		MTL_QTOMR2_RgWr(v);\
+#define MMC_TXSINGLECOL_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXSINGLECOL_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR2_TSF_UdfRd(data) do {\
-		MTL_QTOMR2_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR2_TSF_Mask);\
+#define MMC_TXSINGLECOL_G_TXSINGLECOL_G_UdfRd(data) do {\
+		MMC_TXSINGLECOL_G_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR2_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR2_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR2_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR2_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_TXUNDERFLOWERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x748))
 
-#define MTL_QTOMR2_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR2_RgRd(v);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR2_TXQEN_Wr_Mask) | ((data & MTL_QTOMR2_TXQEN_Mask)<<2));\
-		MTL_QTOMR2_RgWr(v);\
+#define MMC_TXUNDERFLOWERROR_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXUNDERFLOWERROR_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR2_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR2_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR2_TXQEN_Mask);\
+#define MMC_TXUNDERFLOWERROR_TXUNDERFLOWERROR_UdfRd(data) do {\
+		MMC_TXUNDERFLOWERROR_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR2_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR2_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR2_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR2_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_TXBROADCASTPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x744))
 
-#define MTL_QTOMR2_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR2_RgRd(v);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR2_TTC_Wr_Mask) | ((data & MTL_QTOMR2_TTC_Mask)<<4));\
-		MTL_QTOMR2_RgWr(v);\
+#define MMC_TXBROADCASTPACKETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXBROADCASTPACKETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR2_TTC_UdfRd(data) do {\
-		MTL_QTOMR2_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR2_TTC_Mask);\
+#define MMC_TXBROADCASTPACKETS_GB_TXBROADCASTPACKETS_GB_UdfRd(data) do {\
+		MMC_TXBROADCASTPACKETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR2_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR2_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR2_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR2_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_TXMULTICASTPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x740))
 
-#define MTL_QTOMR2_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR2_RgRd(v);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR2_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR2_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR2_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR2_TQS_Wr_Mask) | ((data & MTL_QTOMR2_TQS_Mask)<<16));\
-		MTL_QTOMR2_RgWr(v);\
+#define MMC_TXMULTICASTPACKETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXMULTICASTPACKETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR2_TQS_UdfRd(data) do {\
-		MTL_QTOMR2_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR2_TQS_Mask);\
+#define MMC_TXMULTICASTPACKETS_GB_TXMULTICASTPACKETS_GB_UdfRd(data) do {\
+		MMC_TXMULTICASTPACKETS_GB_RgRd(data);\
 } while(0)
 
 
-#define MTL_QTOMR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xd40))
+#define MMC_TXUNICASTPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x73c))
 
-#define MTL_QTOMR1_RgWr(data) do {\
-		iowrite32(data, (void *)MTL_QTOMR1_RgOffAddr);\
+#define MMC_TXUNICASTPACKETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXUNICASTPACKETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR1_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_QTOMR1_RgOffAddr);\
+#define MMC_TXUNICASTPACKETS_GB_TXUNICASTPACKETS_GB_UdfRd(data) do {\
+		MMC_TXUNICASTPACKETS_GB_RgRd(data);\
 } while(0)
 
-/*#define  MTL_QTOMR1_Mask_7 (ULONG)(~(~0<<(9)))*/
-
-#define  MTL_QTOMR1_Mask_7 (ULONG)(0x1ff)
 
-/*#define MTL_QTOMR1_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(9)))<<(7)))*/
+#define MMC_TX1024TOMAXOCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x738))
 
-#define MTL_QTOMR1_RES_Wr_Mask_7 (ULONG)(0xffff007f)
+#define MMC_TX1024TOMAXOCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TX1024TOMAXOCTETS_GB_RgOffAddr);\
+} while(0)
 
-/*#define  MTL_QTOMR1_Mask_26 (ULONG)(~(~0<<(6)))*/
-
-#define  MTL_QTOMR1_Mask_26 (ULONG)(0x3f)
+#define MMC_TX1024TOMAXOCTETS_GB_TX1024TOMAXOCTETS_GB_UdfRd(data) do {\
+		MMC_TX1024TOMAXOCTETS_GB_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR1_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define MTL_QTOMR1_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
+#define MMC_TX512TO1023OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x734))
 
-/*#define MTL_QTOMR1_FTQ_Mask (ULONG)(~(~0<<(1)))*/
+#define MMC_TX512TO1023OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TX512TO1023OCTETS_GB_RgOffAddr);\
+} while(0)
 
-#define MTL_QTOMR1_FTQ_Mask (ULONG)(0x1)
+#define MMC_TX512TO1023OCTETS_GB_TX512TO1023OCTETS_GB_UdfRd(data) do {\
+		MMC_TX512TO1023OCTETS_GB_RgRd(data);\
+} while(0)
 
-/*#define MTL_QTOMR1_FTQ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define MTL_QTOMR1_FTQ_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_TX256TO511OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x730))
 
-#define MTL_QTOMR1_FTQ_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR1_RgRd(v);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR1_FTQ_Wr_Mask) | ((data & MTL_QTOMR1_FTQ_Mask)<<0));\
-		MTL_QTOMR1_RgWr(v);\
+#define MMC_TX256TO511OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TX256TO511OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR1_FTQ_UdfRd(data) do {\
-		MTL_QTOMR1_RgRd(data);\
-		data = ((data >> 0) & MTL_QTOMR1_FTQ_Mask);\
+#define MMC_TX256TO511OCTETS_GB_TX256TO511OCTETS_GB_UdfRd(data) do {\
+		MMC_TX256TO511OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR1_TSF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MTL_QTOMR1_TSF_Mask (ULONG)(0x1)
-
-/*#define MTL_QTOMR1_TSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define MTL_QTOMR1_TSF_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_TX128TO255OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x72c))
 
-#define MTL_QTOMR1_TSF_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR1_RgRd(v);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR1_TSF_Wr_Mask) | ((data & MTL_QTOMR1_TSF_Mask)<<1));\
-		MTL_QTOMR1_RgWr(v);\
+#define MMC_TX128TO255OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TX128TO255OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR1_TSF_UdfRd(data) do {\
-		MTL_QTOMR1_RgRd(data);\
-		data = ((data >> 1) & MTL_QTOMR1_TSF_Mask);\
+#define MMC_TX128TO255OCTETS_GB_TX128TO255OCTETS_GB_UdfRd(data) do {\
+		MMC_TX128TO255OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR1_TXQEN_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MTL_QTOMR1_TXQEN_Mask (ULONG)(0x3)
-
-/*#define MTL_QTOMR1_TXQEN_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define MTL_QTOMR1_TXQEN_Wr_Mask (ULONG)(0xfffffff3)
+#define MMC_TX65TO127OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x728))
 
-#define MTL_QTOMR1_TXQEN_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR1_RgRd(v);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR1_TXQEN_Wr_Mask) | ((data & MTL_QTOMR1_TXQEN_Mask)<<2));\
-		MTL_QTOMR1_RgWr(v);\
+#define MMC_TX65TO127OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TX65TO127OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR1_TXQEN_UdfRd(data) do {\
-		MTL_QTOMR1_RgRd(data);\
-		data = ((data >> 2) & MTL_QTOMR1_TXQEN_Mask);\
+#define MMC_TX65TO127OCTETS_GB_TX65TO127OCTETS_GB_UdfRd(data) do {\
+		MMC_TX65TO127OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR1_TTC_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MTL_QTOMR1_TTC_Mask (ULONG)(0x7)
-
-/*#define MTL_QTOMR1_TTC_Wr_Mask (ULONG)(~((~(~0 << (3))) << (4)))*/
 
-#define MTL_QTOMR1_TTC_Wr_Mask (ULONG)(0xffffff8f)
+#define MMC_TX64OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x724))
 
-#define MTL_QTOMR1_TTC_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR1_RgRd(v);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR1_TTC_Wr_Mask) | ((data & MTL_QTOMR1_TTC_Mask)<<4));\
-		MTL_QTOMR1_RgWr(v);\
+#define MMC_TX64OCTETS_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TX64OCTETS_GB_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR1_TTC_UdfRd(data) do {\
-		MTL_QTOMR1_RgRd(data);\
-		data = ((data >> 4) & MTL_QTOMR1_TTC_Mask);\
+#define MMC_TX64OCTETS_GB_TX64OCTETS_GB_UdfRd(data) do {\
+		MMC_TX64OCTETS_GB_RgRd(data);\
 } while(0)
 
-/*#define MTL_QTOMR1_TQS_Mask (ULONG)(~(~0<<(10)))*/
-
-#define MTL_QTOMR1_TQS_Mask (ULONG)(0x3ff)
-
-/*#define MTL_QTOMR1_TQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (16)))*/
 
-#define MTL_QTOMR1_TQS_Wr_Mask (ULONG)(0xfc00ffff)
+#define MMC_TXMULTICASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x720))
 
-#define MTL_QTOMR1_TQS_UdfWr(data) do {\
-		ULONG v;\
-		MTL_QTOMR1_RgRd(v);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_7))|((( 0) & (MTL_QTOMR1_Mask_7))<<7);\
-		v = (v & (MTL_QTOMR1_RES_Wr_Mask_26))|((( 0) & (MTL_QTOMR1_Mask_26))<<26);\
-		v = ((v & MTL_QTOMR1_TQS_Wr_Mask) | ((data & MTL_QTOMR1_TQS_Mask)<<16));\
-		MTL_QTOMR1_RgWr(v);\
+#define MMC_TXMULTICASTPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXMULTICASTPACKETS_G_RgOffAddr);\
 } while(0)
 
-#define MTL_QTOMR1_TQS_UdfRd(data) do {\
-		MTL_QTOMR1_RgRd(data);\
-		data = ((data >> 16) & MTL_QTOMR1_TQS_Mask);\
+#define MMC_TXMULTICASTPACKETS_G_TXMULTICASTPACKETS_G_UdfRd(data) do {\
+		MMC_TXMULTICASTPACKETS_G_RgRd(data);\
 } while(0)
 
 
-#define MAC_PMTCSR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xc0))
+#define MMC_TXBROADCASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x71c))
 
-#define MAC_PMTCSR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_PMTCSR_RgOffAddr);\
+#define MMC_TXBROADCASTPACKETS_G_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXBROADCASTPACKETS_G_RgOffAddr);\
 } while(0)
 
-#define MAC_PMTCSR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_PMTCSR_RgOffAddr);\
+#define MMC_TXBROADCASTPACKETS_G_TXBROADCASTPACKETS_G_UdfRd(data) do {\
+		MMC_TXBROADCASTPACKETS_G_RgRd(data);\
 } while(0)
 
-/*#define  MAC_PMTCSR_Mask_27 (ULONG)(~(~0<<(4)))*/
-
-#define  MAC_PMTCSR_Mask_27 (ULONG)(0xf)
-
-/*#define MAC_PMTCSR_RES_Wr_Mask_27 (ULONG)(~((~(~0<<(4)))<<(27)))*/
 
-#define MAC_PMTCSR_RES_Wr_Mask_27 (ULONG)(0x87ffffff)
+#define MMC_TXPACKETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x718))
 
-/*#define  MAC_PMTCSR_Mask_10 (ULONG)(~(~0<<(14)))*/
+#define MMC_TXPACKETCOUNT_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXPACKETCOUNT_GB_RgOffAddr);\
+} while(0)
 
-#define  MAC_PMTCSR_Mask_10 (ULONG)(0x3fff)
+#define MMC_TXPACKETCOUNT_GB_TXPACKETCOUNT_GB_UdfRd(data) do {\
+		MMC_TXPACKETCOUNT_GB_RgRd(data);\
+} while(0)
 
-/*#define MAC_PMTCSR_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(14)))<<(10)))*/
 
-#define MAC_PMTCSR_RES_Wr_Mask_10 (ULONG)(0xff0003ff)
+#define MMC_TXOCTETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x714))
 
-/*#define  MAC_PMTCSR_Mask_7 (ULONG)(~(~0<<(2)))*/
+#define MMC_TXOCTETCOUNT_GB_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_TXOCTETCOUNT_GB_RgOffAddr);\
+} while(0)
 
-#define  MAC_PMTCSR_Mask_7 (ULONG)(0x3)
+#define MMC_TXOCTETCOUNT_GB_TXOCTETCOUNT_GB_UdfRd(data) do {\
+		MMC_TXOCTETCOUNT_GB_RgRd(data);\
+} while(0)
 
-/*#define MAC_PMTCSR_RES_Wr_Mask_7 (ULONG)(~((~(~0<<(2)))<<(7)))*/
 
-#define MAC_PMTCSR_RES_Wr_Mask_7 (ULONG)(0xfffffe7f)
+#define MMC_IPC_INTR_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x808))
 
-/*#define  MAC_PMTCSR_Mask_3 (ULONG)(~(~0<<(2)))*/
+#define MMC_IPC_INTR_RX_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_IPC_INTR_RX_RgOffAddr);\
+} while(0)
 
-#define  MAC_PMTCSR_Mask_3 (ULONG)(0x3)
+/*#define MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MAC_PMTCSR_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(2)))<<(3)))*/
+#define MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_RES_Wr_Mask_3 (ULONG)(0xffffffe7)
+#define MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 29) & MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_Mask);\
+} while(0)
 
-/*#define MAC_PMTCSR_RWKFILTRST_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKFILTRST_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_RWKFILTRST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (31)))*/
+#define MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 28) & MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_RWKFILTRST_Wr_Mask (ULONG)(0x7fffffff)
+/*#define MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKFILTRST_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_RWKFILTRST_Wr_Mask) | ((data & MAC_PMTCSR_RWKFILTRST_Mask)<<31));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_RWKFILTRST_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 31) & MAC_PMTCSR_RWKFILTRST_Mask);\
+#define MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 27) & MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_RWKPTR_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKPTR_Mask (ULONG)(0x7)
+#define MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_RWKPTR_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 24) & MAC_PMTCSR_RWKPTR_Mask);\
+#define MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 26) & MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_GLBLUCAST_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_GLBLUCAST_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_GLBLUCAST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+#define MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 25) & MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_GLBLUCAST_Wr_Mask (ULONG)(0xfffffdff)
+/*#define MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_GLBLUCAST_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_GLBLUCAST_Wr_Mask) | ((data & MAC_PMTCSR_GLBLUCAST_Mask)<<9));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_GLBLUCAST_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 9) & MAC_PMTCSR_GLBLUCAST_Mask);\
+#define MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 24) & MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_RWKPRCVD_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKPRCVD_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_RWKPRCVD_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 23) & MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_RWKPRCVD_Wr_Mask (ULONG)(0xffffffbf)
+/*#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKPRCVD_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_RWKPRCVD_Wr_Mask) | ((data & MAC_PMTCSR_RWKPRCVD_Mask)<<6));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_RWKPRCVD_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 6) & MAC_PMTCSR_RWKPRCVD_Mask);\
+#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 22) & MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_MGKPRCVD_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_MGKPRCVD_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_MGKPRCVD_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+#define MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 21) & MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_MGKPRCVD_Wr_Mask (ULONG)(0xffffffdf)
+/*#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_MGKPRCVD_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_MGKPRCVD_Wr_Mask) | ((data & MAC_PMTCSR_MGKPRCVD_Mask)<<5));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_MGKPRCVD_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 5) & MAC_PMTCSR_MGKPRCVD_Mask);\
+#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 20) & MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_RWKPKTEN_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKPKTEN_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_RWKPKTEN_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+#define MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 19) & MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_RWKPKTEN_Wr_Mask (ULONG)(0xfffffffb)
+/*#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_RWKPKTEN_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_RWKPKTEN_Wr_Mask) | ((data & MAC_PMTCSR_RWKPKTEN_Mask)<<2));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_RWKPKTEN_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 2) & MAC_PMTCSR_RWKPKTEN_Mask);\
+#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 18) & MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_MGKPKTEN_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_MGKPKTEN_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_MGKPKTEN_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 17) & MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_MGKPKTEN_Wr_Mask (ULONG)(0xfffffffd)
+/*#define MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_MGKPKTEN_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_MGKPKTEN_Wr_Mask) | ((data & MAC_PMTCSR_MGKPKTEN_Mask)<<1));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_MGKPKTEN_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 1) & MAC_PMTCSR_MGKPKTEN_Mask);\
+#define MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 16) & MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_Mask);\
 } while(0)
 
-/*#define MAC_PMTCSR_PWRDWN_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_PWRDWN_Mask (ULONG)(0x1)
+#define MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_Mask (ULONG)(0x1)
 
-/*#define MAC_PMTCSR_PWRDWN_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+#define MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 13) & MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_Mask);\
+} while(0)
 
-#define MAC_PMTCSR_PWRDWN_Wr_Mask (ULONG)(0xfffffffe)
+/*#define MMC_IPC_INTR_RX_RXICMP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_PMTCSR_PWRDWN_UdfWr(data) do {\
-		ULONG v;\
-		MAC_PMTCSR_RgRd(v);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_27))|((( 0) & (MAC_PMTCSR_Mask_27))<<27);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_10))|((( 0) & (MAC_PMTCSR_Mask_10))<<10);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_7))|((( 0) & (MAC_PMTCSR_Mask_7))<<7);\
-		v = (v & (MAC_PMTCSR_RES_Wr_Mask_3))|((( 0) & (MAC_PMTCSR_Mask_3))<<3);\
-		v = ((v & MAC_PMTCSR_PWRDWN_Wr_Mask) | ((data & MAC_PMTCSR_PWRDWN_Mask)<<0));\
-		MAC_PMTCSR_RgWr(v);\
-} while(0)
+#define MMC_IPC_INTR_RX_RXICMP_GD_FRMS_Mask (ULONG)(0x1)
 
-#define MAC_PMTCSR_PWRDWN_UdfRd(data) do {\
-		MAC_PMTCSR_RgRd(data);\
-		data = ((data >> 0) & MAC_PMTCSR_PWRDWN_Mask);\
+#define MMC_IPC_INTR_RX_RXICMP_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 12) & MMC_IPC_INTR_RX_RXICMP_GD_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXICMP_ERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x884))
+#define MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXICMP_ERR_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXICMP_ERR_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 11) & MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_Mask);\
 } while(0)
 
-#define MMC_RXICMP_ERR_OCTETS_RXICMP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_RXICMP_ERR_OCTETS_RgRd(data);\
+/*#define MMC_IPC_INTR_RX_RXTCP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_RX_RXTCP_GD_FRMS_Mask (ULONG)(0x1)
+
+#define MMC_IPC_INTR_RX_RXTCP_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 10) & MMC_IPC_INTR_RX_RXTCP_GD_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXICMP_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x880))
+#define MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXICMP_GD_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXICMP_GD_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 9) & MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_Mask);\
 } while(0)
 
-#define MMC_RXICMP_GD_OCTETS_RXICMP_GD_OCTETS_UdfRd(data) do {\
-		MMC_RXICMP_GD_OCTETS_RgRd(data);\
+/*#define MMC_IPC_INTR_RX_RXUDP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_RX_RXUDP_GD_FRMS_Mask (ULONG)(0x1)
+
+#define MMC_IPC_INTR_RX_RXUDP_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 8) & MMC_IPC_INTR_RX_RXUDP_GD_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXTCP_ERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x87c))
+#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXTCP_ERR_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXTCP_ERR_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 7) & MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_Mask);\
 } while(0)
 
-#define MMC_RXTCP_ERR_OCTETS_RXTCP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_RXTCP_ERR_OCTETS_RgRd(data);\
+/*#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(0x1)
+
+#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 6) & MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXTCP_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x878))
+#define MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXTCP_GD_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXTCP_GD_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 5) & MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_Mask);\
 } while(0)
 
-#define MMC_RXTCP_GD_OCTETS_RXTCP_GD_OCTETS_UdfRd(data) do {\
-		MMC_RXTCP_GD_OCTETS_RgRd(data);\
+/*#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(0x1)
+
+#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 4) & MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXUDP_ERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x874))
+#define MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXUDP_ERR_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXUDP_ERR_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 3) & MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_Mask);\
 } while(0)
 
-#define MMC_RXUDP_ERR_OCTETS_RXUDP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_RXUDP_ERR_OCTETS_RgRd(data);\
+/*#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(0x1)
+
+#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 2) & MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXUDP_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x870))
+#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXUDP_GD_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXUDP_GD_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 1) & MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_Mask);\
 } while(0)
 
-#define MMC_RXUDP_GD_OCTETS_RXUDP_GD_OCTETS_UdfRd(data) do {\
-		MMC_RXUDP_GD_OCTETS_RgRd(data);\
+/*#define MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_Mask (ULONG)(0x1)
+
+#define MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_RX_RgRd(data);\
+		data = ((data >> 0) & MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_Mask);\
 } while(0)
 
 
-#define MMC_RXIPV6_NOPAY_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x86c))
+#define MMC_IPC_INTR_MASK_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x800))
 
-#define MMC_RXIPV6_NOPAY_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV6_NOPAY_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RgWr(data) do {\
+		iowrite32(data, (void *)MMC_IPC_INTR_MASK_RX_RgOffAddr);\
 } while(0)
 
-#define MMC_RXIPV6_NOPAY_OCTETS_RXIPV6_NOPAY_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV6_NOPAY_OCTETS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_IPC_INTR_MASK_RX_RgOffAddr);\
 } while(0)
 
+/*#define  MMC_IPC_INTR_MASK_RX_Mask_30 (ULONG)(~(~0<<(2)))*/
 
-#define MMC_RXIPV6_HDRERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x868))
+#define  MMC_IPC_INTR_MASK_RX_Mask_30 (ULONG)(0x3)
 
-#define MMC_RXIPV6_HDRERR_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV6_HDRERR_OCTETS_RgOffAddr);\
-} while(0)
+/*#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
 
-#define MMC_RXIPV6_HDRERR_OCTETS_RXIPV6_HDRERR_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV6_HDRERR_OCTETS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
 
+/*#define  MMC_IPC_INTR_MASK_RX_Mask_14 (ULONG)(~(~0<<(2)))*/
 
-#define MMC_RXIPV6_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x864))
+#define  MMC_IPC_INTR_MASK_RX_Mask_14 (ULONG)(0x3)
 
-#define MMC_RXIPV6_GD_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV6_GD_OCTETS_RgOffAddr);\
-} while(0)
+/*#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(2)))<<(14)))*/
 
-#define MMC_RXIPV6_GD_OCTETS_RXIPV6_GD_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV6_GD_OCTETS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14 (ULONG)(0xffff3fff)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV4_UDSBL_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x860))
-
-#define MMC_RXIPV4_UDSBL_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_UDSBL_OCTETS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV4_UDSBL_OCTETS_RXIPV4_UDSBL_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV4_UDSBL_OCTETS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (29)))*/
 
-#define MMC_RXIPV4_FRAG_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x85c))
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Wr_Mask (ULONG)(0xdfffffff)
 
-#define MMC_RXIPV4_FRAG_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_FRAG_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask)<<29));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXIPV4_FRAG_OCTETS_RXIPV4_FRAG_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV4_FRAG_OCTETS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 29) & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV4_NOPAY_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x858))
-
-#define MMC_RXIPV4_NOPAY_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_NOPAY_OCTETS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV4_NOPAY_OCTETS_RXIPV4_NOPAY_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV4_NOPAY_OCTETS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (28)))*/
 
-#define MMC_RXIPV4_HDRERR_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x854))
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Wr_Mask (ULONG)(0xefffffff)
 
-#define MMC_RXIPV4_HDRERR_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_HDRERR_OCTETS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask)<<28));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXIPV4_HDRERR_OCTETS_RXIPV4_HDRERR_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV4_HDRERR_OCTETS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 28) & MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV4_GD_OCTETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x850))
-
-#define MMC_RXIPV4_GD_OCTETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_GD_OCTETS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV4_GD_OCTETS_RXIPV4_GD_OCTETS_UdfRd(data) do {\
-		MMC_RXIPV4_GD_OCTETS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (27)))*/
 
-#define MMC_RXICMP_ERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x844))
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Wr_Mask (ULONG)(0xf7ffffff)
 
-#define MMC_RXICMP_ERR_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXICMP_ERR_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask)<<27));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXICMP_ERR_PKTS_RXICMP_ERR_PKTS_UdfRd(data) do {\
-		MMC_RXICMP_ERR_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 27) & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXICMP_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x840))
-
-#define MMC_RXICMP_GD_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXICMP_GD_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXICMP_GD_PKTS_RXICMP_GD_PKTS_UdfRd(data) do {\
-		MMC_RXICMP_GD_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (26)))*/
 
-#define MMC_RXTCP_ERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x83c))
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Wr_Mask (ULONG)(0xfbffffff)
 
-#define MMC_RXTCP_ERR_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXTCP_ERR_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask)<<26));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXTCP_ERR_PKTS_RXTCP_ERR_PKTS_UdfRd(data) do {\
-		MMC_RXTCP_ERR_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 26) & MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXTCP_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x838))
-
-#define MMC_RXTCP_GD_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXTCP_GD_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXTCP_GD_PKTS_RXTCP_GD_PKTS_UdfRd(data) do {\
-		MMC_RXTCP_GD_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (25)))*/
 
-#define MMC_RXUDP_ERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x834))
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Wr_Mask (ULONG)(0xfdffffff)
 
-#define MMC_RXUDP_ERR_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXUDP_ERR_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask)<<25));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXUDP_ERR_PKTS_RXUDP_ERR_PKTS_UdfRd(data) do {\
-		MMC_RXUDP_ERR_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 25) & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXUDP_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x830))
-
-#define MMC_RXUDP_GD_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXUDP_GD_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXUDP_GD_PKTS_RXUDP_GD_PKTS_UdfRd(data) do {\
-		MMC_RXUDP_GD_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define MMC_RXIPV6_NOPAY_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x82c))
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Wr_Mask (ULONG)(0xfeffffff)
 
-#define MMC_RXIPV6_NOPAY_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV6_NOPAY_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask)<<24));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXIPV6_NOPAY_PKTS_RXIPV6_NOPAY_PKTS_UdfRd(data) do {\
-		MMC_RXIPV6_NOPAY_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 24) & MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV6_HDRERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x828))
-
-#define MMC_RXIPV6_HDRERR_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV6_HDRERR_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV6_HDRERR_PKTS_RXIPV6_HDRERR_PKTS_UdfRd(data) do {\
-		MMC_RXIPV6_HDRERR_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
 
-#define MMC_RXIPV6_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x824))
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Wr_Mask (ULONG)(0xff7fffff)
 
-#define MMC_RXIPV6_GD_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV6_GD_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask)<<23));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXIPV6_GD_PKTS_RXIPV6_GD_PKTS_UdfRd(data) do {\
-		MMC_RXIPV6_GD_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 23) & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV4_UBSBL_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x820))
-
-#define MMC_RXIPV4_UBSBL_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_UBSBL_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV4_UBSBL_PKTS_RXIPV4_UBSBL_PKTS_UdfRd(data) do {\
-		MMC_RXIPV4_UBSBL_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
 
-#define MMC_RXIPV4_FRAG_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x81c))
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Wr_Mask (ULONG)(0xffbfffff)
 
-#define MMC_RXIPV4_FRAG_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_FRAG_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask)<<22));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXIPV4_FRAG_PKTS_RXIPV4_FRAG_PKTS_UdfRd(data) do {\
-		MMC_RXIPV4_FRAG_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 22) & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV4_NOPAY_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x818))
-
-#define MMC_RXIPV4_NOPAY_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_NOPAY_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV4_NOPAY_PKTS_RXIPV4_NOPAY_PKTS_UdfRd(data) do {\
-		MMC_RXIPV4_NOPAY_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
 
-#define MMC_RXIPV4_HDRERR_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x814))
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Wr_Mask (ULONG)(0xffdfffff)
 
-#define MMC_RXIPV4_HDRERR_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_HDRERR_PKTS_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask)<<21));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXIPV4_HDRERR_PKTS_RXIPV4_HDRERR_PKTS_UdfRd(data) do {\
-		MMC_RXIPV4_HDRERR_PKTS_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 21) & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXIPV4_GD_PKTS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x810))
-
-#define MMC_RXIPV4_GD_PKTS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXIPV4_GD_PKTS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXIPV4_GD_PKTS_RXIPV4_GD_PKTS_UdfRd(data) do {\
-		MMC_RXIPV4_GD_PKTS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
 
-#define MMC_RXCTRLPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7e4))
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Wr_Mask (ULONG)(0xffefffff)
 
-#define MMC_RXCTRLPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXCTRLPACKETS_G_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask)<<20));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXCTRLPACKETS_G_RXCTRLPACKETS_G_UdfRd(data) do {\
-		MMC_RXCTRLPACKETS_G_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 20) & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXRCVERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7e0))
-
-#define MMC_RXRCVERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXRCVERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_RXRCVERROR_RXRCVERROR_UdfRd(data) do {\
-		MMC_RXRCVERROR_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
 
-#define MMC_RXWATCHDOGERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7dc))
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Wr_Mask (ULONG)(0xfff7ffff)
 
-#define MMC_RXWATCHDOGERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXWATCHDOGERROR_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask)<<19));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXWATCHDOGERROR_RXWATCHDOGERROR_UdfRd(data) do {\
-		MMC_RXWATCHDOGERROR_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 19) & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXVLANPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7d8))
-
-#define MMC_RXVLANPACKETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXVLANPACKETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_RXVLANPACKETS_GB_RXVLANPACKETS_GB_UdfRd(data) do {\
-		MMC_RXVLANPACKETS_GB_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
 
-#define MMC_RXFIFOOVERFLOW_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7d4))
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Wr_Mask (ULONG)(0xfffbffff)
 
-#define MMC_RXFIFOOVERFLOW_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXFIFOOVERFLOW_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask)<<18));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXFIFOOVERFLOW_RXFIFOOVERFLOW_UdfRd(data) do {\
-		MMC_RXFIFOOVERFLOW_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 18) & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXPAUSEPACKETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7d0))
-
-#define MMC_RXPAUSEPACKETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXPAUSEPACKETS_RgOffAddr);\
-} while(0)
-
-#define MMC_RXPAUSEPACKETS_RXPAUSEPACKETS_UdfRd(data) do {\
-		MMC_RXPAUSEPACKETS_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
 
-#define MMC_RXOUTOFRANGETYPE_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7cc))
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Wr_Mask (ULONG)(0xfffdffff)
 
-#define MMC_RXOUTOFRANGETYPE_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXOUTOFRANGETYPE_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask)<<17));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXOUTOFRANGETYPE_RXOUTOFRANGETYPE_UdfRd(data) do {\
-		MMC_RXOUTOFRANGETYPE_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 17) & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXLENGTHERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7c8))
-
-#define MMC_RXLENGTHERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXLENGTHERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_RXLENGTHERROR_RXLENGTHERROR_UdfRd(data) do {\
-		MMC_RXLENGTHERROR_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
 
-#define MMC_RXUNICASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7c4))
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Wr_Mask (ULONG)(0xfffeffff)
 
-#define MMC_RXUNICASTPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXUNICASTPACKETS_G_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask)<<16));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXUNICASTPACKETS_G_RXUNICASTPACKETS_G_UdfRd(data) do {\
-		MMC_RXUNICASTPACKETS_G_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 16) & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RX1024TOMAXOCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7c0))
-
-#define MMC_RX1024TOMAXOCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RX1024TOMAXOCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_RX1024TOMAXOCTETS_GB_RX1024TOMAXOCTETS_GB_UdfRd(data) do {\
-		MMC_RX1024TOMAXOCTETS_GB_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define MMC_RX512TO1023OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7bc))
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Wr_Mask (ULONG)(0xffffdfff)
 
-#define MMC_RX512TO1023OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RX512TO1023OCTETS_GB_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask)<<13));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RX512TO1023OCTETS_GB_RX512TO1023OCTETS_GB_UdfRd(data) do {\
-		MMC_RX512TO1023OCTETS_GB_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 13) & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RX256TO511OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7b8))
-
-#define MMC_RX256TO511OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RX256TO511OCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_RX256TO511OCTETS_GB_RX256TO511OCTETS_GB_UdfRd(data) do {\
-		MMC_RX256TO511OCTETS_GB_RgRd(data);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define MMC_RX128TO255OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7b4))
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Wr_Mask (ULONG)(0xffffefff)
 
-#define MMC_RX128TO255OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RX128TO255OCTETS_GB_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask)<<12));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RX128TO255OCTETS_GB_RX128TO255OCTETS_GB_UdfRd(data) do {\
-		MMC_RX128TO255OCTETS_GB_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 12) & MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RX65TO127OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7b0))
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RX65TO127OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RX65TO127OCTETS_GB_RgOffAddr);\
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Wr_Mask (ULONG)(0xfffff7ff)
+
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask)<<11));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RX65TO127OCTETS_GB_RX65TO127OCTETS_GB_UdfRd(data) do {\
-		MMC_RX65TO127OCTETS_GB_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 11) & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RX64OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7ac))
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RX64OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RX64OCTETS_GB_RgOffAddr);\
+/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Wr_Mask (ULONG)(0xfffffbff)
+
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask)<<10));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RX64OCTETS_GB_RX64OCTETS_GB_UdfRd(data) do {\
-		MMC_RX64OCTETS_GB_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 10) & MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXOVERSIZE_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7a8))
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXOVERSIZE_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXOVERSIZE_G_RgOffAddr);\
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Wr_Mask (ULONG)(0xfffffdff)
+
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask)<<9));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define MMC_RXOVERSIZE_G_RXOVERSIZE_G_UdfRd(data) do {\
-		MMC_RXOVERSIZE_G_RgRd(data);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 9) & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MMC_RXUNDERSIZE_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7a4))
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask (ULONG)(0x1)
 
-#define MMC_RXUNDERSIZE_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXUNDERSIZE_G_RgOffAddr);\
-} while(0)
-
-#define MMC_RXUNDERSIZE_G_RXUNDERSIZE_G_UdfRd(data) do {\
-		MMC_RXUNDERSIZE_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXJABBERERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x7a0))
-
-#define MMC_RXJABBERERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXJABBERERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_RXJABBERERROR_RXJABBERERROR_UdfRd(data) do {\
-		MMC_RXJABBERERROR_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXRUNTERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x79c))
-
-#define MMC_RXRUNTERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXRUNTERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_RXRUNTERROR_RXRUNTERROR_UdfRd(data) do {\
-		MMC_RXRUNTERROR_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXALIGNMENTERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x798))
-
-#define MMC_RXALIGNMENTERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXALIGNMENTERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_RXALIGNMENTERROR_RXALIGNMENTERROR_UdfRd(data) do {\
-		MMC_RXALIGNMENTERROR_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXCRCERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x794))
-
-#define MMC_RXCRCERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXCRCERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_RXCRCERROR_RXCRCERROR_UdfRd(data) do {\
-		MMC_RXCRCERROR_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXMULTICASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x790))
-
-#define MMC_RXMULTICASTPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXMULTICASTPACKETS_G_RgOffAddr);\
-} while(0)
-
-#define MMC_RXMULTICASTPACKETS_G_RXMULTICASTPACKETS_G_UdfRd(data) do {\
-		MMC_RXMULTICASTPACKETS_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXBROADCASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x78c))
-
-#define MMC_RXBROADCASTPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXBROADCASTPACKETS_G_RgOffAddr);\
-} while(0)
-
-#define MMC_RXBROADCASTPACKETS_G_RXBROADCASTPACKETS_G_UdfRd(data) do {\
-		MMC_RXBROADCASTPACKETS_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXOCTETCOUNT_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x788))
-
-#define MMC_RXOCTETCOUNT_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXOCTETCOUNT_G_RgOffAddr);\
-} while(0)
-
-#define MMC_RXOCTETCOUNT_G_RXOCTETCOUNT_G_UdfRd(data) do {\
-		MMC_RXOCTETCOUNT_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXOCTETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x784))
-
-#define MMC_RXOCTETCOUNT_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXOCTETCOUNT_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_RXOCTETCOUNT_GB_RXOCTETCOUNT_GB_UdfRd(data) do {\
-		MMC_RXOCTETCOUNT_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_RXPACKETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x780))
-
-#define MMC_RXPACKETCOUNT_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_RXPACKETCOUNT_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_RXPACKETCOUNT_GB_RXPACKETCOUNT_GB_UdfRd(data) do {\
-		MMC_RXPACKETCOUNT_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXOVERSIZE_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x778))
-
-#define MMC_TXOVERSIZE_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXOVERSIZE_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXOVERSIZE_G_TXOVERSIZE_G_UdfRd(data) do {\
-		MMC_TXOVERSIZE_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXVLANPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x774))
-
-#define MMC_TXVLANPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXVLANPACKETS_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXVLANPACKETS_G_TXVLANPACKETS_G_UdfRd(data) do {\
-		MMC_TXVLANPACKETS_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXPAUSEPACKETS_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x770))
-
-#define MMC_TXPAUSEPACKETS_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXPAUSEPACKETS_RgOffAddr);\
-} while(0)
-
-#define MMC_TXPAUSEPACKETS_TXPAUSEPACKETS_UdfRd(data) do {\
-		MMC_TXPAUSEPACKETS_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXEXCESSDEF_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x76c))
-
-#define MMC_TXEXCESSDEF_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXEXCESSDEF_RgOffAddr);\
-} while(0)
-
-#define MMC_TXEXCESSDEF_TXEXCESSDEF_UdfRd(data) do {\
-		MMC_TXEXCESSDEF_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXPACKETSCOUNT_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x768))
-
-#define MMC_TXPACKETSCOUNT_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXPACKETSCOUNT_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXPACKETSCOUNT_G_TXPACKETSCOUNT_G_UdfRd(data) do {\
-		MMC_TXPACKETSCOUNT_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXOCTETCOUNT_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x764))
-
-#define MMC_TXOCTETCOUNT_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXOCTETCOUNT_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXOCTETCOUNT_G_TXOCTETCOUNT_G_UdfRd(data) do {\
-		MMC_TXOCTETCOUNT_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXCARRIERERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x760))
-
-#define MMC_TXCARRIERERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXCARRIERERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_TXCARRIERERROR_TXCARRIERERROR_UdfRd(data) do {\
-		MMC_TXCARRIERERROR_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXEXESSCOL_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x75c))
-
-#define MMC_TXEXESSCOL_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXEXESSCOL_RgOffAddr);\
-} while(0)
-
-#define MMC_TXEXESSCOL_TXEXESSCOL_UdfRd(data) do {\
-		MMC_TXEXESSCOL_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXLATECOL_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x758))
-
-#define MMC_TXLATECOL_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXLATECOL_RgOffAddr);\
-} while(0)
-
-#define MMC_TXLATECOL_TXLATECOL_UdfRd(data) do {\
-		MMC_TXLATECOL_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXDEFERRED_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x754))
-
-#define MMC_TXDEFERRED_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXDEFERRED_RgOffAddr);\
-} while(0)
-
-#define MMC_TXDEFERRED_TXDEFERRED_UdfRd(data) do {\
-		MMC_TXDEFERRED_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXMULTICOL_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x750))
-
-#define MMC_TXMULTICOL_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXMULTICOL_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXMULTICOL_G_TXMULTICOL_G_UdfRd(data) do {\
-		MMC_TXMULTICOL_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXSINGLECOL_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x74c))
-
-#define MMC_TXSINGLECOL_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXSINGLECOL_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXSINGLECOL_G_TXSINGLECOL_G_UdfRd(data) do {\
-		MMC_TXSINGLECOL_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXUNDERFLOWERROR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x748))
-
-#define MMC_TXUNDERFLOWERROR_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXUNDERFLOWERROR_RgOffAddr);\
-} while(0)
-
-#define MMC_TXUNDERFLOWERROR_TXUNDERFLOWERROR_UdfRd(data) do {\
-		MMC_TXUNDERFLOWERROR_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXBROADCASTPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x744))
-
-#define MMC_TXBROADCASTPACKETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXBROADCASTPACKETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TXBROADCASTPACKETS_GB_TXBROADCASTPACKETS_GB_UdfRd(data) do {\
-		MMC_TXBROADCASTPACKETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXMULTICASTPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x740))
-
-#define MMC_TXMULTICASTPACKETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXMULTICASTPACKETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TXMULTICASTPACKETS_GB_TXMULTICASTPACKETS_GB_UdfRd(data) do {\
-		MMC_TXMULTICASTPACKETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXUNICASTPACKETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x73c))
-
-#define MMC_TXUNICASTPACKETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXUNICASTPACKETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TXUNICASTPACKETS_GB_TXUNICASTPACKETS_GB_UdfRd(data) do {\
-		MMC_TXUNICASTPACKETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TX1024TOMAXOCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x738))
-
-#define MMC_TX1024TOMAXOCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TX1024TOMAXOCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TX1024TOMAXOCTETS_GB_TX1024TOMAXOCTETS_GB_UdfRd(data) do {\
-		MMC_TX1024TOMAXOCTETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TX512TO1023OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x734))
-
-#define MMC_TX512TO1023OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TX512TO1023OCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TX512TO1023OCTETS_GB_TX512TO1023OCTETS_GB_UdfRd(data) do {\
-		MMC_TX512TO1023OCTETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TX256TO511OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x730))
-
-#define MMC_TX256TO511OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TX256TO511OCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TX256TO511OCTETS_GB_TX256TO511OCTETS_GB_UdfRd(data) do {\
-		MMC_TX256TO511OCTETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TX128TO255OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x72c))
-
-#define MMC_TX128TO255OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TX128TO255OCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TX128TO255OCTETS_GB_TX128TO255OCTETS_GB_UdfRd(data) do {\
-		MMC_TX128TO255OCTETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TX65TO127OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x728))
-
-#define MMC_TX65TO127OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TX65TO127OCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TX65TO127OCTETS_GB_TX65TO127OCTETS_GB_UdfRd(data) do {\
-		MMC_TX65TO127OCTETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TX64OCTETS_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x724))
-
-#define MMC_TX64OCTETS_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TX64OCTETS_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TX64OCTETS_GB_TX64OCTETS_GB_UdfRd(data) do {\
-		MMC_TX64OCTETS_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXMULTICASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x720))
-
-#define MMC_TXMULTICASTPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXMULTICASTPACKETS_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXMULTICASTPACKETS_G_TXMULTICASTPACKETS_G_UdfRd(data) do {\
-		MMC_TXMULTICASTPACKETS_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXBROADCASTPACKETS_G_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x71c))
-
-#define MMC_TXBROADCASTPACKETS_G_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXBROADCASTPACKETS_G_RgOffAddr);\
-} while(0)
-
-#define MMC_TXBROADCASTPACKETS_G_TXBROADCASTPACKETS_G_UdfRd(data) do {\
-		MMC_TXBROADCASTPACKETS_G_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXPACKETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x718))
-
-#define MMC_TXPACKETCOUNT_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXPACKETCOUNT_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TXPACKETCOUNT_GB_TXPACKETCOUNT_GB_UdfRd(data) do {\
-		MMC_TXPACKETCOUNT_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_TXOCTETCOUNT_GB_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x714))
-
-#define MMC_TXOCTETCOUNT_GB_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_TXOCTETCOUNT_GB_RgOffAddr);\
-} while(0)
-
-#define MMC_TXOCTETCOUNT_GB_TXOCTETCOUNT_GB_UdfRd(data) do {\
-		MMC_TXOCTETCOUNT_GB_RgRd(data);\
-} while(0)
-
-
-#define MMC_IPC_INTR_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x808))
-
-#define MMC_IPC_INTR_RX_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_IPC_INTR_RX_RgOffAddr);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 29) & MMC_IPC_INTR_RX_RXICMP_ERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 28) & MMC_IPC_INTR_RX_RXICMP_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 27) & MMC_IPC_INTR_RX_RXTCP_ERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 26) & MMC_IPC_INTR_RX_RXTCP_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 25) & MMC_IPC_INTR_RX_RXUDP_ERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 24) & MMC_IPC_INTR_RX_RXUDP_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 23) & MMC_IPC_INTR_RX_RXIPV6_NOPAY_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 22) & MMC_IPC_INTR_RX_RXIPV6_HDRERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 21) & MMC_IPC_INTR_RX_RXIPV6_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 20) & MMC_IPC_INTR_RX_RXIPV4_UDSBL_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 19) & MMC_IPC_INTR_RX_RXIPV4_FRAG_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 18) & MMC_IPC_INTR_RX_RXIPV4_NOPAY_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 17) & MMC_IPC_INTR_RX_RXIPV4_HDRERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 16) & MMC_IPC_INTR_RX_RXIPV4_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 13) & MMC_IPC_INTR_RX_RXICMP_ERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXICMP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXICMP_GD_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXICMP_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 12) & MMC_IPC_INTR_RX_RXICMP_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 11) & MMC_IPC_INTR_RX_RXTCP_ERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXTCP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXTCP_GD_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXTCP_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 10) & MMC_IPC_INTR_RX_RXTCP_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 9) & MMC_IPC_INTR_RX_RXUDP_ERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXUDP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXUDP_GD_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXUDP_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 8) & MMC_IPC_INTR_RX_RXUDP_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 7) & MMC_IPC_INTR_RX_RXIPV6_NOPAY_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 6) & MMC_IPC_INTR_RX_RXIPV6_HDRERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 5) & MMC_IPC_INTR_RX_RXIPV6_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 4) & MMC_IPC_INTR_RX_RXIPV4_UDSBL_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 3) & MMC_IPC_INTR_RX_RXIPV4_FRAG_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 2) & MMC_IPC_INTR_RX_RXIPV4_NOPAY_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 1) & MMC_IPC_INTR_RX_RXIPV4_HDRERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_Mask (ULONG)(0x1)
-
-#define MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_RX_RgRd(data);\
-		data = ((data >> 0) & MMC_IPC_INTR_RX_RXIPV4_GD_FRMS_Mask);\
-} while(0)
-
-
-#define MMC_IPC_INTR_MASK_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x800))
-
-#define MMC_IPC_INTR_MASK_RX_RgWr(data) do {\
-		iowrite32(data, (void *)MMC_IPC_INTR_MASK_RX_RgOffAddr);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_IPC_INTR_MASK_RX_RgOffAddr);\
-} while(0)
-
-/*#define  MMC_IPC_INTR_MASK_RX_Mask_30 (ULONG)(~(~0<<(2)))*/
-
-#define  MMC_IPC_INTR_MASK_RX_Mask_30 (ULONG)(0x3)
-
-/*#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
-
-/*#define  MMC_IPC_INTR_MASK_RX_Mask_14 (ULONG)(~(~0<<(2)))*/
-
-#define  MMC_IPC_INTR_MASK_RX_Mask_14 (ULONG)(0x3)
-
-/*#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(2)))<<(14)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14 (ULONG)(0xffff3fff)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (29)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Wr_Mask (ULONG)(0xdfffffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask)<<29));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 29) & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (28)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Wr_Mask (ULONG)(0xefffffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask)<<28));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 28) & MMC_IPC_INTR_MASK_RX_RXICMP_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (27)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Wr_Mask (ULONG)(0xf7ffffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask)<<27));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 27) & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (26)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Wr_Mask (ULONG)(0xfbffffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask)<<26));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 26) & MMC_IPC_INTR_MASK_RX_RXTCP_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (25)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Wr_Mask (ULONG)(0xfdffffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask)<<25));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 25) & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Wr_Mask (ULONG)(0xfeffffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask)<<24));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 24) & MMC_IPC_INTR_MASK_RX_RXUDP_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Wr_Mask (ULONG)(0xff7fffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask)<<23));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 23) & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Wr_Mask (ULONG)(0xffbfffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask)<<22));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 22) & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Wr_Mask (ULONG)(0xffdfffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask)<<21));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 21) & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Wr_Mask (ULONG)(0xffefffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask)<<20));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 20) & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Wr_Mask (ULONG)(0xfff7ffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask)<<19));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 19) & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Wr_Mask (ULONG)(0xfffbffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask)<<18));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 18) & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Wr_Mask (ULONG)(0xfffdffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask)<<17));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 17) & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Wr_Mask (ULONG)(0xfffeffff)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask)<<16));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 16) & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_OCTETS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Wr_Mask (ULONG)(0xffffdfff)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask)<<13));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 13) & MMC_IPC_INTR_MASK_RX_RXICMP_ERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Wr_Mask (ULONG)(0xffffefff)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask)<<12));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 12) & MMC_IPC_INTR_MASK_RX_RXICMP_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Wr_Mask (ULONG)(0xfffff7ff)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask)<<11));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 11) & MMC_IPC_INTR_MASK_RX_RXTCP_ERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Wr_Mask (ULONG)(0xfffffbff)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask)<<10));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 10) & MMC_IPC_INTR_MASK_RX_RXTCP_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Wr_Mask (ULONG)(0xfffffdff)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask)<<9));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 9) & MMC_IPC_INTR_MASK_RX_RXUDP_ERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Wr_Mask (ULONG)(0xfffffeff)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask)<<8));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 8) & MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Wr_Mask (ULONG)(0xffffff7f)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask)<<7));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 7) & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Wr_Mask (ULONG)(0xffffffbf)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask)<<6));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 6) & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Wr_Mask (ULONG)(0xffffffdf)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask)<<5));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 5) & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Wr_Mask (ULONG)(0xffffffef)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask)<<4));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 4) & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Wr_Mask (ULONG)(0xfffffff7)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask)<<3));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 3) & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Wr_Mask (ULONG)(0xfffffffb)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask)<<2));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 2) & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask)<<1));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 1) & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask);\
-} while(0)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask (ULONG)(0x1)
-
-/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_IPC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
-		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
-		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask)<<0));\
-		MMC_IPC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_UdfRd(data) do {\
-		MMC_IPC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 0) & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask);\
-} while(0)
-
-
-#define MMC_INTR_MASK_TX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x710))
-
-#define MMC_INTR_MASK_TX_RgWr(data) do {\
-		iowrite32(data, (void *)MMC_INTR_MASK_TX_RgOffAddr);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_INTR_MASK_TX_RgOffAddr);\
-} while(0)
-
-/*#define  MMC_INTR_MASK_TX_Mask_25 (ULONG)(~(~0<<(7)))*/
-
-#define  MMC_INTR_MASK_TX_Mask_25 (ULONG)(0x7f)
-
-/*#define MMC_INTR_MASK_TX_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
-
-#define MMC_INTR_MASK_TX_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
-
-/*#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
-
-#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Wr_Mask (ULONG)(0xfeffffff)
-
-#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXVLANFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask)<<24));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 24) & MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
-
-#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Wr_Mask (ULONG)(0xff7fffff)
-
-#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXPAUSEFRAMES_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask)<<23));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 23) & MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXEXCESSDEF_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXEXCESSDEF_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXEXCESSDEF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
-
-#define MMC_INTR_MASK_TX_TXEXCESSDEF_Wr_Mask (ULONG)(0xffbfffff)
-
-#define MMC_INTR_MASK_TX_TXEXCESSDEF_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXEXCESSDEF_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXEXCESSDEF_Mask)<<22));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXEXCESSDEF_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 22) & MMC_INTR_MASK_TX_TXEXCESSDEF_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Wr_Mask (ULONG)(0xffdfffff)
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask)<<21));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 21) & MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Wr_Mask (ULONG)(0xffefffff)
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask)<<20));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 20) & MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXCARRIERERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXCARRIERERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXCARRIERERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
-
-#define MMC_INTR_MASK_TX_TXCARRIERERROR_Wr_Mask (ULONG)(0xfff7ffff)
-
-#define MMC_INTR_MASK_TX_TXCARRIERERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXCARRIERERROR_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXCARRIERERROR_Mask)<<19));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXCARRIERERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 19) & MMC_INTR_MASK_TX_TXCARRIERERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXEXESSCOL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXEXESSCOL_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXEXESSCOL_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
-
-#define MMC_INTR_MASK_TX_TXEXESSCOL_Wr_Mask (ULONG)(0xfffbffff)
-
-#define MMC_INTR_MASK_TX_TXEXESSCOL_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXEXESSCOL_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXEXESSCOL_Mask)<<18));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXEXESSCOL_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 18) & MMC_INTR_MASK_TX_TXEXESSCOL_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXLATECOL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXLATECOL_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXLATECOL_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
-
-#define MMC_INTR_MASK_TX_TXLATECOL_Wr_Mask (ULONG)(0xfffdffff)
-
-#define MMC_INTR_MASK_TX_TXLATECOL_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXLATECOL_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXLATECOL_Mask)<<17));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXLATECOL_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 17) & MMC_INTR_MASK_TX_TXLATECOL_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXDEFERRED_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXDEFERRED_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXDEFERRED_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
-
-#define MMC_INTR_MASK_TX_TXDEFERRED_Wr_Mask (ULONG)(0xfffeffff)
-
-#define MMC_INTR_MASK_TX_TXDEFERRED_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXDEFERRED_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXDEFERRED_Mask)<<16));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXDEFERRED_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 16) & MMC_INTR_MASK_TX_TXDEFERRED_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXMULTICOL_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXMULTICOL_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXMULTICOL_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
-
-#define MMC_INTR_MASK_TX_TXMULTICOL_G_Wr_Mask (ULONG)(0xffff7fff)
-
-#define MMC_INTR_MASK_TX_TXMULTICOL_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXMULTICOL_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXMULTICOL_G_Mask)<<15));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXMULTICOL_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 15) & MMC_INTR_MASK_TX_TXMULTICOL_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Wr_Mask (ULONG)(0xffffbfff)
-
-#define MMC_INTR_MASK_TX_TXSINGLECOL_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXSINGLECOL_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask)<<14));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXSINGLECOL_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 14) & MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Wr_Mask (ULONG)(0xffffdfff)
-
-#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask)<<13));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 13) & MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Wr_Mask (ULONG)(0xffffefff)
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask)<<12));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 12) & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Wr_Mask (ULONG)(0xfffff7ff)
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask)<<11));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 11) & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
-
-#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Wr_Mask (ULONG)(0xfffffbff)
-
-#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask)<<10));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 10) & MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
-
-#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(0xfffffdff)
-
-#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask)<<9));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 9) & MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
-
-#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Wr_Mask (ULONG)(0xfffffeff)
-
-#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask)<<8));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 8) & MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Wr_Mask (ULONG)(0xffffff7f)
-
-#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask)<<7));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 7) & MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Wr_Mask (ULONG)(0xffffffbf)
-
-#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask)<<6));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 6) & MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Wr_Mask (ULONG)(0xffffffdf)
-
-#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask)<<5));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 5) & MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Wr_Mask (ULONG)(0xffffffef)
-
-#define MMC_INTR_MASK_TX_TX64OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TX64OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask)<<4));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TX64OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 4) & MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Wr_Mask (ULONG)(0xfffffff7)
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask)<<3));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 3) & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Wr_Mask (ULONG)(0xfffffffb)
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask)<<2));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 2) & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask)<<1));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 1) & MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_TX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
-		v = ((v & MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask)<<0));\
-		MMC_INTR_MASK_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_TX_RgRd(data);\
-		data = ((data >> 0) & MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask);\
-} while(0)
-
-
-#define MMC_INTR_MASK_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x70c))
-
-#define MMC_INTR_MASK_RX_RgWr(data) do {\
-		iowrite32(data, (void *)MMC_INTR_MASK_RX_RgOffAddr);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_INTR_MASK_RX_RgOffAddr);\
-} while(0)
-
-/*#define  MMC_INTR_MASK_RX_Mask_24 (ULONG)(~(~0<<(8)))*/
-
-#define  MMC_INTR_MASK_RX_Mask_24 (ULONG)(0xff)
-
-/*#define MMC_INTR_MASK_RX_RES_Wr_Mask_24 (ULONG)(~((~(~0<<(8)))<<(24)))*/
-
-#define MMC_INTR_MASK_RX_RES_Wr_Mask_24 (ULONG)(0xffffff)
-
-/*#define MMC_INTR_MASK_RX_RXWATCHDOG_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXWATCHDOG_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXWATCHDOG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
-
-#define MMC_INTR_MASK_RX_RXWATCHDOG_Wr_Mask (ULONG)(0xff7fffff)
-
-#define MMC_INTR_MASK_RX_RXWATCHDOG_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXWATCHDOG_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXWATCHDOG_Mask)<<23));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXWATCHDOG_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 23) & MMC_INTR_MASK_RX_RXWATCHDOG_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
-
-#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Wr_Mask (ULONG)(0xffbfffff)
-
-#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask)<<22));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 22) & MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
-
-#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Wr_Mask (ULONG)(0xffdfffff)
-
-#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask)<<21));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 21) & MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
-
-#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Wr_Mask (ULONG)(0xffefffff)
-
-#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXPAUSEFRAMES_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask)<<20));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 20) & MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
-
-#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Wr_Mask (ULONG)(0xfff7ffff)
-
-#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask)<<19));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 19) & MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXLENGTHERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXLENGTHERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXLENGTHERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
-
-#define MMC_INTR_MASK_RX_RXLENGTHERROR_Wr_Mask (ULONG)(0xfffbffff)
-
-#define MMC_INTR_MASK_RX_RXLENGTHERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXLENGTHERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXLENGTHERROR_Mask)<<18));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXLENGTHERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 18) & MMC_INTR_MASK_RX_RXLENGTHERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
-
-#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Wr_Mask (ULONG)(0xfffdffff)
-
-#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask)<<17));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 17) & MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
-
-#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(0xfffeffff)
-
-#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask)<<16));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 16) & MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
-
-#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Wr_Mask (ULONG)(0xffff7fff)
-
-#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask)<<15));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 15) & MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Wr_Mask (ULONG)(0xffffbfff)
-
-#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask)<<14));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 14) & MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Wr_Mask (ULONG)(0xffffdfff)
-
-#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask)<<13));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 13) & MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
-
-#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Wr_Mask (ULONG)(0xffffefff)
-
-#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask)<<12));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 12) & MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Wr_Mask (ULONG)(0xfffff7ff)
-
-#define MMC_INTR_MASK_RX_RX64OCTETS_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RX64OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask)<<11));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RX64OCTETS_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 11) & MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
-
-#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Wr_Mask (ULONG)(0xfffffbff)
-
-#define MMC_INTR_MASK_RX_RXOVERSIZE_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXOVERSIZE_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask)<<10));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXOVERSIZE_G_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 10) & MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
-
-#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Wr_Mask (ULONG)(0xfffffdff)
-
-#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXUNDERSIZE_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask)<<9));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 9) & MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXJABBERERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXJABBERERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXJABBERERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
-
-#define MMC_INTR_MASK_RX_RXJABBERERROR_Wr_Mask (ULONG)(0xfffffeff)
-
-#define MMC_INTR_MASK_RX_RXJABBERERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXJABBERERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXJABBERERROR_Mask)<<8));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXJABBERERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 8) & MMC_INTR_MASK_RX_RXJABBERERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXRUNTERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXRUNTERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXRUNTERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define MMC_INTR_MASK_RX_RXRUNTERROR_Wr_Mask (ULONG)(0xffffff7f)
-
-#define MMC_INTR_MASK_RX_RXRUNTERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXRUNTERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXRUNTERROR_Mask)<<7));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXRUNTERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 7) & MMC_INTR_MASK_RX_RXRUNTERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Wr_Mask (ULONG)(0xffffffbf)
-
-#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXALIGNMENTERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask)<<6));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 6) & MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXCRCERROR_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXCRCERROR_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXCRCERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MMC_INTR_MASK_RX_RXCRCERROR_Wr_Mask (ULONG)(0xffffffdf)
-
-#define MMC_INTR_MASK_RX_RXCRCERROR_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXCRCERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXCRCERROR_Mask)<<5));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXCRCERROR_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 5) & MMC_INTR_MASK_RX_RXCRCERROR_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Wr_Mask (ULONG)(0xffffffef)
-
-#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask)<<4));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 4) & MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Wr_Mask (ULONG)(0xfffffff7)
-
-#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask)<<3));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 3) & MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Wr_Mask (ULONG)(0xfffffffb)
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask)<<2));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 2) & MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask)<<1));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 1) & MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask);\
-} while(0)
-
-/*#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_MASK_RX_RgRd(v);\
-		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
-		v = ((v & MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask)<<0));\
-		MMC_INTR_MASK_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_UdfRd(data) do {\
-		MMC_INTR_MASK_RX_RgRd(data);\
-		data = ((data >> 0) & MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask);\
-} while(0)
-
-
-#define MMC_INTR_TX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x708))
-
-#define MMC_INTR_TX_RgWr(data) do {\
-		iowrite32(data, (void *)MMC_INTR_TX_RgOffAddr);\
-} while(0)
-
-#define MMC_INTR_TX_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_INTR_TX_RgOffAddr);\
-} while(0)
-
-/*#define  MMC_INTR_TX_Mask_26 (ULONG)(~(~0<<(6)))*/
-
-#define  MMC_INTR_TX_Mask_26 (ULONG)(0x3f)
-
-/*#define MMC_INTR_TX_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
-
-#define MMC_INTR_TX_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
-
-/*#define MMC_INTR_TX_TXOSIZEGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXOSIZEGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXOSIZEGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (25)))*/
-
-#define MMC_INTR_TX_TXOSIZEGPIS_Wr_Mask (ULONG)(0xfdffffff)
-
-#define MMC_INTR_TX_TXOSIZEGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXOSIZEGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXOSIZEGPIS_Mask)<<25));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXOSIZEGPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 25) & MMC_INTR_TX_TXOSIZEGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXVLANGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXVLANGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXVLANGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
-
-#define MMC_INTR_TX_TXVLANGPIS_Wr_Mask (ULONG)(0xfeffffff)
-
-#define MMC_INTR_TX_TXVLANGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXVLANGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXVLANGPIS_Mask)<<24));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXVLANGPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 24) & MMC_INTR_TX_TXVLANGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXPAUSPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXPAUSPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXPAUSPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
-
-#define MMC_INTR_TX_TXPAUSPIS_Wr_Mask (ULONG)(0xff7fffff)
-
-#define MMC_INTR_TX_TXPAUSPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXPAUSPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXPAUSPIS_Mask)<<23));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXPAUSPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 23) & MMC_INTR_TX_TXPAUSPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXEXDEFPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXEXDEFPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXEXDEFPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
-
-#define MMC_INTR_TX_TXEXDEFPIS_Wr_Mask (ULONG)(0xffbfffff)
-
-#define MMC_INTR_TX_TXEXDEFPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXEXDEFPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXEXDEFPIS_Mask)<<22));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXEXDEFPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 22) & MMC_INTR_TX_TXEXDEFPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXGPKTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXGPKTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXGPKTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
-
-#define MMC_INTR_TX_TXGPKTIS_Wr_Mask (ULONG)(0xffdfffff)
-
-#define MMC_INTR_TX_TXGPKTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXGPKTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGPKTIS_Mask)<<21));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXGPKTIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 21) & MMC_INTR_TX_TXGPKTIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXGOCTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXGOCTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXGOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
-
-#define MMC_INTR_TX_TXGOCTIS_Wr_Mask (ULONG)(0xffefffff)
-
-#define MMC_INTR_TX_TXGOCTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXGOCTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGOCTIS_Mask)<<20));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXGOCTIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 20) & MMC_INTR_TX_TXGOCTIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXCARERPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXCARERPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXCARERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
-
-#define MMC_INTR_TX_TXCARERPIS_Wr_Mask (ULONG)(0xfff7ffff)
-
-#define MMC_INTR_TX_TXCARERPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXCARERPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXCARERPIS_Mask)<<19));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXCARERPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 19) & MMC_INTR_TX_TXCARERPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXEXCOLPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXEXCOLPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXEXCOLPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
-
-#define MMC_INTR_TX_TXEXCOLPIS_Wr_Mask (ULONG)(0xfffbffff)
-
-#define MMC_INTR_TX_TXEXCOLPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXEXCOLPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXEXCOLPIS_Mask)<<18));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXEXCOLPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 18) & MMC_INTR_TX_TXEXCOLPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXLATCOLPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXLATCOLPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXLATCOLPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
-
-#define MMC_INTR_TX_TXLATCOLPIS_Wr_Mask (ULONG)(0xfffdffff)
-
-#define MMC_INTR_TX_TXLATCOLPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXLATCOLPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXLATCOLPIS_Mask)<<17));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXLATCOLPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 17) & MMC_INTR_TX_TXLATCOLPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXDEFPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXDEFPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXDEFPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
-
-#define MMC_INTR_TX_TXDEFPIS_Wr_Mask (ULONG)(0xfffeffff)
-
-#define MMC_INTR_TX_TXDEFPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXDEFPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXDEFPIS_Mask)<<16));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXDEFPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 16) & MMC_INTR_TX_TXDEFPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXMCOLGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXMCOLGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXMCOLGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
-
-#define MMC_INTR_TX_TXMCOLGPIS_Wr_Mask (ULONG)(0xffff7fff)
-
-#define MMC_INTR_TX_TXMCOLGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXMCOLGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXMCOLGPIS_Mask)<<15));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXMCOLGPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 15) & MMC_INTR_TX_TXMCOLGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXSCOLGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXSCOLGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXSCOLGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define MMC_INTR_TX_TXSCOLGPIS_Wr_Mask (ULONG)(0xffffbfff)
-
-#define MMC_INTR_TX_TXSCOLGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXSCOLGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXSCOLGPIS_Mask)<<14));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXSCOLGPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 14) & MMC_INTR_TX_TXSCOLGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXUFLOWERFIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXUFLOWERFIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXUFLOWERFIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define MMC_INTR_TX_TXUFLOWERFIS_Wr_Mask (ULONG)(0xffffdfff)
-
-#define MMC_INTR_TX_TXUFLOWERFIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXUFLOWERFIS_Wr_Mask) | ((data & MMC_INTR_TX_TXUFLOWERFIS_Mask)<<13));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXUFLOWERFIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 13) & MMC_INTR_TX_TXUFLOWERFIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXBCGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXBCGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXBCGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
-
-#define MMC_INTR_TX_TXBCGBPIS_Wr_Mask (ULONG)(0xffffefff)
-
-#define MMC_INTR_TX_TXBCGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXBCGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXBCGBPIS_Mask)<<12));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXBCGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 12) & MMC_INTR_TX_TXBCGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXMCGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXMCGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXMCGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define MMC_INTR_TX_TXMCGBPIS_Wr_Mask (ULONG)(0xfffff7ff)
-
-#define MMC_INTR_TX_TXMCGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXMCGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXMCGBPIS_Mask)<<11));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXMCGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 11) & MMC_INTR_TX_TXMCGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXUCGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXUCGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXUCGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
-
-#define MMC_INTR_TX_TXUCGBPIS_Wr_Mask (ULONG)(0xfffffbff)
-
-#define MMC_INTR_TX_TXUCGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXUCGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXUCGBPIS_Mask)<<10));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXUCGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 10) & MMC_INTR_TX_TXUCGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
-
-#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Wr_Mask (ULONG)(0xfffffdff)
-
-#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TX1024TMAXOCTGBFIS_Wr_Mask) | ((data & MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask)<<9));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 9) & MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TX512T1023OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TX512T1023OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TX512T1023OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
-
-#define MMC_INTR_TX_TX512T1023OCTGBPIS_Wr_Mask (ULONG)(0xfffffeff)
-
-#define MMC_INTR_TX_TX512T1023OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TX512T1023OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX512T1023OCTGBPIS_Mask)<<8));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TX512T1023OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 8) & MMC_INTR_TX_TX512T1023OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TX256T511OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TX256T511OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TX256T511OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define MMC_INTR_TX_TX256T511OCTGBPIS_Wr_Mask (ULONG)(0xffffff7f)
-
-#define MMC_INTR_TX_TX256T511OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TX256T511OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX256T511OCTGBPIS_Mask)<<7));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TX256T511OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 7) & MMC_INTR_TX_TX256T511OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TX128T255OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TX128T255OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TX128T255OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MMC_INTR_TX_TX128T255OCTGBPIS_Wr_Mask (ULONG)(0xffffffbf)
-
-#define MMC_INTR_TX_TX128T255OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TX128T255OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX128T255OCTGBPIS_Mask)<<6));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TX128T255OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 6) & MMC_INTR_TX_TX128T255OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TX65T127OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TX65T127OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TX65T127OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MMC_INTR_TX_TX65T127OCTGBPIS_Wr_Mask (ULONG)(0xffffffdf)
-
-#define MMC_INTR_TX_TX65T127OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TX65T127OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX65T127OCTGBPIS_Mask)<<5));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TX65T127OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 5) & MMC_INTR_TX_TX65T127OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TX64OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TX64OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TX64OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MMC_INTR_TX_TX64OCTGBPIS_Wr_Mask (ULONG)(0xffffffef)
-
-#define MMC_INTR_TX_TX64OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TX64OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX64OCTGBPIS_Mask)<<4));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TX64OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 4) & MMC_INTR_TX_TX64OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXMCGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXMCGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXMCGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MMC_INTR_TX_TXMCGPIS_Wr_Mask (ULONG)(0xfffffff7)
-
-#define MMC_INTR_TX_TXMCGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXMCGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXMCGPIS_Mask)<<3));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXMCGPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 3) & MMC_INTR_TX_TXMCGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXBCGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXBCGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXBCGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define MMC_INTR_TX_TXBCGPIS_Wr_Mask (ULONG)(0xfffffffb)
-
-#define MMC_INTR_TX_TXBCGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXBCGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXBCGPIS_Mask)<<2));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXBCGPIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 2) & MMC_INTR_TX_TXBCGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXGBPKTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXGBPKTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXGBPKTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MMC_INTR_TX_TXGBPKTIS_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MMC_INTR_TX_TXGBPKTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXGBPKTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGBPKTIS_Mask)<<1));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXGBPKTIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 1) & MMC_INTR_TX_TXGBPKTIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_TX_TXGBOCTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_TX_TXGBOCTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_TX_TXGBOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MMC_INTR_TX_TXGBOCTIS_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MMC_INTR_TX_TXGBOCTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_TX_RgRd(v);\
-		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_TX_TXGBOCTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGBOCTIS_Mask)<<0));\
-		MMC_INTR_TX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_TX_TXGBOCTIS_UdfRd(data) do {\
-		MMC_INTR_TX_RgRd(data);\
-		data = ((data >> 0) & MMC_INTR_TX_TXGBOCTIS_Mask);\
-} while(0)
-
-
-#define MMC_INTR_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x704))
-
-#define MMC_INTR_RX_RgWr(data) do {\
-		iowrite32(data, (void *)MMC_INTR_RX_RgOffAddr);\
-} while(0)
-
-#define MMC_INTR_RX_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_INTR_RX_RgOffAddr);\
-} while(0)
-
-/*#define  MMC_INTR_RX_Mask_26 (ULONG)(~(~0<<(6)))*/
-
-#define  MMC_INTR_RX_Mask_26 (ULONG)(0x3f)
-
-/*#define MMC_INTR_RX_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
-
-#define MMC_INTR_RX_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
-
-/*#define MMC_INTR_RX_RXCTRLPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXCTRLPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXCTRLPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (25)))*/
-
-#define MMC_INTR_RX_RXCTRLPIS_Wr_Mask (ULONG)(0xfdffffff)
-
-#define MMC_INTR_RX_RXCTRLPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXCTRLPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXCTRLPIS_Mask)<<25));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXCTRLPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 25) & MMC_INTR_RX_RXCTRLPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXRCVERRPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXRCVERRPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXRCVERRPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
-
-#define MMC_INTR_RX_RXRCVERRPIS_Wr_Mask (ULONG)(0xfeffffff)
-
-#define MMC_INTR_RX_RXRCVERRPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXRCVERRPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXRCVERRPIS_Mask)<<24));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXRCVERRPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 24) & MMC_INTR_RX_RXRCVERRPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXWDOGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXWDOGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXWDOGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
-
-#define MMC_INTR_RX_RXWDOGPIS_Wr_Mask (ULONG)(0xff7fffff)
-
-#define MMC_INTR_RX_RXWDOGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXWDOGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXWDOGPIS_Mask)<<23));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXWDOGPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 23) & MMC_INTR_RX_RXWDOGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXVLANGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXVLANGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXVLANGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
-
-#define MMC_INTR_RX_RXVLANGBPIS_Wr_Mask (ULONG)(0xffbfffff)
-
-#define MMC_INTR_RX_RXVLANGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXVLANGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXVLANGBPIS_Mask)<<22));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXVLANGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 22) & MMC_INTR_RX_RXVLANGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXFOVPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXFOVPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXFOVPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
-
-#define MMC_INTR_RX_RXFOVPIS_Wr_Mask (ULONG)(0xffdfffff)
-
-#define MMC_INTR_RX_RXFOVPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXFOVPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXFOVPIS_Mask)<<21));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXFOVPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 21) & MMC_INTR_RX_RXFOVPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXPAUSPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXPAUSPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXPAUSPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
-
-#define MMC_INTR_RX_RXPAUSPIS_Wr_Mask (ULONG)(0xffefffff)
-
-#define MMC_INTR_RX_RXPAUSPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXPAUSPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXPAUSPIS_Mask)<<20));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXPAUSPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 20) & MMC_INTR_RX_RXPAUSPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXORANGEPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXORANGEPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXORANGEPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
-
-#define MMC_INTR_RX_RXORANGEPIS_Wr_Mask (ULONG)(0xfff7ffff)
-
-#define MMC_INTR_RX_RXORANGEPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXORANGEPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXORANGEPIS_Mask)<<19));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXORANGEPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 19) & MMC_INTR_RX_RXORANGEPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXLENERPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXLENERPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXLENERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
-
-#define MMC_INTR_RX_RXLENERPIS_Wr_Mask (ULONG)(0xfffbffff)
-
-#define MMC_INTR_RX_RXLENERPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXLENERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXLENERPIS_Mask)<<18));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXLENERPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 18) & MMC_INTR_RX_RXLENERPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXUCBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXUCBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXUCBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
-
-#define MMC_INTR_RX_RXUCBPIS_Wr_Mask (ULONG)(0xfffdffff)
-
-#define MMC_INTR_RX_RXUCBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXUCBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXUCBPIS_Mask)<<17));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXUCBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 17) & MMC_INTR_RX_RXUCBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
-
-#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Wr_Mask (ULONG)(0xfffeffff)
-
-#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RX1024TMAXOCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask)<<16));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 16) & MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RX512T1023OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RX512T1023OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RX512T1023OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
-
-#define MMC_INTR_RX_RX512T1023OCTGBPIS_Wr_Mask (ULONG)(0xffff7fff)
-
-#define MMC_INTR_RX_RX512T1023OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RX512T1023OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX512T1023OCTGBPIS_Mask)<<15));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RX512T1023OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 15) & MMC_INTR_RX_RX512T1023OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RX256T511OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RX256T511OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RX256T511OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define MMC_INTR_RX_RX256T511OCTGBPIS_Wr_Mask (ULONG)(0xffffbfff)
-
-#define MMC_INTR_RX_RX256T511OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RX256T511OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX256T511OCTGBPIS_Mask)<<14));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RX256T511OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 14) & MMC_INTR_RX_RX256T511OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RX128T255OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RX128T255OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RX128T255OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define MMC_INTR_RX_RX128T255OCTGBPIS_Wr_Mask (ULONG)(0xffffdfff)
-
-#define MMC_INTR_RX_RX128T255OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RX128T255OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX128T255OCTGBPIS_Mask)<<13));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RX128T255OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 13) & MMC_INTR_RX_RX128T255OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RX65T127OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RX65T127OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RX65T127OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
-
-#define MMC_INTR_RX_RX65T127OCTGBPIS_Wr_Mask (ULONG)(0xffffefff)
-
-#define MMC_INTR_RX_RX65T127OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RX65T127OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX65T127OCTGBPIS_Mask)<<12));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RX65T127OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 12) & MMC_INTR_RX_RX65T127OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RX64OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RX64OCTGBPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RX64OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define MMC_INTR_RX_RX64OCTGBPIS_Wr_Mask (ULONG)(0xfffff7ff)
-
-#define MMC_INTR_RX_RX64OCTGBPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RX64OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX64OCTGBPIS_Mask)<<11));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RX64OCTGBPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 11) & MMC_INTR_RX_RX64OCTGBPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXOSIZEGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXOSIZEGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXOSIZEGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
-
-#define MMC_INTR_RX_RXOSIZEGPIS_Wr_Mask (ULONG)(0xfffffbff)
-
-#define MMC_INTR_RX_RXOSIZEGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXOSIZEGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXOSIZEGPIS_Mask)<<10));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXOSIZEGPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 10) & MMC_INTR_RX_RXOSIZEGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXUSIZEGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXUSIZEGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXUSIZEGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
-
-#define MMC_INTR_RX_RXUSIZEGPIS_Wr_Mask (ULONG)(0xfffffdff)
-
-#define MMC_INTR_RX_RXUSIZEGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXUSIZEGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXUSIZEGPIS_Mask)<<9));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXUSIZEGPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 9) & MMC_INTR_RX_RXUSIZEGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXJABERPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXJABERPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXJABERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
-
-#define MMC_INTR_RX_RXJABERPIS_Wr_Mask (ULONG)(0xfffffeff)
-
-#define MMC_INTR_RX_RXJABERPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXJABERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXJABERPIS_Mask)<<8));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXJABERPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 8) & MMC_INTR_RX_RXJABERPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXRUNTRIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXRUNTRIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXRUNTRIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define MMC_INTR_RX_RXRUNTRIS_Wr_Mask (ULONG)(0xffffff7f)
-
-#define MMC_INTR_RX_RXRUNTRIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXRUNTRIS_Wr_Mask) | ((data & MMC_INTR_RX_RXRUNTRIS_Mask)<<7));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXRUNTRIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 7) & MMC_INTR_RX_RXRUNTRIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXALGNERPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXALGNERPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXALGNERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define MMC_INTR_RX_RXALGNERPIS_Wr_Mask (ULONG)(0xffffffbf)
-
-#define MMC_INTR_RX_RXALGNERPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXALGNERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXALGNERPIS_Mask)<<6));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXALGNERPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 6) & MMC_INTR_RX_RXALGNERPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXCRCERPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXCRCERPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXCRCERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MMC_INTR_RX_RXCRCERPIS_Wr_Mask (ULONG)(0xffffffdf)
-
-#define MMC_INTR_RX_RXCRCERPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXCRCERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXCRCERPIS_Mask)<<5));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXCRCERPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 5) & MMC_INTR_RX_RXCRCERPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXMCGPIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXMCGPIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXMCGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MMC_INTR_RX_RXMCGPIS_Wr_Mask (ULONG)(0xffffffef)
-
-#define MMC_INTR_RX_RXMCGPIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXMCGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXMCGPIS_Mask)<<4));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXMCGPIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 4) & MMC_INTR_RX_RXMCGPIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXBCGTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXBCGTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXBCGTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MMC_INTR_RX_RXBCGTIS_Wr_Mask (ULONG)(0xfffffff7)
-
-#define MMC_INTR_RX_RXBCGTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXBCGTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXBCGTIS_Mask)<<3));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXBCGTIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 3) & MMC_INTR_RX_RXBCGTIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXGOCTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXGOCTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXGOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define MMC_INTR_RX_RXGOCTIS_Wr_Mask (ULONG)(0xfffffffb)
-
-#define MMC_INTR_RX_RXGOCTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXGOCTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXGOCTIS_Mask)<<2));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXGOCTIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 2) & MMC_INTR_RX_RXGOCTIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXGBOCTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXGBOCTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXGBOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MMC_INTR_RX_RXGBOCTIS_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MMC_INTR_RX_RXGBOCTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXGBOCTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXGBOCTIS_Mask)<<1));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXGBOCTIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 1) & MMC_INTR_RX_RXGBOCTIS_Mask);\
-} while(0)
-
-/*#define MMC_INTR_RX_RXGBPKTIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_INTR_RX_RXGBPKTIS_Mask (ULONG)(0x1)
-
-/*#define MMC_INTR_RX_RXGBPKTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MMC_INTR_RX_RXGBPKTIS_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MMC_INTR_RX_RXGBPKTIS_UdfWr(data) do {\
-		ULONG v;\
-		MMC_INTR_RX_RgRd(v);\
-		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
-		v = ((v & MMC_INTR_RX_RXGBPKTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXGBPKTIS_Mask)<<0));\
-		MMC_INTR_RX_RgWr(v);\
-} while(0)
-
-#define MMC_INTR_RX_RXGBPKTIS_UdfRd(data) do {\
-		MMC_INTR_RX_RgRd(data);\
-		data = ((data >> 0) & MMC_INTR_RX_RXGBPKTIS_Mask);\
-} while(0)
-
-
-#define MMC_CNTRL_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x700))
-
-#define MMC_CNTRL_RgWr(data) do {\
-		iowrite32(data, (void *)MMC_CNTRL_RgOffAddr);\
-} while(0)
-
-#define MMC_CNTRL_RgRd(data) do {\
-		(data) = ioread32((void *)MMC_CNTRL_RgOffAddr);\
-} while(0)
-
-/*#define  MMC_CNTRL_Mask_9 (ULONG)(~(~0<<(23)))*/
-
-#define  MMC_CNTRL_Mask_9 (ULONG)(0x7fffff)
-
-/*#define MMC_CNTRL_RES_Wr_Mask_9 (ULONG)(~((~(~0<<(23)))<<(9)))*/
-
-#define MMC_CNTRL_RES_Wr_Mask_9 (ULONG)(0x1ff)
-
-/*#define  MMC_CNTRL_Mask_6 (ULONG)(~(~0<<(2)))*/
-
-#define  MMC_CNTRL_Mask_6 (ULONG)(0x3)
-
-/*#define MMC_CNTRL_RES_Wr_Mask_6 (ULONG)(~((~(~0<<(2)))<<(6)))*/
-
-#define MMC_CNTRL_RES_Wr_Mask_6 (ULONG)(0xffffff3f)
-
-/*#define MMC_CNTRL_UCDBC_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_UCDBC_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_UCDBC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
-
-#define MMC_CNTRL_UCDBC_Wr_Mask (ULONG)(0xfffffeff)
-
-#define MMC_CNTRL_UCDBC_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_UCDBC_Wr_Mask) | ((data & MMC_CNTRL_UCDBC_Mask)<<8));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_UCDBC_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 8) & MMC_CNTRL_UCDBC_Mask);\
-} while(0)
-
-/*#define MMC_CNTRL_CNPRSTLVL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_CNPRSTLVL_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_CNPRSTLVL_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
-
-#define MMC_CNTRL_CNPRSTLVL_Wr_Mask (ULONG)(0xffffffdf)
-
-#define MMC_CNTRL_CNPRSTLVL_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_CNPRSTLVL_Wr_Mask) | ((data & MMC_CNTRL_CNPRSTLVL_Mask)<<5));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_CNPRSTLVL_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 5) & MMC_CNTRL_CNPRSTLVL_Mask);\
-} while(0)
-
-/*#define MMC_CNTRL_CNTPRST_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_CNTPRST_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_CNTPRST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MMC_CNTRL_CNTPRST_Wr_Mask (ULONG)(0xffffffef)
-
-#define MMC_CNTRL_CNTPRST_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_CNTPRST_Wr_Mask) | ((data & MMC_CNTRL_CNTPRST_Mask)<<4));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_CNTPRST_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 4) & MMC_CNTRL_CNTPRST_Mask);\
-} while(0)
-
-/*#define MMC_CNTRL_CNTFREEZ_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_CNTFREEZ_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_CNTFREEZ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
-
-#define MMC_CNTRL_CNTFREEZ_Wr_Mask (ULONG)(0xfffffff7)
-
-#define MMC_CNTRL_CNTFREEZ_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_CNTFREEZ_Wr_Mask) | ((data & MMC_CNTRL_CNTFREEZ_Mask)<<3));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_CNTFREEZ_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 3) & MMC_CNTRL_CNTFREEZ_Mask);\
-} while(0)
-
-/*#define MMC_CNTRL_RSTONRD_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_RSTONRD_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_RSTONRD_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define MMC_CNTRL_RSTONRD_Wr_Mask (ULONG)(0xfffffffb)
-
-#define MMC_CNTRL_RSTONRD_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_RSTONRD_Wr_Mask) | ((data & MMC_CNTRL_RSTONRD_Mask)<<2));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_RSTONRD_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 2) & MMC_CNTRL_RSTONRD_Mask);\
-} while(0)
-
-/*#define MMC_CNTRL_CNTSTOPRO_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_CNTSTOPRO_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_CNTSTOPRO_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MMC_CNTRL_CNTSTOPRO_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MMC_CNTRL_CNTSTOPRO_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_CNTSTOPRO_Wr_Mask) | ((data & MMC_CNTRL_CNTSTOPRO_Mask)<<1));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_CNTSTOPRO_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 1) & MMC_CNTRL_CNTSTOPRO_Mask);\
-} while(0)
-
-/*#define MMC_CNTRL_CNTRST_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MMC_CNTRL_CNTRST_Mask (ULONG)(0x1)
-
-/*#define MMC_CNTRL_CNTRST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MMC_CNTRL_CNTRST_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MMC_CNTRL_CNTRST_UdfWr(data) do {\
-		ULONG v;\
-		MMC_CNTRL_RgRd(v);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
-		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
-		v = ((v & MMC_CNTRL_CNTRST_Wr_Mask) | ((data & MMC_CNTRL_CNTRST_Mask)<<0));\
-		MMC_CNTRL_RgWr(v);\
-} while(0)
-
-#define MMC_CNTRL_CNTRST_UdfRd(data) do {\
-		MMC_CNTRL_RgRd(data);\
-		data = ((data >> 0) & MMC_CNTRL_CNTRST_Mask);\
-} while(0)
-
-
-#define MAC_MA1LR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x30c))
-
-#define MAC_MA1LR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_MA1LR_RgOffAddr);\
-} while(0)
-
-#define MAC_MA1LR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_MA1LR_RgOffAddr);\
-} while(0)
-
-#define MAC_MA1LR_ADDRLO_UdfWr(data) do {\
-		MAC_MA1LR_RgWr(data);\
-} while(0)
-
-#define MAC_MA1LR_ADDRLO_UdfRd(data) do {\
-		MAC_MA1LR_RgRd(data);\
-} while(0)
-
-
-#define MAC_MA1HR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x308))
-
-#define MAC_MA1HR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_MA1HR_RgOffAddr);\
-} while(0)
-
-#define MAC_MA1HR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_MA1HR_RgOffAddr);\
-} while(0)
-
-/*#define  MAC_MA1HR_Mask_19 (ULONG)(~(~0<<(5)))*/
-
-#define  MAC_MA1HR_Mask_19 (ULONG)(0x1f)
-
-/*#define MAC_MA1HR_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(5)))<<(19)))*/
-
-#define MAC_MA1HR_RES_Wr_Mask_19 (ULONG)(0xff07ffff)
-
-/*#define MAC_MA1HR_AE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_MA1HR_AE_Mask (ULONG)(0x1)
-
-/*#define MAC_MA1HR_AE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (31)))*/
-
-#define MAC_MA1HR_AE_Wr_Mask (ULONG)(0x7fffffff)
-
-#define MAC_MA1HR_AE_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA1HR_RgRd(v);\
-		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
-		v = ((v & MAC_MA1HR_AE_Wr_Mask) | ((data & MAC_MA1HR_AE_Mask)<<31));\
-		MAC_MA1HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA1HR_AE_UdfRd(data) do {\
-		MAC_MA1HR_RgRd(data);\
-		data = ((data >> 31) & MAC_MA1HR_AE_Mask);\
-} while(0)
-
-/*#define MAC_MA1HR_SA_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_MA1HR_SA_Mask (ULONG)(0x1)
-
-/*#define MAC_MA1HR_SA_Wr_Mask (ULONG)(~((~(~0 << (1))) << (30)))*/
-
-#define MAC_MA1HR_SA_Wr_Mask (ULONG)(0xbfffffff)
-
-#define MAC_MA1HR_SA_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA1HR_RgRd(v);\
-		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
-		v = ((v & MAC_MA1HR_SA_Wr_Mask) | ((data & MAC_MA1HR_SA_Mask)<<30));\
-		MAC_MA1HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA1HR_SA_UdfRd(data) do {\
-		MAC_MA1HR_RgRd(data);\
-		data = ((data >> 30) & MAC_MA1HR_SA_Mask);\
-} while(0)
-
-/*#define MAC_MA1HR_MBC_Mask (ULONG)(~(~0<<(6)))*/
-
-#define MAC_MA1HR_MBC_Mask (ULONG)(0x3f)
-
-/*#define MAC_MA1HR_MBC_Wr_Mask (ULONG)(~((~(~0 << (6))) << (24)))*/
-
-#define MAC_MA1HR_MBC_Wr_Mask (ULONG)(0xc0ffffff)
-
-#define MAC_MA1HR_MBC_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA1HR_RgRd(v);\
-		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
-		v = ((v & MAC_MA1HR_MBC_Wr_Mask) | ((data & MAC_MA1HR_MBC_Mask)<<24));\
-		MAC_MA1HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA1HR_MBC_UdfRd(data) do {\
-		MAC_MA1HR_RgRd(data);\
-		data = ((data >> 24) & MAC_MA1HR_MBC_Mask);\
-} while(0)
-
-/*#define MAC_MA1HR_DCS_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MAC_MA1HR_DCS_Mask (ULONG)(0x7)
-
-/*#define MAC_MA1HR_DCS_Wr_Mask (ULONG)(~((~(~0 << (3))) << (16)))*/
-
-#define MAC_MA1HR_DCS_Wr_Mask (ULONG)(0xfff8ffff)
-
-#define MAC_MA1HR_DCS_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA1HR_RgRd(v);\
-		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
-		v = ((v & MAC_MA1HR_DCS_Wr_Mask) | ((data & MAC_MA1HR_DCS_Mask)<<16));\
-		MAC_MA1HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA1HR_DCS_UdfRd(data) do {\
-		MAC_MA1HR_RgRd(data);\
-		data = ((data >> 16) & MAC_MA1HR_DCS_Mask);\
-} while(0)
-
-/*#define MAC_MA1HR_ADDRHI_Mask (ULONG)(~(~0<<(16)))*/
-
-#define MAC_MA1HR_ADDRHI_Mask (ULONG)(0xffff)
-
-/*#define MAC_MA1HR_ADDRHI_Wr_Mask (ULONG)(~((~(~0 << (16))) << (0)))*/
-
-#define MAC_MA1HR_ADDRHI_Wr_Mask (ULONG)(0xffff0000)
-
-#define MAC_MA1HR_ADDRHI_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA1HR_RgRd(v);\
-		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
-		v = ((v & MAC_MA1HR_ADDRHI_Wr_Mask) | ((data & MAC_MA1HR_ADDRHI_Mask)<<0));\
-		MAC_MA1HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA1HR_ADDRHI_UdfRd(data) do {\
-		MAC_MA1HR_RgRd(data);\
-		data = ((data >> 0) & MAC_MA1HR_ADDRHI_Mask);\
-} while(0)
-
-
-#define MAC_MA0LR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x304))
-
-#define MAC_MA0LR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_MA0LR_RgOffAddr);\
-} while(0)
-
-#define MAC_MA0LR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_MA0LR_RgOffAddr);\
-} while(0)
-
-#define MAC_MA0LR_ADDRLO_UdfWr(data) do {\
-		MAC_MA0LR_RgWr(data);\
-} while(0)
-
-#define MAC_MA0LR_ADDRLO_UdfRd(data) do {\
-		MAC_MA0LR_RgRd(data);\
-} while(0)
-
-
-#define MAC_MA0HR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x300))
-
-#define MAC_MA0HR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_MA0HR_RgOffAddr);\
-} while(0)
-
-#define MAC_MA0HR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_MA0HR_RgOffAddr);\
-} while(0)
-
-/*#define  MAC_MA0HR_Mask_19 (ULONG)(~(~0<<(12)))*/
-
-#define  MAC_MA0HR_Mask_19 (ULONG)(0xfff)
-
-/*#define MAC_MA0HR_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(12)))<<(19)))*/
-
-#define MAC_MA0HR_RES_Wr_Mask_19 (ULONG)(0x8007ffff)
-
-/*#define MAC_MA0HR_AE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_MA0HR_AE_Mask (ULONG)(0x1)
-
-/*#define MAC_MA0HR_AE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (31)))*/
-
-#define MAC_MA0HR_AE_Wr_Mask (ULONG)(0x7fffffff)
-
-#define MAC_MA0HR_AE_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA0HR_RgRd(v);\
-		v = (v & (MAC_MA0HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA0HR_Mask_19))<<19);\
-		v = ((v & MAC_MA0HR_AE_Wr_Mask) | ((data & MAC_MA0HR_AE_Mask)<<31));\
-		MAC_MA0HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA0HR_AE_UdfRd(data) do {\
-		MAC_MA0HR_RgRd(data);\
-		data = ((data >> 31) & MAC_MA0HR_AE_Mask);\
-} while(0)
-
-/*#define MAC_MA0HR_DCS_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MAC_MA0HR_DCS_Mask (ULONG)(0x7)
-
-/*#define MAC_MA0HR_DCS_Wr_Mask (ULONG)(~((~(~0 << (3))) << (16)))*/
-
-#define MAC_MA0HR_DCS_Wr_Mask (ULONG)(0xfff8ffff)
-
-#define MAC_MA0HR_DCS_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA0HR_RgRd(v);\
-		v = (v & (MAC_MA0HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA0HR_Mask_19))<<19);\
-		v = ((v & MAC_MA0HR_DCS_Wr_Mask) | ((data & MAC_MA0HR_DCS_Mask)<<16));\
-		MAC_MA0HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA0HR_DCS_UdfRd(data) do {\
-		MAC_MA0HR_RgRd(data);\
-		data = ((data >> 16) & MAC_MA0HR_DCS_Mask);\
-} while(0)
-
-/*#define MAC_MA0HR_ADDRHI_Mask (ULONG)(~(~0<<(16)))*/
-
-#define MAC_MA0HR_ADDRHI_Mask (ULONG)(0xffff)
-
-/*#define MAC_MA0HR_ADDRHI_Wr_Mask (ULONG)(~((~(~0 << (16))) << (0)))*/
-
-#define MAC_MA0HR_ADDRHI_Wr_Mask (ULONG)(0xffff0000)
-
-#define MAC_MA0HR_ADDRHI_UdfWr(data) do {\
-		ULONG v;\
-		MAC_MA0HR_RgRd(v);\
-		v = (v & (MAC_MA0HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA0HR_Mask_19))<<19);\
-		v = ((v & MAC_MA0HR_ADDRHI_Wr_Mask) | ((data & MAC_MA0HR_ADDRHI_Mask)<<0));\
-		MAC_MA0HR_RgWr(v);\
-} while(0)
-
-#define MAC_MA0HR_ADDRHI_UdfRd(data) do {\
-		MAC_MA0HR_RgRd(data);\
-		data = ((data >> 0) & MAC_MA0HR_ADDRHI_Mask);\
-} while(0)
-
-
-#define MAC_GPIOR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x208))
-
-#define MAC_GPIOR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_GPIOR_RgOffAddr);\
-} while(0)
-
-#define MAC_GPIOR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_GPIOR_RgOffAddr);\
-} while(0)
-
-/*#define  MAC_GPIOR_Mask_28 (ULONG)(~(~0<<(4)))*/
-
-#define  MAC_GPIOR_Mask_28 (ULONG)(0xf)
-
-/*#define MAC_GPIOR_RES_Wr_Mask_28 (ULONG)(~((~(~0<<(4)))<<(28)))*/
-
-#define MAC_GPIOR_RES_Wr_Mask_28 (ULONG)(0xfffffff)
-
-/*#define  MAC_GPIOR_Mask_20 (ULONG)(~(~0<<(4)))*/
-
-#define  MAC_GPIOR_Mask_20 (ULONG)(0xf)
-
-/*#define MAC_GPIOR_RES_Wr_Mask_20 (ULONG)(~((~(~0<<(4)))<<(20)))*/
-
-#define MAC_GPIOR_RES_Wr_Mask_20 (ULONG)(0xff0fffff)
-
-/*#define  MAC_GPIOR_Mask_12 (ULONG)(~(~0<<(4)))*/
-
-#define  MAC_GPIOR_Mask_12 (ULONG)(0xf)
-
-/*#define MAC_GPIOR_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(4)))<<(12)))*/
-
-#define MAC_GPIOR_RES_Wr_Mask_12 (ULONG)(0xffff0fff)
-
-/*#define  MAC_GPIOR_Mask_4 (ULONG)(~(~0<<(4)))*/
-
-#define  MAC_GPIOR_Mask_4 (ULONG)(0xf)
-
-/*#define MAC_GPIOR_RES_Wr_Mask_4 (ULONG)(~((~(~0<<(4)))<<(4)))*/
-
-#define MAC_GPIOR_RES_Wr_Mask_4 (ULONG)(0xffffff0f)
-
-/*#define MAC_GPIOR_GPIT_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_GPIOR_GPIT_Mask (ULONG)(0xf)
-
-/*#define MAC_GPIOR_GPIT_Wr_Mask (ULONG)(~((~(~0 << (4))) << (24)))*/
-
-#define MAC_GPIOR_GPIT_Wr_Mask (ULONG)(0xf0ffffff)
-
-#define MAC_GPIOR_GPIT_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GPIOR_RgRd(v);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
-		v = ((v & MAC_GPIOR_GPIT_Wr_Mask) | ((data & MAC_GPIOR_GPIT_Mask)<<24));\
-		MAC_GPIOR_RgWr(v);\
-} while(0)
-
-#define MAC_GPIOR_GPIT_UdfRd(data) do {\
-		MAC_GPIOR_RgRd(data);\
-		data = ((data >> 24) & MAC_GPIOR_GPIT_Mask);\
-} while(0)
-
-/*#define MAC_GPIOR_GPIE_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_GPIOR_GPIE_Mask (ULONG)(0xf)
-
-/*#define MAC_GPIOR_GPIE_Wr_Mask (ULONG)(~((~(~0 << (4))) << (16)))*/
-
-#define MAC_GPIOR_GPIE_Wr_Mask (ULONG)(0xfff0ffff)
-
-#define MAC_GPIOR_GPIE_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GPIOR_RgRd(v);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
-		v = ((v & MAC_GPIOR_GPIE_Wr_Mask) | ((data & MAC_GPIOR_GPIE_Mask)<<16));\
-		MAC_GPIOR_RgWr(v);\
-} while(0)
-
-#define MAC_GPIOR_GPIE_UdfRd(data) do {\
-		MAC_GPIOR_RgRd(data);\
-		data = ((data >> 16) & MAC_GPIOR_GPIE_Mask);\
-} while(0)
-
-/*#define MAC_GPIOR_GPO_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_GPIOR_GPO_Mask (ULONG)(0xf)
-
-/*#define MAC_GPIOR_GPO_Wr_Mask (ULONG)(~((~(~0 << (4))) << (8)))*/
-
-#define MAC_GPIOR_GPO_Wr_Mask (ULONG)(0xfffff0ff)
-
-#define MAC_GPIOR_GPO_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GPIOR_RgRd(v);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
-		v = ((v & MAC_GPIOR_GPO_Wr_Mask) | ((data & MAC_GPIOR_GPO_Mask)<<8));\
-		MAC_GPIOR_RgWr(v);\
-} while(0)
-
-#define MAC_GPIOR_GPO_UdfRd(data) do {\
-		MAC_GPIOR_RgRd(data);\
-		data = ((data >> 8) & MAC_GPIOR_GPO_Mask);\
-} while(0)
-
-/*#define MAC_GPIOR_GPIS_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_GPIOR_GPIS_Mask (ULONG)(0xf)
-
-/*#define MAC_GPIOR_GPIS_Wr_Mask (ULONG)(~((~(~0 << (4))) << (0)))*/
-
-#define MAC_GPIOR_GPIS_Wr_Mask (ULONG)(0xfffffff0)
-
-#define MAC_GPIOR_GPIS_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GPIOR_RgRd(v);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
-		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
-		v = ((v & MAC_GPIOR_GPIS_Wr_Mask) | ((data & MAC_GPIOR_GPIS_Mask)<<0));\
-		MAC_GPIOR_RgWr(v);\
-} while(0)
-
-#define MAC_GPIOR_GPIS_UdfRd(data) do {\
-		MAC_GPIOR_RgRd(data);\
-		data = ((data >> 0) & MAC_GPIOR_GPIS_Mask);\
-} while(0)
-
-
-#define MAC_GMIIDR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x204))
-
-#define MAC_GMIIDR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_GMIIDR_RgOffAddr);\
-} while(0)
-
-#define MAC_GMIIDR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_GMIIDR_RgOffAddr);\
-} while(0)
-
-/*#define MAC_GMIIDR_RA_Mask (ULONG)(~(~0<<(16)))*/
-
-#define MAC_GMIIDR_RA_Mask (ULONG)(0xffff)
-
-/*#define MAC_GMIIDR_RA_Wr_Mask (ULONG)(~((~(~0 << (16))) << (16)))*/
-
-#define MAC_GMIIDR_RA_Wr_Mask (ULONG)(0xffff)
-
-#define MAC_GMIIDR_RA_UdfWr(data) do{\
-		ULONG v;\
-		MAC_GMIIDR_RgRd(v);\
-		v = ((v & MAC_GMIIDR_RA_Wr_Mask) | ((data & MAC_GMIIDR_RA_Mask)<<16));\
-		MAC_GMIIDR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIDR_RA_UdfRd(data) do {\
-		MAC_GMIIDR_RgRd(data);\
-		data = ((data >> 16) & MAC_GMIIDR_RA_Mask);\
-} while(0)
-
-/*#define MAC_GMIIDR_GD_Mask (ULONG)(~(~0<<(16)))*/
-
-#define MAC_GMIIDR_GD_Mask (ULONG)(0xffff)
-
-/*#define MAC_GMIIDR_GD_Wr_Mask (ULONG)(~((~(~0 << (16))) << (0)))*/
-
-#define MAC_GMIIDR_GD_Wr_Mask (ULONG)(0xffff0000)
-
-#define MAC_GMIIDR_GD_UdfWr(data) do{\
-		ULONG v;\
-		MAC_GMIIDR_RgRd(v);\
-		v = ((v & MAC_GMIIDR_GD_Wr_Mask) | ((data & MAC_GMIIDR_GD_Mask)<<0));\
-		MAC_GMIIDR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIDR_GD_UdfRd(data) do {\
-		MAC_GMIIDR_RgRd(data);\
-		data = ((data >> 0) & MAC_GMIIDR_GD_Mask);\
-} while(0)
-
-
-#define MAC_GMIIAR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x200))
-
-#define MAC_GMIIAR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_GMIIAR_RgOffAddr);\
-} while(0)
-
-#define MAC_GMIIAR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_GMIIAR_RgOffAddr);\
-} while(0)
-
-/*#define  MAC_GMIIAR_Mask_26 (ULONG)(~(~0<<(6)))*/
-
-#define  MAC_GMIIAR_Mask_26 (ULONG)(0x3f)
-
-/*#define MAC_GMIIAR_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
-
-#define MAC_GMIIAR_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
-
-/*#define  MAC_GMIIAR_Mask_12 (ULONG)(~(~0<<(4)))*/
-
-#define  MAC_GMIIAR_Mask_12 (ULONG)(0xf)
-
-/*#define MAC_GMIIAR_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(4)))<<(12)))*/
-
-#define MAC_GMIIAR_RES_Wr_Mask_12 (ULONG)(0xffff0fff)
-
-/*#define  MAC_GMIIAR_Mask_5 (ULONG)(~(~0<<(3)))*/
-
-#define  MAC_GMIIAR_Mask_5 (ULONG)(0x7)
-
-/*#define MAC_GMIIAR_RES_Wr_Mask_5 (ULONG)(~((~(~0<<(3)))<<(5)))*/
-
-#define MAC_GMIIAR_RES_Wr_Mask_5 (ULONG)(0xffffff1f)
-
-/*#define MAC_GMIIAR_PA_Mask (ULONG)(~(~0<<(5)))*/
-
-#define MAC_GMIIAR_PA_Mask (ULONG)(0x1f)
-
-/*#define MAC_GMIIAR_PA_Wr_Mask (ULONG)(~((~(~0 << (5))) << (21)))*/
-
-#define MAC_GMIIAR_PA_Wr_Mask (ULONG)(0xfc1fffff)
-
-#define MAC_GMIIAR_PA_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_PA_Wr_Mask) | ((data & MAC_GMIIAR_PA_Mask)<<21));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_PA_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 21) & MAC_GMIIAR_PA_Mask);\
-} while(0)
-
-/*#define MAC_GMIIAR_GR_Mask (ULONG)(~(~0<<(5)))*/
-
-#define MAC_GMIIAR_GR_Mask (ULONG)(0x1f)
-
-/*#define MAC_GMIIAR_GR_Wr_Mask (ULONG)(~((~(~0 << (5))) << (16)))*/
-
-#define MAC_GMIIAR_GR_Wr_Mask (ULONG)(0xffe0ffff)
-
-#define MAC_GMIIAR_GR_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_GR_Wr_Mask) | ((data & MAC_GMIIAR_GR_Mask)<<16));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_GR_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 16) & MAC_GMIIAR_GR_Mask);\
-} while(0)
-
-/*#define MAC_GMIIAR_CR_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_GMIIAR_CR_Mask (ULONG)(0xf)
-
-/*#define MAC_GMIIAR_CR_Wr_Mask (ULONG)(~((~(~0 << (4))) << (8)))*/
-
-#define MAC_GMIIAR_CR_Wr_Mask (ULONG)(0xfffff0ff)
-
-#define MAC_GMIIAR_CR_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_CR_Wr_Mask) | ((data & MAC_GMIIAR_CR_Mask)<<8));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_CR_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 8) & MAC_GMIIAR_CR_Mask);\
-} while(0)
-
-/*#define MAC_GMIIAR_SKAP_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_GMIIAR_SKAP_Mask (ULONG)(0x1)
-
-/*#define MAC_GMIIAR_SKAP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
-
-#define MAC_GMIIAR_SKAP_Wr_Mask (ULONG)(0xffffffef)
-
-#define MAC_GMIIAR_SKAP_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_SKAP_Wr_Mask) | ((data & MAC_GMIIAR_SKAP_Mask)<<4));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_SKAP_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 4) & MAC_GMIIAR_SKAP_Mask);\
-} while(0)
-
-/*#define MAC_GMIIAR_GOC_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MAC_GMIIAR_GOC_Mask (ULONG)(0x3)
-
-/*#define MAC_GMIIAR_GOC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
-
-#define MAC_GMIIAR_GOC_Wr_Mask (ULONG)(0xfffffff3)
-
-#define MAC_GMIIAR_GOC_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_GOC_Wr_Mask) | ((data & MAC_GMIIAR_GOC_Mask)<<2));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_GOC_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 2) & MAC_GMIIAR_GOC_Mask);\
-} while(0)
-
-/*#define MAC_GMIIAR_C45E_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_GMIIAR_C45E_Mask (ULONG)(0x1)
-
-/*#define MAC_GMIIAR_C45E_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define MAC_GMIIAR_C45E_Wr_Mask (ULONG)(0xfffffffd)
-
-#define MAC_GMIIAR_C45E_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_C45E_Wr_Mask) | ((data & MAC_GMIIAR_C45E_Mask)<<1));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_C45E_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 1) & MAC_GMIIAR_C45E_Mask);\
-} while(0)
-
-/*#define MAC_GMIIAR_GB_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_GMIIAR_GB_Mask (ULONG)(0x1)
-
-/*#define MAC_GMIIAR_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
-
-#define MAC_GMIIAR_GB_Wr_Mask (ULONG)(0xfffffffe)
-
-#define MAC_GMIIAR_GB_UdfWr(data) do {\
-		ULONG v;\
-		MAC_GMIIAR_RgRd(v);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
-		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
-		v = ((v & MAC_GMIIAR_GB_Wr_Mask) | ((data & MAC_GMIIAR_GB_Mask)<<0));\
-		MAC_GMIIAR_RgWr(v);\
-} while(0)
-
-#define MAC_GMIIAR_GB_UdfRd(data) do {\
-		MAC_GMIIAR_RgRd(data);\
-		data = ((data >> 0) & MAC_GMIIAR_GB_Mask);\
-} while(0)
-
-
-#define MAC_HFR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x124))
-
-#define MAC_HFR2_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HFR2_RgOffAddr);\
-} while(0)
-
-/*#define MAC_HFR2_AUXSNAPNUM_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MAC_HFR2_AUXSNAPNUM_Mask (ULONG)(0x7)
-
-#define MAC_HFR2_AUXSNAPNUM_UdfRd(data) do {\
-		MAC_HFR2_RgRd(data);\
-		data = ((data >> 28) & MAC_HFR2_AUXSNAPNUM_Mask);\
-} while(0)
-
-/*#define MAC_HFR2_PPSOUTNUM_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MAC_HFR2_PPSOUTNUM_Mask (ULONG)(0x7)
-
-#define MAC_HFR2_PPSOUTNUM_UdfRd(data) do {\
-		MAC_HFR2_RgRd(data);\
-		data = ((data >> 24) & MAC_HFR2_PPSOUTNUM_Mask);\
-} while(0)
-
-/*#define MAC_HFR2_TXCHCNT_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_HFR2_TXCHCNT_Mask (ULONG)(0xf)
-
-#define MAC_HFR2_TXCHCNT_UdfRd(data) do {\
-		MAC_HFR2_RgRd(data);\
-		data = ((data >> 18) & MAC_HFR2_TXCHCNT_Mask);\
-} while(0)
-
-/*#define MAC_HFR2_RXCHCNT_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_HFR2_RXCHCNT_Mask (ULONG)(0xf)
-
-#define MAC_HFR2_RXCHCNT_UdfRd(data) do {\
-		MAC_HFR2_RgRd(data);\
-		data = ((data >> 12) & MAC_HFR2_RXCHCNT_Mask);\
-} while(0)
-
-/*#define MAC_HFR2_TXQCNT_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_HFR2_TXQCNT_Mask (ULONG)(0xf)
-
-#define MAC_HFR2_TXQCNT_UdfRd(data) do {\
-		MAC_HFR2_RgRd(data);\
-		data = ((data >> 6) & MAC_HFR2_TXQCNT_Mask);\
-} while(0)
-
-/*#define MAC_HFR2_RXQCNT_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_HFR2_RXQCNT_Mask (ULONG)(0xf)
-
-#define MAC_HFR2_RXQCNT_UdfRd(data) do {\
-		MAC_HFR2_RgRd(data);\
-		data = ((data >> 0) & MAC_HFR2_RXQCNT_Mask);\
-} while(0)
-
-
-#define MAC_HFR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x120))
-
-#define MAC_HFR1_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HFR1_RgOffAddr);\
-} while(0)
-
-/*#define MAC_HFR1_L3L4FILTERNUM_Mask (ULONG)(~(~0<<(4)))*/
-
-#define MAC_HFR1_L3L4FILTERNUM_Mask (ULONG)(0xf)
-
-#define MAC_HFR1_L3L4FILTERNUM_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 27) & MAC_HFR1_L3L4FILTERNUM_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_HASHTBLSZ_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MAC_HFR1_HASHTBLSZ_Mask (ULONG)(0x3)
-
-#define MAC_HFR1_HASHTBLSZ_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 24) & MAC_HFR1_HASHTBLSZ_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_LPMODEEN_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_LPMODEEN_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_LPMODEEN_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 23) & MAC_HFR1_LPMODEEN_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_AVSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_AVSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_AVSEL_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 20) & MAC_HFR1_AVSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_DMADEBUGEN_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_DMADEBUGEN_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_DMADEBUGEN_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 19) & MAC_HFR1_DMADEBUGEN_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_TSOEN_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_TSOEN_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_TSOEN_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 18) & MAC_HFR1_TSOEN_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_SPHEN_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_SPHEN_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_SPHEN_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 17) & MAC_HFR1_SPHEN_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_DCBEN_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_DCBEN_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_DCBEN_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 16) & MAC_HFR1_DCBEN_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_ADVTHWORD_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR1_ADVTHWORD_Mask (ULONG)(0x1)
-
-#define MAC_HFR1_ADVTHWORD_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 13) & MAC_HFR1_ADVTHWORD_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_TXFIFOSIZE_Mask (ULONG)(~(~0<<(5)))*/
-
-#define MAC_HFR1_TXFIFOSIZE_Mask (ULONG)(0x1f)
-
-#define MAC_HFR1_TXFIFOSIZE_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 6) & MAC_HFR1_TXFIFOSIZE_Mask);\
-} while(0)
-
-/*#define MAC_HFR1_RXFIFOSIZE_Mask (ULONG)(~(~0<<(5)))*/
-
-#define MAC_HFR1_RXFIFOSIZE_Mask (ULONG)(0x1f)
-
-#define MAC_HFR1_RXFIFOSIZE_UdfRd(data) do {\
-		MAC_HFR1_RgRd(data);\
-		data = ((data >> 0) & MAC_HFR1_RXFIFOSIZE_Mask);\
-} while(0)
-
-
-#define MAC_HFR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11c))
-
-#define MAC_HFR0_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HFR0_RgOffAddr);\
-} while(0)
-
-/*#define MAC_HFR0_ACTPHYSEL_Mask (ULONG)(~(~0<<(3)))*/
-
-#define MAC_HFR0_ACTPHYSEL_Mask (ULONG)(0x7)
-
-#define MAC_HFR0_ACTPHYSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 28) & MAC_HFR0_ACTPHYSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_SAVLANINS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_SAVLANINS_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_SAVLANINS_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 27) & MAC_HFR0_SAVLANINS_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_TSINTSEL_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MAC_HFR0_TSINTSEL_Mask (ULONG)(0x3)
-
-#define MAC_HFR0_TSINTSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 25) & MAC_HFR0_TSINTSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_MACADR64SEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_MACADR64SEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_MACADR64SEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 24) & MAC_HFR0_MACADR64SEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_MACADR32SEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_MACADR32SEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_MACADR32SEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 23) & MAC_HFR0_MACADR32SEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_ADDMACADRSEL_Mask (ULONG)(~(~0<<(5)))*/
-
-#define MAC_HFR0_ADDMACADRSEL_Mask (ULONG)(0x1f)
-
-#define MAC_HFR0_ADDMACADRSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 18) & MAC_HFR0_ADDMACADRSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_RXCOE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_RXCOE_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_RXCOE_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 16) & MAC_HFR0_RXCOE_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_TXCOESEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_TXCOESEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_TXCOESEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 14) & MAC_HFR0_TXCOESEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_EEESEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_EEESEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_EEESEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 13) & MAC_HFR0_EEESEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_TSSSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_TSSSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_TSSSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 12) & MAC_HFR0_TSSSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_ARPOFFLDEN_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_ARPOFFLDEN_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_ARPOFFLDEN_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 9) & MAC_HFR0_ARPOFFLDEN_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_MMCSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_MMCSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_MMCSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 8) & MAC_HFR0_MMCSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_MGKSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_MGKSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_MGKSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 7) & MAC_HFR0_MGKSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_RWKSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_RWKSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_RWKSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 6) & MAC_HFR0_RWKSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_SMASEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_SMASEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_SMASEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 5) & MAC_HFR0_SMASEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_VLANHASEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_VLANHASEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_VLANHASEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 4) & MAC_HFR0_VLANHASEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_PCSSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_PCSSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_PCSSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 3) & MAC_HFR0_PCSSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_HDSEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_HDSEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_HDSEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 2) & MAC_HFR0_HDSEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_GMIISEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_GMIISEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_GMIISEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 1) & MAC_HFR0_GMIISEL_Mask);\
-} while(0)
-
-/*#define MAC_HFR0_MIISEL_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_HFR0_MIISEL_Mask (ULONG)(0x1)
-
-#define MAC_HFR0_MIISEL_UdfRd(data) do {\
-		MAC_HFR0_RgRd(data);\
-		data = ((data >> 0) & MAC_HFR0_MIISEL_Mask);\
-} while(0)
-
-
-#define MAC_MDR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x114))
-
-#define MAC_MDR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_MDR_RgOffAddr);\
-} while(0)
-
-/*#define MAC_MDR_TFCSTS_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MAC_MDR_TFCSTS_Mask (ULONG)(0x3)
-
-#define MAC_MDR_TFCSTS_UdfRd(data) do {\
-		MAC_MDR_RgRd(data);\
-		data = ((data >> 17) & MAC_MDR_TFCSTS_Mask);\
-} while(0)
-
-/*#define MAC_MDR_TPESTS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_MDR_TPESTS_Mask (ULONG)(0x1)
-
-#define MAC_MDR_TPESTS_UdfRd(data) do {\
-		MAC_MDR_RgRd(data);\
-		data = ((data >> 16) & MAC_MDR_TPESTS_Mask);\
-} while(0)
-
-/*#define MAC_MDR_RFCFCSTS_Mask (ULONG)(~(~0<<(2)))*/
-
-#define MAC_MDR_RFCFCSTS_Mask (ULONG)(0x3)
-
-#define MAC_MDR_RFCFCSTS_UdfRd(data) do {\
-		MAC_MDR_RgRd(data);\
-		data = ((data >> 1) & MAC_MDR_RFCFCSTS_Mask);\
-} while(0)
-
-/*#define MAC_MDR_RPESTS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define MAC_MDR_RPESTS_Mask (ULONG)(0x1)
-
-#define MAC_MDR_RPESTS_UdfRd(data) do {\
-		MAC_MDR_RgRd(data);\
-		data = ((data >> 0) & MAC_MDR_RPESTS_Mask);\
-} while(0)
-
-
-#define MAC_VR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x110))
-
-#define MAC_VR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_VR_RgOffAddr);\
-} while(0)
-
-/*#define MAC_VR_USERVER_Mask (ULONG)(~(~0<<(8)))*/
-
-#define MAC_VR_USERVER_Mask (ULONG)(0xff)
-
-#define MAC_VR_USERVER_UdfRd(data) do {\
-		MAC_VR_RgRd(data);\
-		data = ((data >> 8) & MAC_VR_USERVER_Mask);\
-} while(0)
-
-/*#define MAC_VR_SNPSVER_Mask (ULONG)(~(~0<<(8)))*/
-
-#define MAC_VR_SNPSVER_Mask (ULONG)(0xff)
-
-#define MAC_VR_SNPSVER_UdfRd(data) do {\
-		MAC_VR_RgRd(data);\
-		data = ((data >> 0) & MAC_VR_SNPSVER_Mask);\
-} while(0)
-
-
-#define MAC_HTR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x2c))
-
-#define MAC_HTR7_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR7_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR7_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR7_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR7_HT_UdfWr(data) do {\
-		MAC_HTR7_RgWr(data);\
-} while(0)
-
-#define MAC_HTR7_HT_UdfRd(data) do {\
-		MAC_HTR7_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x28))
-
-#define MAC_HTR6_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR6_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR6_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR6_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR6_HT_UdfWr(data) do {\
-		MAC_HTR6_RgWr(data);\
-} while(0)
-
-#define MAC_HTR6_HT_UdfRd(data) do {\
-		MAC_HTR6_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x24))
-
-#define MAC_HTR5_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR5_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR5_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR5_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR5_HT_UdfWr(data) do {\
-		MAC_HTR5_RgWr(data);\
-} while(0)
-
-#define MAC_HTR5_HT_UdfRd(data) do {\
-		MAC_HTR5_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x20))
-
-#define MAC_HTR4_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR4_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR4_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR4_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR4_HT_UdfWr(data) do {\
-		MAC_HTR4_RgWr(data);\
-} while(0)
-
-#define MAC_HTR4_HT_UdfRd(data) do {\
-		MAC_HTR4_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1c))
-
-#define MAC_HTR3_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR3_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR3_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR3_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR3_HT_UdfWr(data) do {\
-		MAC_HTR3_RgWr(data);\
-} while(0)
-
-#define MAC_HTR3_HT_UdfRd(data) do {\
-		MAC_HTR3_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x18))
-
-#define MAC_HTR2_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR2_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR2_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR2_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR2_HT_UdfWr(data) do {\
-		MAC_HTR2_RgWr(data);\
-} while(0)
-
-#define MAC_HTR2_HT_UdfRd(data) do {\
-		MAC_HTR2_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14))
-
-#define MAC_HTR1_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR1_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR1_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR1_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR1_HT_UdfWr(data) do {\
-		MAC_HTR1_RgWr(data);\
-} while(0)
-
-#define MAC_HTR1_HT_UdfRd(data) do {\
-		MAC_HTR1_RgRd(data);\
-} while(0)
-
-
-#define MAC_HTR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x10))
-
-#define MAC_HTR0_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_HTR0_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR0_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_HTR0_RgOffAddr);\
-} while(0)
-
-#define MAC_HTR0_HT_UdfWr(data) do {\
-		MAC_HTR0_RgWr(data);\
-} while(0)
-
-#define MAC_HTR0_HT_UdfRd(data) do {\
-		MAC_HTR0_RgRd(data);\
-} while(0)
-
-
-#define DMA_RIWTR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14b8))
-
-#define DMA_RIWTR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR7_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR7_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR7_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR7_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR7_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR7_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR7_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR7_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR7_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR7_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR7_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR7_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR7_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR7_RWT_Wr_Mask) | ((data & DMA_RIWTR7_RWT_Mask)<<0));\
-		DMA_RIWTR7_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR7_RWT_UdfRd(data) do {\
-		DMA_RIWTR7_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR7_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1438))
-
-#define DMA_RIWTR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR6_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR6_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR6_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR6_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR6_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR6_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR6_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR6_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR6_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR6_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR6_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR6_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR6_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR6_RWT_Wr_Mask) | ((data & DMA_RIWTR6_RWT_Mask)<<0));\
-		DMA_RIWTR6_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR6_RWT_UdfRd(data) do {\
-		DMA_RIWTR6_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR6_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13b8))
-
-#define DMA_RIWTR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR5_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR5_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR5_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR5_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR5_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR5_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR5_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR5_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR5_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR5_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR5_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR5_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR5_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR5_RWT_Wr_Mask) | ((data & DMA_RIWTR5_RWT_Mask)<<0));\
-		DMA_RIWTR5_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR5_RWT_UdfRd(data) do {\
-		DMA_RIWTR5_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR5_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1338))
-
-#define DMA_RIWTR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR4_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR4_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR4_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR4_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR4_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR4_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR4_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR4_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR4_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR4_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR4_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR4_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR4_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR4_RWT_Wr_Mask) | ((data & DMA_RIWTR4_RWT_Mask)<<0));\
-		DMA_RIWTR4_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR4_RWT_UdfRd(data) do {\
-		DMA_RIWTR4_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR4_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12b8))
-
-#define DMA_RIWTR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR3_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR3_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR3_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR3_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR3_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR3_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR3_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR3_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR3_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR3_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR3_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR3_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR3_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR3_RWT_Wr_Mask) | ((data & DMA_RIWTR3_RWT_Mask)<<0));\
-		DMA_RIWTR3_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR3_RWT_UdfRd(data) do {\
-		DMA_RIWTR3_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR3_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1238))
-
-#define DMA_RIWTR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR2_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR2_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR2_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR2_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR2_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR2_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR2_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR2_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR2_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR2_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR2_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR2_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR2_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR2_RWT_Wr_Mask) | ((data & DMA_RIWTR2_RWT_Mask)<<0));\
-		DMA_RIWTR2_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR2_RWT_UdfRd(data) do {\
-		DMA_RIWTR2_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR2_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11b8))
-
-#define DMA_RIWTR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR1_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR1_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR1_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR1_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR1_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR1_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR1_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR1_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR1_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR1_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR1_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR1_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR1_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR1_RWT_Wr_Mask) | ((data & DMA_RIWTR1_RWT_Mask)<<0));\
-		DMA_RIWTR1_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR1_RWT_UdfRd(data) do {\
-		DMA_RIWTR1_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR1_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RIWTR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1138))
-
-#define DMA_RIWTR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RIWTR0_RgOffAddr);\
-} while(0)
-
-#define DMA_RIWTR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RIWTR0_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RIWTR0_Mask_8 (ULONG)(~(~0<<(24)))*/
-
-#define  DMA_RIWTR0_Mask_8 (ULONG)(0xffffff)
-
-/*#define DMA_RIWTR0_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
-
-#define DMA_RIWTR0_RES_Wr_Mask_8 (ULONG)(0xff)
-
-/*#define DMA_RIWTR0_RWT_Mask (ULONG)(~(~0<<(8)))*/
-
-#define DMA_RIWTR0_RWT_Mask (ULONG)(0xff)
-
-/*#define DMA_RIWTR0_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
-
-#define DMA_RIWTR0_RWT_Wr_Mask (ULONG)(0xffffff00)
-
-#define DMA_RIWTR0_RWT_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RIWTR0_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR0_Mask_8))<<8);\
-		(v) = ((v & DMA_RIWTR0_RWT_Wr_Mask) | ((data & DMA_RIWTR0_RWT_Mask)<<0));\
-		DMA_RIWTR0_RgWr(v);\
-} while(0)
-
-#define DMA_RIWTR0_RWT_UdfRd(data) do {\
-		DMA_RIWTR0_RgRd(data);\
-		data = ((data >> 0) & DMA_RIWTR0_RWT_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14b0))
-
-#define DMA_RDRLR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR7_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR7_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR7_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR7_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR7_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR7_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR7_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR7_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR7_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR7_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR7_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR7_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR7_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR7_RDRL_Wr_Mask) | ((data & DMA_RDRLR7_RDRL_Mask)<<0));\
-		DMA_RDRLR7_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR7_RDRL_UdfRd(data) do {\
-		DMA_RDRLR7_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR7_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1430))
-
-#define DMA_RDRLR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR6_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR6_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR6_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR6_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR6_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR6_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR6_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR6_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR6_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR6_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR6_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR6_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR6_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR6_RDRL_Wr_Mask) | ((data & DMA_RDRLR6_RDRL_Mask)<<0));\
-		DMA_RDRLR6_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR6_RDRL_UdfRd(data) do {\
-		DMA_RDRLR6_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR6_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13b0))
-
-#define DMA_RDRLR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR5_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR5_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR5_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR5_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR5_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR5_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR5_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR5_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR5_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR5_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR5_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR5_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR5_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR5_RDRL_Wr_Mask) | ((data & DMA_RDRLR5_RDRL_Mask)<<0));\
-		DMA_RDRLR5_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR5_RDRL_UdfRd(data) do {\
-		DMA_RDRLR5_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR5_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1330))
-
-#define DMA_RDRLR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR4_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR4_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR4_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR4_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR4_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR4_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR4_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR4_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR4_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR4_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR4_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR4_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR4_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR4_RDRL_Wr_Mask) | ((data & DMA_RDRLR4_RDRL_Mask)<<0));\
-		DMA_RDRLR4_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR4_RDRL_UdfRd(data) do {\
-		DMA_RDRLR4_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR4_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12b0))
-
-#define DMA_RDRLR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR3_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR3_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR3_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR3_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR3_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR3_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR3_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR3_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR3_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR3_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR3_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR3_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR3_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR3_RDRL_Wr_Mask) | ((data & DMA_RDRLR3_RDRL_Mask)<<0));\
-		DMA_RDRLR3_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR3_RDRL_UdfRd(data) do {\
-		DMA_RDRLR3_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR3_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1230))
-
-#define DMA_RDRLR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR2_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR2_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR2_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR2_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR2_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR2_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR2_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR2_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR2_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR2_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR2_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR2_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR2_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR2_RDRL_Wr_Mask) | ((data & DMA_RDRLR2_RDRL_Mask)<<0));\
-		DMA_RDRLR2_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR2_RDRL_UdfRd(data) do {\
-		DMA_RDRLR2_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR2_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11b0))
-
-#define DMA_RDRLR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR1_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR1_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR1_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR1_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR1_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR1_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR1_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR1_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR1_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR1_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR1_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR1_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR1_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR1_RDRL_Wr_Mask) | ((data & DMA_RDRLR1_RDRL_Mask)<<0));\
-		DMA_RDRLR1_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR1_RDRL_UdfRd(data) do {\
-		DMA_RDRLR1_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR1_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_RDRLR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1130))
-
-#define DMA_RDRLR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDRLR0_RgOffAddr);\
-} while(0)
-
-#define DMA_RDRLR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDRLR0_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_RDRLR0_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_RDRLR0_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_RDRLR0_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_RDRLR0_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR0_RDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_RDRLR0_RDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_RDRLR0_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_RDRLR0_RDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_RDRLR0_RDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_RDRLR0_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR0_Mask_10))<<10);\
-		(v) = ((v & DMA_RDRLR0_RDRL_Wr_Mask) | ((data & DMA_RDRLR0_RDRL_Mask)<<0));\
-		DMA_RDRLR0_RgWr(v);\
-} while(0)
-
-#define DMA_RDRLR0_RDRL_UdfRd(data) do {\
-		DMA_RDRLR0_RgRd(data);\
-		data = ((data >> 0) & DMA_RDRLR0_RDRL_Mask);\
-} while(0)
-
-
-#define DMA_TDRLR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14ac))
-
-#define DMA_TDRLR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR7_RgOffAddr);\
-} while(0)
-
-#define DMA_TDRLR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR7_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_TDRLR7_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_TDRLR7_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_TDRLR7_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_TDRLR7_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR7_TDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_TDRLR7_TDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR7_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_TDRLR7_TDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_TDRLR7_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR7_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR7_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR7_TDRL_Wr_Mask) | ((data & DMA_TDRLR7_TDRL_Mask)<<0));\
-		DMA_TDRLR7_RgWr(v);\
-} while(0)
-
-#define DMA_TDRLR7_TDRL_UdfRd(data) do {\
-		DMA_TDRLR7_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR7_TDRL_Mask);\
-} while(0)
-
-
-#define DMA_TDRLR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x142c))
-
-#define DMA_TDRLR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR6_RgOffAddr);\
-} while(0)
-
-#define DMA_TDRLR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR6_RgOffAddr);\
-} while(0)
-
-/*#define  DMA_TDRLR6_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_TDRLR6_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_TDRLR6_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_TDRLR6_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR6_TDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_TDRLR6_TDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR6_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_TDRLR6_TDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_TDRLR6_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR6_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR6_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR6_TDRL_Wr_Mask) | ((data & DMA_TDRLR6_TDRL_Mask)<<0));\
-		DMA_TDRLR6_RgWr(v);\
-} while(0)
-
-#define DMA_TDRLR6_TDRL_UdfRd(data) do {\
-		DMA_TDRLR6_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR6_TDRL_Mask);\
-} while(0)
-
-
-#define DMA_TDRLR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13ac))
+/*#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_TDRLR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR5_RgOffAddr);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Wr_Mask (ULONG)(0xfffffeff)
 
-#define DMA_TDRLR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR5_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask)<<8));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-/*#define  DMA_TDRLR5_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_TDRLR5_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_TDRLR5_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_TDRLR5_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR5_TDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_TDRLR5_TDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR5_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_TDRLR5_TDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_TDRLR5_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR5_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR5_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR5_TDRL_Wr_Mask) | ((data & DMA_TDRLR5_TDRL_Mask)<<0));\
-		DMA_TDRLR5_RgWr(v);\
+#define MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 8) & MMC_IPC_INTR_MASK_RX_RXUDP_GD_FRMS_Mask);\
 } while(0)
 
-#define DMA_TDRLR5_TDRL_UdfRd(data) do {\
-		DMA_TDRLR5_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR5_TDRL_Mask);\
-} while(0)
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask (ULONG)(0x1)
 
-#define DMA_TDRLR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x132c))
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_TDRLR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR4_RgOffAddr);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Wr_Mask (ULONG)(0xffffff7f)
 
-#define DMA_TDRLR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR4_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask)<<7));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-/*#define  DMA_TDRLR4_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_TDRLR4_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_TDRLR4_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_TDRLR4_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR4_TDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_TDRLR4_TDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR4_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_TDRLR4_TDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_TDRLR4_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR4_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR4_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR4_TDRL_Wr_Mask) | ((data & DMA_TDRLR4_TDRL_Mask)<<0));\
-		DMA_TDRLR4_RgWr(v);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 7) & MMC_IPC_INTR_MASK_RX_RXIPV6_NOPAY_FRMS_Mask);\
 } while(0)
 
-#define DMA_TDRLR4_TDRL_UdfRd(data) do {\
-		DMA_TDRLR4_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR4_TDRL_Mask);\
-} while(0)
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask (ULONG)(0x1)
 
-#define DMA_TDRLR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12ac))
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_TDRLR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR3_RgOffAddr);\
-} while(0)
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Wr_Mask (ULONG)(0xffffffbf)
 
-#define DMA_TDRLR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR3_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask)<<6));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-/*#define  DMA_TDRLR3_Mask_10 (ULONG)(~(~0<<(22)))*/
-
-#define  DMA_TDRLR3_Mask_10 (ULONG)(0x3fffff)
-
-/*#define DMA_TDRLR3_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
-
-#define DMA_TDRLR3_RES_Wr_Mask_10 (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR3_TDRL_Mask (ULONG)(~(~0<<(10)))*/
-
-#define DMA_TDRLR3_TDRL_Mask (ULONG)(0x3ff)
-
-/*#define DMA_TDRLR3_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
-
-#define DMA_TDRLR3_TDRL_Wr_Mask (ULONG)(0xfffffc00)
-
-#define DMA_TDRLR3_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR3_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR3_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR3_TDRL_Wr_Mask) | ((data & DMA_TDRLR3_TDRL_Mask)<<0));\
-		DMA_TDRLR3_RgWr(v);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 6) & MMC_IPC_INTR_MASK_RX_RXIPV6_HDRERR_FRMS_Mask);\
 } while(0)
 
-#define DMA_TDRLR3_TDRL_UdfRd(data) do {\
-		DMA_TDRLR3_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR3_TDRL_Mask);\
-} while(0)
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask (ULONG)(0x1)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_TDRLR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x122c))
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_TDRLR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR2_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask)<<5));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDRLR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR2_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 5) & MMC_IPC_INTR_MASK_RX_RXIPV6_GD_FRMS_Mask);\
 } while(0)
 
-/*#define  DMA_TDRLR2_Mask_10 (ULONG)(~(~0<<(22)))*/
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  DMA_TDRLR2_Mask_10 (ULONG)(0x3fffff)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask (ULONG)(0x1)
 
-/*#define DMA_TDRLR2_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_TDRLR2_RES_Wr_Mask_10 (ULONG)(0x3ff)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Wr_Mask (ULONG)(0xffffffef)
 
-/*#define DMA_TDRLR2_TDRL_Mask (ULONG)(~(~0<<(10)))*/
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask)<<4));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
+} while(0)
 
-#define DMA_TDRLR2_TDRL_Mask (ULONG)(0x3ff)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 4) & MMC_IPC_INTR_MASK_RX_RXIPV4_UDSBL_FRMS_Mask);\
+} while(0)
 
-/*#define DMA_TDRLR2_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDRLR2_TDRL_Wr_Mask (ULONG)(0xfffffc00)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask (ULONG)(0x1)
 
-#define DMA_TDRLR2_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR2_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR2_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR2_TDRL_Wr_Mask) | ((data & DMA_TDRLR2_TDRL_Mask)<<0));\
-		DMA_TDRLR2_RgWr(v);\
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Wr_Mask (ULONG)(0xfffffff7)
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask)<<3));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDRLR2_TDRL_UdfRd(data) do {\
-		DMA_TDRLR2_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR2_TDRL_Mask);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 3) & MMC_IPC_INTR_MASK_RX_RXIPV4_FRAG_FRMS_Mask);\
 } while(0)
 
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDRLR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11ac))
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask (ULONG)(0x1)
 
-#define DMA_TDRLR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR1_RgOffAddr);\
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Wr_Mask (ULONG)(0xfffffffb)
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask)<<2));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDRLR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR1_RgOffAddr);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 2) & MMC_IPC_INTR_MASK_RX_RXIPV4_NOPAY_FRMS_Mask);\
 } while(0)
 
-/*#define  DMA_TDRLR1_Mask_10 (ULONG)(~(~0<<(22)))*/
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  DMA_TDRLR1_Mask_10 (ULONG)(0x3fffff)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask (ULONG)(0x1)
 
-/*#define DMA_TDRLR1_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_TDRLR1_RES_Wr_Mask_10 (ULONG)(0x3ff)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Wr_Mask (ULONG)(0xfffffffd)
 
-/*#define DMA_TDRLR1_TDRL_Mask (ULONG)(~(~0<<(10)))*/
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask)<<1));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
+} while(0)
 
-#define DMA_TDRLR1_TDRL_Mask (ULONG)(0x3ff)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 1) & MMC_IPC_INTR_MASK_RX_RXIPV4_HDRERR_FRMS_Mask);\
+} while(0)
 
-/*#define DMA_TDRLR1_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDRLR1_TDRL_Wr_Mask (ULONG)(0xfffffc00)
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask (ULONG)(0x1)
 
-#define DMA_TDRLR1_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR1_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR1_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR1_TDRL_Wr_Mask) | ((data & DMA_TDRLR1_TDRL_Mask)<<0));\
-		DMA_TDRLR1_RgWr(v);\
+/*#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Wr_Mask (ULONG)(0xfffffffe)
+
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_UdfWr(data) do {\
+		ULONG v;\
+		MMC_IPC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_30))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_30))<<30);\
+		v = (v & (MMC_IPC_INTR_MASK_RX_RES_Wr_Mask_14))|((( 0) & (MMC_IPC_INTR_MASK_RX_Mask_14))<<14);\
+		v = ((v & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Wr_Mask) | ((data & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask)<<0));\
+		MMC_IPC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDRLR1_TDRL_UdfRd(data) do {\
-		DMA_TDRLR1_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR1_TDRL_Mask);\
+#define MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_UdfRd(data) do {\
+		MMC_IPC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 0) & MMC_IPC_INTR_MASK_RX_RXIPV4_GD_FRMS_Mask);\
 } while(0)
 
 
-#define DMA_TDRLR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x112c))
+#define MMC_INTR_MASK_TX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x710))
 
-#define DMA_TDRLR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDRLR0_RgOffAddr);\
+#define MMC_INTR_MASK_TX_RgWr(data) do {\
+		iowrite32(data, (void *)MMC_INTR_MASK_TX_RgOffAddr);\
 } while(0)
 
-#define DMA_TDRLR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDRLR0_RgOffAddr);\
+#define MMC_INTR_MASK_TX_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_INTR_MASK_TX_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_TDRLR0_Mask_10 (ULONG)(~(~0<<(22)))*/
+/*#define  MMC_INTR_MASK_TX_Mask_25 (ULONG)(~(~0<<(7)))*/
 
-#define  DMA_TDRLR0_Mask_10 (ULONG)(0x3fffff)
+#define  MMC_INTR_MASK_TX_Mask_25 (ULONG)(0x7f)
 
-/*#define DMA_TDRLR0_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
+/*#define MMC_INTR_MASK_TX_RES_Wr_Mask_25 (ULONG)(~((~(~0<<(7)))<<(25)))*/
 
-#define DMA_TDRLR0_RES_Wr_Mask_10 (ULONG)(0x3ff)
+#define MMC_INTR_MASK_TX_RES_Wr_Mask_25 (ULONG)(0x1ffffff)
 
-/*#define DMA_TDRLR0_TDRL_Mask (ULONG)(~(~0<<(10)))*/
+/*#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDRLR0_TDRL_Mask (ULONG)(0x3ff)
+#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask (ULONG)(0x1)
 
-/*#define DMA_TDRLR0_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
+/*#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define DMA_TDRLR0_TDRL_Wr_Mask (ULONG)(0xfffffc00)
+#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_Wr_Mask (ULONG)(0xfeffffff)
 
-#define DMA_TDRLR0_TDRL_UdfWr(data) do {\
-		ULONG v = 0; \
-		v = (v & (DMA_TDRLR0_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR0_Mask_10))<<10);\
-		(v) = ((v & DMA_TDRLR0_TDRL_Wr_Mask) | ((data & DMA_TDRLR0_TDRL_Mask)<<0));\
-		DMA_TDRLR0_RgWr(v);\
+#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXVLANFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask)<<24));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDRLR0_TDRL_UdfRd(data) do {\
-		DMA_TDRLR0_RgRd(data);\
-		data = ((data >> 0) & DMA_TDRLR0_TDRL_Mask);\
+#define MMC_INTR_MASK_TX_TXVLANFRAMES_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 24) & MMC_INTR_MASK_TX_TXVLANFRAMES_G_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14a8))
+#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR7_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
 
-#define DMA_RDTP_RPDR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR7_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_Wr_Mask (ULONG)(0xff7fffff)
 
-#define DMA_RDTP_RPDR7_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR7_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXPAUSEFRAMES_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask)<<23));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR7_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR7_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXPAUSEFRAMES_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 23) & MMC_INTR_MASK_TX_TXPAUSEFRAMES_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXEXCESSDEF_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1428))
+#define MMC_INTR_MASK_TX_TXEXCESSDEF_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR6_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXEXCESSDEF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
 
-#define DMA_RDTP_RPDR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR6_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXEXCESSDEF_Wr_Mask (ULONG)(0xffbfffff)
 
-#define DMA_RDTP_RPDR6_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR6_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXEXCESSDEF_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXEXCESSDEF_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXEXCESSDEF_Mask)<<22));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR6_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR6_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXEXCESSDEF_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 22) & MMC_INTR_MASK_TX_TXEXCESSDEF_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13a8))
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR5_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
 
-#define DMA_RDTP_RPDR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR5_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Wr_Mask (ULONG)(0xffdfffff)
 
-#define DMA_RDTP_RPDR5_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR5_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask)<<21));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR5_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR5_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 21) & MMC_INTR_MASK_TX_TXFRAMECOUNT_G_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1328))
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR4_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
 
-#define DMA_RDTP_RPDR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR4_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Wr_Mask (ULONG)(0xffefffff)
 
-#define DMA_RDTP_RPDR4_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR4_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask)<<20));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR4_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR4_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 20) & MMC_INTR_MASK_TX_TXOCTETCOUNT_G_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXCARRIERERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12a8))
+#define MMC_INTR_MASK_TX_TXCARRIERERROR_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR3_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXCARRIERERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
 
-#define DMA_RDTP_RPDR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR3_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXCARRIERERROR_Wr_Mask (ULONG)(0xfff7ffff)
 
-#define DMA_RDTP_RPDR3_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR3_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXCARRIERERROR_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXCARRIERERROR_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXCARRIERERROR_Mask)<<19));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR3_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR3_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXCARRIERERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 19) & MMC_INTR_MASK_TX_TXCARRIERERROR_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXEXESSCOL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1228))
+#define MMC_INTR_MASK_TX_TXEXESSCOL_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR2_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXEXESSCOL_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
 
-#define DMA_RDTP_RPDR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR2_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXEXESSCOL_Wr_Mask (ULONG)(0xfffbffff)
 
-#define DMA_RDTP_RPDR2_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR2_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXEXESSCOL_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXEXESSCOL_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXEXESSCOL_Mask)<<18));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR2_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR2_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXEXESSCOL_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 18) & MMC_INTR_MASK_TX_TXEXESSCOL_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXLATECOL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11a8))
+#define MMC_INTR_MASK_TX_TXLATECOL_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR1_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXLATECOL_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
 
-#define DMA_RDTP_RPDR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR1_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXLATECOL_Wr_Mask (ULONG)(0xfffdffff)
 
-#define DMA_RDTP_RPDR1_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR1_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXLATECOL_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXLATECOL_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXLATECOL_Mask)<<17));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR1_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR1_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXLATECOL_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 17) & MMC_INTR_MASK_TX_TXLATECOL_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXDEFERRED_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDTP_RPDR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1128))
+#define MMC_INTR_MASK_TX_TXDEFERRED_Mask (ULONG)(0x1)
 
-#define DMA_RDTP_RPDR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDTP_RPDR0_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXDEFERRED_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
 
-#define DMA_RDTP_RPDR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDTP_RPDR0_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXDEFERRED_Wr_Mask (ULONG)(0xfffeffff)
 
-#define DMA_RDTP_RPDR0_RDT_UdfWr(data) do {\
-		DMA_RDTP_RPDR0_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXDEFERRED_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXDEFERRED_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXDEFERRED_Mask)<<16));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDTP_RPDR0_RDT_UdfRd(data) do {\
-		DMA_RDTP_RPDR0_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXDEFERRED_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 16) & MMC_INTR_MASK_TX_TXDEFERRED_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXMULTICOL_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDTP_TPDR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14a0))
+#define MMC_INTR_MASK_TX_TXMULTICOL_G_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR7_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXMULTICOL_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
 
-#define DMA_TDTP_TPDR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR7_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXMULTICOL_G_Wr_Mask (ULONG)(0xffff7fff)
 
-#define DMA_TDTP_TPDR7_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR7_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXMULTICOL_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXMULTICOL_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXMULTICOL_G_Mask)<<15));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR7_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR7_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXMULTICOL_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 15) & MMC_INTR_MASK_TX_TXMULTICOL_G_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDTP_TPDR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1420))
+#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR6_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
 
-#define DMA_TDTP_TPDR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR6_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXSINGLECOL_G_Wr_Mask (ULONG)(0xffffbfff)
 
-#define DMA_TDTP_TPDR6_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR6_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXSINGLECOL_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXSINGLECOL_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask)<<14));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR6_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR6_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXSINGLECOL_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 14) & MMC_INTR_MASK_TX_TXSINGLECOL_G_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDTP_TPDR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13a0))
+#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR5_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define DMA_TDTP_TPDR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR5_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Wr_Mask (ULONG)(0xffffdfff)
 
-#define DMA_TDTP_TPDR5_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR5_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask)<<13));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR5_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR5_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXUNDERFLOWERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 13) & MMC_INTR_MASK_TX_TXUNDERFLOWERROR_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDTP_TPDR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1320))
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR4_RgOffAddr);\
+/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Wr_Mask (ULONG)(0xffffefff)
+
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask)<<12));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR4_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 12) & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_GB_Mask);\
 } while(0)
 
-#define DMA_TDTP_TPDR4_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR4_RgWr(data);\
+/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask (ULONG)(0x1)
+
+/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Wr_Mask (ULONG)(0xfffff7ff)
+
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask)<<11));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR4_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR4_RgRd(data);\
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 11) & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_GB_Mask);\
 } while(0)
 
+/*#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDTP_TPDR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12a0))
+#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR3_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
 
-#define DMA_TDTP_TPDR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR3_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Wr_Mask (ULONG)(0xfffffbff)
+
+#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask)<<10));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR3_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR3_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 10) & MMC_INTR_MASK_TX_TXUNICASTFRAMES_GB_Mask);\
 } while(0)
 
-#define DMA_TDTP_TPDR3_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR3_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1220))
+/*#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_TDTP_TPDR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR2_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(0xfffffdff)
 
-#define DMA_TDTP_TPDR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR2_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask)<<9));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR2_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR2_RgWr(data);\
+#define MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 9) & MMC_INTR_MASK_TX_TX1024TOMAXOCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_TDTP_TPDR2_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR2_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11a0))
+/*#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_TDTP_TPDR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR1_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Wr_Mask (ULONG)(0xfffffeff)
 
-#define DMA_TDTP_TPDR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR1_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask)<<8));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR1_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR1_RgWr(data);\
+#define MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 8) & MMC_INTR_MASK_TX_TX512TO1023OCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_TDTP_TPDR1_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR1_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask (ULONG)(0x1)
 
-#define DMA_TDTP_TPDR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1120))
+/*#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_TDTP_TPDR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDTP_TPDR0_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Wr_Mask (ULONG)(0xffffff7f)
 
-#define DMA_TDTP_TPDR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDTP_TPDR0_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask)<<7));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_TDTP_TPDR0_TDT_UdfWr(data) do {\
-		DMA_TDTP_TPDR0_RgWr(data);\
+#define MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 7) & MMC_INTR_MASK_TX_TX256TO511OCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_TDTP_TPDR0_TDT_UdfRd(data) do {\
-		DMA_TDTP_TPDR0_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x149c))
+/*#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_RDLAR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR7_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Wr_Mask (ULONG)(0xffffffbf)
 
-#define DMA_RDLAR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR7_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask)<<6));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR7_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR7_RgWr(data);\
+#define MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 6) & MMC_INTR_MASK_TX_TX128TO255OCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_RDLAR7_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR7_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x141c))
+/*#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_RDLAR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR6_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_RDLAR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR6_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask)<<5));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR6_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR6_RgWr(data);\
+#define MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 5) & MMC_INTR_MASK_TX_TX65TO127OCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_RDLAR6_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR6_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x139c))
+/*#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_RDLAR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR5_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TX64OCTETS_GB_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_RDLAR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR5_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TX64OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TX64OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask)<<4));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR5_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR5_RgWr(data);\
+#define MMC_INTR_MASK_TX_TX64OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 4) & MMC_INTR_MASK_TX_TX64OCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_RDLAR5_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR5_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x131c))
+/*#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define DMA_RDLAR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR4_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Wr_Mask (ULONG)(0xfffffff7)
 
-#define DMA_RDLAR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR4_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask)<<3));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR4_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR4_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 3) & MMC_INTR_MASK_TX_TXMULTICASTFRAMES_G_Mask);\
 } while(0)
 
-#define DMA_RDLAR4_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR4_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x129c))
+/*#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_RDLAR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR3_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Wr_Mask (ULONG)(0xfffffffb)
 
-#define DMA_RDLAR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR3_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask)<<2));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR3_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR3_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 2) & MMC_INTR_MASK_TX_TXBROADCASTFRAMES_G_Mask);\
 } while(0)
 
-#define DMA_RDLAR3_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR3_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x121c))
+/*#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_RDLAR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR2_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_RDLAR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR2_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask)<<1));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR2_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR2_RgWr(data);\
+#define MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 1) & MMC_INTR_MASK_TX_TXFRAMECOUNT_GB_Mask);\
 } while(0)
 
-#define DMA_RDLAR2_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR2_RgRd(data);\
-} while(0)
+/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
 
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask (ULONG)(0x1)
 
-#define DMA_RDLAR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x119c))
+/*#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_RDLAR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR1_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Wr_Mask (ULONG)(0xfffffffe)
+
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_TX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_TX_RES_Wr_Mask_25))|((( 0) & (MMC_INTR_MASK_TX_Mask_25))<<25);\
+		v = ((v & MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask)<<0));\
+		MMC_INTR_MASK_TX_RgWr(v);\
 } while(0)
 
-#define DMA_RDLAR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR1_RgOffAddr);\
+#define MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_TX_RgRd(data);\
+		data = ((data >> 0) & MMC_INTR_MASK_TX_TXOCTETCOUNT_GB_Mask);\
 } while(0)
 
-#define DMA_RDLAR1_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR1_RgWr(data);\
+
+#define MMC_INTR_MASK_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x70c))
+
+#define MMC_INTR_MASK_RX_RgWr(data) do {\
+		iowrite32(data, (void *)MMC_INTR_MASK_RX_RgOffAddr);\
 } while(0)
 
-#define DMA_RDLAR1_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR1_RgRd(data);\
+#define MMC_INTR_MASK_RX_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_INTR_MASK_RX_RgOffAddr);\
 } while(0)
 
+/*#define  MMC_INTR_MASK_RX_Mask_24 (ULONG)(~(~0<<(8)))*/
 
-#define DMA_RDLAR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x111c))
+#define  MMC_INTR_MASK_RX_Mask_24 (ULONG)(0xff)
 
-#define DMA_RDLAR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_RDLAR0_RgOffAddr);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RES_Wr_Mask_24 (ULONG)(~((~(~0<<(8)))<<(24)))*/
 
-#define DMA_RDLAR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_RDLAR0_RgOffAddr);\
-} while(0)
+#define MMC_INTR_MASK_RX_RES_Wr_Mask_24 (ULONG)(0xffffff)
 
-#define DMA_RDLAR0_RDESLA_UdfWr(data) do {\
-		DMA_RDLAR0_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXWATCHDOG_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_RDLAR0_RDESLA_UdfRd(data) do {\
-		DMA_RDLAR0_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXWATCHDOG_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXWATCHDOG_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
 
-#define DMA_TDLAR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1494))
+#define MMC_INTR_MASK_RX_RXWATCHDOG_Wr_Mask (ULONG)(0xff7fffff)
 
-#define DMA_TDLAR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR7_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXWATCHDOG_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXWATCHDOG_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXWATCHDOG_Mask)<<23));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR7_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXWATCHDOG_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 23) & MMC_INTR_MASK_RX_RXWATCHDOG_Mask);\
 } while(0)
 
-#define DMA_TDLAR7_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR7_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR7_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR7_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
 
-#define DMA_TDLAR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1414))
+#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Wr_Mask (ULONG)(0xffbfffff)
 
-#define DMA_TDLAR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR6_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask)<<22));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR6_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXVLANFRAMES_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 22) & MMC_INTR_MASK_RX_RXVLANFRAMES_GB_Mask);\
 } while(0)
 
-#define DMA_TDLAR6_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR6_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR6_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR6_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
 
-#define DMA_TDLAR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1394))
+#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Wr_Mask (ULONG)(0xffdfffff)
 
-#define DMA_TDLAR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR5_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask)<<21));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR5_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXFIFOOVERFLOW_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 21) & MMC_INTR_MASK_RX_RXFIFOOVERFLOW_Mask);\
 } while(0)
 
-#define DMA_TDLAR5_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR5_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR5_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR5_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
 
-#define DMA_TDLAR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1314))
+#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_Wr_Mask (ULONG)(0xffefffff)
 
-#define DMA_TDLAR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR4_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXPAUSEFRAMES_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask)<<20));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR4_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXPAUSEFRAMES_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 20) & MMC_INTR_MASK_RX_RXPAUSEFRAMES_Mask);\
 } while(0)
 
-#define DMA_TDLAR4_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR4_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR4_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR4_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
 
-#define DMA_TDLAR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1294))
+#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Wr_Mask (ULONG)(0xfff7ffff)
 
-#define DMA_TDLAR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR3_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask)<<19));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR3_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 19) & MMC_INTR_MASK_RX_RXOUTOFRANGETYPE_Mask);\
 } while(0)
 
-#define DMA_TDLAR3_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR3_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXLENGTHERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR3_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR3_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXLENGTHERROR_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXLENGTHERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
 
-#define DMA_TDLAR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1214))
+#define MMC_INTR_MASK_RX_RXLENGTHERROR_Wr_Mask (ULONG)(0xfffbffff)
 
-#define DMA_TDLAR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR2_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXLENGTHERROR_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXLENGTHERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXLENGTHERROR_Mask)<<18));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR2_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXLENGTHERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 18) & MMC_INTR_MASK_RX_RXLENGTHERROR_Mask);\
 } while(0)
 
-#define DMA_TDLAR2_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR2_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR2_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR2_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
 
-#define DMA_TDLAR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1194))
+#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Wr_Mask (ULONG)(0xfffdffff)
 
-#define DMA_TDLAR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR1_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask)<<17));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR1_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 17) & MMC_INTR_MASK_RX_RXUNICASTFRAMES_G_Mask);\
 } while(0)
 
-#define DMA_TDLAR1_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR1_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR1_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR1_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
 
-#define DMA_TDLAR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1114))
+#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Wr_Mask (ULONG)(0xfffeffff)
 
-#define DMA_TDLAR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_TDLAR0_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask)<<16));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_TDLAR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_TDLAR0_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 16) & MMC_INTR_MASK_RX_RX1024TOMAXOCTETS_GB_Mask);\
 } while(0)
 
-#define DMA_TDLAR0_TDESLA_UdfWr(data) do {\
-		DMA_TDLAR0_RgWr(data);\
-} while(0)
+/*#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_TDLAR0_TDESLA_UdfRd(data) do {\
-		DMA_TDLAR0_RgRd(data);\
-} while(0)
+#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask (ULONG)(0x1)
 
+/*#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
 
-#define DMA_IER7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14b4))
+#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Wr_Mask (ULONG)(0xffff7fff)
 
-#define DMA_IER7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER7_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask)<<15));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER7_RgOffAddr);\
+#define MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 15) & MMC_INTR_MASK_RX_RX512TO1023OCTETS_GB_Mask);\
 } while(0)
 
-/*#define  DMA_IER7_Mask_3 (ULONG)(~(~0<<(3)))*/
+/*#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define  DMA_IER7_Mask_3 (ULONG)(0x7)
+#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
 
-#define DMA_IER7_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Wr_Mask (ULONG)(0xffffbfff)
 
-/*#define  DMA_IER7_Mask_14 (ULONG)(~(~0<<(1)))*/
+#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask)<<14));\
+		MMC_INTR_MASK_RX_RgWr(v);\
+} while(0)
 
-#define  DMA_IER7_Mask_14 (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 14) & MMC_INTR_MASK_RX_RX256TO511OCTETS_GB_Mask);\
+} while(0)
 
-/*#define DMA_IER7_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
+/*#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
+#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask (ULONG)(0x1)
 
-/*#define  DMA_IER7_Mask_17 (ULONG)(~(~0<<(15)))*/
+/*#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define  DMA_IER7_Mask_17 (ULONG)(0x7fff)
+#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Wr_Mask (ULONG)(0xffffdfff)
 
-/*#define DMA_IER7_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
+#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_UdfWr(data) do {\
+		ULONG v;\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask)<<13));\
+		MMC_INTR_MASK_RX_RgWr(v);\
+} while(0)
 
-#define DMA_IER7_RES_Wr_Mask_17 (ULONG)(0x1ffff)
+#define MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 13) & MMC_INTR_MASK_RX_RX128TO255OCTETS_GB_Mask);\
+} while(0)
 
-/*#define DMA_IER7_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_TIE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define DMA_IER7_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Wr_Mask (ULONG)(0xffffefff)
 
-#define DMA_IER7_TIE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_TIE_Wr_Mask) | ((data & DMA_IER7_TIE_Mask)<<0));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask)<<12));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_TIE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 0) & DMA_IER7_TIE_Mask);\
+#define MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 12) & MMC_INTR_MASK_RX_RX65TO127OCTETS_GB_Mask);\
 } while(0)
 
-/*#define DMA_IER7_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_TXSE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
 
-#define DMA_IER7_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_INTR_MASK_RX_RX64OCTETS_GB_Wr_Mask (ULONG)(0xfffff7ff)
 
-#define DMA_IER7_TXSE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RX64OCTETS_GB_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_TXSE_Wr_Mask) | ((data & DMA_IER7_TXSE_Mask)<<1));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RX64OCTETS_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask)<<11));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_TXSE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 1) & DMA_IER7_TXSE_Mask);\
+#define MMC_INTR_MASK_RX_RX64OCTETS_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 11) & MMC_INTR_MASK_RX_RX64OCTETS_GB_Mask);\
 } while(0)
 
-/*#define DMA_IER7_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_TBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
 
-#define DMA_IER7_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MMC_INTR_MASK_RX_RXOVERSIZE_G_Wr_Mask (ULONG)(0xfffffbff)
 
-#define DMA_IER7_TBUE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXOVERSIZE_G_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_TBUE_Wr_Mask) | ((data & DMA_IER7_TBUE_Mask)<<2));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXOVERSIZE_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask)<<10));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_TBUE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 2) & DMA_IER7_TBUE_Mask);\
+#define MMC_INTR_MASK_RX_RXOVERSIZE_G_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 10) & MMC_INTR_MASK_RX_RXOVERSIZE_G_Mask);\
 } while(0)
 
-/*#define DMA_IER7_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_RIE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_IER7_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_Wr_Mask (ULONG)(0xfffffdff)
 
-#define DMA_IER7_RIE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_RIE_Wr_Mask) | ((data & DMA_IER7_RIE_Mask)<<6));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXUNDERSIZE_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask)<<9));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_RIE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 6) & DMA_IER7_RIE_Mask);\
+#define MMC_INTR_MASK_RX_RXUNDERSIZE_G_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 9) & MMC_INTR_MASK_RX_RXUNDERSIZE_G_Mask);\
 } while(0)
 
-/*#define DMA_IER7_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXJABBERERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_RBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXJABBERERROR_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MMC_INTR_MASK_RX_RXJABBERERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_IER7_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MMC_INTR_MASK_RX_RXJABBERERROR_Wr_Mask (ULONG)(0xfffffeff)
 
-#define DMA_IER7_RBUE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXJABBERERROR_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_RBUE_Wr_Mask) | ((data & DMA_IER7_RBUE_Mask)<<7));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXJABBERERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXJABBERERROR_Mask)<<8));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_RBUE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 7) & DMA_IER7_RBUE_Mask);\
+#define MMC_INTR_MASK_RX_RXJABBERERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 8) & MMC_INTR_MASK_RX_RXJABBERERROR_Mask);\
 } while(0)
 
-/*#define DMA_IER7_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXRUNTERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_RSE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXRUNTERROR_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MMC_INTR_MASK_RX_RXRUNTERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_IER7_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MMC_INTR_MASK_RX_RXRUNTERROR_Wr_Mask (ULONG)(0xffffff7f)
 
-#define DMA_IER7_RSE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXRUNTERROR_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_RSE_Wr_Mask) | ((data & DMA_IER7_RSE_Mask)<<8));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXRUNTERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXRUNTERROR_Mask)<<7));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_RSE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 8) & DMA_IER7_RSE_Mask);\
+#define MMC_INTR_MASK_RX_RXRUNTERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 7) & MMC_INTR_MASK_RX_RXRUNTERROR_Mask);\
 } while(0)
 
-/*#define DMA_IER7_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_RWTE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_IER7_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_Wr_Mask (ULONG)(0xffffffbf)
 
-#define DMA_IER7_RWTE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_RWTE_Wr_Mask) | ((data & DMA_IER7_RWTE_Mask)<<9));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXALIGNMENTERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask)<<6));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_RWTE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 9) & DMA_IER7_RWTE_Mask);\
+#define MMC_INTR_MASK_RX_RXALIGNMENTERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 6) & MMC_INTR_MASK_RX_RXALIGNMENTERROR_Mask);\
 } while(0)
 
-/*#define DMA_IER7_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXCRCERROR_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_ETIE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXCRCERROR_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MMC_INTR_MASK_RX_RXCRCERROR_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_IER7_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MMC_INTR_MASK_RX_RXCRCERROR_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_IER7_ETIE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXCRCERROR_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_ETIE_Wr_Mask) | ((data & DMA_IER7_ETIE_Mask)<<10));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXCRCERROR_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXCRCERROR_Mask)<<5));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_ETIE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 10) & DMA_IER7_ETIE_Mask);\
+#define MMC_INTR_MASK_RX_RXCRCERROR_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 5) & MMC_INTR_MASK_RX_RXCRCERROR_Mask);\
 } while(0)
 
-/*#define DMA_IER7_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_ERIE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_IER7_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_IER7_ERIE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_ERIE_Wr_Mask) | ((data & DMA_IER7_ERIE_Mask)<<11));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask)<<4));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_ERIE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 11) & DMA_IER7_ERIE_Mask);\
+#define MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 4) & MMC_INTR_MASK_RX_RXMULTICASTFRAMES_G_Mask);\
 } while(0)
 
-/*#define DMA_IER7_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_FBEE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define DMA_IER7_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Wr_Mask (ULONG)(0xfffffff7)
 
-#define DMA_IER7_FBEE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_FBEE_Wr_Mask) | ((data & DMA_IER7_FBEE_Mask)<<12));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask)<<3));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_FBEE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 12) & DMA_IER7_FBEE_Mask);\
+#define MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 3) & MMC_INTR_MASK_RX_RXBROADCASTFRAMES_G_Mask);\
 } while(0)
 
-/*#define DMA_IER7_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_CDEE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_IER7_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Wr_Mask (ULONG)(0xfffffffb)
 
-#define DMA_IER7_CDEE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_CDEE_Wr_Mask) | ((data & DMA_IER7_CDEE_Mask)<<13));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask)<<2));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_CDEE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 13) & DMA_IER7_CDEE_Mask);\
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_G_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 2) & MMC_INTR_MASK_RX_RXOCTETCOUNT_G_Mask);\
 } while(0)
 
-/*#define DMA_IER7_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_AIE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_IER7_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_IER7_AIE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_AIE_Wr_Mask) | ((data & DMA_IER7_AIE_Mask)<<15));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask)<<1));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_AIE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 15) & DMA_IER7_AIE_Mask);\
+#define MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 1) & MMC_INTR_MASK_RX_RXOCTETCOUNT_GB_Mask);\
 } while(0)
 
-/*#define DMA_IER7_NIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER7_NIE_Mask (ULONG)(0x1)
+#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask (ULONG)(0x1)
 
-/*#define DMA_IER7_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_IER7_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Wr_Mask (ULONG)(0xfffffffe)
 
-#define DMA_IER7_NIE_UdfWr(data) do {\
+#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER7_RgRd(v);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_3))|((( 0) & (DMA_IER7_Mask_3))<<3);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_14))|((( 0) & (DMA_IER7_Mask_14))<<14);\
-		v = (v & (DMA_IER7_RES_Wr_Mask_17))|((( 0) & (DMA_IER7_Mask_17))<<17);\
-		v = ((v & DMA_IER7_NIE_Wr_Mask) | ((data & DMA_IER7_NIE_Mask)<<16));\
-		DMA_IER7_RgWr(v);\
+		MMC_INTR_MASK_RX_RgRd(v);\
+		v = (v & (MMC_INTR_MASK_RX_RES_Wr_Mask_24))|((( 0) & (MMC_INTR_MASK_RX_Mask_24))<<24);\
+		v = ((v & MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Wr_Mask) | ((data & MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask)<<0));\
+		MMC_INTR_MASK_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER7_NIE_UdfRd(data) do {\
-		DMA_IER7_RgRd(data);\
-		data = ((data >> 16) & DMA_IER7_NIE_Mask);\
+#define MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_UdfRd(data) do {\
+		MMC_INTR_MASK_RX_RgRd(data);\
+		data = ((data >> 0) & MMC_INTR_MASK_RX_RXFRAMECOUNT_GB_Mask);\
 } while(0)
 
 
-#define DMA_IER6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1434))
+#define MMC_INTR_TX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x708))
 
-#define DMA_IER6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER6_RgOffAddr);\
+#define MMC_INTR_TX_RgWr(data) do {\
+		iowrite32(data, (void *)MMC_INTR_TX_RgOffAddr);\
 } while(0)
 
-#define DMA_IER6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER6_RgOffAddr);\
+#define MMC_INTR_TX_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_INTR_TX_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_IER6_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_IER6_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_IER6_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
-
-#define DMA_IER6_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
-
-/*#define  DMA_IER6_Mask_14 (ULONG)(~(~0<<(1)))*/
-
-#define  DMA_IER6_Mask_14 (ULONG)(0x1)
-
-/*#define DMA_IER6_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
-
-#define DMA_IER6_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
-
-/*#define  DMA_IER6_Mask_17 (ULONG)(~(~0<<(15)))*/
+/*#define  MMC_INTR_TX_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  DMA_IER6_Mask_17 (ULONG)(0x7fff)
+#define  MMC_INTR_TX_Mask_26 (ULONG)(0x3f)
 
-/*#define DMA_IER6_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
+/*#define MMC_INTR_TX_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define DMA_IER6_RES_Wr_Mask_17 (ULONG)(0x1ffff)
+#define MMC_INTR_TX_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define DMA_IER6_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXOSIZEGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_TIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXOSIZEGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MMC_INTR_TX_TXOSIZEGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (25)))*/
 
-#define DMA_IER6_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_INTR_TX_TXOSIZEGPIS_Wr_Mask (ULONG)(0xfdffffff)
 
-#define DMA_IER6_TIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXOSIZEGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_TIE_Wr_Mask) | ((data & DMA_IER6_TIE_Mask)<<0));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXOSIZEGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXOSIZEGPIS_Mask)<<25));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_TIE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 0) & DMA_IER6_TIE_Mask);\
+#define MMC_INTR_TX_TXOSIZEGPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 25) & MMC_INTR_TX_TXOSIZEGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXVLANGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_TXSE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXVLANGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MMC_INTR_TX_TXVLANGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define DMA_IER6_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_INTR_TX_TXVLANGPIS_Wr_Mask (ULONG)(0xfeffffff)
 
-#define DMA_IER6_TXSE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXVLANGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_TXSE_Wr_Mask) | ((data & DMA_IER6_TXSE_Mask)<<1));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXVLANGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXVLANGPIS_Mask)<<24));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_TXSE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 1) & DMA_IER6_TXSE_Mask);\
+#define MMC_INTR_TX_TXVLANGPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 24) & MMC_INTR_TX_TXVLANGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXPAUSPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_TBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXPAUSPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MMC_INTR_TX_TXPAUSPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
 
-#define DMA_IER6_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MMC_INTR_TX_TXPAUSPIS_Wr_Mask (ULONG)(0xff7fffff)
 
-#define DMA_IER6_TBUE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXPAUSPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_TBUE_Wr_Mask) | ((data & DMA_IER6_TBUE_Mask)<<2));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXPAUSPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXPAUSPIS_Mask)<<23));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_TBUE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 2) & DMA_IER6_TBUE_Mask);\
+#define MMC_INTR_TX_TXPAUSPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 23) & MMC_INTR_TX_TXPAUSPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXEXDEFPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_RIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXEXDEFPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MMC_INTR_TX_TXEXDEFPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
 
-#define DMA_IER6_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MMC_INTR_TX_TXEXDEFPIS_Wr_Mask (ULONG)(0xffbfffff)
 
-#define DMA_IER6_RIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXEXDEFPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_RIE_Wr_Mask) | ((data & DMA_IER6_RIE_Mask)<<6));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXEXDEFPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXEXDEFPIS_Mask)<<22));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_RIE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 6) & DMA_IER6_RIE_Mask);\
+#define MMC_INTR_TX_TXEXDEFPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 22) & MMC_INTR_TX_TXEXDEFPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXGPKTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_RBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXGPKTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MMC_INTR_TX_TXGPKTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
 
-#define DMA_IER6_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MMC_INTR_TX_TXGPKTIS_Wr_Mask (ULONG)(0xffdfffff)
 
-#define DMA_IER6_RBUE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXGPKTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_RBUE_Wr_Mask) | ((data & DMA_IER6_RBUE_Mask)<<7));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXGPKTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGPKTIS_Mask)<<21));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_RBUE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 7) & DMA_IER6_RBUE_Mask);\
+#define MMC_INTR_TX_TXGPKTIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 21) & MMC_INTR_TX_TXGPKTIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXGOCTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_RSE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXGOCTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MMC_INTR_TX_TXGOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
 
-#define DMA_IER6_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MMC_INTR_TX_TXGOCTIS_Wr_Mask (ULONG)(0xffefffff)
 
-#define DMA_IER6_RSE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXGOCTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_RSE_Wr_Mask) | ((data & DMA_IER6_RSE_Mask)<<8));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXGOCTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGOCTIS_Mask)<<20));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_RSE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 8) & DMA_IER6_RSE_Mask);\
+#define MMC_INTR_TX_TXGOCTIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 20) & MMC_INTR_TX_TXGOCTIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXCARERPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_RWTE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXCARERPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MMC_INTR_TX_TXCARERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
 
-#define DMA_IER6_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MMC_INTR_TX_TXCARERPIS_Wr_Mask (ULONG)(0xfff7ffff)
 
-#define DMA_IER6_RWTE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXCARERPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_RWTE_Wr_Mask) | ((data & DMA_IER6_RWTE_Mask)<<9));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXCARERPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXCARERPIS_Mask)<<19));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_RWTE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 9) & DMA_IER6_RWTE_Mask);\
+#define MMC_INTR_TX_TXCARERPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 19) & MMC_INTR_TX_TXCARERPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXEXCOLPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_ETIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXEXCOLPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MMC_INTR_TX_TXEXCOLPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
 
-#define DMA_IER6_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MMC_INTR_TX_TXEXCOLPIS_Wr_Mask (ULONG)(0xfffbffff)
 
-#define DMA_IER6_ETIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXEXCOLPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_ETIE_Wr_Mask) | ((data & DMA_IER6_ETIE_Mask)<<10));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXEXCOLPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXEXCOLPIS_Mask)<<18));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_ETIE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 10) & DMA_IER6_ETIE_Mask);\
+#define MMC_INTR_TX_TXEXCOLPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 18) & MMC_INTR_TX_TXEXCOLPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXLATCOLPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_ERIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXLATCOLPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MMC_INTR_TX_TXLATCOLPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
 
-#define DMA_IER6_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MMC_INTR_TX_TXLATCOLPIS_Wr_Mask (ULONG)(0xfffdffff)
 
-#define DMA_IER6_ERIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXLATCOLPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_ERIE_Wr_Mask) | ((data & DMA_IER6_ERIE_Mask)<<11));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXLATCOLPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXLATCOLPIS_Mask)<<17));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_ERIE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 11) & DMA_IER6_ERIE_Mask);\
+#define MMC_INTR_TX_TXLATCOLPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 17) & MMC_INTR_TX_TXLATCOLPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXDEFPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_FBEE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXDEFPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MMC_INTR_TX_TXDEFPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
 
-#define DMA_IER6_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MMC_INTR_TX_TXDEFPIS_Wr_Mask (ULONG)(0xfffeffff)
 
-#define DMA_IER6_FBEE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXDEFPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_FBEE_Wr_Mask) | ((data & DMA_IER6_FBEE_Mask)<<12));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXDEFPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXDEFPIS_Mask)<<16));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_FBEE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 12) & DMA_IER6_FBEE_Mask);\
+#define MMC_INTR_TX_TXDEFPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 16) & MMC_INTR_TX_TXDEFPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXMCOLGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_CDEE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXMCOLGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MMC_INTR_TX_TXMCOLGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
 
-#define DMA_IER6_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MMC_INTR_TX_TXMCOLGPIS_Wr_Mask (ULONG)(0xffff7fff)
 
-#define DMA_IER6_CDEE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXMCOLGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_CDEE_Wr_Mask) | ((data & DMA_IER6_CDEE_Mask)<<13));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXMCOLGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXMCOLGPIS_Mask)<<15));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_CDEE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 13) & DMA_IER6_CDEE_Mask);\
+#define MMC_INTR_TX_TXMCOLGPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 15) & MMC_INTR_TX_TXMCOLGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXSCOLGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_AIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXSCOLGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MMC_INTR_TX_TXSCOLGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
 
-#define DMA_IER6_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MMC_INTR_TX_TXSCOLGPIS_Wr_Mask (ULONG)(0xffffbfff)
 
-#define DMA_IER6_AIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXSCOLGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_AIE_Wr_Mask) | ((data & DMA_IER6_AIE_Mask)<<15));\
-		DMA_IER6_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXSCOLGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXSCOLGPIS_Mask)<<14));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER6_AIE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 15) & DMA_IER6_AIE_Mask);\
+#define MMC_INTR_TX_TXSCOLGPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 14) & MMC_INTR_TX_TXSCOLGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER6_NIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXUFLOWERFIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER6_NIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXUFLOWERFIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER6_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MMC_INTR_TX_TXUFLOWERFIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define DMA_IER6_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MMC_INTR_TX_TXUFLOWERFIS_Wr_Mask (ULONG)(0xffffdfff)
 
-#define DMA_IER6_NIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXUFLOWERFIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER6_RgRd(v);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_3))|((( 0) & (DMA_IER6_Mask_3))<<3);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_14))|((( 0) & (DMA_IER6_Mask_14))<<14);\
-		v = (v & (DMA_IER6_RES_Wr_Mask_17))|((( 0) & (DMA_IER6_Mask_17))<<17);\
-		v = ((v & DMA_IER6_NIE_Wr_Mask) | ((data & DMA_IER6_NIE_Mask)<<16));\
-		DMA_IER6_RgWr(v);\
-} while(0)
-
-#define DMA_IER6_NIE_UdfRd(data) do {\
-		DMA_IER6_RgRd(data);\
-		data = ((data >> 16) & DMA_IER6_NIE_Mask);\
-} while(0)
-
-
-#define DMA_IER5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13b4))
-
-#define DMA_IER5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER5_RgOffAddr);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXUFLOWERFIS_Wr_Mask) | ((data & MMC_INTR_TX_TXUFLOWERFIS_Mask)<<13));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER5_RgOffAddr);\
+#define MMC_INTR_TX_TXUFLOWERFIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 13) & MMC_INTR_TX_TXUFLOWERFIS_Mask);\
 } while(0)
 
-/*#define  DMA_IER5_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_IER5_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_IER5_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
-
-#define DMA_IER5_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
-
-/*#define  DMA_IER5_Mask_14 (ULONG)(~(~0<<(1)))*/
-
-#define  DMA_IER5_Mask_14 (ULONG)(0x1)
-
-/*#define DMA_IER5_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
-
-#define DMA_IER5_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
-
-/*#define  DMA_IER5_Mask_17 (ULONG)(~(~0<<(15)))*/
-
-#define  DMA_IER5_Mask_17 (ULONG)(0x7fff)
-
-/*#define DMA_IER5_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
-
-#define DMA_IER5_RES_Wr_Mask_17 (ULONG)(0x1ffff)
-
-/*#define DMA_IER5_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXBCGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_TIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXBCGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MMC_INTR_TX_TXBCGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define DMA_IER5_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_INTR_TX_TXBCGBPIS_Wr_Mask (ULONG)(0xffffefff)
 
-#define DMA_IER5_TIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXBCGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_TIE_Wr_Mask) | ((data & DMA_IER5_TIE_Mask)<<0));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXBCGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXBCGBPIS_Mask)<<12));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_TIE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 0) & DMA_IER5_TIE_Mask);\
+#define MMC_INTR_TX_TXBCGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 12) & MMC_INTR_TX_TXBCGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXMCGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_TXSE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXMCGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MMC_INTR_TX_TXMCGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
 
-#define DMA_IER5_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_INTR_TX_TXMCGBPIS_Wr_Mask (ULONG)(0xfffff7ff)
 
-#define DMA_IER5_TXSE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXMCGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_TXSE_Wr_Mask) | ((data & DMA_IER5_TXSE_Mask)<<1));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXMCGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXMCGBPIS_Mask)<<11));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_TXSE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 1) & DMA_IER5_TXSE_Mask);\
+#define MMC_INTR_TX_TXMCGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 11) & MMC_INTR_TX_TXMCGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXUCGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_TBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXUCGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MMC_INTR_TX_TXUCGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
 
-#define DMA_IER5_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MMC_INTR_TX_TXUCGBPIS_Wr_Mask (ULONG)(0xfffffbff)
 
-#define DMA_IER5_TBUE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXUCGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_TBUE_Wr_Mask) | ((data & DMA_IER5_TBUE_Mask)<<2));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXUCGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXUCGBPIS_Mask)<<10));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_TBUE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 2) & DMA_IER5_TBUE_Mask);\
+#define MMC_INTR_TX_TXUCGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 10) & MMC_INTR_TX_TXUCGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_RIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_IER5_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_Wr_Mask (ULONG)(0xfffffdff)
 
-#define DMA_IER5_RIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_RIE_Wr_Mask) | ((data & DMA_IER5_RIE_Mask)<<6));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TX1024TMAXOCTGBFIS_Wr_Mask) | ((data & MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask)<<9));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_RIE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 6) & DMA_IER5_RIE_Mask);\
+#define MMC_INTR_TX_TX1024TMAXOCTGBFIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 9) & MMC_INTR_TX_TX1024TMAXOCTGBFIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TX512T1023OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_RBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TX512T1023OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MMC_INTR_TX_TX512T1023OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_IER5_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MMC_INTR_TX_TX512T1023OCTGBPIS_Wr_Mask (ULONG)(0xfffffeff)
 
-#define DMA_IER5_RBUE_UdfWr(data) do {\
+#define MMC_INTR_TX_TX512T1023OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_RBUE_Wr_Mask) | ((data & DMA_IER5_RBUE_Mask)<<7));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TX512T1023OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX512T1023OCTGBPIS_Mask)<<8));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_RBUE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 7) & DMA_IER5_RBUE_Mask);\
+#define MMC_INTR_TX_TX512T1023OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 8) & MMC_INTR_TX_TX512T1023OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TX256T511OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_RSE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TX256T511OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MMC_INTR_TX_TX256T511OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_IER5_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MMC_INTR_TX_TX256T511OCTGBPIS_Wr_Mask (ULONG)(0xffffff7f)
 
-#define DMA_IER5_RSE_UdfWr(data) do {\
+#define MMC_INTR_TX_TX256T511OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_RSE_Wr_Mask) | ((data & DMA_IER5_RSE_Mask)<<8));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TX256T511OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX256T511OCTGBPIS_Mask)<<7));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_RSE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 8) & DMA_IER5_RSE_Mask);\
+#define MMC_INTR_TX_TX256T511OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 7) & MMC_INTR_TX_TX256T511OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TX128T255OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_RWTE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TX128T255OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MMC_INTR_TX_TX128T255OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_IER5_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MMC_INTR_TX_TX128T255OCTGBPIS_Wr_Mask (ULONG)(0xffffffbf)
 
-#define DMA_IER5_RWTE_UdfWr(data) do {\
+#define MMC_INTR_TX_TX128T255OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_RWTE_Wr_Mask) | ((data & DMA_IER5_RWTE_Mask)<<9));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TX128T255OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX128T255OCTGBPIS_Mask)<<6));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_RWTE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 9) & DMA_IER5_RWTE_Mask);\
+#define MMC_INTR_TX_TX128T255OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 6) & MMC_INTR_TX_TX128T255OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TX65T127OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_ETIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TX65T127OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MMC_INTR_TX_TX65T127OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_IER5_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MMC_INTR_TX_TX65T127OCTGBPIS_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_IER5_ETIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TX65T127OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_ETIE_Wr_Mask) | ((data & DMA_IER5_ETIE_Mask)<<10));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TX65T127OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX65T127OCTGBPIS_Mask)<<5));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_ETIE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 10) & DMA_IER5_ETIE_Mask);\
+#define MMC_INTR_TX_TX65T127OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 5) & MMC_INTR_TX_TX65T127OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TX64OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_ERIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TX64OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MMC_INTR_TX_TX64OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_IER5_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MMC_INTR_TX_TX64OCTGBPIS_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_IER5_ERIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TX64OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_ERIE_Wr_Mask) | ((data & DMA_IER5_ERIE_Mask)<<11));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TX64OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_TX_TX64OCTGBPIS_Mask)<<4));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_ERIE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 11) & DMA_IER5_ERIE_Mask);\
+#define MMC_INTR_TX_TX64OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 4) & MMC_INTR_TX_TX64OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXMCGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_FBEE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXMCGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MMC_INTR_TX_TXMCGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define DMA_IER5_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MMC_INTR_TX_TXMCGPIS_Wr_Mask (ULONG)(0xfffffff7)
 
-#define DMA_IER5_FBEE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXMCGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_FBEE_Wr_Mask) | ((data & DMA_IER5_FBEE_Mask)<<12));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXMCGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXMCGPIS_Mask)<<3));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_FBEE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 12) & DMA_IER5_FBEE_Mask);\
+#define MMC_INTR_TX_TXMCGPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 3) & MMC_INTR_TX_TXMCGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXBCGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_CDEE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXBCGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MMC_INTR_TX_TXBCGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_IER5_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MMC_INTR_TX_TXBCGPIS_Wr_Mask (ULONG)(0xfffffffb)
 
-#define DMA_IER5_CDEE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXBCGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_CDEE_Wr_Mask) | ((data & DMA_IER5_CDEE_Mask)<<13));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXBCGPIS_Wr_Mask) | ((data & MMC_INTR_TX_TXBCGPIS_Mask)<<2));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_CDEE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 13) & DMA_IER5_CDEE_Mask);\
+#define MMC_INTR_TX_TXBCGPIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 2) & MMC_INTR_TX_TXBCGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXGBPKTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_AIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXGBPKTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MMC_INTR_TX_TXGBPKTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_IER5_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MMC_INTR_TX_TXGBPKTIS_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_IER5_AIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXGBPKTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_AIE_Wr_Mask) | ((data & DMA_IER5_AIE_Mask)<<15));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXGBPKTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGBPKTIS_Mask)<<1));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_AIE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 15) & DMA_IER5_AIE_Mask);\
+#define MMC_INTR_TX_TXGBPKTIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 1) & MMC_INTR_TX_TXGBPKTIS_Mask);\
 } while(0)
 
-/*#define DMA_IER5_NIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_TX_TXGBOCTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER5_NIE_Mask (ULONG)(0x1)
+#define MMC_INTR_TX_TXGBOCTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER5_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MMC_INTR_TX_TXGBOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_IER5_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MMC_INTR_TX_TXGBOCTIS_Wr_Mask (ULONG)(0xfffffffe)
 
-#define DMA_IER5_NIE_UdfWr(data) do {\
+#define MMC_INTR_TX_TXGBOCTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER5_RgRd(v);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_3))|((( 0) & (DMA_IER5_Mask_3))<<3);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_14))|((( 0) & (DMA_IER5_Mask_14))<<14);\
-		v = (v & (DMA_IER5_RES_Wr_Mask_17))|((( 0) & (DMA_IER5_Mask_17))<<17);\
-		v = ((v & DMA_IER5_NIE_Wr_Mask) | ((data & DMA_IER5_NIE_Mask)<<16));\
-		DMA_IER5_RgWr(v);\
+		MMC_INTR_TX_RgRd(v);\
+		v = (v & (MMC_INTR_TX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_TX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_TX_TXGBOCTIS_Wr_Mask) | ((data & MMC_INTR_TX_TXGBOCTIS_Mask)<<0));\
+		MMC_INTR_TX_RgWr(v);\
 } while(0)
 
-#define DMA_IER5_NIE_UdfRd(data) do {\
-		DMA_IER5_RgRd(data);\
-		data = ((data >> 16) & DMA_IER5_NIE_Mask);\
+#define MMC_INTR_TX_TXGBOCTIS_UdfRd(data) do {\
+		MMC_INTR_TX_RgRd(data);\
+		data = ((data >> 0) & MMC_INTR_TX_TXGBOCTIS_Mask);\
 } while(0)
 
 
-#define DMA_IER4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1334))
+#define MMC_INTR_RX_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x704))
 
-#define DMA_IER4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER4_RgOffAddr);\
+#define MMC_INTR_RX_RgWr(data) do {\
+		iowrite32(data, (void *)MMC_INTR_RX_RgOffAddr);\
 } while(0)
 
-#define DMA_IER4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER4_RgOffAddr);\
+#define MMC_INTR_RX_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_INTR_RX_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_IER4_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_IER4_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_IER4_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
-
-#define DMA_IER4_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
-
-/*#define  DMA_IER4_Mask_14 (ULONG)(~(~0<<(1)))*/
-
-#define  DMA_IER4_Mask_14 (ULONG)(0x1)
-
-/*#define DMA_IER4_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
-
-#define DMA_IER4_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
-
-/*#define  DMA_IER4_Mask_17 (ULONG)(~(~0<<(15)))*/
+/*#define  MMC_INTR_RX_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  DMA_IER4_Mask_17 (ULONG)(0x7fff)
+#define  MMC_INTR_RX_Mask_26 (ULONG)(0x3f)
 
-/*#define DMA_IER4_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
+/*#define MMC_INTR_RX_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define DMA_IER4_RES_Wr_Mask_17 (ULONG)(0x1ffff)
+#define MMC_INTR_RX_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define DMA_IER4_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXCTRLPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_TIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXCTRLPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MMC_INTR_RX_RXCTRLPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (25)))*/
 
-#define DMA_IER4_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_INTR_RX_RXCTRLPIS_Wr_Mask (ULONG)(0xfdffffff)
 
-#define DMA_IER4_TIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXCTRLPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_TIE_Wr_Mask) | ((data & DMA_IER4_TIE_Mask)<<0));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXCTRLPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXCTRLPIS_Mask)<<25));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_TIE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 0) & DMA_IER4_TIE_Mask);\
+#define MMC_INTR_RX_RXCTRLPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 25) & MMC_INTR_RX_RXCTRLPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXRCVERRPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_TXSE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXRCVERRPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MMC_INTR_RX_RXRCVERRPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (24)))*/
 
-#define DMA_IER4_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_INTR_RX_RXRCVERRPIS_Wr_Mask (ULONG)(0xfeffffff)
 
-#define DMA_IER4_TXSE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXRCVERRPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_TXSE_Wr_Mask) | ((data & DMA_IER4_TXSE_Mask)<<1));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXRCVERRPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXRCVERRPIS_Mask)<<24));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_TXSE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 1) & DMA_IER4_TXSE_Mask);\
+#define MMC_INTR_RX_RXRCVERRPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 24) & MMC_INTR_RX_RXRCVERRPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXWDOGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_TBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXWDOGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MMC_INTR_RX_RXWDOGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (23)))*/
 
-#define DMA_IER4_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MMC_INTR_RX_RXWDOGPIS_Wr_Mask (ULONG)(0xff7fffff)
 
-#define DMA_IER4_TBUE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXWDOGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_TBUE_Wr_Mask) | ((data & DMA_IER4_TBUE_Mask)<<2));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXWDOGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXWDOGPIS_Mask)<<23));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_TBUE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 2) & DMA_IER4_TBUE_Mask);\
+#define MMC_INTR_RX_RXWDOGPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 23) & MMC_INTR_RX_RXWDOGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXVLANGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_RIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXVLANGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MMC_INTR_RX_RXVLANGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (22)))*/
 
-#define DMA_IER4_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MMC_INTR_RX_RXVLANGBPIS_Wr_Mask (ULONG)(0xffbfffff)
 
-#define DMA_IER4_RIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXVLANGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_RIE_Wr_Mask) | ((data & DMA_IER4_RIE_Mask)<<6));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXVLANGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXVLANGBPIS_Mask)<<22));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_RIE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 6) & DMA_IER4_RIE_Mask);\
+#define MMC_INTR_RX_RXVLANGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 22) & MMC_INTR_RX_RXVLANGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXFOVPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_RBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXFOVPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MMC_INTR_RX_RXFOVPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (21)))*/
 
-#define DMA_IER4_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MMC_INTR_RX_RXFOVPIS_Wr_Mask (ULONG)(0xffdfffff)
 
-#define DMA_IER4_RBUE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXFOVPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_RBUE_Wr_Mask) | ((data & DMA_IER4_RBUE_Mask)<<7));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXFOVPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXFOVPIS_Mask)<<21));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_RBUE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 7) & DMA_IER4_RBUE_Mask);\
+#define MMC_INTR_RX_RXFOVPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 21) & MMC_INTR_RX_RXFOVPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXPAUSPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_RSE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXPAUSPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MMC_INTR_RX_RXPAUSPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (20)))*/
 
-#define DMA_IER4_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MMC_INTR_RX_RXPAUSPIS_Wr_Mask (ULONG)(0xffefffff)
 
-#define DMA_IER4_RSE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXPAUSPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_RSE_Wr_Mask) | ((data & DMA_IER4_RSE_Mask)<<8));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXPAUSPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXPAUSPIS_Mask)<<20));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_RSE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 8) & DMA_IER4_RSE_Mask);\
+#define MMC_INTR_RX_RXPAUSPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 20) & MMC_INTR_RX_RXPAUSPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXORANGEPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_RWTE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXORANGEPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MMC_INTR_RX_RXORANGEPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (19)))*/
 
-#define DMA_IER4_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MMC_INTR_RX_RXORANGEPIS_Wr_Mask (ULONG)(0xfff7ffff)
 
-#define DMA_IER4_RWTE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXORANGEPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_RWTE_Wr_Mask) | ((data & DMA_IER4_RWTE_Mask)<<9));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXORANGEPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXORANGEPIS_Mask)<<19));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_RWTE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 9) & DMA_IER4_RWTE_Mask);\
+#define MMC_INTR_RX_RXORANGEPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 19) & MMC_INTR_RX_RXORANGEPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXLENERPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_ETIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXLENERPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MMC_INTR_RX_RXLENERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (18)))*/
 
-#define DMA_IER4_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MMC_INTR_RX_RXLENERPIS_Wr_Mask (ULONG)(0xfffbffff)
 
-#define DMA_IER4_ETIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXLENERPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_ETIE_Wr_Mask) | ((data & DMA_IER4_ETIE_Mask)<<10));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXLENERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXLENERPIS_Mask)<<18));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_ETIE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 10) & DMA_IER4_ETIE_Mask);\
+#define MMC_INTR_RX_RXLENERPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 18) & MMC_INTR_RX_RXLENERPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXUCBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_ERIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXUCBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MMC_INTR_RX_RXUCBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (17)))*/
 
-#define DMA_IER4_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MMC_INTR_RX_RXUCBPIS_Wr_Mask (ULONG)(0xfffdffff)
 
-#define DMA_IER4_ERIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXUCBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_ERIE_Wr_Mask) | ((data & DMA_IER4_ERIE_Mask)<<11));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXUCBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXUCBPIS_Mask)<<17));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_ERIE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 11) & DMA_IER4_ERIE_Mask);\
+#define MMC_INTR_RX_RXUCBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 17) & MMC_INTR_RX_RXUCBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_FBEE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
 
-#define DMA_IER4_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_Wr_Mask (ULONG)(0xfffeffff)
 
-#define DMA_IER4_FBEE_UdfWr(data) do {\
+#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_FBEE_Wr_Mask) | ((data & DMA_IER4_FBEE_Mask)<<12));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RX1024TMAXOCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask)<<16));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_FBEE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 12) & DMA_IER4_FBEE_Mask);\
+#define MMC_INTR_RX_RX1024TMAXOCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 16) & MMC_INTR_RX_RX1024TMAXOCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RX512T1023OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_CDEE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RX512T1023OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MMC_INTR_RX_RX512T1023OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
 
-#define DMA_IER4_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MMC_INTR_RX_RX512T1023OCTGBPIS_Wr_Mask (ULONG)(0xffff7fff)
 
-#define DMA_IER4_CDEE_UdfWr(data) do {\
+#define MMC_INTR_RX_RX512T1023OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_CDEE_Wr_Mask) | ((data & DMA_IER4_CDEE_Mask)<<13));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RX512T1023OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX512T1023OCTGBPIS_Mask)<<15));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_CDEE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 13) & DMA_IER4_CDEE_Mask);\
+#define MMC_INTR_RX_RX512T1023OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 15) & MMC_INTR_RX_RX512T1023OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RX256T511OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_AIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RX256T511OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MMC_INTR_RX_RX256T511OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
 
-#define DMA_IER4_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MMC_INTR_RX_RX256T511OCTGBPIS_Wr_Mask (ULONG)(0xffffbfff)
 
-#define DMA_IER4_AIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RX256T511OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_AIE_Wr_Mask) | ((data & DMA_IER4_AIE_Mask)<<15));\
-		DMA_IER4_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RX256T511OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX256T511OCTGBPIS_Mask)<<14));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER4_AIE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 15) & DMA_IER4_AIE_Mask);\
+#define MMC_INTR_RX_RX256T511OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 14) & MMC_INTR_RX_RX256T511OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER4_NIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RX128T255OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER4_NIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RX128T255OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER4_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MMC_INTR_RX_RX128T255OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define DMA_IER4_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MMC_INTR_RX_RX128T255OCTGBPIS_Wr_Mask (ULONG)(0xffffdfff)
 
-#define DMA_IER4_NIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RX128T255OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER4_RgRd(v);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_3))|((( 0) & (DMA_IER4_Mask_3))<<3);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_14))|((( 0) & (DMA_IER4_Mask_14))<<14);\
-		v = (v & (DMA_IER4_RES_Wr_Mask_17))|((( 0) & (DMA_IER4_Mask_17))<<17);\
-		v = ((v & DMA_IER4_NIE_Wr_Mask) | ((data & DMA_IER4_NIE_Mask)<<16));\
-		DMA_IER4_RgWr(v);\
-} while(0)
-
-#define DMA_IER4_NIE_UdfRd(data) do {\
-		DMA_IER4_RgRd(data);\
-		data = ((data >> 16) & DMA_IER4_NIE_Mask);\
-} while(0)
-
-
-#define DMA_IER3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12b4))
-
-#define DMA_IER3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER3_RgOffAddr);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RX128T255OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX128T255OCTGBPIS_Mask)<<13));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER3_RgOffAddr);\
+#define MMC_INTR_RX_RX128T255OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 13) & MMC_INTR_RX_RX128T255OCTGBPIS_Mask);\
 } while(0)
 
-/*#define  DMA_IER3_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_IER3_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_IER3_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
-
-#define DMA_IER3_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
-
-/*#define  DMA_IER3_Mask_14 (ULONG)(~(~0<<(1)))*/
-
-#define  DMA_IER3_Mask_14 (ULONG)(0x1)
-
-/*#define DMA_IER3_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
-
-#define DMA_IER3_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
-
-/*#define  DMA_IER3_Mask_17 (ULONG)(~(~0<<(15)))*/
-
-#define  DMA_IER3_Mask_17 (ULONG)(0x7fff)
-
-/*#define DMA_IER3_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
-
-#define DMA_IER3_RES_Wr_Mask_17 (ULONG)(0x1ffff)
-
-/*#define DMA_IER3_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RX65T127OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_TIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RX65T127OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MMC_INTR_RX_RX65T127OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define DMA_IER3_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_INTR_RX_RX65T127OCTGBPIS_Wr_Mask (ULONG)(0xffffefff)
 
-#define DMA_IER3_TIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RX65T127OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_TIE_Wr_Mask) | ((data & DMA_IER3_TIE_Mask)<<0));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RX65T127OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX65T127OCTGBPIS_Mask)<<12));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_TIE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 0) & DMA_IER3_TIE_Mask);\
+#define MMC_INTR_RX_RX65T127OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 12) & MMC_INTR_RX_RX65T127OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RX64OCTGBPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_TXSE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RX64OCTGBPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MMC_INTR_RX_RX64OCTGBPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
 
-#define DMA_IER3_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_INTR_RX_RX64OCTGBPIS_Wr_Mask (ULONG)(0xfffff7ff)
 
-#define DMA_IER3_TXSE_UdfWr(data) do {\
+#define MMC_INTR_RX_RX64OCTGBPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_TXSE_Wr_Mask) | ((data & DMA_IER3_TXSE_Mask)<<1));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RX64OCTGBPIS_Wr_Mask) | ((data & MMC_INTR_RX_RX64OCTGBPIS_Mask)<<11));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_TXSE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 1) & DMA_IER3_TXSE_Mask);\
+#define MMC_INTR_RX_RX64OCTGBPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 11) & MMC_INTR_RX_RX64OCTGBPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXOSIZEGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_TBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXOSIZEGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MMC_INTR_RX_RXOSIZEGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
 
-#define DMA_IER3_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MMC_INTR_RX_RXOSIZEGPIS_Wr_Mask (ULONG)(0xfffffbff)
 
-#define DMA_IER3_TBUE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXOSIZEGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_TBUE_Wr_Mask) | ((data & DMA_IER3_TBUE_Mask)<<2));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXOSIZEGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXOSIZEGPIS_Mask)<<10));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_TBUE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 2) & DMA_IER3_TBUE_Mask);\
+#define MMC_INTR_RX_RXOSIZEGPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 10) & MMC_INTR_RX_RXOSIZEGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXUSIZEGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_RIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXUSIZEGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MMC_INTR_RX_RXUSIZEGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_IER3_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MMC_INTR_RX_RXUSIZEGPIS_Wr_Mask (ULONG)(0xfffffdff)
 
-#define DMA_IER3_RIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXUSIZEGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_RIE_Wr_Mask) | ((data & DMA_IER3_RIE_Mask)<<6));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXUSIZEGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXUSIZEGPIS_Mask)<<9));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_RIE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 6) & DMA_IER3_RIE_Mask);\
+#define MMC_INTR_RX_RXUSIZEGPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 9) & MMC_INTR_RX_RXUSIZEGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXJABERPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_RBUE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXJABERPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MMC_INTR_RX_RXJABERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_IER3_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MMC_INTR_RX_RXJABERPIS_Wr_Mask (ULONG)(0xfffffeff)
 
-#define DMA_IER3_RBUE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXJABERPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_RBUE_Wr_Mask) | ((data & DMA_IER3_RBUE_Mask)<<7));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXJABERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXJABERPIS_Mask)<<8));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_RBUE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 7) & DMA_IER3_RBUE_Mask);\
+#define MMC_INTR_RX_RXJABERPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 8) & MMC_INTR_RX_RXJABERPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXRUNTRIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_RSE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXRUNTRIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MMC_INTR_RX_RXRUNTRIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_IER3_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MMC_INTR_RX_RXRUNTRIS_Wr_Mask (ULONG)(0xffffff7f)
 
-#define DMA_IER3_RSE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXRUNTRIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_RSE_Wr_Mask) | ((data & DMA_IER3_RSE_Mask)<<8));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXRUNTRIS_Wr_Mask) | ((data & MMC_INTR_RX_RXRUNTRIS_Mask)<<7));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_RSE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 8) & DMA_IER3_RSE_Mask);\
+#define MMC_INTR_RX_RXRUNTRIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 7) & MMC_INTR_RX_RXRUNTRIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXALGNERPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_RWTE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXALGNERPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MMC_INTR_RX_RXALGNERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_IER3_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MMC_INTR_RX_RXALGNERPIS_Wr_Mask (ULONG)(0xffffffbf)
 
-#define DMA_IER3_RWTE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXALGNERPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_RWTE_Wr_Mask) | ((data & DMA_IER3_RWTE_Mask)<<9));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXALGNERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXALGNERPIS_Mask)<<6));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_RWTE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 9) & DMA_IER3_RWTE_Mask);\
+#define MMC_INTR_RX_RXALGNERPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 6) & MMC_INTR_RX_RXALGNERPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXCRCERPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_ETIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXCRCERPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MMC_INTR_RX_RXCRCERPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_IER3_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MMC_INTR_RX_RXCRCERPIS_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_IER3_ETIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXCRCERPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_ETIE_Wr_Mask) | ((data & DMA_IER3_ETIE_Mask)<<10));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXCRCERPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXCRCERPIS_Mask)<<5));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_ETIE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 10) & DMA_IER3_ETIE_Mask);\
+#define MMC_INTR_RX_RXCRCERPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 5) & MMC_INTR_RX_RXCRCERPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXMCGPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_ERIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXMCGPIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MMC_INTR_RX_RXMCGPIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_IER3_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MMC_INTR_RX_RXMCGPIS_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_IER3_ERIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXMCGPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_ERIE_Wr_Mask) | ((data & DMA_IER3_ERIE_Mask)<<11));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXMCGPIS_Wr_Mask) | ((data & MMC_INTR_RX_RXMCGPIS_Mask)<<4));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_ERIE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 11) & DMA_IER3_ERIE_Mask);\
+#define MMC_INTR_RX_RXMCGPIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 4) & MMC_INTR_RX_RXMCGPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXBCGTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_FBEE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXBCGTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MMC_INTR_RX_RXBCGTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define DMA_IER3_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MMC_INTR_RX_RXBCGTIS_Wr_Mask (ULONG)(0xfffffff7)
 
-#define DMA_IER3_FBEE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXBCGTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_FBEE_Wr_Mask) | ((data & DMA_IER3_FBEE_Mask)<<12));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXBCGTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXBCGTIS_Mask)<<3));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_FBEE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 12) & DMA_IER3_FBEE_Mask);\
+#define MMC_INTR_RX_RXBCGTIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 3) & MMC_INTR_RX_RXBCGTIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXGOCTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_CDEE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXGOCTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MMC_INTR_RX_RXGOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_IER3_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MMC_INTR_RX_RXGOCTIS_Wr_Mask (ULONG)(0xfffffffb)
 
-#define DMA_IER3_CDEE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXGOCTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_CDEE_Wr_Mask) | ((data & DMA_IER3_CDEE_Mask)<<13));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXGOCTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXGOCTIS_Mask)<<2));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_CDEE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 13) & DMA_IER3_CDEE_Mask);\
+#define MMC_INTR_RX_RXGOCTIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 2) & MMC_INTR_RX_RXGOCTIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXGBOCTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_AIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXGBOCTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MMC_INTR_RX_RXGBOCTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_IER3_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MMC_INTR_RX_RXGBOCTIS_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_IER3_AIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXGBOCTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_AIE_Wr_Mask) | ((data & DMA_IER3_AIE_Mask)<<15));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXGBOCTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXGBOCTIS_Mask)<<1));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_AIE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 15) & DMA_IER3_AIE_Mask);\
+#define MMC_INTR_RX_RXGBOCTIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 1) & MMC_INTR_RX_RXGBOCTIS_Mask);\
 } while(0)
 
-/*#define DMA_IER3_NIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_INTR_RX_RXGBPKTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER3_NIE_Mask (ULONG)(0x1)
+#define MMC_INTR_RX_RXGBPKTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_IER3_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MMC_INTR_RX_RXGBPKTIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_IER3_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MMC_INTR_RX_RXGBPKTIS_Wr_Mask (ULONG)(0xfffffffe)
 
-#define DMA_IER3_NIE_UdfWr(data) do {\
+#define MMC_INTR_RX_RXGBPKTIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER3_RgRd(v);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_3))|((( 0) & (DMA_IER3_Mask_3))<<3);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_14))|((( 0) & (DMA_IER3_Mask_14))<<14);\
-		v = (v & (DMA_IER3_RES_Wr_Mask_17))|((( 0) & (DMA_IER3_Mask_17))<<17);\
-		v = ((v & DMA_IER3_NIE_Wr_Mask) | ((data & DMA_IER3_NIE_Mask)<<16));\
-		DMA_IER3_RgWr(v);\
+		MMC_INTR_RX_RgRd(v);\
+		v = (v & (MMC_INTR_RX_RES_Wr_Mask_26))|((( 0) & (MMC_INTR_RX_Mask_26))<<26);\
+		v = ((v & MMC_INTR_RX_RXGBPKTIS_Wr_Mask) | ((data & MMC_INTR_RX_RXGBPKTIS_Mask)<<0));\
+		MMC_INTR_RX_RgWr(v);\
 } while(0)
 
-#define DMA_IER3_NIE_UdfRd(data) do {\
-		DMA_IER3_RgRd(data);\
-		data = ((data >> 16) & DMA_IER3_NIE_Mask);\
+#define MMC_INTR_RX_RXGBPKTIS_UdfRd(data) do {\
+		MMC_INTR_RX_RgRd(data);\
+		data = ((data >> 0) & MMC_INTR_RX_RXGBPKTIS_Mask);\
 } while(0)
 
 
-#define DMA_IER2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1234))
+#define MMC_CNTRL_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x700))
 
-#define DMA_IER2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER2_RgOffAddr);\
+#define MMC_CNTRL_RgWr(data) do {\
+		iowrite32(data, (void *)MMC_CNTRL_RgOffAddr);\
 } while(0)
 
-#define DMA_IER2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER2_RgOffAddr);\
+#define MMC_CNTRL_RgRd(data) do {\
+		(data) = ioread32((void *)MMC_CNTRL_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_IER2_Mask_3 (ULONG)(~(~0<<(3)))*/
+/*#define  MMC_CNTRL_Mask_9 (ULONG)(~(~0<<(23)))*/
+
+#define  MMC_CNTRL_Mask_9 (ULONG)(0x7fffff)
+
+/*#define MMC_CNTRL_RES_Wr_Mask_9 (ULONG)(~((~(~0<<(23)))<<(9)))*/
 
-#define  DMA_IER2_Mask_3 (ULONG)(0x7)
+#define MMC_CNTRL_RES_Wr_Mask_9 (ULONG)(0x1ff)
 
-/*#define DMA_IER2_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define  MMC_CNTRL_Mask_6 (ULONG)(~(~0<<(2)))*/
 
-#define DMA_IER2_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define  MMC_CNTRL_Mask_6 (ULONG)(0x3)
 
-/*#define  DMA_IER2_Mask_14 (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_RES_Wr_Mask_6 (ULONG)(~((~(~0<<(2)))<<(6)))*/
 
-#define  DMA_IER2_Mask_14 (ULONG)(0x1)
+#define MMC_CNTRL_RES_Wr_Mask_6 (ULONG)(0xffffff3f)
 
-/*#define DMA_IER2_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
+/*#define MMC_CNTRL_UCDBC_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
+#define MMC_CNTRL_UCDBC_Mask (ULONG)(0x1)
 
-/*#define  DMA_IER2_Mask_17 (ULONG)(~(~0<<(15)))*/
+/*#define MMC_CNTRL_UCDBC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define  DMA_IER2_Mask_17 (ULONG)(0x7fff)
+#define MMC_CNTRL_UCDBC_Wr_Mask (ULONG)(0xfffffeff)
 
-/*#define DMA_IER2_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
+#define MMC_CNTRL_UCDBC_UdfWr(data) do {\
+		ULONG v;\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_UCDBC_Wr_Mask) | ((data & MMC_CNTRL_UCDBC_Mask)<<8));\
+		MMC_CNTRL_RgWr(v);\
+} while(0)
 
-#define DMA_IER2_RES_Wr_Mask_17 (ULONG)(0x1ffff)
+#define MMC_CNTRL_UCDBC_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 8) & MMC_CNTRL_UCDBC_Mask);\
+} while(0)
 
-/*#define DMA_IER2_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_CNPRSTLVL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_TIE_Mask (ULONG)(0x1)
+#define MMC_CNTRL_CNPRSTLVL_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MMC_CNTRL_CNPRSTLVL_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_IER2_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MMC_CNTRL_CNPRSTLVL_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_IER2_TIE_UdfWr(data) do {\
+#define MMC_CNTRL_CNPRSTLVL_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_TIE_Wr_Mask) | ((data & DMA_IER2_TIE_Mask)<<0));\
-		DMA_IER2_RgWr(v);\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_CNPRSTLVL_Wr_Mask) | ((data & MMC_CNTRL_CNPRSTLVL_Mask)<<5));\
+		MMC_CNTRL_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_TIE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 0) & DMA_IER2_TIE_Mask);\
+#define MMC_CNTRL_CNPRSTLVL_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 5) & MMC_CNTRL_CNPRSTLVL_Mask);\
 } while(0)
 
-/*#define DMA_IER2_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_CNTPRST_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_TXSE_Mask (ULONG)(0x1)
+#define MMC_CNTRL_CNTPRST_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MMC_CNTRL_CNTPRST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_IER2_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MMC_CNTRL_CNTPRST_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_IER2_TXSE_UdfWr(data) do {\
+#define MMC_CNTRL_CNTPRST_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_TXSE_Wr_Mask) | ((data & DMA_IER2_TXSE_Mask)<<1));\
-		DMA_IER2_RgWr(v);\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_CNTPRST_Wr_Mask) | ((data & MMC_CNTRL_CNTPRST_Mask)<<4));\
+		MMC_CNTRL_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_TXSE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 1) & DMA_IER2_TXSE_Mask);\
+#define MMC_CNTRL_CNTPRST_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 4) & MMC_CNTRL_CNTPRST_Mask);\
 } while(0)
 
-/*#define DMA_IER2_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_CNTFREEZ_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_TBUE_Mask (ULONG)(0x1)
+#define MMC_CNTRL_CNTFREEZ_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MMC_CNTRL_CNTFREEZ_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define DMA_IER2_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MMC_CNTRL_CNTFREEZ_Wr_Mask (ULONG)(0xfffffff7)
 
-#define DMA_IER2_TBUE_UdfWr(data) do {\
+#define MMC_CNTRL_CNTFREEZ_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_TBUE_Wr_Mask) | ((data & DMA_IER2_TBUE_Mask)<<2));\
-		DMA_IER2_RgWr(v);\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_CNTFREEZ_Wr_Mask) | ((data & MMC_CNTRL_CNTFREEZ_Mask)<<3));\
+		MMC_CNTRL_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_TBUE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 2) & DMA_IER2_TBUE_Mask);\
+#define MMC_CNTRL_CNTFREEZ_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 3) & MMC_CNTRL_CNTFREEZ_Mask);\
 } while(0)
 
-/*#define DMA_IER2_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_RSTONRD_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_RIE_Mask (ULONG)(0x1)
+#define MMC_CNTRL_RSTONRD_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MMC_CNTRL_RSTONRD_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_IER2_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MMC_CNTRL_RSTONRD_Wr_Mask (ULONG)(0xfffffffb)
 
-#define DMA_IER2_RIE_UdfWr(data) do {\
+#define MMC_CNTRL_RSTONRD_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_RIE_Wr_Mask) | ((data & DMA_IER2_RIE_Mask)<<6));\
-		DMA_IER2_RgWr(v);\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_RSTONRD_Wr_Mask) | ((data & MMC_CNTRL_RSTONRD_Mask)<<2));\
+		MMC_CNTRL_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_RIE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 6) & DMA_IER2_RIE_Mask);\
+#define MMC_CNTRL_RSTONRD_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 2) & MMC_CNTRL_RSTONRD_Mask);\
 } while(0)
 
-/*#define DMA_IER2_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_CNTSTOPRO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_RBUE_Mask (ULONG)(0x1)
+#define MMC_CNTRL_CNTSTOPRO_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MMC_CNTRL_CNTSTOPRO_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_IER2_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MMC_CNTRL_CNTSTOPRO_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_IER2_RBUE_UdfWr(data) do {\
+#define MMC_CNTRL_CNTSTOPRO_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_RBUE_Wr_Mask) | ((data & DMA_IER2_RBUE_Mask)<<7));\
-		DMA_IER2_RgWr(v);\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_CNTSTOPRO_Wr_Mask) | ((data & MMC_CNTRL_CNTSTOPRO_Mask)<<1));\
+		MMC_CNTRL_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_RBUE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 7) & DMA_IER2_RBUE_Mask);\
+#define MMC_CNTRL_CNTSTOPRO_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 1) & MMC_CNTRL_CNTSTOPRO_Mask);\
 } while(0)
 
-/*#define DMA_IER2_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MMC_CNTRL_CNTRST_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_RSE_Mask (ULONG)(0x1)
+#define MMC_CNTRL_CNTRST_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MMC_CNTRL_CNTRST_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_IER2_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MMC_CNTRL_CNTRST_Wr_Mask (ULONG)(0xfffffffe)
 
-#define DMA_IER2_RSE_UdfWr(data) do {\
+#define MMC_CNTRL_CNTRST_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_RSE_Wr_Mask) | ((data & DMA_IER2_RSE_Mask)<<8));\
-		DMA_IER2_RgWr(v);\
+		MMC_CNTRL_RgRd(v);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_9))|((( 0) & (MMC_CNTRL_Mask_9))<<9);\
+		v = (v & (MMC_CNTRL_RES_Wr_Mask_6))|((( 0) & (MMC_CNTRL_Mask_6))<<6);\
+		v = ((v & MMC_CNTRL_CNTRST_Wr_Mask) | ((data & MMC_CNTRL_CNTRST_Mask)<<0));\
+		MMC_CNTRL_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_RSE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 8) & DMA_IER2_RSE_Mask);\
+#define MMC_CNTRL_CNTRST_UdfRd(data) do {\
+		MMC_CNTRL_RgRd(data);\
+		data = ((data >> 0) & MMC_CNTRL_CNTRST_Mask);\
 } while(0)
 
-/*#define DMA_IER2_RWTE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_RWTE_Mask (ULONG)(0x1)
+#define MAC_MA1LR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x30c))
 
-/*#define DMA_IER2_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+#define MAC_MA1LR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_MA1LR_RgOffAddr);\
+} while(0)
 
-#define DMA_IER2_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MAC_MA1LR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_MA1LR_RgOffAddr);\
+} while(0)
 
-#define DMA_IER2_RWTE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_RWTE_Wr_Mask) | ((data & DMA_IER2_RWTE_Mask)<<9));\
-		DMA_IER2_RgWr(v);\
+#define MAC_MA1LR_ADDRLO_UdfWr(data) do {\
+		MAC_MA1LR_RgWr(data);\
+} while(0)
+
+#define MAC_MA1LR_ADDRLO_UdfRd(data) do {\
+		MAC_MA1LR_RgRd(data);\
+} while(0)
+
+
+#define MAC_MA1HR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x308))
+
+#define MAC_MA1HR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_MA1HR_RgOffAddr);\
 } while(0)
 
-#define DMA_IER2_RWTE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 9) & DMA_IER2_RWTE_Mask);\
+#define MAC_MA1HR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_MA1HR_RgOffAddr);\
 } while(0)
 
-/*#define DMA_IER2_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MAC_MA1HR_Mask_19 (ULONG)(~(~0<<(5)))*/
+
+#define  MAC_MA1HR_Mask_19 (ULONG)(0x1f)
+
+/*#define MAC_MA1HR_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(5)))<<(19)))*/
+
+#define MAC_MA1HR_RES_Wr_Mask_19 (ULONG)(0xff07ffff)
+
+/*#define MAC_MA1HR_AE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_ETIE_Mask (ULONG)(0x1)
+#define MAC_MA1HR_AE_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MAC_MA1HR_AE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (31)))*/
 
-#define DMA_IER2_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MAC_MA1HR_AE_Wr_Mask (ULONG)(0x7fffffff)
 
-#define DMA_IER2_ETIE_UdfWr(data) do {\
+#define MAC_MA1HR_AE_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_ETIE_Wr_Mask) | ((data & DMA_IER2_ETIE_Mask)<<10));\
-		DMA_IER2_RgWr(v);\
+		MAC_MA1HR_RgRd(v);\
+		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
+		v = ((v & MAC_MA1HR_AE_Wr_Mask) | ((data & MAC_MA1HR_AE_Mask)<<31));\
+		MAC_MA1HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_ETIE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 10) & DMA_IER2_ETIE_Mask);\
+#define MAC_MA1HR_AE_UdfRd(data) do {\
+		MAC_MA1HR_RgRd(data);\
+		data = ((data >> 31) & MAC_MA1HR_AE_Mask);\
 } while(0)
 
-/*#define DMA_IER2_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA1HR_SA_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_ERIE_Mask (ULONG)(0x1)
+#define MAC_MA1HR_SA_Mask (ULONG)(0x1)
 
-/*#define DMA_IER2_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MAC_MA1HR_SA_Wr_Mask (ULONG)(~((~(~0 << (1))) << (30)))*/
 
-#define DMA_IER2_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MAC_MA1HR_SA_Wr_Mask (ULONG)(0xbfffffff)
 
-#define DMA_IER2_ERIE_UdfWr(data) do {\
+#define MAC_MA1HR_SA_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_ERIE_Wr_Mask) | ((data & DMA_IER2_ERIE_Mask)<<11));\
-		DMA_IER2_RgWr(v);\
+		MAC_MA1HR_RgRd(v);\
+		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
+		v = ((v & MAC_MA1HR_SA_Wr_Mask) | ((data & MAC_MA1HR_SA_Mask)<<30));\
+		MAC_MA1HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_ERIE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 11) & DMA_IER2_ERIE_Mask);\
+#define MAC_MA1HR_SA_UdfRd(data) do {\
+		MAC_MA1HR_RgRd(data);\
+		data = ((data >> 30) & MAC_MA1HR_SA_Mask);\
 } while(0)
 
-/*#define DMA_IER2_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA1HR_MBC_Mask (ULONG)(~(~0<<(6)))*/
 
-#define DMA_IER2_FBEE_Mask (ULONG)(0x1)
+#define MAC_MA1HR_MBC_Mask (ULONG)(0x3f)
 
-/*#define DMA_IER2_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MAC_MA1HR_MBC_Wr_Mask (ULONG)(~((~(~0 << (6))) << (24)))*/
 
-#define DMA_IER2_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MAC_MA1HR_MBC_Wr_Mask (ULONG)(0xc0ffffff)
 
-#define DMA_IER2_FBEE_UdfWr(data) do {\
+#define MAC_MA1HR_MBC_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_FBEE_Wr_Mask) | ((data & DMA_IER2_FBEE_Mask)<<12));\
-		DMA_IER2_RgWr(v);\
+		MAC_MA1HR_RgRd(v);\
+		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
+		v = ((v & MAC_MA1HR_MBC_Wr_Mask) | ((data & MAC_MA1HR_MBC_Mask)<<24));\
+		MAC_MA1HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_FBEE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 12) & DMA_IER2_FBEE_Mask);\
+#define MAC_MA1HR_MBC_UdfRd(data) do {\
+		MAC_MA1HR_RgRd(data);\
+		data = ((data >> 24) & MAC_MA1HR_MBC_Mask);\
 } while(0)
 
-/*#define DMA_IER2_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA1HR_DCS_Mask (ULONG)(~(~0<<(3)))*/
 
-#define DMA_IER2_CDEE_Mask (ULONG)(0x1)
+#define MAC_MA1HR_DCS_Mask (ULONG)(0x7)
 
-/*#define DMA_IER2_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MAC_MA1HR_DCS_Wr_Mask (ULONG)(~((~(~0 << (3))) << (16)))*/
 
-#define DMA_IER2_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MAC_MA1HR_DCS_Wr_Mask (ULONG)(0xfff8ffff)
 
-#define DMA_IER2_CDEE_UdfWr(data) do {\
+#define MAC_MA1HR_DCS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_CDEE_Wr_Mask) | ((data & DMA_IER2_CDEE_Mask)<<13));\
-		DMA_IER2_RgWr(v);\
+		MAC_MA1HR_RgRd(v);\
+		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
+		v = ((v & MAC_MA1HR_DCS_Wr_Mask) | ((data & MAC_MA1HR_DCS_Mask)<<16));\
+		MAC_MA1HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_CDEE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 13) & DMA_IER2_CDEE_Mask);\
+#define MAC_MA1HR_DCS_UdfRd(data) do {\
+		MAC_MA1HR_RgRd(data);\
+		data = ((data >> 16) & MAC_MA1HR_DCS_Mask);\
 } while(0)
 
-/*#define DMA_IER2_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA1HR_ADDRHI_Mask (ULONG)(~(~0<<(16)))*/
 
-#define DMA_IER2_AIE_Mask (ULONG)(0x1)
+#define MAC_MA1HR_ADDRHI_Mask (ULONG)(0xffff)
 
-/*#define DMA_IER2_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MAC_MA1HR_ADDRHI_Wr_Mask (ULONG)(~((~(~0 << (16))) << (0)))*/
 
-#define DMA_IER2_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MAC_MA1HR_ADDRHI_Wr_Mask (ULONG)(0xffff0000)
 
-#define DMA_IER2_AIE_UdfWr(data) do {\
+#define MAC_MA1HR_ADDRHI_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_AIE_Wr_Mask) | ((data & DMA_IER2_AIE_Mask)<<15));\
-		DMA_IER2_RgWr(v);\
+		MAC_MA1HR_RgRd(v);\
+		v = (v & (MAC_MA1HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA1HR_Mask_19))<<19);\
+		v = ((v & MAC_MA1HR_ADDRHI_Wr_Mask) | ((data & MAC_MA1HR_ADDRHI_Mask)<<0));\
+		MAC_MA1HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER2_AIE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 15) & DMA_IER2_AIE_Mask);\
+#define MAC_MA1HR_ADDRHI_UdfRd(data) do {\
+		MAC_MA1HR_RgRd(data);\
+		data = ((data >> 0) & MAC_MA1HR_ADDRHI_Mask);\
 } while(0)
 
-/*#define DMA_IER2_NIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER2_NIE_Mask (ULONG)(0x1)
+#define MAC_MA0LR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x304))
 
-/*#define DMA_IER2_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+#define MAC_MA0LR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_MA0LR_RgOffAddr);\
+} while(0)
 
-#define DMA_IER2_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MAC_MA0LR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_MA0LR_RgOffAddr);\
+} while(0)
 
-#define DMA_IER2_NIE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER2_RgRd(v);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_3))|((( 0) & (DMA_IER2_Mask_3))<<3);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_14))|((( 0) & (DMA_IER2_Mask_14))<<14);\
-		v = (v & (DMA_IER2_RES_Wr_Mask_17))|((( 0) & (DMA_IER2_Mask_17))<<17);\
-		v = ((v & DMA_IER2_NIE_Wr_Mask) | ((data & DMA_IER2_NIE_Mask)<<16));\
-		DMA_IER2_RgWr(v);\
+#define MAC_MA0LR_ADDRLO_UdfWr(data) do {\
+		MAC_MA0LR_RgWr(data);\
 } while(0)
 
-#define DMA_IER2_NIE_UdfRd(data) do {\
-		DMA_IER2_RgRd(data);\
-		data = ((data >> 16) & DMA_IER2_NIE_Mask);\
+#define MAC_MA0LR_ADDRLO_UdfRd(data) do {\
+		MAC_MA0LR_RgRd(data);\
 } while(0)
 
 
-#define DMA_IER1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11b4))
+#define MAC_MA0HR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x300))
 
-#define DMA_IER1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER1_RgOffAddr);\
+#define MAC_MA0HR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_MA0HR_RgOffAddr);\
 } while(0)
 
-#define DMA_IER1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER1_RgOffAddr);\
+#define MAC_MA0HR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_MA0HR_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_IER1_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_IER1_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_IER1_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define  MAC_MA0HR_Mask_19 (ULONG)(~(~0<<(12)))*/
 
-#define DMA_IER1_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define  MAC_MA0HR_Mask_19 (ULONG)(0xfff)
 
-/*#define  DMA_IER1_Mask_14 (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA0HR_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(12)))<<(19)))*/
 
-#define  DMA_IER1_Mask_14 (ULONG)(0x1)
+#define MAC_MA0HR_RES_Wr_Mask_19 (ULONG)(0x8007ffff)
 
-/*#define DMA_IER1_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
+/*#define MAC_MA0HR_AE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER1_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
+#define MAC_MA0HR_AE_Mask (ULONG)(0x1)
 
-/*#define  DMA_IER1_Mask_17 (ULONG)(~(~0<<(15)))*/
+/*#define MAC_MA0HR_AE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (31)))*/
 
-#define  DMA_IER1_Mask_17 (ULONG)(0x7fff)
+#define MAC_MA0HR_AE_Wr_Mask (ULONG)(0x7fffffff)
 
-/*#define DMA_IER1_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
+#define MAC_MA0HR_AE_UdfWr(data) do {\
+		ULONG v;\
+		MAC_MA0HR_RgRd(v);\
+		v = (v & (MAC_MA0HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA0HR_Mask_19))<<19);\
+		v = ((v & MAC_MA0HR_AE_Wr_Mask) | ((data & MAC_MA0HR_AE_Mask)<<31));\
+		MAC_MA0HR_RgWr(v);\
+} while(0)
 
-#define DMA_IER1_RES_Wr_Mask_17 (ULONG)(0x1ffff)
+#define MAC_MA0HR_AE_UdfRd(data) do {\
+		MAC_MA0HR_RgRd(data);\
+		data = ((data >> 31) & MAC_MA0HR_AE_Mask);\
+} while(0)
 
-/*#define DMA_IER1_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA0HR_DCS_Mask (ULONG)(~(~0<<(3)))*/
 
-#define DMA_IER1_TIE_Mask (ULONG)(0x1)
+#define MAC_MA0HR_DCS_Mask (ULONG)(0x7)
 
-/*#define DMA_IER1_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MAC_MA0HR_DCS_Wr_Mask (ULONG)(~((~(~0 << (3))) << (16)))*/
 
-#define DMA_IER1_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MAC_MA0HR_DCS_Wr_Mask (ULONG)(0xfff8ffff)
 
-#define DMA_IER1_TIE_UdfWr(data) do {\
+#define MAC_MA0HR_DCS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_TIE_Wr_Mask) | ((data & DMA_IER1_TIE_Mask)<<0));\
-		DMA_IER1_RgWr(v);\
+		MAC_MA0HR_RgRd(v);\
+		v = (v & (MAC_MA0HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA0HR_Mask_19))<<19);\
+		v = ((v & MAC_MA0HR_DCS_Wr_Mask) | ((data & MAC_MA0HR_DCS_Mask)<<16));\
+		MAC_MA0HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_TIE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 0) & DMA_IER1_TIE_Mask);\
+#define MAC_MA0HR_DCS_UdfRd(data) do {\
+		MAC_MA0HR_RgRd(data);\
+		data = ((data >> 16) & MAC_MA0HR_DCS_Mask);\
 } while(0)
 
-/*#define DMA_IER1_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MA0HR_ADDRHI_Mask (ULONG)(~(~0<<(16)))*/
 
-#define DMA_IER1_TXSE_Mask (ULONG)(0x1)
+#define MAC_MA0HR_ADDRHI_Mask (ULONG)(0xffff)
 
-/*#define DMA_IER1_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MAC_MA0HR_ADDRHI_Wr_Mask (ULONG)(~((~(~0 << (16))) << (0)))*/
 
-#define DMA_IER1_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MAC_MA0HR_ADDRHI_Wr_Mask (ULONG)(0xffff0000)
 
-#define DMA_IER1_TXSE_UdfWr(data) do {\
+#define MAC_MA0HR_ADDRHI_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_TXSE_Wr_Mask) | ((data & DMA_IER1_TXSE_Mask)<<1));\
-		DMA_IER1_RgWr(v);\
+		MAC_MA0HR_RgRd(v);\
+		v = (v & (MAC_MA0HR_RES_Wr_Mask_19))|((( 0) & (MAC_MA0HR_Mask_19))<<19);\
+		v = ((v & MAC_MA0HR_ADDRHI_Wr_Mask) | ((data & MAC_MA0HR_ADDRHI_Mask)<<0));\
+		MAC_MA0HR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_TXSE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 1) & DMA_IER1_TXSE_Mask);\
+#define MAC_MA0HR_ADDRHI_UdfRd(data) do {\
+		MAC_MA0HR_RgRd(data);\
+		data = ((data >> 0) & MAC_MA0HR_ADDRHI_Mask);\
 } while(0)
 
-/*#define DMA_IER1_TBUE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_IER1_TBUE_Mask (ULONG)(0x1)
-
-/*#define DMA_IER1_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_IER1_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MAC_GPIOR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x208))
 
-#define DMA_IER1_TBUE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_TBUE_Wr_Mask) | ((data & DMA_IER1_TBUE_Mask)<<2));\
-		DMA_IER1_RgWr(v);\
+#define MAC_GPIOR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_GPIOR_RgOffAddr);\
 } while(0)
 
-#define DMA_IER1_TBUE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 2) & DMA_IER1_TBUE_Mask);\
+#define MAC_GPIOR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_GPIOR_RgOffAddr);\
 } while(0)
 
-/*#define DMA_IER1_RIE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_IER1_RIE_Mask (ULONG)(0x1)
-
-/*#define DMA_IER1_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define  MAC_GPIOR_Mask_28 (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define  MAC_GPIOR_Mask_28 (ULONG)(0xf)
 
-#define DMA_IER1_RIE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_RIE_Wr_Mask) | ((data & DMA_IER1_RIE_Mask)<<6));\
-		DMA_IER1_RgWr(v);\
-} while(0)
+/*#define MAC_GPIOR_RES_Wr_Mask_28 (ULONG)(~((~(~0<<(4)))<<(28)))*/
 
-#define DMA_IER1_RIE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 6) & DMA_IER1_RIE_Mask);\
-} while(0)
+#define MAC_GPIOR_RES_Wr_Mask_28 (ULONG)(0xfffffff)
 
-/*#define DMA_IER1_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MAC_GPIOR_Mask_20 (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_RBUE_Mask (ULONG)(0x1)
+#define  MAC_GPIOR_Mask_20 (ULONG)(0xf)
 
-/*#define DMA_IER1_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MAC_GPIOR_RES_Wr_Mask_20 (ULONG)(~((~(~0<<(4)))<<(20)))*/
 
-#define DMA_IER1_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MAC_GPIOR_RES_Wr_Mask_20 (ULONG)(0xff0fffff)
 
-#define DMA_IER1_RBUE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_RBUE_Wr_Mask) | ((data & DMA_IER1_RBUE_Mask)<<7));\
-		DMA_IER1_RgWr(v);\
-} while(0)
+/*#define  MAC_GPIOR_Mask_12 (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_RBUE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 7) & DMA_IER1_RBUE_Mask);\
-} while(0)
+#define  MAC_GPIOR_Mask_12 (ULONG)(0xf)
 
-/*#define DMA_IER1_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GPIOR_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(4)))<<(12)))*/
 
-#define DMA_IER1_RSE_Mask (ULONG)(0x1)
+#define MAC_GPIOR_RES_Wr_Mask_12 (ULONG)(0xffff0fff)
 
-/*#define DMA_IER1_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define  MAC_GPIOR_Mask_4 (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define  MAC_GPIOR_Mask_4 (ULONG)(0xf)
 
-#define DMA_IER1_RSE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_RSE_Wr_Mask) | ((data & DMA_IER1_RSE_Mask)<<8));\
-		DMA_IER1_RgWr(v);\
-} while(0)
+/*#define MAC_GPIOR_RES_Wr_Mask_4 (ULONG)(~((~(~0<<(4)))<<(4)))*/
 
-#define DMA_IER1_RSE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 8) & DMA_IER1_RSE_Mask);\
-} while(0)
+#define MAC_GPIOR_RES_Wr_Mask_4 (ULONG)(0xffffff0f)
 
-/*#define DMA_IER1_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GPIOR_GPIT_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_RWTE_Mask (ULONG)(0x1)
+#define MAC_GPIOR_GPIT_Mask (ULONG)(0xf)
 
-/*#define DMA_IER1_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MAC_GPIOR_GPIT_Wr_Mask (ULONG)(~((~(~0 << (4))) << (24)))*/
 
-#define DMA_IER1_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MAC_GPIOR_GPIT_Wr_Mask (ULONG)(0xf0ffffff)
 
-#define DMA_IER1_RWTE_UdfWr(data) do {\
+#define MAC_GPIOR_GPIT_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_RWTE_Wr_Mask) | ((data & DMA_IER1_RWTE_Mask)<<9));\
-		DMA_IER1_RgWr(v);\
+		MAC_GPIOR_RgRd(v);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
+		v = ((v & MAC_GPIOR_GPIT_Wr_Mask) | ((data & MAC_GPIOR_GPIT_Mask)<<24));\
+		MAC_GPIOR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_RWTE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 9) & DMA_IER1_RWTE_Mask);\
+#define MAC_GPIOR_GPIT_UdfRd(data) do {\
+		MAC_GPIOR_RgRd(data);\
+		data = ((data >> 24) & MAC_GPIOR_GPIT_Mask);\
 } while(0)
 
-/*#define DMA_IER1_ETIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GPIOR_GPIE_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_ETIE_Mask (ULONG)(0x1)
+#define MAC_GPIOR_GPIE_Mask (ULONG)(0xf)
 
-/*#define DMA_IER1_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MAC_GPIOR_GPIE_Wr_Mask (ULONG)(~((~(~0 << (4))) << (16)))*/
 
-#define DMA_IER1_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MAC_GPIOR_GPIE_Wr_Mask (ULONG)(0xfff0ffff)
 
-#define DMA_IER1_ETIE_UdfWr(data) do {\
+#define MAC_GPIOR_GPIE_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_ETIE_Wr_Mask) | ((data & DMA_IER1_ETIE_Mask)<<10));\
-		DMA_IER1_RgWr(v);\
+		MAC_GPIOR_RgRd(v);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
+		v = ((v & MAC_GPIOR_GPIE_Wr_Mask) | ((data & MAC_GPIOR_GPIE_Mask)<<16));\
+		MAC_GPIOR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_ETIE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 10) & DMA_IER1_ETIE_Mask);\
+#define MAC_GPIOR_GPIE_UdfRd(data) do {\
+		MAC_GPIOR_RgRd(data);\
+		data = ((data >> 16) & MAC_GPIOR_GPIE_Mask);\
 } while(0)
 
-/*#define DMA_IER1_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GPIOR_GPO_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_ERIE_Mask (ULONG)(0x1)
+#define MAC_GPIOR_GPO_Mask (ULONG)(0xf)
 
-/*#define DMA_IER1_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MAC_GPIOR_GPO_Wr_Mask (ULONG)(~((~(~0 << (4))) << (8)))*/
 
-#define DMA_IER1_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MAC_GPIOR_GPO_Wr_Mask (ULONG)(0xfffff0ff)
 
-#define DMA_IER1_ERIE_UdfWr(data) do {\
+#define MAC_GPIOR_GPO_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_ERIE_Wr_Mask) | ((data & DMA_IER1_ERIE_Mask)<<11));\
-		DMA_IER1_RgWr(v);\
+		MAC_GPIOR_RgRd(v);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
+		v = ((v & MAC_GPIOR_GPO_Wr_Mask) | ((data & MAC_GPIOR_GPO_Mask)<<8));\
+		MAC_GPIOR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_ERIE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 11) & DMA_IER1_ERIE_Mask);\
+#define MAC_GPIOR_GPO_UdfRd(data) do {\
+		MAC_GPIOR_RgRd(data);\
+		data = ((data >> 8) & MAC_GPIOR_GPO_Mask);\
 } while(0)
 
-/*#define DMA_IER1_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GPIOR_GPIS_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER1_FBEE_Mask (ULONG)(0x1)
+#define MAC_GPIOR_GPIS_Mask (ULONG)(0xf)
 
-/*#define DMA_IER1_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MAC_GPIOR_GPIS_Wr_Mask (ULONG)(~((~(~0 << (4))) << (0)))*/
 
-#define DMA_IER1_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MAC_GPIOR_GPIS_Wr_Mask (ULONG)(0xfffffff0)
 
-#define DMA_IER1_FBEE_UdfWr(data) do {\
+#define MAC_GPIOR_GPIS_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_FBEE_Wr_Mask) | ((data & DMA_IER1_FBEE_Mask)<<12));\
-		DMA_IER1_RgWr(v);\
+		MAC_GPIOR_RgRd(v);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_28))|((( 0) & (MAC_GPIOR_Mask_28))<<28);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_20))|((( 0) & (MAC_GPIOR_Mask_20))<<20);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_12))|((( 0) & (MAC_GPIOR_Mask_12))<<12);\
+		v = (v & (MAC_GPIOR_RES_Wr_Mask_4))|((( 0) & (MAC_GPIOR_Mask_4))<<4);\
+		v = ((v & MAC_GPIOR_GPIS_Wr_Mask) | ((data & MAC_GPIOR_GPIS_Mask)<<0));\
+		MAC_GPIOR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_FBEE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 12) & DMA_IER1_FBEE_Mask);\
+#define MAC_GPIOR_GPIS_UdfRd(data) do {\
+		MAC_GPIOR_RgRd(data);\
+		data = ((data >> 0) & MAC_GPIOR_GPIS_Mask);\
 } while(0)
 
-/*#define DMA_IER1_CDEE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_IER1_CDEE_Mask (ULONG)(0x1)
 
-/*#define DMA_IER1_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define DMA_IER1_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MAC_GMIIDR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x204))
 
-#define DMA_IER1_CDEE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_CDEE_Wr_Mask) | ((data & DMA_IER1_CDEE_Mask)<<13));\
-		DMA_IER1_RgWr(v);\
+#define MAC_GMIIDR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_GMIIDR_RgOffAddr);\
 } while(0)
 
-#define DMA_IER1_CDEE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 13) & DMA_IER1_CDEE_Mask);\
+#define MAC_GMIIDR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_GMIIDR_RgOffAddr);\
 } while(0)
 
-/*#define DMA_IER1_AIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIDR_RA_Mask (ULONG)(~(~0<<(16)))*/
 
-#define DMA_IER1_AIE_Mask (ULONG)(0x1)
+#define MAC_GMIIDR_RA_Mask (ULONG)(0xffff)
 
-/*#define DMA_IER1_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MAC_GMIIDR_RA_Wr_Mask (ULONG)(~((~(~0 << (16))) << (16)))*/
 
-#define DMA_IER1_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MAC_GMIIDR_RA_Wr_Mask (ULONG)(0xffff)
 
-#define DMA_IER1_AIE_UdfWr(data) do {\
+#define MAC_GMIIDR_RA_UdfWr(data) do{\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_AIE_Wr_Mask) | ((data & DMA_IER1_AIE_Mask)<<15));\
-		DMA_IER1_RgWr(v);\
+		MAC_GMIIDR_RgRd(v);\
+		v = ((v & MAC_GMIIDR_RA_Wr_Mask) | ((data & MAC_GMIIDR_RA_Mask)<<16));\
+		MAC_GMIIDR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_AIE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 15) & DMA_IER1_AIE_Mask);\
+#define MAC_GMIIDR_RA_UdfRd(data) do {\
+		MAC_GMIIDR_RgRd(data);\
+		data = ((data >> 16) & MAC_GMIIDR_RA_Mask);\
 } while(0)
 
-/*#define DMA_IER1_NIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIDR_GD_Mask (ULONG)(~(~0<<(16)))*/
 
-#define DMA_IER1_NIE_Mask (ULONG)(0x1)
+#define MAC_GMIIDR_GD_Mask (ULONG)(0xffff)
 
-/*#define DMA_IER1_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MAC_GMIIDR_GD_Wr_Mask (ULONG)(~((~(~0 << (16))) << (0)))*/
 
-#define DMA_IER1_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MAC_GMIIDR_GD_Wr_Mask (ULONG)(0xffff0000)
 
-#define DMA_IER1_NIE_UdfWr(data) do {\
+#define MAC_GMIIDR_GD_UdfWr(data) do{\
 		ULONG v;\
-		DMA_IER1_RgRd(v);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_3))|((( 0) & (DMA_IER1_Mask_3))<<3);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_14))|((( 0) & (DMA_IER1_Mask_14))<<14);\
-		v = (v & (DMA_IER1_RES_Wr_Mask_17))|((( 0) & (DMA_IER1_Mask_17))<<17);\
-		v = ((v & DMA_IER1_NIE_Wr_Mask) | ((data & DMA_IER1_NIE_Mask)<<16));\
-		DMA_IER1_RgWr(v);\
+		MAC_GMIIDR_RgRd(v);\
+		v = ((v & MAC_GMIIDR_GD_Wr_Mask) | ((data & MAC_GMIIDR_GD_Mask)<<0));\
+		MAC_GMIIDR_RgWr(v);\
 } while(0)
 
-#define DMA_IER1_NIE_UdfRd(data) do {\
-		DMA_IER1_RgRd(data);\
-		data = ((data >> 16) & DMA_IER1_NIE_Mask);\
+#define MAC_GMIIDR_GD_UdfRd(data) do {\
+		MAC_GMIIDR_RgRd(data);\
+		data = ((data >> 0) & MAC_GMIIDR_GD_Mask);\
 } while(0)
 
 
-#define DMA_IER0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1134))
+#define MAC_GMIIAR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x200))
 
-#define DMA_IER0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_IER0_RgOffAddr);\
+#define MAC_GMIIAR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_GMIIAR_RgOffAddr);\
 } while(0)
 
-#define DMA_IER0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_IER0_RgOffAddr);\
+#define MAC_GMIIAR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_GMIIAR_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_IER0_Mask_3 (ULONG)(~(~0<<(3)))*/
+/*#define  MAC_GMIIAR_Mask_26 (ULONG)(~(~0<<(6)))*/
 
-#define  DMA_IER0_Mask_3 (ULONG)(0x7)
+#define  MAC_GMIIAR_Mask_26 (ULONG)(0x3f)
 
-/*#define DMA_IER0_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define MAC_GMIIAR_RES_Wr_Mask_26 (ULONG)(~((~(~0<<(6)))<<(26)))*/
 
-#define DMA_IER0_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define MAC_GMIIAR_RES_Wr_Mask_26 (ULONG)(0x3ffffff)
 
-/*#define  DMA_IER0_Mask_14 (ULONG)(~(~0<<(1)))*/
+/*#define  MAC_GMIIAR_Mask_12 (ULONG)(~(~0<<(4)))*/
 
-#define  DMA_IER0_Mask_14 (ULONG)(0x1)
+#define  MAC_GMIIAR_Mask_12 (ULONG)(0xf)
 
-/*#define DMA_IER0_RES_Wr_Mask_14 (ULONG)(~((~(~0<<(1)))<<(14)))*/
+/*#define MAC_GMIIAR_RES_Wr_Mask_12 (ULONG)(~((~(~0<<(4)))<<(12)))*/
 
-#define DMA_IER0_RES_Wr_Mask_14 (ULONG)(0xffffbfff)
+#define MAC_GMIIAR_RES_Wr_Mask_12 (ULONG)(0xffff0fff)
 
-/*#define  DMA_IER0_Mask_17 (ULONG)(~(~0<<(15)))*/
+/*#define  MAC_GMIIAR_Mask_5 (ULONG)(~(~0<<(3)))*/
 
-#define  DMA_IER0_Mask_17 (ULONG)(0x7fff)
+#define  MAC_GMIIAR_Mask_5 (ULONG)(0x7)
 
-/*#define DMA_IER0_RES_Wr_Mask_17 (ULONG)(~((~(~0<<(15)))<<(17)))*/
+/*#define MAC_GMIIAR_RES_Wr_Mask_5 (ULONG)(~((~(~0<<(3)))<<(5)))*/
 
-#define DMA_IER0_RES_Wr_Mask_17 (ULONG)(0x1ffff)
+#define MAC_GMIIAR_RES_Wr_Mask_5 (ULONG)(0xffffff1f)
 
-/*#define DMA_IER0_TIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_PA_Mask (ULONG)(~(~0<<(5)))*/
 
-#define DMA_IER0_TIE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_PA_Mask (ULONG)(0x1f)
 
-/*#define DMA_IER0_TIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define MAC_GMIIAR_PA_Wr_Mask (ULONG)(~((~(~0 << (5))) << (21)))*/
 
-#define DMA_IER0_TIE_Wr_Mask (ULONG)(0xfffffffe)
+#define MAC_GMIIAR_PA_Wr_Mask (ULONG)(0xfc1fffff)
 
-#define DMA_IER0_TIE_UdfWr(data) do {\
+#define MAC_GMIIAR_PA_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_TIE_Wr_Mask) | ((data & DMA_IER0_TIE_Mask)<<0));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_PA_Wr_Mask) | ((data & MAC_GMIIAR_PA_Mask)<<21));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_TIE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 0) & DMA_IER0_TIE_Mask);\
+#define MAC_GMIIAR_PA_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 21) & MAC_GMIIAR_PA_Mask);\
 } while(0)
 
-/*#define DMA_IER0_TXSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_GR_Mask (ULONG)(~(~0<<(5)))*/
 
-#define DMA_IER0_TXSE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_GR_Mask (ULONG)(0x1f)
 
-/*#define DMA_IER0_TXSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define MAC_GMIIAR_GR_Wr_Mask (ULONG)(~((~(~0 << (5))) << (16)))*/
 
-#define DMA_IER0_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+#define MAC_GMIIAR_GR_Wr_Mask (ULONG)(0xffe0ffff)
 
-#define DMA_IER0_TXSE_UdfWr(data) do {\
+#define MAC_GMIIAR_GR_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_TXSE_Wr_Mask) | ((data & DMA_IER0_TXSE_Mask)<<1));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_GR_Wr_Mask) | ((data & MAC_GMIIAR_GR_Mask)<<16));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_TXSE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 1) & DMA_IER0_TXSE_Mask);\
+#define MAC_GMIIAR_GR_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 16) & MAC_GMIIAR_GR_Mask);\
 } while(0)
 
-/*#define DMA_IER0_TBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_CR_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER0_TBUE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_CR_Mask (ULONG)(0xf)
 
-/*#define DMA_IER0_TBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define MAC_GMIIAR_CR_Wr_Mask (ULONG)(~((~(~0 << (4))) << (8)))*/
 
-#define DMA_IER0_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+#define MAC_GMIIAR_CR_Wr_Mask (ULONG)(0xfffff0ff)
 
-#define DMA_IER0_TBUE_UdfWr(data) do {\
+#define MAC_GMIIAR_CR_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_TBUE_Wr_Mask) | ((data & DMA_IER0_TBUE_Mask)<<2));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_CR_Wr_Mask) | ((data & MAC_GMIIAR_CR_Mask)<<8));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_TBUE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 2) & DMA_IER0_TBUE_Mask);\
+#define MAC_GMIIAR_CR_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 8) & MAC_GMIIAR_CR_Mask);\
 } while(0)
 
-/*#define DMA_IER0_RIE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_SKAP_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER0_RIE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_SKAP_Mask (ULONG)(0x1)
 
-/*#define DMA_IER0_RIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define MAC_GMIIAR_SKAP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_IER0_RIE_Wr_Mask (ULONG)(0xffffffbf)
+#define MAC_GMIIAR_SKAP_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_IER0_RIE_UdfWr(data) do {\
+#define MAC_GMIIAR_SKAP_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_RIE_Wr_Mask) | ((data & DMA_IER0_RIE_Mask)<<6));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_SKAP_Wr_Mask) | ((data & MAC_GMIIAR_SKAP_Mask)<<4));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_RIE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 6) & DMA_IER0_RIE_Mask);\
+#define MAC_GMIIAR_SKAP_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 4) & MAC_GMIIAR_SKAP_Mask);\
 } while(0)
 
-/*#define DMA_IER0_RBUE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_GOC_Mask (ULONG)(~(~0<<(2)))*/
 
-#define DMA_IER0_RBUE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_GOC_Mask (ULONG)(0x3)
 
-/*#define DMA_IER0_RBUE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define MAC_GMIIAR_GOC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (2)))*/
 
-#define DMA_IER0_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+#define MAC_GMIIAR_GOC_Wr_Mask (ULONG)(0xfffffff3)
 
-#define DMA_IER0_RBUE_UdfWr(data) do {\
+#define MAC_GMIIAR_GOC_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_RBUE_Wr_Mask) | ((data & DMA_IER0_RBUE_Mask)<<7));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_GOC_Wr_Mask) | ((data & MAC_GMIIAR_GOC_Mask)<<2));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_RBUE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 7) & DMA_IER0_RBUE_Mask);\
+#define MAC_GMIIAR_GOC_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 2) & MAC_GMIIAR_GOC_Mask);\
 } while(0)
 
-/*#define DMA_IER0_RSE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_C45E_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER0_RSE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_C45E_Mask (ULONG)(0x1)
 
-/*#define DMA_IER0_RSE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MAC_GMIIAR_C45E_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_IER0_RSE_Wr_Mask (ULONG)(0xfffffeff)
+#define MAC_GMIIAR_C45E_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_IER0_RSE_UdfWr(data) do {\
+#define MAC_GMIIAR_C45E_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_RSE_Wr_Mask) | ((data & DMA_IER0_RSE_Mask)<<8));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_C45E_Wr_Mask) | ((data & MAC_GMIIAR_C45E_Mask)<<1));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_RSE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 8) & DMA_IER0_RSE_Mask);\
+#define MAC_GMIIAR_C45E_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 1) & MAC_GMIIAR_C45E_Mask);\
 } while(0)
 
-/*#define DMA_IER0_RWTE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_GMIIAR_GB_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER0_RWTE_Mask (ULONG)(0x1)
+#define MAC_GMIIAR_GB_Mask (ULONG)(0x1)
 
-/*#define DMA_IER0_RWTE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MAC_GMIIAR_GB_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_IER0_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+#define MAC_GMIIAR_GB_Wr_Mask (ULONG)(0xfffffffe)
 
-#define DMA_IER0_RWTE_UdfWr(data) do {\
+#define MAC_GMIIAR_GB_UdfWr(data) do {\
 		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_RWTE_Wr_Mask) | ((data & DMA_IER0_RWTE_Mask)<<9));\
-		DMA_IER0_RgWr(v);\
+		MAC_GMIIAR_RgRd(v);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_26))|((( 0) & (MAC_GMIIAR_Mask_26))<<26);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_12))|((( 0) & (MAC_GMIIAR_Mask_12))<<12);\
+		v = (v & (MAC_GMIIAR_RES_Wr_Mask_5))|((( 0) & (MAC_GMIIAR_Mask_5))<<5);\
+		v = ((v & MAC_GMIIAR_GB_Wr_Mask) | ((data & MAC_GMIIAR_GB_Mask)<<0));\
+		MAC_GMIIAR_RgWr(v);\
 } while(0)
 
-#define DMA_IER0_RWTE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 9) & DMA_IER0_RWTE_Mask);\
+#define MAC_GMIIAR_GB_UdfRd(data) do {\
+		MAC_GMIIAR_RgRd(data);\
+		data = ((data >> 0) & MAC_GMIIAR_GB_Mask);\
 } while(0)
 
-/*#define DMA_IER0_ETIE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER0_ETIE_Mask (ULONG)(0x1)
+#define MAC_HFR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x124))
+
+#define MAC_HFR2_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HFR2_RgOffAddr);\
+} while(0)
 
-/*#define DMA_IER0_ETIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MAC_HFR2_AUXSNAPNUM_Mask (ULONG)(~(~0<<(3)))*/
 
-#define DMA_IER0_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+#define MAC_HFR2_AUXSNAPNUM_Mask (ULONG)(0x7)
 
-#define DMA_IER0_ETIE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_ETIE_Wr_Mask) | ((data & DMA_IER0_ETIE_Mask)<<10));\
-		DMA_IER0_RgWr(v);\
+#define MAC_HFR2_AUXSNAPNUM_UdfRd(data) do {\
+		MAC_HFR2_RgRd(data);\
+		data = ((data >> 28) & MAC_HFR2_AUXSNAPNUM_Mask);\
 } while(0)
 
-#define DMA_IER0_ETIE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 10) & DMA_IER0_ETIE_Mask);\
-} while(0)
+/*#define MAC_HFR2_PPSOUTNUM_Mask (ULONG)(~(~0<<(3)))*/
 
-/*#define DMA_IER0_ERIE_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HFR2_PPSOUTNUM_Mask (ULONG)(0x7)
 
-#define DMA_IER0_ERIE_Mask (ULONG)(0x1)
+#define MAC_HFR2_PPSOUTNUM_UdfRd(data) do {\
+		MAC_HFR2_RgRd(data);\
+		data = ((data >> 24) & MAC_HFR2_PPSOUTNUM_Mask);\
+} while(0)
 
-/*#define DMA_IER0_ERIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MAC_HFR2_TXCHCNT_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER0_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+#define MAC_HFR2_TXCHCNT_Mask (ULONG)(0xf)
 
-#define DMA_IER0_ERIE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_ERIE_Wr_Mask) | ((data & DMA_IER0_ERIE_Mask)<<11));\
-		DMA_IER0_RgWr(v);\
+#define MAC_HFR2_TXCHCNT_UdfRd(data) do {\
+		MAC_HFR2_RgRd(data);\
+		data = ((data >> 18) & MAC_HFR2_TXCHCNT_Mask);\
 } while(0)
 
-#define DMA_IER0_ERIE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 11) & DMA_IER0_ERIE_Mask);\
-} while(0)
+/*#define MAC_HFR2_RXCHCNT_Mask (ULONG)(~(~0<<(4)))*/
 
-/*#define DMA_IER0_FBEE_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HFR2_RXCHCNT_Mask (ULONG)(0xf)
 
-#define DMA_IER0_FBEE_Mask (ULONG)(0x1)
+#define MAC_HFR2_RXCHCNT_UdfRd(data) do {\
+		MAC_HFR2_RgRd(data);\
+		data = ((data >> 12) & MAC_HFR2_RXCHCNT_Mask);\
+} while(0)
 
-/*#define DMA_IER0_FBEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MAC_HFR2_TXQCNT_Mask (ULONG)(~(~0<<(4)))*/
 
-#define DMA_IER0_FBEE_Wr_Mask (ULONG)(0xffffefff)
+#define MAC_HFR2_TXQCNT_Mask (ULONG)(0xf)
 
-#define DMA_IER0_FBEE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_FBEE_Wr_Mask) | ((data & DMA_IER0_FBEE_Mask)<<12));\
-		DMA_IER0_RgWr(v);\
+#define MAC_HFR2_TXQCNT_UdfRd(data) do {\
+		MAC_HFR2_RgRd(data);\
+		data = ((data >> 6) & MAC_HFR2_TXQCNT_Mask);\
 } while(0)
 
-#define DMA_IER0_FBEE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 12) & DMA_IER0_FBEE_Mask);\
-} while(0)
+/*#define MAC_HFR2_RXQCNT_Mask (ULONG)(~(~0<<(4)))*/
 
-/*#define DMA_IER0_CDEE_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HFR2_RXQCNT_Mask (ULONG)(0xf)
 
-#define DMA_IER0_CDEE_Mask (ULONG)(0x1)
+#define MAC_HFR2_RXQCNT_UdfRd(data) do {\
+		MAC_HFR2_RgRd(data);\
+		data = ((data >> 0) & MAC_HFR2_RXQCNT_Mask);\
+} while(0)
 
-/*#define DMA_IER0_CDEE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define DMA_IER0_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+#define MAC_HFR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x120))
 
-#define DMA_IER0_CDEE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_CDEE_Wr_Mask) | ((data & DMA_IER0_CDEE_Mask)<<13));\
-		DMA_IER0_RgWr(v);\
+#define MAC_HFR1_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HFR1_RgOffAddr);\
 } while(0)
 
-#define DMA_IER0_CDEE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 13) & DMA_IER0_CDEE_Mask);\
-} while(0)
+/*#define MAC_HFR1_L3L4FILTERNUM_Mask (ULONG)(~(~0<<(4)))*/
 
-/*#define DMA_IER0_AIE_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HFR1_L3L4FILTERNUM_Mask (ULONG)(0xf)
 
-#define DMA_IER0_AIE_Mask (ULONG)(0x1)
+#define MAC_HFR1_L3L4FILTERNUM_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 27) & MAC_HFR1_L3L4FILTERNUM_Mask);\
+} while(0)
 
-/*#define DMA_IER0_AIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MAC_HFR1_HASHTBLSZ_Mask (ULONG)(~(~0<<(2)))*/
 
-#define DMA_IER0_AIE_Wr_Mask (ULONG)(0xffff7fff)
+#define MAC_HFR1_HASHTBLSZ_Mask (ULONG)(0x3)
 
-#define DMA_IER0_AIE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_AIE_Wr_Mask) | ((data & DMA_IER0_AIE_Mask)<<15));\
-		DMA_IER0_RgWr(v);\
+#define MAC_HFR1_HASHTBLSZ_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 24) & MAC_HFR1_HASHTBLSZ_Mask);\
 } while(0)
 
-#define DMA_IER0_AIE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 15) & DMA_IER0_AIE_Mask);\
-} while(0)
+/*#define MAC_HFR1_LPMODEEN_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define DMA_IER0_NIE_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HFR1_LPMODEEN_Mask (ULONG)(0x1)
 
-#define DMA_IER0_NIE_Mask (ULONG)(0x1)
+#define MAC_HFR1_LPMODEEN_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 23) & MAC_HFR1_LPMODEEN_Mask);\
+} while(0)
 
-/*#define DMA_IER0_NIE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (16)))*/
+/*#define MAC_HFR1_AVSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_IER0_NIE_Wr_Mask (ULONG)(0xfffeffff)
+#define MAC_HFR1_AVSEL_Mask (ULONG)(0x1)
 
-#define DMA_IER0_NIE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_IER0_RgRd(v);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_3))|((( 0) & (DMA_IER0_Mask_3))<<3);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_14))|((( 0) & (DMA_IER0_Mask_14))<<14);\
-		v = (v & (DMA_IER0_RES_Wr_Mask_17))|((( 0) & (DMA_IER0_Mask_17))<<17);\
-		v = ((v & DMA_IER0_NIE_Wr_Mask) | ((data & DMA_IER0_NIE_Mask)<<16));\
-		DMA_IER0_RgWr(v);\
+#define MAC_HFR1_AVSEL_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 20) & MAC_HFR1_AVSEL_Mask);\
 } while(0)
 
-#define DMA_IER0_NIE_UdfRd(data) do {\
-		DMA_IER0_RgRd(data);\
-		data = ((data >> 16) & DMA_IER0_NIE_Mask);\
+/*#define MAC_HFR1_DMADEBUGEN_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MAC_HFR1_DMADEBUGEN_Mask (ULONG)(0x1)
+
+#define MAC_HFR1_DMADEBUGEN_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 19) & MAC_HFR1_DMADEBUGEN_Mask);\
 } while(0)
 
+/*#define MAC_HFR1_TSOEN_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xb4))
+#define MAC_HFR1_TSOEN_Mask (ULONG)(0x1)
 
-#define MAC_IMR_RgWr(data) do {\
-		iowrite32(data, (void *)MAC_IMR_RgOffAddr);\
+#define MAC_HFR1_TSOEN_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 18) & MAC_HFR1_TSOEN_Mask);\
 } while(0)
 
-#define MAC_IMR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_IMR_RgOffAddr);\
-} while(0)
+/*#define MAC_HFR1_SPHEN_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define  MAC_IMR_Mask_13 (ULONG)(~(~0<<(19)))*/
+#define MAC_HFR1_SPHEN_Mask (ULONG)(0x1)
 
-#define  MAC_IMR_Mask_13 (ULONG)(0x7ffff)
+#define MAC_HFR1_SPHEN_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 17) & MAC_HFR1_SPHEN_Mask);\
+} while(0)
 
-/*#define MAC_IMR_RES_Wr_Mask_13 (ULONG)(~((~(~0<<(19)))<<(13)))*/
+/*#define MAC_HFR1_DCBEN_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_RES_Wr_Mask_13 (ULONG)(0x1fff)
+#define MAC_HFR1_DCBEN_Mask (ULONG)(0x1)
 
-/*#define  MAC_IMR_Mask_6 (ULONG)(~(~0<<(6)))*/
+#define MAC_HFR1_DCBEN_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 16) & MAC_HFR1_DCBEN_Mask);\
+} while(0)
 
-#define  MAC_IMR_Mask_6 (ULONG)(0x3f)
+/*#define MAC_HFR1_ADVTHWORD_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define MAC_IMR_RES_Wr_Mask_6 (ULONG)(~((~(~0<<(6)))<<(6)))*/
+#define MAC_HFR1_ADVTHWORD_Mask (ULONG)(0x1)
 
-#define MAC_IMR_RES_Wr_Mask_6 (ULONG)(0xfffff03f)
+#define MAC_HFR1_ADVTHWORD_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 13) & MAC_HFR1_ADVTHWORD_Mask);\
+} while(0)
 
-/*#define MAC_IMR_TSIM_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR1_TXFIFOSIZE_Mask (ULONG)(~(~0<<(5)))*/
 
-#define MAC_IMR_TSIM_Mask (ULONG)(0x1)
+#define MAC_HFR1_TXFIFOSIZE_Mask (ULONG)(0x1f)
 
-/*#define MAC_IMR_TSIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+#define MAC_HFR1_TXFIFOSIZE_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 6) & MAC_HFR1_TXFIFOSIZE_Mask);\
+} while(0)
 
-#define MAC_IMR_TSIM_Wr_Mask (ULONG)(0xffffefff)
+/*#define MAC_HFR1_RXFIFOSIZE_Mask (ULONG)(~(~0<<(5)))*/
 
-#define MAC_IMR_TSIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_TSIM_Wr_Mask) | ((data & MAC_IMR_TSIM_Mask)<<12));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR1_RXFIFOSIZE_Mask (ULONG)(0x1f)
 
-#define MAC_IMR_TSIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 12) & MAC_IMR_TSIM_Mask);\
+#define MAC_HFR1_RXFIFOSIZE_UdfRd(data) do {\
+		MAC_HFR1_RgRd(data);\
+		data = ((data >> 0) & MAC_HFR1_RXFIFOSIZE_Mask);\
 } while(0)
 
-/*#define MAC_IMR_LPIIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_LPIIM_Mask (ULONG)(0x1)
+#define MAC_HFR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11c))
 
-/*#define MAC_IMR_LPIIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+#define MAC_HFR0_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HFR0_RgOffAddr);\
+} while(0)
 
-#define MAC_IMR_LPIIM_Wr_Mask (ULONG)(0xffffffdf)
+/*#define MAC_HFR0_ACTPHYSEL_Mask (ULONG)(~(~0<<(3)))*/
 
-#define MAC_IMR_LPIIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_LPIIM_Wr_Mask) | ((data & MAC_IMR_LPIIM_Mask)<<5));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR0_ACTPHYSEL_Mask (ULONG)(0x7)
 
-#define MAC_IMR_LPIIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 5) & MAC_IMR_LPIIM_Mask);\
+#define MAC_HFR0_ACTPHYSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 28) & MAC_HFR0_ACTPHYSEL_Mask);\
 } while(0)
 
-/*#define MAC_IMR_PMTIM_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_SAVLANINS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_PMTIM_Mask (ULONG)(0x1)
+#define MAC_HFR0_SAVLANINS_Mask (ULONG)(0x1)
 
-/*#define MAC_IMR_PMTIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+#define MAC_HFR0_SAVLANINS_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 27) & MAC_HFR0_SAVLANINS_Mask);\
+} while(0)
 
-#define MAC_IMR_PMTIM_Wr_Mask (ULONG)(0xffffffef)
+/*#define MAC_HFR0_TSINTSEL_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MAC_IMR_PMTIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_PMTIM_Wr_Mask) | ((data & MAC_IMR_PMTIM_Mask)<<4));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR0_TSINTSEL_Mask (ULONG)(0x3)
 
-#define MAC_IMR_PMTIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 4) & MAC_IMR_PMTIM_Mask);\
+#define MAC_HFR0_TSINTSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 25) & MAC_HFR0_TSINTSEL_Mask);\
 } while(0)
 
-/*#define MAC_IMR_PHYIM_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_MACADR64SEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_PHYIM_Mask (ULONG)(0x1)
+#define MAC_HFR0_MACADR64SEL_Mask (ULONG)(0x1)
 
-/*#define MAC_IMR_PHYIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+#define MAC_HFR0_MACADR64SEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 24) & MAC_HFR0_MACADR64SEL_Mask);\
+} while(0)
 
-#define MAC_IMR_PHYIM_Wr_Mask (ULONG)(0xfffffff7)
+/*#define MAC_HFR0_MACADR32SEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_PHYIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_PHYIM_Wr_Mask) | ((data & MAC_IMR_PHYIM_Mask)<<3));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR0_MACADR32SEL_Mask (ULONG)(0x1)
 
-#define MAC_IMR_PHYIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 3) & MAC_IMR_PHYIM_Mask);\
+#define MAC_HFR0_MACADR32SEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 23) & MAC_HFR0_MACADR32SEL_Mask);\
 } while(0)
 
-/*#define MAC_IMR_PCSANCIM_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_ADDMACADRSEL_Mask (ULONG)(~(~0<<(5)))*/
 
-#define MAC_IMR_PCSANCIM_Mask (ULONG)(0x1)
+#define MAC_HFR0_ADDMACADRSEL_Mask (ULONG)(0x1f)
 
-/*#define MAC_IMR_PCSANCIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+#define MAC_HFR0_ADDMACADRSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 18) & MAC_HFR0_ADDMACADRSEL_Mask);\
+} while(0)
 
-#define MAC_IMR_PCSANCIM_Wr_Mask (ULONG)(0xfffffffb)
+/*#define MAC_HFR0_RXCOE_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_PCSANCIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_PCSANCIM_Wr_Mask) | ((data & MAC_IMR_PCSANCIM_Mask)<<2));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR0_RXCOE_Mask (ULONG)(0x1)
 
-#define MAC_IMR_PCSANCIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 2) & MAC_IMR_PCSANCIM_Mask);\
+#define MAC_HFR0_RXCOE_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 16) & MAC_HFR0_RXCOE_Mask);\
 } while(0)
 
-/*#define MAC_IMR_PCSLCHGIM_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_TXCOESEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_PCSLCHGIM_Mask (ULONG)(0x1)
+#define MAC_HFR0_TXCOESEL_Mask (ULONG)(0x1)
 
-/*#define MAC_IMR_PCSLCHGIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+#define MAC_HFR0_TXCOESEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 14) & MAC_HFR0_TXCOESEL_Mask);\
+} while(0)
 
-#define MAC_IMR_PCSLCHGIM_Wr_Mask (ULONG)(0xfffffffd)
+/*#define MAC_HFR0_EEESEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_PCSLCHGIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_PCSLCHGIM_Wr_Mask) | ((data & MAC_IMR_PCSLCHGIM_Mask)<<1));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR0_EEESEL_Mask (ULONG)(0x1)
 
-#define MAC_IMR_PCSLCHGIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 1) & MAC_IMR_PCSLCHGIM_Mask);\
+#define MAC_HFR0_EEESEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 13) & MAC_HFR0_EEESEL_Mask);\
 } while(0)
 
-/*#define MAC_IMR_RGSMIIIM_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_TSSSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_RGSMIIIM_Mask (ULONG)(0x1)
+#define MAC_HFR0_TSSSEL_Mask (ULONG)(0x1)
 
-/*#define MAC_IMR_RGSMIIIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+#define MAC_HFR0_TSSSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 12) & MAC_HFR0_TSSSEL_Mask);\
+} while(0)
 
-#define MAC_IMR_RGSMIIIM_Wr_Mask (ULONG)(0xfffffffe)
+/*#define MAC_HFR0_ARPOFFLDEN_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_IMR_RGSMIIIM_UdfWr(data) do {\
-		ULONG v;\
-		MAC_IMR_RgRd(v);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
-		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
-		v = ((v & MAC_IMR_RGSMIIIM_Wr_Mask) | ((data & MAC_IMR_RGSMIIIM_Mask)<<0));\
-		MAC_IMR_RgWr(v);\
-} while(0)
+#define MAC_HFR0_ARPOFFLDEN_Mask (ULONG)(0x1)
 
-#define MAC_IMR_RGSMIIIM_UdfRd(data) do {\
-		MAC_IMR_RgRd(data);\
-		data = ((data >> 0) & MAC_IMR_RGSMIIIM_Mask);\
+#define MAC_HFR0_ARPOFFLDEN_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 9) & MAC_HFR0_ARPOFFLDEN_Mask);\
 } while(0)
 
+/*#define MAC_HFR0_MMCSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xb0))
+#define MAC_HFR0_MMCSEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_RgRd(data) do {\
-		(data) = ioread32((void *)MAC_ISR_RgOffAddr);\
+#define MAC_HFR0_MMCSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 8) & MAC_HFR0_MMCSEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_RWT_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_MGKSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_RWT_Mask (ULONG)(0x1)
+#define MAC_HFR0_MGKSEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_RWT_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 14) & MAC_ISR_RWT_Mask);\
+#define MAC_HFR0_MGKSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 7) & MAC_HFR0_MGKSEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_TJT_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_RWKSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_TJT_Mask (ULONG)(0x1)
+#define MAC_HFR0_RWKSEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_TJT_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 13) & MAC_ISR_TJT_Mask);\
+#define MAC_HFR0_RWKSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 6) & MAC_HFR0_RWKSEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_TSIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_SMASEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_TSIS_Mask (ULONG)(0x1)
+#define MAC_HFR0_SMASEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_TSIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 12) & MAC_ISR_TSIS_Mask);\
+#define MAC_HFR0_SMASEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 5) & MAC_HFR0_SMASEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_MMCRXIPIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_VLANHASEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_MMCRXIPIS_Mask (ULONG)(0x1)
+#define MAC_HFR0_VLANHASEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_MMCRXIPIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 11) & MAC_ISR_MMCRXIPIS_Mask);\
+#define MAC_HFR0_VLANHASEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 4) & MAC_HFR0_VLANHASEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_MMCTXIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_PCSSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_MMCTXIS_Mask (ULONG)(0x1)
+#define MAC_HFR0_PCSSEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_MMCTXIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 10) & MAC_ISR_MMCTXIS_Mask);\
+#define MAC_HFR0_PCSSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 3) & MAC_HFR0_PCSSEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_MMCRXIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_HDSEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_MMCRXIS_Mask (ULONG)(0x1)
+#define MAC_HFR0_HDSEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_MMCRXIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 9) & MAC_ISR_MMCRXIS_Mask);\
+#define MAC_HFR0_HDSEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 2) & MAC_HFR0_HDSEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_MMCIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_GMIISEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_MMCIS_Mask (ULONG)(0x1)
+#define MAC_HFR0_GMIISEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_MMCIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 8) & MAC_ISR_MMCIS_Mask);\
+#define MAC_HFR0_GMIISEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 1) & MAC_HFR0_GMIISEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_LPIIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_HFR0_MIISEL_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_LPIIS_Mask (ULONG)(0x1)
+#define MAC_HFR0_MIISEL_Mask (ULONG)(0x1)
 
-#define MAC_ISR_LPIIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 5) & MAC_ISR_LPIIS_Mask);\
+#define MAC_HFR0_MIISEL_UdfRd(data) do {\
+		MAC_HFR0_RgRd(data);\
+		data = ((data >> 0) & MAC_HFR0_MIISEL_Mask);\
 } while(0)
 
-/*#define MAC_ISR_PMTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_PMTIS_Mask (ULONG)(0x1)
+#define MAC_MDR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x114))
 
-#define MAC_ISR_PMTIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 4) & MAC_ISR_PMTIS_Mask);\
+#define MAC_MDR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_MDR_RgOffAddr);\
 } while(0)
 
-/*#define MAC_ISR_PHYIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MDR_TFCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MAC_ISR_PHYIS_Mask (ULONG)(0x1)
+#define MAC_MDR_TFCSTS_Mask (ULONG)(0x3)
 
-#define MAC_ISR_PHYIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 3) & MAC_ISR_PHYIS_Mask);\
+#define MAC_MDR_TFCSTS_UdfRd(data) do {\
+		MAC_MDR_RgRd(data);\
+		data = ((data >> 17) & MAC_MDR_TFCSTS_Mask);\
 } while(0)
 
-/*#define MAC_ISR_PCSANCIA_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MDR_TPESTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_PCSANCIA_Mask (ULONG)(0x1)
+#define MAC_MDR_TPESTS_Mask (ULONG)(0x1)
 
-#define MAC_ISR_PCSANCIA_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 2) & MAC_ISR_PCSANCIA_Mask);\
+#define MAC_MDR_TPESTS_UdfRd(data) do {\
+		MAC_MDR_RgRd(data);\
+		data = ((data >> 16) & MAC_MDR_TPESTS_Mask);\
 } while(0)
 
-/*#define MAC_ISR_PCSLCHGIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MDR_RFCFCSTS_Mask (ULONG)(~(~0<<(2)))*/
 
-#define MAC_ISR_PCSLCHGIS_Mask (ULONG)(0x1)
+#define MAC_MDR_RFCFCSTS_Mask (ULONG)(0x3)
 
-#define MAC_ISR_PCSLCHGIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 1) & MAC_ISR_PCSLCHGIS_Mask);\
+#define MAC_MDR_RFCFCSTS_UdfRd(data) do {\
+		MAC_MDR_RgRd(data);\
+		data = ((data >> 1) & MAC_MDR_RFCFCSTS_Mask);\
 } while(0)
 
-/*#define MAC_ISR_RGSMIIIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_MDR_RPESTS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MAC_ISR_RGSMIIIS_Mask (ULONG)(0x1)
+#define MAC_MDR_RPESTS_Mask (ULONG)(0x1)
 
-#define MAC_ISR_RGSMIIIS_UdfRd(data) do {\
-		MAC_ISR_RgRd(data);\
-		data = ((data >> 0) & MAC_ISR_RGSMIIIS_Mask);\
+#define MAC_MDR_RPESTS_UdfRd(data) do {\
+		MAC_MDR_RgRd(data);\
+		data = ((data >> 0) & MAC_MDR_RPESTS_Mask);\
 } while(0)
 
 
-#define MTL_ISR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xc20))
+#define MAC_VR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x110))
 
-#define MTL_ISR_RgRd(data) do {\
-		(data) = ioread32((void *)MTL_ISR_RgOffAddr);\
+#define MAC_VR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_VR_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_MACIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_VR_USERVER_Mask (ULONG)(~(~0<<(8)))*/
 
-#define MTL_ISR_MACIS_Mask (ULONG)(0x1)
+#define MAC_VR_USERVER_Mask (ULONG)(0xff)
 
-#define MTL_ISR_MACIS_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 16) & MTL_ISR_MACIS_Mask);\
+#define MAC_VR_USERVER_UdfRd(data) do {\
+		MAC_VR_RgRd(data);\
+		data = ((data >> 8) & MAC_VR_USERVER_Mask);\
 } while(0)
 
-/*#define MTL_ISR_Q7RXO_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_VR_SNPSVER_Mask (ULONG)(~(~0<<(8)))*/
 
-#define MTL_ISR_Q7RXO_Mask (ULONG)(0x1)
+#define MAC_VR_SNPSVER_Mask (ULONG)(0xff)
 
-#define MTL_ISR_Q7RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 15) & MTL_ISR_Q7RXO_Mask);\
+#define MAC_VR_SNPSVER_UdfRd(data) do {\
+		MAC_VR_RgRd(data);\
+		data = ((data >> 0) & MAC_VR_SNPSVER_Mask);\
 } while(0)
 
-/*#define MTL_ISR_Q7TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q7TXU_Mask (ULONG)(0x1)
+#define MAC_HTR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x2c))
 
-#define MTL_ISR_Q7TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 14) & MTL_ISR_Q7TXU_Mask);\
+#define MAC_HTR7_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR7_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q6RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR7_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR7_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q6RXO_Mask (ULONG)(0x1)
+#define MAC_HTR7_HT_UdfWr(data) do {\
+		MAC_HTR7_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q6RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 13) & MTL_ISR_Q6RXO_Mask);\
+#define MAC_HTR7_HT_UdfRd(data) do {\
+		MAC_HTR7_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q6TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q6TXU_Mask (ULONG)(0x1)
+#define MAC_HTR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x28))
 
-#define MTL_ISR_Q6TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 12) & MTL_ISR_Q6TXU_Mask);\
+#define MAC_HTR6_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR6_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q5RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR6_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR6_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q5RXO_Mask (ULONG)(0x1)
+#define MAC_HTR6_HT_UdfWr(data) do {\
+		MAC_HTR6_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q5RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 11) & MTL_ISR_Q5RXO_Mask);\
+#define MAC_HTR6_HT_UdfRd(data) do {\
+		MAC_HTR6_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q5TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q5TXU_Mask (ULONG)(0x1)
+#define MAC_HTR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x24))
 
-#define MTL_ISR_Q5TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 10) & MTL_ISR_Q5TXU_Mask);\
+#define MAC_HTR5_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR5_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q4RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR5_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR5_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q4RXO_Mask (ULONG)(0x1)
+#define MAC_HTR5_HT_UdfWr(data) do {\
+		MAC_HTR5_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q4RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 9) & MTL_ISR_Q4RXO_Mask);\
+#define MAC_HTR5_HT_UdfRd(data) do {\
+		MAC_HTR5_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q4TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q4TXU_Mask (ULONG)(0x1)
+#define MAC_HTR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x20))
 
-#define MTL_ISR_Q4TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 8) & MTL_ISR_Q4TXU_Mask);\
+#define MAC_HTR4_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR4_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q3RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR4_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR4_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q3RXO_Mask (ULONG)(0x1)
+#define MAC_HTR4_HT_UdfWr(data) do {\
+		MAC_HTR4_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q3RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 7) & MTL_ISR_Q3RXO_Mask);\
+#define MAC_HTR4_HT_UdfRd(data) do {\
+		MAC_HTR4_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q3TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q3TXU_Mask (ULONG)(0x1)
+#define MAC_HTR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1c))
 
-#define MTL_ISR_Q3TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 6) & MTL_ISR_Q3TXU_Mask);\
+#define MAC_HTR3_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR3_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q2RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR3_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR3_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q2RXO_Mask (ULONG)(0x1)
+#define MAC_HTR3_HT_UdfWr(data) do {\
+		MAC_HTR3_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q2RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 5) & MTL_ISR_Q2RXO_Mask);\
+#define MAC_HTR3_HT_UdfRd(data) do {\
+		MAC_HTR3_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q2TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q2TXU_Mask (ULONG)(0x1)
+#define MAC_HTR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x18))
 
-#define MTL_ISR_Q2TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 4) & MTL_ISR_Q2TXU_Mask);\
+#define MAC_HTR2_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR2_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q1RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR2_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR2_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q1RXO_Mask (ULONG)(0x1)
+#define MAC_HTR2_HT_UdfWr(data) do {\
+		MAC_HTR2_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q1RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 3) & MTL_ISR_Q1RXO_Mask);\
+#define MAC_HTR2_HT_UdfRd(data) do {\
+		MAC_HTR2_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q1TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q1TXU_Mask (ULONG)(0x1)
+#define MAC_HTR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14))
 
-#define MTL_ISR_Q1TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 2) & MTL_ISR_Q1TXU_Mask);\
+#define MAC_HTR1_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR1_RgOffAddr);\
 } while(0)
 
-/*#define MTL_ISR_Q0RXO_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_HTR1_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR1_RgOffAddr);\
+} while(0)
 
-#define MTL_ISR_Q0RXO_Mask (ULONG)(0x1)
+#define MAC_HTR1_HT_UdfWr(data) do {\
+		MAC_HTR1_RgWr(data);\
+} while(0)
 
-#define MTL_ISR_Q0RXO_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 1) & MTL_ISR_Q0RXO_Mask);\
+#define MAC_HTR1_HT_UdfRd(data) do {\
+		MAC_HTR1_RgRd(data);\
 } while(0)
 
-/*#define MTL_ISR_Q0TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define MTL_ISR_Q0TXU_Mask (ULONG)(0x1)
+#define MAC_HTR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x10))
 
-#define MTL_ISR_Q0TXU_UdfRd(data) do {\
-		MTL_ISR_RgRd(data);\
-		data = ((data >> 0) & MTL_ISR_Q0TXU_Mask);\
+#define MAC_HTR0_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_HTR0_RgOffAddr);\
 } while(0)
 
+#define MAC_HTR0_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_HTR0_RgOffAddr);\
+} while(0)
 
-#define DMA_SR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14e0))
-
-#define DMA_SR7_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR7_RgOffAddr);\
+#define MAC_HTR0_HT_UdfWr(data) do {\
+		MAC_HTR0_RgWr(data);\
 } while(0)
 
-#define DMA_SR7_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR7_RgOffAddr);\
+#define MAC_HTR0_HT_UdfRd(data) do {\
+		MAC_HTR0_RgRd(data);\
 } while(0)
 
-/*#define  DMA_SR7_Mask_3 (ULONG)(~(~0<<(3)))*/
 
-#define  DMA_SR7_Mask_3 (ULONG)(0x7)
+#define DMA_RIWTR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14b8))
 
-/*#define DMA_SR7_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+#define DMA_RIWTR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR7_RgOffAddr);\
+} while(0)
 
-#define DMA_SR7_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_RIWTR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR7_RgOffAddr);\
+} while(0)
 
-/*#define  DMA_SR7_Mask_19 (ULONG)(~(~0<<(13)))*/
+/*#define  DMA_RIWTR7_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define  DMA_SR7_Mask_19 (ULONG)(0x1fff)
+#define  DMA_RIWTR7_Mask_8 (ULONG)(0xffffff)
 
-/*#define DMA_SR7_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+/*#define DMA_RIWTR7_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR7_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_RIWTR7_RES_Wr_Mask_8 (ULONG)(0xff)
 
-/*#define DMA_SR7_TI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RIWTR7_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR7_TI_Mask (ULONG)(0x1)
+#define DMA_RIWTR7_RWT_Mask (ULONG)(0xff)
 
-/*#define DMA_SR7_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define DMA_RIWTR7_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
 
-#define DMA_SR7_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_RIWTR7_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-#define DMA_SR7_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_TI_Wr_Mask) | ((data & DMA_SR7_TI_Mask)<<0));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR7_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR7_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR7_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR7_RWT_Wr_Mask) | ((data & DMA_RIWTR7_RWT_Mask)<<0));\
+		DMA_RIWTR7_RgWr(v);\
 } while(0)
 
-#define DMA_SR7_TI_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 0) & DMA_SR7_TI_Mask);\
+#define DMA_RIWTR7_RWT_UdfRd(data) do {\
+		DMA_RIWTR7_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR7_RWT_Mask);\
 } while(0)
 
-/*#define DMA_SR7_TPS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR7_TPS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR7_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define DMA_SR7_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define DMA_RIWTR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1438))
 
-#define DMA_SR7_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_TPS_Wr_Mask) | ((data & DMA_SR7_TPS_Mask)<<1));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR7_TPS_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 1) & DMA_SR7_TPS_Mask);\
+#define DMA_RIWTR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR6_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR7_TBU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  DMA_RIWTR6_Mask_8 (ULONG)(~(~0<<(24)))*/
+
+#define  DMA_RIWTR6_Mask_8 (ULONG)(0xffffff)
+
+/*#define DMA_RIWTR6_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR7_TBU_Mask (ULONG)(0x1)
+#define DMA_RIWTR6_RES_Wr_Mask_8 (ULONG)(0xff)
 
-/*#define DMA_SR7_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define DMA_RIWTR6_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR7_TBU_Wr_Mask (ULONG)(0xfffffffb)
+#define DMA_RIWTR6_RWT_Mask (ULONG)(0xff)
 
-#define DMA_SR7_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_TBU_Wr_Mask) | ((data & DMA_SR7_TBU_Mask)<<2));\
-		DMA_SR7_RgWr(v);\
-} while(0)
+/*#define DMA_RIWTR6_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
 
-#define DMA_SR7_TBU_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 2) & DMA_SR7_TBU_Mask);\
-} while(0)
+#define DMA_RIWTR6_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-/*#define DMA_SR7_RI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RIWTR6_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR6_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR6_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR6_RWT_Wr_Mask) | ((data & DMA_RIWTR6_RWT_Mask)<<0));\
+		DMA_RIWTR6_RgWr(v);\
+} while(0)
 
-#define DMA_SR7_RI_Mask (ULONG)(0x1)
+#define DMA_RIWTR6_RWT_UdfRd(data) do {\
+		DMA_RIWTR6_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR6_RWT_Mask);\
+} while(0)
 
-/*#define DMA_SR7_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_SR7_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_RIWTR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13b8))
 
-#define DMA_SR7_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_RI_Wr_Mask) | ((data & DMA_SR7_RI_Mask)<<6));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR7_RI_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 6) & DMA_SR7_RI_Mask);\
+#define DMA_RIWTR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR5_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR7_RBU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  DMA_RIWTR5_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define DMA_SR7_RBU_Mask (ULONG)(0x1)
+#define  DMA_RIWTR5_Mask_8 (ULONG)(0xffffff)
 
-/*#define DMA_SR7_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define DMA_RIWTR5_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR7_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define DMA_RIWTR5_RES_Wr_Mask_8 (ULONG)(0xff)
 
-#define DMA_SR7_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_RBU_Wr_Mask) | ((data & DMA_SR7_RBU_Mask)<<7));\
-		DMA_SR7_RgWr(v);\
-} while(0)
+/*#define DMA_RIWTR5_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR7_RBU_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 7) & DMA_SR7_RBU_Mask);\
-} while(0)
+#define DMA_RIWTR5_RWT_Mask (ULONG)(0xff)
+
+/*#define DMA_RIWTR5_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
+
+#define DMA_RIWTR5_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-/*#define DMA_SR7_RPS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RIWTR5_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR5_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR5_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR5_RWT_Wr_Mask) | ((data & DMA_RIWTR5_RWT_Mask)<<0));\
+		DMA_RIWTR5_RgWr(v);\
+} while(0)
 
-#define DMA_SR7_RPS_Mask (ULONG)(0x1)
+#define DMA_RIWTR5_RWT_UdfRd(data) do {\
+		DMA_RIWTR5_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR5_RWT_Mask);\
+} while(0)
 
-/*#define DMA_SR7_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_SR7_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define DMA_RIWTR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1338))
 
-#define DMA_SR7_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_RPS_Wr_Mask) | ((data & DMA_SR7_RPS_Mask)<<8));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR4_RgOffAddr);\
 } while(0)
 
-#define DMA_SR7_RPS_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 8) & DMA_SR7_RPS_Mask);\
+#define DMA_RIWTR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR4_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR7_RWT_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR7_RWT_Mask (ULONG)(0x1)
-
-/*#define DMA_SR7_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define  DMA_RIWTR4_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define DMA_SR7_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define  DMA_RIWTR4_Mask_8 (ULONG)(0xffffff)
 
-#define DMA_SR7_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_RWT_Wr_Mask) | ((data & DMA_SR7_RWT_Mask)<<9));\
-		DMA_SR7_RgWr(v);\
-} while(0)
+/*#define DMA_RIWTR4_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR7_RWT_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 9) & DMA_SR7_RWT_Mask);\
-} while(0)
+#define DMA_RIWTR4_RES_Wr_Mask_8 (ULONG)(0xff)
 
-/*#define DMA_SR7_ETI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RIWTR4_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR7_ETI_Mask (ULONG)(0x1)
+#define DMA_RIWTR4_RWT_Mask (ULONG)(0xff)
 
-/*#define DMA_SR7_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define DMA_RIWTR4_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
 
-#define DMA_SR7_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define DMA_RIWTR4_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-#define DMA_SR7_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_ETI_Wr_Mask) | ((data & DMA_SR7_ETI_Mask)<<10));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR4_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR4_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR4_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR4_RWT_Wr_Mask) | ((data & DMA_RIWTR4_RWT_Mask)<<0));\
+		DMA_RIWTR4_RgWr(v);\
 } while(0)
 
-#define DMA_SR7_ETI_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 10) & DMA_SR7_ETI_Mask);\
+#define DMA_RIWTR4_RWT_UdfRd(data) do {\
+		DMA_RIWTR4_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR4_RWT_Mask);\
 } while(0)
 
-/*#define DMA_SR7_ERI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR7_ERI_Mask (ULONG)(0x1)
 
-/*#define DMA_SR7_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define DMA_SR7_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define DMA_RIWTR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12b8))
 
-#define DMA_SR7_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_ERI_Wr_Mask) | ((data & DMA_SR7_ERI_Mask)<<11));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR3_RgOffAddr);\
 } while(0)
 
-#define DMA_SR7_ERI_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 11) & DMA_SR7_ERI_Mask);\
+#define DMA_RIWTR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR3_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR7_FBE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR7_FBE_Mask (ULONG)(0x1)
-
-/*#define DMA_SR7_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define  DMA_RIWTR3_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define DMA_SR7_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define  DMA_RIWTR3_Mask_8 (ULONG)(0xffffff)
 
-#define DMA_SR7_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_FBE_Wr_Mask) | ((data & DMA_SR7_FBE_Mask)<<12));\
-		DMA_SR7_RgWr(v);\
-} while(0)
+/*#define DMA_RIWTR3_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR7_FBE_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 12) & DMA_SR7_FBE_Mask);\
-} while(0)
+#define DMA_RIWTR3_RES_Wr_Mask_8 (ULONG)(0xff)
 
-/*#define DMA_SR7_CDE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RIWTR3_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR7_CDE_Mask (ULONG)(0x1)
+#define DMA_RIWTR3_RWT_Mask (ULONG)(0xff)
 
-/*#define DMA_SR7_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define DMA_RIWTR3_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
 
-#define DMA_SR7_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define DMA_RIWTR3_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-#define DMA_SR7_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_CDE_Wr_Mask) | ((data & DMA_SR7_CDE_Mask)<<13));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR3_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR3_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR3_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR3_RWT_Wr_Mask) | ((data & DMA_RIWTR3_RWT_Mask)<<0));\
+		DMA_RIWTR3_RgWr(v);\
 } while(0)
 
-#define DMA_SR7_CDE_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 13) & DMA_SR7_CDE_Mask);\
+#define DMA_RIWTR3_RWT_UdfRd(data) do {\
+		DMA_RIWTR3_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR3_RWT_Mask);\
 } while(0)
 
-/*#define DMA_SR7_AIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR7_AIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR7_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define DMA_SR7_AIS_Wr_Mask (ULONG)(0xffffbfff)
+#define DMA_RIWTR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1238))
 
-#define DMA_SR7_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_AIS_Wr_Mask) | ((data & DMA_SR7_AIS_Mask)<<14));\
-		DMA_SR7_RgWr(v);\
+#define DMA_RIWTR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR7_AIS_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 14) & DMA_SR7_AIS_Mask);\
+#define DMA_RIWTR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR7_NIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  DMA_RIWTR2_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define DMA_SR7_NIS_Mask (ULONG)(0x1)
+#define  DMA_RIWTR2_Mask_8 (ULONG)(0xffffff)
 
-/*#define DMA_SR7_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define DMA_RIWTR2_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR7_NIS_Wr_Mask (ULONG)(0xffff7fff)
+#define DMA_RIWTR2_RES_Wr_Mask_8 (ULONG)(0xff)
 
-#define DMA_SR7_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR7_RgRd(v);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_3))|((( 0) & (DMA_SR7_Mask_3))<<3);\
-		v = (v & (DMA_SR7_RES_Wr_Mask_19))|((( 0) & (DMA_SR7_Mask_19))<<19);\
-		v = ((v & DMA_SR7_NIS_Wr_Mask) | ((data & DMA_SR7_NIS_Mask)<<15));\
-		DMA_SR7_RgWr(v);\
-} while(0)
+/*#define DMA_RIWTR2_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR7_NIS_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 15) & DMA_SR7_NIS_Mask);\
-} while(0)
+#define DMA_RIWTR2_RWT_Mask (ULONG)(0xff)
 
-/*#define DMA_SR7_EB_Mask (ULONG)(~(~0<<(3)))*/
+/*#define DMA_RIWTR2_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
+
+#define DMA_RIWTR2_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-#define DMA_SR7_EB_Mask (ULONG)(0x7)
+#define DMA_RIWTR2_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR2_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR2_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR2_RWT_Wr_Mask) | ((data & DMA_RIWTR2_RWT_Mask)<<0));\
+		DMA_RIWTR2_RgWr(v);\
+} while(0)
 
-#define DMA_SR7_EB_UdfRd(data) do {\
-		DMA_SR7_RgRd(data);\
-		data = ((data >> 16) & DMA_SR7_EB_Mask);\
+#define DMA_RIWTR2_RWT_UdfRd(data) do {\
+		DMA_RIWTR2_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR2_RWT_Mask);\
 } while(0)
 
 
-#define DMA_SR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1460))
+#define DMA_RIWTR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11b8))
 
-#define DMA_SR6_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR6_RgOffAddr);\
+#define DMA_RIWTR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR6_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR6_RgOffAddr);\
+#define DMA_RIWTR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR1_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_SR6_Mask_3 (ULONG)(~(~0<<(3)))*/
+/*#define  DMA_RIWTR1_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define  DMA_SR6_Mask_3 (ULONG)(0x7)
+#define  DMA_RIWTR1_Mask_8 (ULONG)(0xffffff)
 
-/*#define DMA_SR6_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define DMA_RIWTR1_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR6_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_RIWTR1_RES_Wr_Mask_8 (ULONG)(0xff)
 
-/*#define  DMA_SR6_Mask_19 (ULONG)(~(~0<<(13)))*/
+/*#define DMA_RIWTR1_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define  DMA_SR6_Mask_19 (ULONG)(0x1fff)
+#define DMA_RIWTR1_RWT_Mask (ULONG)(0xff)
 
-/*#define DMA_SR6_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+/*#define DMA_RIWTR1_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
 
-#define DMA_SR6_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_RIWTR1_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-/*#define DMA_SR6_TI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RIWTR1_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR1_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR1_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR1_RWT_Wr_Mask) | ((data & DMA_RIWTR1_RWT_Mask)<<0));\
+		DMA_RIWTR1_RgWr(v);\
+} while(0)
 
-#define DMA_SR6_TI_Mask (ULONG)(0x1)
+#define DMA_RIWTR1_RWT_UdfRd(data) do {\
+		DMA_RIWTR1_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR1_RWT_Mask);\
+} while(0)
 
-/*#define DMA_SR6_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_SR6_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_RIWTR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1138))
 
-#define DMA_SR6_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_TI_Wr_Mask) | ((data & DMA_SR6_TI_Mask)<<0));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RIWTR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RIWTR0_RgOffAddr);\
 } while(0)
 
-#define DMA_SR6_TI_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 0) & DMA_SR6_TI_Mask);\
+#define DMA_RIWTR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RIWTR0_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR6_TPS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_TPS_Mask (ULONG)(0x1)
-
-/*#define DMA_SR6_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define  DMA_RIWTR0_Mask_8 (ULONG)(~(~0<<(24)))*/
 
-#define DMA_SR6_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define  DMA_RIWTR0_Mask_8 (ULONG)(0xffffff)
 
-#define DMA_SR6_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_TPS_Wr_Mask) | ((data & DMA_SR6_TPS_Mask)<<1));\
-		DMA_SR6_RgWr(v);\
-} while(0)
+/*#define DMA_RIWTR0_RES_Wr_Mask_8 (ULONG)(~((~(~0<<(24)))<<(8)))*/
 
-#define DMA_SR6_TPS_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 1) & DMA_SR6_TPS_Mask);\
-} while(0)
+#define DMA_RIWTR0_RES_Wr_Mask_8 (ULONG)(0xff)
 
-/*#define DMA_SR6_TBU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RIWTR0_RWT_Mask (ULONG)(~(~0<<(8)))*/
 
-#define DMA_SR6_TBU_Mask (ULONG)(0x1)
+#define DMA_RIWTR0_RWT_Mask (ULONG)(0xff)
 
-/*#define DMA_SR6_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define DMA_RIWTR0_RWT_Wr_Mask (ULONG)(~((~(~0 << (8))) << (0)))*/
 
-#define DMA_SR6_TBU_Wr_Mask (ULONG)(0xfffffffb)
+#define DMA_RIWTR0_RWT_Wr_Mask (ULONG)(0xffffff00)
 
-#define DMA_SR6_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_TBU_Wr_Mask) | ((data & DMA_SR6_TBU_Mask)<<2));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RIWTR0_RWT_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RIWTR0_RES_Wr_Mask_8))|((( 0) & (DMA_RIWTR0_Mask_8))<<8);\
+		(v) = ((v & DMA_RIWTR0_RWT_Wr_Mask) | ((data & DMA_RIWTR0_RWT_Mask)<<0));\
+		DMA_RIWTR0_RgWr(v);\
 } while(0)
 
-#define DMA_SR6_TBU_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 2) & DMA_SR6_TBU_Mask);\
+#define DMA_RIWTR0_RWT_UdfRd(data) do {\
+		DMA_RIWTR0_RgRd(data);\
+		data = ((data >> 0) & DMA_RIWTR0_RWT_Mask);\
 } while(0)
 
-/*#define DMA_SR6_RI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_RI_Mask (ULONG)(0x1)
 
-/*#define DMA_SR6_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define DMA_SR6_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_RDRLR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14b0))
 
-#define DMA_SR6_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_RI_Wr_Mask) | ((data & DMA_SR6_RI_Mask)<<6));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR7_RgOffAddr);\
 } while(0)
 
-#define DMA_SR6_RI_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 6) & DMA_SR6_RI_Mask);\
+#define DMA_RDRLR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR7_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR6_RBU_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_RBU_Mask (ULONG)(0x1)
-
-/*#define DMA_SR6_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define  DMA_RDRLR7_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR6_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define  DMA_RDRLR7_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR6_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_RBU_Wr_Mask) | ((data & DMA_SR6_RBU_Mask)<<7));\
-		DMA_SR6_RgWr(v);\
-} while(0)
+/*#define DMA_RDRLR7_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR6_RBU_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 7) & DMA_SR6_RBU_Mask);\
-} while(0)
+#define DMA_RDRLR7_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR6_RPS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR7_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR6_RPS_Mask (ULONG)(0x1)
+#define DMA_RDRLR7_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR6_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define DMA_RDRLR7_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR6_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define DMA_RDRLR7_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR6_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_RPS_Wr_Mask) | ((data & DMA_SR6_RPS_Mask)<<8));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR7_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR7_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR7_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR7_RDRL_Wr_Mask) | ((data & DMA_RDRLR7_RDRL_Mask)<<0));\
+		DMA_RDRLR7_RgWr(v);\
 } while(0)
 
-#define DMA_SR6_RPS_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 8) & DMA_SR6_RPS_Mask);\
+#define DMA_RDRLR7_RDRL_UdfRd(data) do {\
+		DMA_RDRLR7_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR7_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR6_RWT_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_RWT_Mask (ULONG)(0x1)
 
-/*#define DMA_SR6_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
-
-#define DMA_SR6_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define DMA_RDRLR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1430))
 
-#define DMA_SR6_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_RWT_Wr_Mask) | ((data & DMA_SR6_RWT_Mask)<<9));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR6_RWT_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 9) & DMA_SR6_RWT_Mask);\
+#define DMA_RDRLR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR6_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR6_ETI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_ETI_Mask (ULONG)(0x1)
-
-/*#define DMA_SR6_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define  DMA_RDRLR6_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR6_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define  DMA_RDRLR6_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR6_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_ETI_Wr_Mask) | ((data & DMA_SR6_ETI_Mask)<<10));\
-		DMA_SR6_RgWr(v);\
-} while(0)
+/*#define DMA_RDRLR6_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR6_ETI_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 10) & DMA_SR6_ETI_Mask);\
-} while(0)
+#define DMA_RDRLR6_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR6_ERI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR6_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR6_ERI_Mask (ULONG)(0x1)
+#define DMA_RDRLR6_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR6_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define DMA_RDRLR6_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR6_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define DMA_RDRLR6_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR6_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_ERI_Wr_Mask) | ((data & DMA_SR6_ERI_Mask)<<11));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR6_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR6_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR6_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR6_RDRL_Wr_Mask) | ((data & DMA_RDRLR6_RDRL_Mask)<<0));\
+		DMA_RDRLR6_RgWr(v);\
 } while(0)
 
-#define DMA_SR6_ERI_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 11) & DMA_SR6_ERI_Mask);\
+#define DMA_RDRLR6_RDRL_UdfRd(data) do {\
+		DMA_RDRLR6_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR6_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR6_FBE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_FBE_Mask (ULONG)(0x1)
 
-/*#define DMA_SR6_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
-
-#define DMA_SR6_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define DMA_RDRLR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13b0))
 
-#define DMA_SR6_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_FBE_Wr_Mask) | ((data & DMA_SR6_FBE_Mask)<<12));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR6_FBE_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 12) & DMA_SR6_FBE_Mask);\
+#define DMA_RDRLR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR5_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR6_CDE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_CDE_Mask (ULONG)(0x1)
-
-/*#define DMA_SR6_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define  DMA_RDRLR5_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR6_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define  DMA_RDRLR5_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR6_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_CDE_Wr_Mask) | ((data & DMA_SR6_CDE_Mask)<<13));\
-		DMA_SR6_RgWr(v);\
-} while(0)
+/*#define DMA_RDRLR5_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR6_CDE_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 13) & DMA_SR6_CDE_Mask);\
-} while(0)
+#define DMA_RDRLR5_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR6_AIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR5_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR6_AIS_Mask (ULONG)(0x1)
+#define DMA_RDRLR5_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR6_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
+/*#define DMA_RDRLR5_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR6_AIS_Wr_Mask (ULONG)(0xffffbfff)
+#define DMA_RDRLR5_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR6_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_AIS_Wr_Mask) | ((data & DMA_SR6_AIS_Mask)<<14));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR5_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR5_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR5_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR5_RDRL_Wr_Mask) | ((data & DMA_RDRLR5_RDRL_Mask)<<0));\
+		DMA_RDRLR5_RgWr(v);\
 } while(0)
 
-#define DMA_SR6_AIS_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 14) & DMA_SR6_AIS_Mask);\
+#define DMA_RDRLR5_RDRL_UdfRd(data) do {\
+		DMA_RDRLR5_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR5_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR6_NIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR6_NIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR6_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
-
-#define DMA_SR6_NIS_Wr_Mask (ULONG)(0xffff7fff)
+#define DMA_RDRLR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1330))
 
-#define DMA_SR6_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR6_RgRd(v);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_3))|((( 0) & (DMA_SR6_Mask_3))<<3);\
-		v = (v & (DMA_SR6_RES_Wr_Mask_19))|((( 0) & (DMA_SR6_Mask_19))<<19);\
-		v = ((v & DMA_SR6_NIS_Wr_Mask) | ((data & DMA_SR6_NIS_Mask)<<15));\
-		DMA_SR6_RgWr(v);\
+#define DMA_RDRLR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR4_RgOffAddr);\
 } while(0)
 
-#define DMA_SR6_NIS_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 15) & DMA_SR6_NIS_Mask);\
+#define DMA_RDRLR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR4_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR6_EB_Mask (ULONG)(~(~0<<(3)))*/
+/*#define  DMA_RDRLR4_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR6_EB_Mask (ULONG)(0x7)
+#define  DMA_RDRLR4_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR6_EB_UdfRd(data) do {\
-		DMA_SR6_RgRd(data);\
-		data = ((data >> 16) & DMA_SR6_EB_Mask);\
-} while(0)
+/*#define DMA_RDRLR4_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
+
+#define DMA_RDRLR4_RES_Wr_Mask_10 (ULONG)(0x3ff)
+
+/*#define DMA_RDRLR4_RDRL_Mask (ULONG)(~(~0<<(10)))*/
+
+#define DMA_RDRLR4_RDRL_Mask (ULONG)(0x3ff)
 
+/*#define DMA_RDRLR4_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13e0))
+#define DMA_RDRLR4_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR5_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR5_RgOffAddr);\
+#define DMA_RDRLR4_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR4_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR4_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR4_RDRL_Wr_Mask) | ((data & DMA_RDRLR4_RDRL_Mask)<<0));\
+		DMA_RDRLR4_RgWr(v);\
 } while(0)
 
-#define DMA_SR5_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR5_RgOffAddr);\
+#define DMA_RDRLR4_RDRL_UdfRd(data) do {\
+		DMA_RDRLR4_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR4_RDRL_Mask);\
 } while(0)
 
-/*#define  DMA_SR5_Mask_3 (ULONG)(~(~0<<(3)))*/
 
-#define  DMA_SR5_Mask_3 (ULONG)(0x7)
+#define DMA_RDRLR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12b0))
 
-/*#define DMA_SR5_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+#define DMA_RDRLR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR3_RgOffAddr);\
+} while(0)
 
-#define DMA_SR5_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_RDRLR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR3_RgOffAddr);\
+} while(0)
 
-/*#define  DMA_SR5_Mask_19 (ULONG)(~(~0<<(13)))*/
+/*#define  DMA_RDRLR3_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define  DMA_SR5_Mask_19 (ULONG)(0x1fff)
+#define  DMA_RDRLR3_Mask_10 (ULONG)(0x3fffff)
 
-/*#define DMA_SR5_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+/*#define DMA_RDRLR3_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR5_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_RDRLR3_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR5_TI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR3_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR5_TI_Mask (ULONG)(0x1)
+#define DMA_RDRLR3_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR5_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define DMA_RDRLR3_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR5_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_RDRLR3_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR5_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_TI_Wr_Mask) | ((data & DMA_SR5_TI_Mask)<<0));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR3_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR3_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR3_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR3_RDRL_Wr_Mask) | ((data & DMA_RDRLR3_RDRL_Mask)<<0));\
+		DMA_RDRLR3_RgWr(v);\
 } while(0)
 
-#define DMA_SR5_TI_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 0) & DMA_SR5_TI_Mask);\
+#define DMA_RDRLR3_RDRL_UdfRd(data) do {\
+		DMA_RDRLR3_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR3_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR5_TPS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_TPS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR5_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define DMA_SR5_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define DMA_RDRLR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1230))
 
-#define DMA_SR5_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_TPS_Wr_Mask) | ((data & DMA_SR5_TPS_Mask)<<1));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR5_TPS_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 1) & DMA_SR5_TPS_Mask);\
+#define DMA_RDRLR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR5_TBU_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_TBU_Mask (ULONG)(0x1)
-
-/*#define DMA_SR5_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define  DMA_RDRLR2_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR5_TBU_Wr_Mask (ULONG)(0xfffffffb)
+#define  DMA_RDRLR2_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR5_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_TBU_Wr_Mask) | ((data & DMA_SR5_TBU_Mask)<<2));\
-		DMA_SR5_RgWr(v);\
-} while(0)
+/*#define DMA_RDRLR2_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR5_TBU_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 2) & DMA_SR5_TBU_Mask);\
-} while(0)
+#define DMA_RDRLR2_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR5_RI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR2_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR5_RI_Mask (ULONG)(0x1)
+#define DMA_RDRLR2_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR5_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+/*#define DMA_RDRLR2_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR5_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_RDRLR2_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR5_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_RI_Wr_Mask) | ((data & DMA_SR5_RI_Mask)<<6));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR2_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR2_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR2_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR2_RDRL_Wr_Mask) | ((data & DMA_RDRLR2_RDRL_Mask)<<0));\
+		DMA_RDRLR2_RgWr(v);\
 } while(0)
 
-#define DMA_SR5_RI_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 6) & DMA_SR5_RI_Mask);\
+#define DMA_RDRLR2_RDRL_UdfRd(data) do {\
+		DMA_RDRLR2_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR2_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR5_RBU_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_RBU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR5_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
-
-#define DMA_SR5_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define DMA_RDRLR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11b0))
 
-#define DMA_SR5_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_RBU_Wr_Mask) | ((data & DMA_SR5_RBU_Mask)<<7));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR5_RBU_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 7) & DMA_SR5_RBU_Mask);\
+#define DMA_RDRLR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR1_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR5_RPS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_RPS_Mask (ULONG)(0x1)
-
-/*#define DMA_SR5_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define  DMA_RDRLR1_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR5_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define  DMA_RDRLR1_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR5_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_RPS_Wr_Mask) | ((data & DMA_SR5_RPS_Mask)<<8));\
-		DMA_SR5_RgWr(v);\
-} while(0)
+/*#define DMA_RDRLR1_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR5_RPS_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 8) & DMA_SR5_RPS_Mask);\
-} while(0)
+#define DMA_RDRLR1_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR5_RWT_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR1_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR5_RWT_Mask (ULONG)(0x1)
+#define DMA_RDRLR1_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR5_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define DMA_RDRLR1_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR5_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define DMA_RDRLR1_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR5_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_RWT_Wr_Mask) | ((data & DMA_SR5_RWT_Mask)<<9));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR1_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR1_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR1_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR1_RDRL_Wr_Mask) | ((data & DMA_RDRLR1_RDRL_Mask)<<0));\
+		DMA_RDRLR1_RgWr(v);\
 } while(0)
 
-#define DMA_SR5_RWT_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 9) & DMA_SR5_RWT_Mask);\
+#define DMA_RDRLR1_RDRL_UdfRd(data) do {\
+		DMA_RDRLR1_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR1_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR5_ETI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_ETI_Mask (ULONG)(0x1)
 
-/*#define DMA_SR5_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
-
-#define DMA_SR5_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define DMA_RDRLR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1130))
 
-#define DMA_SR5_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_ETI_Wr_Mask) | ((data & DMA_SR5_ETI_Mask)<<10));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDRLR0_RgOffAddr);\
 } while(0)
 
-#define DMA_SR5_ETI_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 10) & DMA_SR5_ETI_Mask);\
+#define DMA_RDRLR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDRLR0_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR5_ERI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_ERI_Mask (ULONG)(0x1)
-
-/*#define DMA_SR5_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define  DMA_RDRLR0_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR5_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define  DMA_RDRLR0_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR5_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_ERI_Wr_Mask) | ((data & DMA_SR5_ERI_Mask)<<11));\
-		DMA_SR5_RgWr(v);\
-} while(0)
+/*#define DMA_RDRLR0_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR5_ERI_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 11) & DMA_SR5_ERI_Mask);\
-} while(0)
+#define DMA_RDRLR0_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR5_FBE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_RDRLR0_RDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR5_FBE_Mask (ULONG)(0x1)
+#define DMA_RDRLR0_RDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR5_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define DMA_RDRLR0_RDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR5_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define DMA_RDRLR0_RDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR5_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_FBE_Wr_Mask) | ((data & DMA_SR5_FBE_Mask)<<12));\
-		DMA_SR5_RgWr(v);\
+#define DMA_RDRLR0_RDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_RDRLR0_RES_Wr_Mask_10))|((( 0) & (DMA_RDRLR0_Mask_10))<<10);\
+		(v) = ((v & DMA_RDRLR0_RDRL_Wr_Mask) | ((data & DMA_RDRLR0_RDRL_Mask)<<0));\
+		DMA_RDRLR0_RgWr(v);\
 } while(0)
 
-#define DMA_SR5_FBE_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 12) & DMA_SR5_FBE_Mask);\
+#define DMA_RDRLR0_RDRL_UdfRd(data) do {\
+		DMA_RDRLR0_RgRd(data);\
+		data = ((data >> 0) & DMA_RDRLR0_RDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR5_CDE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_CDE_Mask (ULONG)(0x1)
 
-/*#define DMA_SR5_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
-
-#define DMA_SR5_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define DMA_TDRLR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14ac))
 
-#define DMA_SR5_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_CDE_Wr_Mask) | ((data & DMA_SR5_CDE_Mask)<<13));\
-		DMA_SR5_RgWr(v);\
+#define DMA_TDRLR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR7_RgOffAddr);\
 } while(0)
 
-#define DMA_SR5_CDE_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 13) & DMA_SR5_CDE_Mask);\
+#define DMA_TDRLR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR7_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR5_AIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR5_AIS_Mask (ULONG)(0x1)
-
-/*#define DMA_SR5_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define DMA_SR5_AIS_Wr_Mask (ULONG)(0xffffbfff)
+/*#define  DMA_TDRLR7_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR5_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_AIS_Wr_Mask) | ((data & DMA_SR5_AIS_Mask)<<14));\
-		DMA_SR5_RgWr(v);\
-} while(0)
+#define  DMA_TDRLR7_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR5_AIS_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 14) & DMA_SR5_AIS_Mask);\
-} while(0)
+/*#define DMA_TDRLR7_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-/*#define DMA_SR5_NIS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDRLR7_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-#define DMA_SR5_NIS_Mask (ULONG)(0x1)
+/*#define DMA_TDRLR7_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-/*#define DMA_SR5_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+#define DMA_TDRLR7_TDRL_Mask (ULONG)(0x3ff)
 
-#define DMA_SR5_NIS_Wr_Mask (ULONG)(0xffff7fff)
+/*#define DMA_TDRLR7_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR5_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR5_RgRd(v);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_3))|((( 0) & (DMA_SR5_Mask_3))<<3);\
-		v = (v & (DMA_SR5_RES_Wr_Mask_19))|((( 0) & (DMA_SR5_Mask_19))<<19);\
-		v = ((v & DMA_SR5_NIS_Wr_Mask) | ((data & DMA_SR5_NIS_Mask)<<15));\
-		DMA_SR5_RgWr(v);\
-} while(0)
+#define DMA_TDRLR7_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR5_NIS_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 15) & DMA_SR5_NIS_Mask);\
+#define DMA_TDRLR7_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR7_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR7_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR7_TDRL_Wr_Mask) | ((data & DMA_TDRLR7_TDRL_Mask)<<0));\
+		DMA_TDRLR7_RgWr(v);\
 } while(0)
 
-/*#define DMA_SR5_EB_Mask (ULONG)(~(~0<<(3)))*/
-
-#define DMA_SR5_EB_Mask (ULONG)(0x7)
-
-#define DMA_SR5_EB_UdfRd(data) do {\
-		DMA_SR5_RgRd(data);\
-		data = ((data >> 16) & DMA_SR5_EB_Mask);\
+#define DMA_TDRLR7_TDRL_UdfRd(data) do {\
+		DMA_TDRLR7_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR7_TDRL_Mask);\
 } while(0)
 
 
-#define DMA_SR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1360))
+#define DMA_TDRLR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x142c))
 
-#define DMA_SR4_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR4_RgOffAddr);\
+#define DMA_TDRLR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR4_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR4_RgOffAddr);\
+#define DMA_TDRLR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR6_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_SR4_Mask_3 (ULONG)(~(~0<<(3)))*/
+/*#define  DMA_TDRLR6_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define  DMA_SR4_Mask_3 (ULONG)(0x7)
+#define  DMA_TDRLR6_Mask_10 (ULONG)(0x3fffff)
 
-/*#define DMA_SR4_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define DMA_TDRLR6_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR4_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_TDRLR6_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define  DMA_SR4_Mask_19 (ULONG)(~(~0<<(13)))*/
+/*#define DMA_TDRLR6_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define  DMA_SR4_Mask_19 (ULONG)(0x1fff)
+#define DMA_TDRLR6_TDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR4_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+/*#define DMA_TDRLR6_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR4_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_TDRLR6_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-/*#define DMA_SR4_TI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDRLR6_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR6_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR6_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR6_TDRL_Wr_Mask) | ((data & DMA_TDRLR6_TDRL_Mask)<<0));\
+		DMA_TDRLR6_RgWr(v);\
+} while(0)
 
-#define DMA_SR4_TI_Mask (ULONG)(0x1)
+#define DMA_TDRLR6_TDRL_UdfRd(data) do {\
+		DMA_TDRLR6_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR6_TDRL_Mask);\
+} while(0)
 
-/*#define DMA_SR4_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_SR4_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_TDRLR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13ac))
 
-#define DMA_SR4_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_TI_Wr_Mask) | ((data & DMA_SR4_TI_Mask)<<0));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR4_TI_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 0) & DMA_SR4_TI_Mask);\
+#define DMA_TDRLR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR5_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR4_TPS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_TPS_Mask (ULONG)(0x1)
-
-/*#define DMA_SR4_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+/*#define  DMA_TDRLR5_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR4_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define  DMA_TDRLR5_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR4_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_TPS_Wr_Mask) | ((data & DMA_SR4_TPS_Mask)<<1));\
-		DMA_SR4_RgWr(v);\
-} while(0)
+/*#define DMA_TDRLR5_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR4_TPS_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 1) & DMA_SR4_TPS_Mask);\
-} while(0)
+#define DMA_TDRLR5_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR4_TBU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_TDRLR5_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR4_TBU_Mask (ULONG)(0x1)
+#define DMA_TDRLR5_TDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR4_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+/*#define DMA_TDRLR5_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR4_TBU_Wr_Mask (ULONG)(0xfffffffb)
+#define DMA_TDRLR5_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR4_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_TBU_Wr_Mask) | ((data & DMA_SR4_TBU_Mask)<<2));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR5_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR5_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR5_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR5_TDRL_Wr_Mask) | ((data & DMA_TDRLR5_TDRL_Mask)<<0));\
+		DMA_TDRLR5_RgWr(v);\
 } while(0)
 
-#define DMA_SR4_TBU_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 2) & DMA_SR4_TBU_Mask);\
+#define DMA_TDRLR5_TDRL_UdfRd(data) do {\
+		DMA_TDRLR5_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR5_TDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR4_RI_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR4_RI_Mask (ULONG)(0x1)
-
-/*#define DMA_SR4_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define DMA_SR4_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_TDRLR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x132c))
 
-#define DMA_SR4_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_RI_Wr_Mask) | ((data & DMA_SR4_RI_Mask)<<6));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR4_RgOffAddr);\
 } while(0)
 
-#define DMA_SR4_RI_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 6) & DMA_SR4_RI_Mask);\
+#define DMA_TDRLR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR4_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR4_RBU_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_RBU_Mask (ULONG)(0x1)
-
-/*#define DMA_SR4_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+/*#define  DMA_TDRLR4_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR4_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define  DMA_TDRLR4_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR4_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_RBU_Wr_Mask) | ((data & DMA_SR4_RBU_Mask)<<7));\
-		DMA_SR4_RgWr(v);\
-} while(0)
+/*#define DMA_TDRLR4_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR4_RBU_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 7) & DMA_SR4_RBU_Mask);\
-} while(0)
+#define DMA_TDRLR4_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR4_RPS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_TDRLR4_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR4_RPS_Mask (ULONG)(0x1)
+#define DMA_TDRLR4_TDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR4_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define DMA_TDRLR4_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR4_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define DMA_TDRLR4_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR4_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_RPS_Wr_Mask) | ((data & DMA_SR4_RPS_Mask)<<8));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR4_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR4_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR4_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR4_TDRL_Wr_Mask) | ((data & DMA_TDRLR4_TDRL_Mask)<<0));\
+		DMA_TDRLR4_RgWr(v);\
 } while(0)
 
-#define DMA_SR4_RPS_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 8) & DMA_SR4_RPS_Mask);\
+#define DMA_TDRLR4_TDRL_UdfRd(data) do {\
+		DMA_TDRLR4_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR4_TDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR4_RWT_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_RWT_Mask (ULONG)(0x1)
-
-/*#define DMA_SR4_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_SR4_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define DMA_TDRLR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12ac))
 
-#define DMA_SR4_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_RWT_Wr_Mask) | ((data & DMA_SR4_RWT_Mask)<<9));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR3_RgOffAddr);\
 } while(0)
 
-#define DMA_SR4_RWT_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 9) & DMA_SR4_RWT_Mask);\
+#define DMA_TDRLR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR3_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR4_ETI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  DMA_TDRLR3_Mask_10 (ULONG)(~(~0<<(22)))*/
+
+#define  DMA_TDRLR3_Mask_10 (ULONG)(0x3fffff)
+
+/*#define DMA_TDRLR3_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR4_ETI_Mask (ULONG)(0x1)
+#define DMA_TDRLR3_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR4_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define DMA_TDRLR3_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR4_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define DMA_TDRLR3_TDRL_Mask (ULONG)(0x3ff)
 
-#define DMA_SR4_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_ETI_Wr_Mask) | ((data & DMA_SR4_ETI_Mask)<<10));\
-		DMA_SR4_RgWr(v);\
+/*#define DMA_TDRLR3_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
+
+#define DMA_TDRLR3_TDRL_Wr_Mask (ULONG)(0xfffffc00)
+
+#define DMA_TDRLR3_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR3_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR3_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR3_TDRL_Wr_Mask) | ((data & DMA_TDRLR3_TDRL_Mask)<<0));\
+		DMA_TDRLR3_RgWr(v);\
 } while(0)
 
-#define DMA_SR4_ETI_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 10) & DMA_SR4_ETI_Mask);\
+#define DMA_TDRLR3_TDRL_UdfRd(data) do {\
+		DMA_TDRLR3_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR3_TDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR4_ERI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_ERI_Mask (ULONG)(0x1)
 
-/*#define DMA_SR4_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
-
-#define DMA_SR4_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define DMA_TDRLR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x122c))
 
-#define DMA_SR4_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_ERI_Wr_Mask) | ((data & DMA_SR4_ERI_Mask)<<11));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR4_ERI_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 11) & DMA_SR4_ERI_Mask);\
+#define DMA_TDRLR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR4_FBE_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_FBE_Mask (ULONG)(0x1)
-
-/*#define DMA_SR4_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define  DMA_TDRLR2_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR4_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define  DMA_TDRLR2_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR4_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_FBE_Wr_Mask) | ((data & DMA_SR4_FBE_Mask)<<12));\
-		DMA_SR4_RgWr(v);\
-} while(0)
+/*#define DMA_TDRLR2_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR4_FBE_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 12) & DMA_SR4_FBE_Mask);\
-} while(0)
+#define DMA_TDRLR2_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR4_CDE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_TDRLR2_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR4_CDE_Mask (ULONG)(0x1)
+#define DMA_TDRLR2_TDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR4_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define DMA_TDRLR2_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR4_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define DMA_TDRLR2_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR4_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_CDE_Wr_Mask) | ((data & DMA_SR4_CDE_Mask)<<13));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR2_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR2_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR2_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR2_TDRL_Wr_Mask) | ((data & DMA_TDRLR2_TDRL_Mask)<<0));\
+		DMA_TDRLR2_RgWr(v);\
 } while(0)
 
-#define DMA_SR4_CDE_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 13) & DMA_SR4_CDE_Mask);\
+#define DMA_TDRLR2_TDRL_UdfRd(data) do {\
+		DMA_TDRLR2_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR2_TDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR4_AIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_AIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR4_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
-
-#define DMA_SR4_AIS_Wr_Mask (ULONG)(0xffffbfff)
+#define DMA_TDRLR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11ac))
 
-#define DMA_SR4_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_AIS_Wr_Mask) | ((data & DMA_SR4_AIS_Mask)<<14));\
-		DMA_SR4_RgWr(v);\
+#define DMA_TDRLR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR4_AIS_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 14) & DMA_SR4_AIS_Mask);\
+#define DMA_TDRLR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR1_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR4_NIS_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR4_NIS_Mask (ULONG)(0x1)
-
-/*#define DMA_SR4_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
-
-#define DMA_SR4_NIS_Wr_Mask (ULONG)(0xffff7fff)
+/*#define  DMA_TDRLR1_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define DMA_SR4_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR4_RgRd(v);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_3))|((( 0) & (DMA_SR4_Mask_3))<<3);\
-		v = (v & (DMA_SR4_RES_Wr_Mask_19))|((( 0) & (DMA_SR4_Mask_19))<<19);\
-		v = ((v & DMA_SR4_NIS_Wr_Mask) | ((data & DMA_SR4_NIS_Mask)<<15));\
-		DMA_SR4_RgWr(v);\
-} while(0)
+#define  DMA_TDRLR1_Mask_10 (ULONG)(0x3fffff)
 
-#define DMA_SR4_NIS_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 15) & DMA_SR4_NIS_Mask);\
-} while(0)
+/*#define DMA_TDRLR1_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-/*#define DMA_SR4_EB_Mask (ULONG)(~(~0<<(3)))*/
+#define DMA_TDRLR1_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-#define DMA_SR4_EB_Mask (ULONG)(0x7)
+/*#define DMA_TDRLR1_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR4_EB_UdfRd(data) do {\
-		DMA_SR4_RgRd(data);\
-		data = ((data >> 16) & DMA_SR4_EB_Mask);\
-} while(0)
+#define DMA_TDRLR1_TDRL_Mask (ULONG)(0x3ff)
 
+/*#define DMA_TDRLR1_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12e0))
+#define DMA_TDRLR1_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR3_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR3_RgOffAddr);\
+#define DMA_TDRLR1_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR1_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR1_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR1_TDRL_Wr_Mask) | ((data & DMA_TDRLR1_TDRL_Mask)<<0));\
+		DMA_TDRLR1_RgWr(v);\
 } while(0)
 
-#define DMA_SR3_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR3_RgOffAddr);\
+#define DMA_TDRLR1_TDRL_UdfRd(data) do {\
+		DMA_TDRLR1_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR1_TDRL_Mask);\
 } while(0)
 
-/*#define  DMA_SR3_Mask_3 (ULONG)(~(~0<<(3)))*/
 
-#define  DMA_SR3_Mask_3 (ULONG)(0x7)
+#define DMA_TDRLR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x112c))
 
-/*#define DMA_SR3_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+#define DMA_TDRLR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDRLR0_RgOffAddr);\
+} while(0)
 
-#define DMA_SR3_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_TDRLR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDRLR0_RgOffAddr);\
+} while(0)
 
-/*#define  DMA_SR3_Mask_19 (ULONG)(~(~0<<(13)))*/
+/*#define  DMA_TDRLR0_Mask_10 (ULONG)(~(~0<<(22)))*/
 
-#define  DMA_SR3_Mask_19 (ULONG)(0x1fff)
+#define  DMA_TDRLR0_Mask_10 (ULONG)(0x3fffff)
 
-/*#define DMA_SR3_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+/*#define DMA_TDRLR0_RES_Wr_Mask_10 (ULONG)(~((~(~0<<(22)))<<(10)))*/
 
-#define DMA_SR3_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_TDRLR0_RES_Wr_Mask_10 (ULONG)(0x3ff)
 
-/*#define DMA_SR3_TI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define DMA_TDRLR0_TDRL_Mask (ULONG)(~(~0<<(10)))*/
 
-#define DMA_SR3_TI_Mask (ULONG)(0x1)
+#define DMA_TDRLR0_TDRL_Mask (ULONG)(0x3ff)
 
-/*#define DMA_SR3_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+/*#define DMA_TDRLR0_TDRL_Wr_Mask (ULONG)(~((~(~0 << (10))) << (0)))*/
 
-#define DMA_SR3_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_TDRLR0_TDRL_Wr_Mask (ULONG)(0xfffffc00)
 
-#define DMA_SR3_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_TI_Wr_Mask) | ((data & DMA_SR3_TI_Mask)<<0));\
-		DMA_SR3_RgWr(v);\
+#define DMA_TDRLR0_TDRL_UdfWr(data) do {\
+		ULONG v = 0; \
+		v = (v & (DMA_TDRLR0_RES_Wr_Mask_10))|((( 0) & (DMA_TDRLR0_Mask_10))<<10);\
+		(v) = ((v & DMA_TDRLR0_TDRL_Wr_Mask) | ((data & DMA_TDRLR0_TDRL_Mask)<<0));\
+		DMA_TDRLR0_RgWr(v);\
 } while(0)
 
-#define DMA_SR3_TI_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 0) & DMA_SR3_TI_Mask);\
+#define DMA_TDRLR0_TDRL_UdfRd(data) do {\
+		DMA_TDRLR0_RgRd(data);\
+		data = ((data >> 0) & DMA_TDRLR0_TDRL_Mask);\
 } while(0)
 
-/*#define DMA_SR3_TPS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR3_TPS_Mask (ULONG)(0x1)
-
-/*#define DMA_SR3_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
-
-#define DMA_SR3_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define DMA_RDTP_RPDR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14a8))
 
-#define DMA_SR3_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_TPS_Wr_Mask) | ((data & DMA_SR3_TPS_Mask)<<1));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR7_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_TPS_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 1) & DMA_SR3_TPS_Mask);\
+#define DMA_RDTP_RPDR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR7_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_TBU_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR3_TBU_Mask (ULONG)(0x1)
-
-/*#define DMA_SR3_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
-
-#define DMA_SR3_TBU_Wr_Mask (ULONG)(0xfffffffb)
-
-#define DMA_SR3_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_TBU_Wr_Mask) | ((data & DMA_SR3_TBU_Mask)<<2));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR7_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR7_RgWr(data);\
 } while(0)
 
-#define DMA_SR3_TBU_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 2) & DMA_SR3_TBU_Mask);\
+#define DMA_RDTP_RPDR7_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR7_RgRd(data);\
 } while(0)
 
-/*#define DMA_SR3_RI_Mask (ULONG)(~(~0<<(1)))*/
-
-#define DMA_SR3_RI_Mask (ULONG)(0x1)
 
-/*#define DMA_SR3_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
-
-#define DMA_SR3_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_RDTP_RPDR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1428))
 
-#define DMA_SR3_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_RI_Wr_Mask) | ((data & DMA_SR3_RI_Mask)<<6));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_RI_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 6) & DMA_SR3_RI_Mask);\
+#define DMA_RDTP_RPDR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR6_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_RBU_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR6_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR6_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_RBU_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR6_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR6_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_SR3_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define DMA_RDTP_RPDR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13a8))
 
-#define DMA_SR3_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_RBU_Wr_Mask) | ((data & DMA_SR3_RBU_Mask)<<7));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_RBU_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 7) & DMA_SR3_RBU_Mask);\
+#define DMA_RDTP_RPDR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR5_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_RPS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR5_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR5_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_RPS_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR5_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR5_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_SR3_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define DMA_RDTP_RPDR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1328))
 
-#define DMA_SR3_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_RPS_Wr_Mask) | ((data & DMA_SR3_RPS_Mask)<<8));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR4_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_RPS_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 8) & DMA_SR3_RPS_Mask);\
+#define DMA_RDTP_RPDR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR4_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_RWT_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR4_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR4_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_RWT_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR4_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR4_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_SR3_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define DMA_RDTP_RPDR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12a8))
 
-#define DMA_SR3_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_RWT_Wr_Mask) | ((data & DMA_SR3_RWT_Mask)<<9));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR3_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_RWT_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 9) & DMA_SR3_RWT_Mask);\
+#define DMA_RDTP_RPDR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR3_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_ETI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR3_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR3_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_ETI_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR3_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR3_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
 
-#define DMA_SR3_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define DMA_RDTP_RPDR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1228))
 
-#define DMA_SR3_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_ETI_Wr_Mask) | ((data & DMA_SR3_ETI_Mask)<<10));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_ETI_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 10) & DMA_SR3_ETI_Mask);\
+#define DMA_RDTP_RPDR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_ERI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR2_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR2_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_ERI_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR2_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR2_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
 
-#define DMA_SR3_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define DMA_RDTP_RPDR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11a8))
 
-#define DMA_SR3_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_ERI_Wr_Mask) | ((data & DMA_SR3_ERI_Mask)<<11));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_ERI_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 11) & DMA_SR3_ERI_Mask);\
+#define DMA_RDTP_RPDR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR1_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_FBE_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR1_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR1_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_FBE_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR1_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR1_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define DMA_SR3_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define DMA_RDTP_RPDR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1128))
 
-#define DMA_SR3_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_FBE_Wr_Mask) | ((data & DMA_SR3_FBE_Mask)<<12));\
-		DMA_SR3_RgWr(v);\
+#define DMA_RDTP_RPDR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDTP_RPDR0_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_FBE_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 12) & DMA_SR3_FBE_Mask);\
+#define DMA_RDTP_RPDR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDTP_RPDR0_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_CDE_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDTP_RPDR0_RDT_UdfWr(data) do {\
+		DMA_RDTP_RPDR0_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_CDE_Mask (ULONG)(0x1)
+#define DMA_RDTP_RPDR0_RDT_UdfRd(data) do {\
+		DMA_RDTP_RPDR0_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define DMA_SR3_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define DMA_TDTP_TPDR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x14a0))
 
-#define DMA_SR3_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_CDE_Wr_Mask) | ((data & DMA_SR3_CDE_Mask)<<13));\
-		DMA_SR3_RgWr(v);\
+#define DMA_TDTP_TPDR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR7_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_CDE_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 13) & DMA_SR3_CDE_Mask);\
+#define DMA_TDTP_TPDR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR7_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_AIS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDTP_TPDR7_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR7_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_AIS_Mask (ULONG)(0x1)
+#define DMA_TDTP_TPDR7_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR7_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
 
-#define DMA_SR3_AIS_Wr_Mask (ULONG)(0xffffbfff)
+#define DMA_TDTP_TPDR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1420))
 
-#define DMA_SR3_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_AIS_Wr_Mask) | ((data & DMA_SR3_AIS_Mask)<<14));\
-		DMA_SR3_RgWr(v);\
+#define DMA_TDTP_TPDR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_AIS_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 14) & DMA_SR3_AIS_Mask);\
+#define DMA_TDTP_TPDR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR6_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_NIS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDTP_TPDR6_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR6_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_NIS_Mask (ULONG)(0x1)
+#define DMA_TDTP_TPDR6_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR6_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR3_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
 
-#define DMA_SR3_NIS_Wr_Mask (ULONG)(0xffff7fff)
+#define DMA_TDTP_TPDR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x13a0))
 
-#define DMA_SR3_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR3_RgRd(v);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_3))|((( 0) & (DMA_SR3_Mask_3))<<3);\
-		v = (v & (DMA_SR3_RES_Wr_Mask_19))|((( 0) & (DMA_SR3_Mask_19))<<19);\
-		v = ((v & DMA_SR3_NIS_Wr_Mask) | ((data & DMA_SR3_NIS_Mask)<<15));\
-		DMA_SR3_RgWr(v);\
+#define DMA_TDTP_TPDR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR3_NIS_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 15) & DMA_SR3_NIS_Mask);\
+#define DMA_TDTP_TPDR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR5_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR3_EB_Mask (ULONG)(~(~0<<(3)))*/
-
-#define DMA_SR3_EB_Mask (ULONG)(0x7)
+#define DMA_TDTP_TPDR5_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR5_RgWr(data);\
+} while(0)
 
-#define DMA_SR3_EB_UdfRd(data) do {\
-		DMA_SR3_RgRd(data);\
-		data = ((data >> 16) & DMA_SR3_EB_Mask);\
+#define DMA_TDTP_TPDR5_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR5_RgRd(data);\
 } while(0)
 
 
-#define DMA_SR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1260))
+#define DMA_TDTP_TPDR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1320))
 
-#define DMA_SR2_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR2_RgOffAddr);\
+#define DMA_TDTP_TPDR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR4_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR2_RgOffAddr);\
+#define DMA_TDTP_TPDR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR4_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_SR2_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_SR2_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_SR2_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+#define DMA_TDTP_TPDR4_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR4_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_TDTP_TPDR4_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR4_RgRd(data);\
+} while(0)
 
-/*#define  DMA_SR2_Mask_19 (ULONG)(~(~0<<(13)))*/
 
-#define  DMA_SR2_Mask_19 (ULONG)(0x1fff)
+#define DMA_TDTP_TPDR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x12a0))
 
-/*#define DMA_SR2_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+#define DMA_TDTP_TPDR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR3_RgOffAddr);\
+} while(0)
 
-#define DMA_SR2_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_TDTP_TPDR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR3_RgOffAddr);\
+} while(0)
 
-/*#define DMA_SR2_TI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDTP_TPDR3_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR3_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_TI_Mask (ULONG)(0x1)
+#define DMA_TDTP_TPDR3_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR3_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_SR2_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_TDTP_TPDR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1220))
 
-#define DMA_SR2_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_TI_Wr_Mask) | ((data & DMA_SR2_TI_Mask)<<0));\
-		DMA_SR2_RgWr(v);\
+#define DMA_TDTP_TPDR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_TI_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 0) & DMA_SR2_TI_Mask);\
+#define DMA_TDTP_TPDR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_TPS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDTP_TPDR2_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR2_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_TPS_Mask (ULONG)(0x1)
+#define DMA_TDTP_TPDR2_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR2_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_SR2_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define DMA_TDTP_TPDR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11a0))
 
-#define DMA_SR2_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_TPS_Wr_Mask) | ((data & DMA_SR2_TPS_Mask)<<1));\
-		DMA_SR2_RgWr(v);\
+#define DMA_TDTP_TPDR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_TPS_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 1) & DMA_SR2_TPS_Mask);\
+#define DMA_TDTP_TPDR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR1_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_TBU_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDTP_TPDR1_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR1_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_TBU_Mask (ULONG)(0x1)
+#define DMA_TDTP_TPDR1_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR1_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_SR2_TBU_Wr_Mask (ULONG)(0xfffffffb)
+#define DMA_TDTP_TPDR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1120))
 
-#define DMA_SR2_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_TBU_Wr_Mask) | ((data & DMA_SR2_TBU_Mask)<<2));\
-		DMA_SR2_RgWr(v);\
+#define DMA_TDTP_TPDR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDTP_TPDR0_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_TBU_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 2) & DMA_SR2_TBU_Mask);\
+#define DMA_TDTP_TPDR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDTP_TPDR0_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_RI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDTP_TPDR0_TDT_UdfWr(data) do {\
+		DMA_TDTP_TPDR0_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_RI_Mask (ULONG)(0x1)
+#define DMA_TDTP_TPDR0_TDT_UdfRd(data) do {\
+		DMA_TDTP_TPDR0_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_SR2_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_RDLAR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x149c))
 
-#define DMA_SR2_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_RI_Wr_Mask) | ((data & DMA_SR2_RI_Mask)<<6));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR7_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_RI_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 6) & DMA_SR2_RI_Mask);\
+#define DMA_RDLAR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR7_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_RBU_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR7_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR7_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_RBU_Mask (ULONG)(0x1)
+#define DMA_RDLAR7_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR7_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_SR2_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define DMA_RDLAR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x141c))
 
-#define DMA_SR2_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_RBU_Wr_Mask) | ((data & DMA_SR2_RBU_Mask)<<7));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_RBU_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 7) & DMA_SR2_RBU_Mask);\
+#define DMA_RDLAR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR6_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_RPS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR6_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR6_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_RPS_Mask (ULONG)(0x1)
+#define DMA_RDLAR6_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR6_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
 
-#define DMA_SR2_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define DMA_RDLAR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x139c))
 
-#define DMA_SR2_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_RPS_Wr_Mask) | ((data & DMA_SR2_RPS_Mask)<<8));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_RPS_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 8) & DMA_SR2_RPS_Mask);\
+#define DMA_RDLAR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR5_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_RWT_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR5_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR5_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_RWT_Mask (ULONG)(0x1)
+#define DMA_RDLAR5_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR5_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
 
-#define DMA_SR2_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define DMA_RDLAR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x131c))
 
-#define DMA_SR2_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_RWT_Wr_Mask) | ((data & DMA_SR2_RWT_Mask)<<9));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR4_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_RWT_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 9) & DMA_SR2_RWT_Mask);\
+#define DMA_RDLAR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR4_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_ETI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR4_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR4_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_ETI_Mask (ULONG)(0x1)
+#define DMA_RDLAR4_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR4_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
 
-#define DMA_SR2_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define DMA_RDLAR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x129c))
 
-#define DMA_SR2_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_ETI_Wr_Mask) | ((data & DMA_SR2_ETI_Mask)<<10));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR3_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_ETI_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 10) & DMA_SR2_ETI_Mask);\
+#define DMA_RDLAR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR3_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_ERI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR3_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR3_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_ERI_Mask (ULONG)(0x1)
+#define DMA_RDLAR3_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR3_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
 
-#define DMA_SR2_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define DMA_RDLAR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x121c))
 
-#define DMA_SR2_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_ERI_Wr_Mask) | ((data & DMA_SR2_ERI_Mask)<<11));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_ERI_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 11) & DMA_SR2_ERI_Mask);\
+#define DMA_RDLAR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_FBE_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR2_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR2_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_FBE_Mask (ULONG)(0x1)
+#define DMA_RDLAR2_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR2_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define DMA_SR2_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define DMA_RDLAR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x119c))
 
-#define DMA_SR2_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_FBE_Wr_Mask) | ((data & DMA_SR2_FBE_Mask)<<12));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_FBE_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 12) & DMA_SR2_FBE_Mask);\
+#define DMA_RDLAR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR1_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_CDE_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR1_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR1_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_CDE_Mask (ULONG)(0x1)
+#define DMA_RDLAR1_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR1_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
 
-#define DMA_SR2_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define DMA_RDLAR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x111c))
 
-#define DMA_SR2_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_CDE_Wr_Mask) | ((data & DMA_SR2_CDE_Mask)<<13));\
-		DMA_SR2_RgWr(v);\
+#define DMA_RDLAR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_RDLAR0_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_CDE_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 13) & DMA_SR2_CDE_Mask);\
+#define DMA_RDLAR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_RDLAR0_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_AIS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_RDLAR0_RDESLA_UdfWr(data) do {\
+		DMA_RDLAR0_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_AIS_Mask (ULONG)(0x1)
+#define DMA_RDLAR0_RDESLA_UdfRd(data) do {\
+		DMA_RDLAR0_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
 
-#define DMA_SR2_AIS_Wr_Mask (ULONG)(0xffffbfff)
+#define DMA_TDLAR7_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1494))
 
-#define DMA_SR2_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_AIS_Wr_Mask) | ((data & DMA_SR2_AIS_Mask)<<14));\
-		DMA_SR2_RgWr(v);\
+#define DMA_TDLAR7_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR7_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_AIS_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 14) & DMA_SR2_AIS_Mask);\
+#define DMA_TDLAR7_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR7_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_NIS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDLAR7_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR7_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_NIS_Mask (ULONG)(0x1)
+#define DMA_TDLAR7_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR7_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR2_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
 
-#define DMA_SR2_NIS_Wr_Mask (ULONG)(0xffff7fff)
+#define DMA_TDLAR6_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1414))
 
-#define DMA_SR2_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR2_RgRd(v);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_3))|((( 0) & (DMA_SR2_Mask_3))<<3);\
-		v = (v & (DMA_SR2_RES_Wr_Mask_19))|((( 0) & (DMA_SR2_Mask_19))<<19);\
-		v = ((v & DMA_SR2_NIS_Wr_Mask) | ((data & DMA_SR2_NIS_Mask)<<15));\
-		DMA_SR2_RgWr(v);\
+#define DMA_TDLAR6_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR6_RgOffAddr);\
 } while(0)
 
-#define DMA_SR2_NIS_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 15) & DMA_SR2_NIS_Mask);\
+#define DMA_TDLAR6_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR6_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR2_EB_Mask (ULONG)(~(~0<<(3)))*/
-
-#define DMA_SR2_EB_Mask (ULONG)(0x7)
+#define DMA_TDLAR6_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR6_RgWr(data);\
+} while(0)
 
-#define DMA_SR2_EB_UdfRd(data) do {\
-		DMA_SR2_RgRd(data);\
-		data = ((data >> 16) & DMA_SR2_EB_Mask);\
+#define DMA_TDLAR6_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR6_RgRd(data);\
 } while(0)
 
 
-#define DMA_SR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x11e0))
+#define DMA_TDLAR5_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1394))
 
-#define DMA_SR1_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR1_RgOffAddr);\
+#define DMA_TDLAR5_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR5_RgOffAddr);\
 } while(0)
 
-#define DMA_SR1_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR1_RgOffAddr);\
+#define DMA_TDLAR5_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR5_RgOffAddr);\
 } while(0)
 
-/*#define  DMA_SR1_Mask_3 (ULONG)(~(~0<<(3)))*/
-
-#define  DMA_SR1_Mask_3 (ULONG)(0x7)
-
-/*#define DMA_SR1_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+#define DMA_TDLAR5_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR5_RgWr(data);\
+} while(0)
 
-#define DMA_SR1_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define DMA_TDLAR5_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR5_RgRd(data);\
+} while(0)
 
-/*#define  DMA_SR1_Mask_19 (ULONG)(~(~0<<(13)))*/
 
-#define  DMA_SR1_Mask_19 (ULONG)(0x1fff)
+#define DMA_TDLAR4_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1314))
 
-/*#define DMA_SR1_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+#define DMA_TDLAR4_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR4_RgOffAddr);\
+} while(0)
 
-#define DMA_SR1_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define DMA_TDLAR4_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR4_RgOffAddr);\
+} while(0)
 
-/*#define DMA_SR1_TI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDLAR4_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR4_RgWr(data);\
+} while(0)
 
-#define DMA_SR1_TI_Mask (ULONG)(0x1)
+#define DMA_TDLAR4_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR4_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR1_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_SR1_TI_Wr_Mask (ULONG)(0xfffffffe)
+#define DMA_TDLAR3_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1294))
 
-#define DMA_SR1_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_TI_Wr_Mask) | ((data & DMA_SR1_TI_Mask)<<0));\
-		DMA_SR1_RgWr(v);\
+#define DMA_TDLAR3_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR3_RgOffAddr);\
 } while(0)
 
-#define DMA_SR1_TI_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 0) & DMA_SR1_TI_Mask);\
+#define DMA_TDLAR3_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR3_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR1_TPS_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDLAR3_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR3_RgWr(data);\
+} while(0)
 
-#define DMA_SR1_TPS_Mask (ULONG)(0x1)
+#define DMA_TDLAR3_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR3_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR1_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_SR1_TPS_Wr_Mask (ULONG)(0xfffffffd)
+#define DMA_TDLAR2_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1214))
 
-#define DMA_SR1_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_TPS_Wr_Mask) | ((data & DMA_SR1_TPS_Mask)<<1));\
-		DMA_SR1_RgWr(v);\
+#define DMA_TDLAR2_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR2_RgOffAddr);\
 } while(0)
 
-#define DMA_SR1_TPS_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 1) & DMA_SR1_TPS_Mask);\
+#define DMA_TDLAR2_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR2_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR1_TBU_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDLAR2_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR2_RgWr(data);\
+} while(0)
 
-#define DMA_SR1_TBU_Mask (ULONG)(0x1)
+#define DMA_TDLAR2_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR2_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR1_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_SR1_TBU_Wr_Mask (ULONG)(0xfffffffb)
+#define DMA_TDLAR1_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1194))
 
-#define DMA_SR1_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_TBU_Wr_Mask) | ((data & DMA_SR1_TBU_Mask)<<2));\
-		DMA_SR1_RgWr(v);\
+#define DMA_TDLAR1_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR1_RgOffAddr);\
 } while(0)
 
-#define DMA_SR1_TBU_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 2) & DMA_SR1_TBU_Mask);\
+#define DMA_TDLAR1_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR1_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR1_RI_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDLAR1_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR1_RgWr(data);\
+} while(0)
 
-#define DMA_SR1_RI_Mask (ULONG)(0x1)
+#define DMA_TDLAR1_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR1_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR1_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
 
-#define DMA_SR1_RI_Wr_Mask (ULONG)(0xffffffbf)
+#define DMA_TDLAR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1114))
 
-#define DMA_SR1_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_RI_Wr_Mask) | ((data & DMA_SR1_RI_Mask)<<6));\
-		DMA_SR1_RgWr(v);\
+#define DMA_TDLAR0_RgWr(data) do {\
+		iowrite32(data, (void *)DMA_TDLAR0_RgOffAddr);\
 } while(0)
 
-#define DMA_SR1_RI_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 6) & DMA_SR1_RI_Mask);\
+#define DMA_TDLAR0_RgRd(data) do {\
+		(data) = ioread32((void *)DMA_TDLAR0_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR1_RBU_Mask (ULONG)(~(~0<<(1)))*/
+#define DMA_TDLAR0_TDESLA_UdfWr(data) do {\
+		DMA_TDLAR0_RgWr(data);\
+} while(0)
 
-#define DMA_SR1_RBU_Mask (ULONG)(0x1)
+#define DMA_TDLAR0_TDESLA_UdfRd(data) do {\
+		DMA_TDLAR0_RgRd(data);\
+} while(0)
 
-/*#define DMA_SR1_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
 
-#define DMA_SR1_RBU_Wr_Mask (ULONG)(0xffffff7f)
+#define MAC_IMR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xb4))
 
-#define DMA_SR1_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_RBU_Wr_Mask) | ((data & DMA_SR1_RBU_Mask)<<7));\
-		DMA_SR1_RgWr(v);\
+#define MAC_IMR_RgWr(data) do {\
+		iowrite32(data, (void *)MAC_IMR_RgOffAddr);\
 } while(0)
 
-#define DMA_SR1_RBU_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 7) & DMA_SR1_RBU_Mask);\
+#define MAC_IMR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_IMR_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR1_RPS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define  MAC_IMR_Mask_13 (ULONG)(~(~0<<(19)))*/
 
-#define DMA_SR1_RPS_Mask (ULONG)(0x1)
+#define  MAC_IMR_Mask_13 (ULONG)(0x7ffff)
 
-/*#define DMA_SR1_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+/*#define MAC_IMR_RES_Wr_Mask_13 (ULONG)(~((~(~0<<(19)))<<(13)))*/
 
-#define DMA_SR1_RPS_Wr_Mask (ULONG)(0xfffffeff)
+#define MAC_IMR_RES_Wr_Mask_13 (ULONG)(0x1fff)
 
-#define DMA_SR1_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_RPS_Wr_Mask) | ((data & DMA_SR1_RPS_Mask)<<8));\
-		DMA_SR1_RgWr(v);\
-} while(0)
+/*#define  MAC_IMR_Mask_6 (ULONG)(~(~0<<(6)))*/
 
-#define DMA_SR1_RPS_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 8) & DMA_SR1_RPS_Mask);\
-} while(0)
+#define  MAC_IMR_Mask_6 (ULONG)(0x3f)
+
+/*#define MAC_IMR_RES_Wr_Mask_6 (ULONG)(~((~(~0<<(6)))<<(6)))*/
 
-/*#define DMA_SR1_RWT_Mask (ULONG)(~(~0<<(1)))*/
+#define MAC_IMR_RES_Wr_Mask_6 (ULONG)(0xfffff03f)
+
+/*#define MAC_IMR_TSIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_RWT_Mask (ULONG)(0x1)
+#define MAC_IMR_TSIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+/*#define MAC_IMR_TSIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
 
-#define DMA_SR1_RWT_Wr_Mask (ULONG)(0xfffffdff)
+#define MAC_IMR_TSIM_Wr_Mask (ULONG)(0xffffefff)
 
-#define DMA_SR1_RWT_UdfWr(data) do {\
+#define MAC_IMR_TSIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_RWT_Wr_Mask) | ((data & DMA_SR1_RWT_Mask)<<9));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_TSIM_Wr_Mask) | ((data & MAC_IMR_TSIM_Mask)<<12));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_RWT_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 9) & DMA_SR1_RWT_Mask);\
+#define MAC_IMR_TSIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 12) & MAC_IMR_TSIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_ETI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_IMR_LPIIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_ETI_Mask (ULONG)(0x1)
+#define MAC_IMR_LPIIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+/*#define MAC_IMR_LPIIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
 
-#define DMA_SR1_ETI_Wr_Mask (ULONG)(0xfffffbff)
+#define MAC_IMR_LPIIM_Wr_Mask (ULONG)(0xffffffdf)
 
-#define DMA_SR1_ETI_UdfWr(data) do {\
+#define MAC_IMR_LPIIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_ETI_Wr_Mask) | ((data & DMA_SR1_ETI_Mask)<<10));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_LPIIM_Wr_Mask) | ((data & MAC_IMR_LPIIM_Mask)<<5));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_ETI_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 10) & DMA_SR1_ETI_Mask);\
+#define MAC_IMR_LPIIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 5) & MAC_IMR_LPIIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_ERI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_IMR_PMTIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_ERI_Mask (ULONG)(0x1)
+#define MAC_IMR_PMTIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+/*#define MAC_IMR_PMTIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
 
-#define DMA_SR1_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+#define MAC_IMR_PMTIM_Wr_Mask (ULONG)(0xffffffef)
 
-#define DMA_SR1_ERI_UdfWr(data) do {\
+#define MAC_IMR_PMTIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_ERI_Wr_Mask) | ((data & DMA_SR1_ERI_Mask)<<11));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_PMTIM_Wr_Mask) | ((data & MAC_IMR_PMTIM_Mask)<<4));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_ERI_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 11) & DMA_SR1_ERI_Mask);\
+#define MAC_IMR_PMTIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 4) & MAC_IMR_PMTIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_FBE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_IMR_PHYIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_FBE_Mask (ULONG)(0x1)
+#define MAC_IMR_PHYIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+/*#define MAC_IMR_PHYIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
 
-#define DMA_SR1_FBE_Wr_Mask (ULONG)(0xffffefff)
+#define MAC_IMR_PHYIM_Wr_Mask (ULONG)(0xfffffff7)
 
-#define DMA_SR1_FBE_UdfWr(data) do {\
+#define MAC_IMR_PHYIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_FBE_Wr_Mask) | ((data & DMA_SR1_FBE_Mask)<<12));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_PHYIM_Wr_Mask) | ((data & MAC_IMR_PHYIM_Mask)<<3));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_FBE_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 12) & DMA_SR1_FBE_Mask);\
+#define MAC_IMR_PHYIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 3) & MAC_IMR_PHYIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_CDE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_IMR_PCSANCIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_CDE_Mask (ULONG)(0x1)
+#define MAC_IMR_PCSANCIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+/*#define MAC_IMR_PCSANCIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
 
-#define DMA_SR1_CDE_Wr_Mask (ULONG)(0xffffdfff)
+#define MAC_IMR_PCSANCIM_Wr_Mask (ULONG)(0xfffffffb)
 
-#define DMA_SR1_CDE_UdfWr(data) do {\
+#define MAC_IMR_PCSANCIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_CDE_Wr_Mask) | ((data & DMA_SR1_CDE_Mask)<<13));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_PCSANCIM_Wr_Mask) | ((data & MAC_IMR_PCSANCIM_Mask)<<2));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_CDE_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 13) & DMA_SR1_CDE_Mask);\
+#define MAC_IMR_PCSANCIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 2) & MAC_IMR_PCSANCIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_AIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_IMR_PCSLCHGIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_AIS_Mask (ULONG)(0x1)
+#define MAC_IMR_PCSLCHGIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
+/*#define MAC_IMR_PCSLCHGIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
 
-#define DMA_SR1_AIS_Wr_Mask (ULONG)(0xffffbfff)
+#define MAC_IMR_PCSLCHGIM_Wr_Mask (ULONG)(0xfffffffd)
 
-#define DMA_SR1_AIS_UdfWr(data) do {\
+#define MAC_IMR_PCSLCHGIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_AIS_Wr_Mask) | ((data & DMA_SR1_AIS_Mask)<<14));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_PCSLCHGIM_Wr_Mask) | ((data & MAC_IMR_PCSLCHGIM_Mask)<<1));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_AIS_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 14) & DMA_SR1_AIS_Mask);\
+#define MAC_IMR_PCSLCHGIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 1) & MAC_IMR_PCSLCHGIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_NIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_IMR_RGSMIIIM_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR1_NIS_Mask (ULONG)(0x1)
+#define MAC_IMR_RGSMIIIM_Mask (ULONG)(0x1)
 
-/*#define DMA_SR1_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+/*#define MAC_IMR_RGSMIIIM_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
 
-#define DMA_SR1_NIS_Wr_Mask (ULONG)(0xffff7fff)
+#define MAC_IMR_RGSMIIIM_Wr_Mask (ULONG)(0xfffffffe)
 
-#define DMA_SR1_NIS_UdfWr(data) do {\
+#define MAC_IMR_RGSMIIIM_UdfWr(data) do {\
 		ULONG v;\
-		DMA_SR1_RgRd(v);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_3))|((( 0) & (DMA_SR1_Mask_3))<<3);\
-		v = (v & (DMA_SR1_RES_Wr_Mask_19))|((( 0) & (DMA_SR1_Mask_19))<<19);\
-		v = ((v & DMA_SR1_NIS_Wr_Mask) | ((data & DMA_SR1_NIS_Mask)<<15));\
-		DMA_SR1_RgWr(v);\
+		MAC_IMR_RgRd(v);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_13))|((( 0) & (MAC_IMR_Mask_13))<<13);\
+		v = (v & (MAC_IMR_RES_Wr_Mask_6))|((( 0) & (MAC_IMR_Mask_6))<<6);\
+		v = ((v & MAC_IMR_RGSMIIIM_Wr_Mask) | ((data & MAC_IMR_RGSMIIIM_Mask)<<0));\
+		MAC_IMR_RgWr(v);\
 } while(0)
 
-#define DMA_SR1_NIS_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 15) & DMA_SR1_NIS_Mask);\
+#define MAC_IMR_RGSMIIIM_UdfRd(data) do {\
+		MAC_IMR_RgRd(data);\
+		data = ((data >> 0) & MAC_IMR_RGSMIIIM_Mask);\
 } while(0)
 
-/*#define DMA_SR1_EB_Mask (ULONG)(~(~0<<(3)))*/
 
-#define DMA_SR1_EB_Mask (ULONG)(0x7)
+#define MAC_ISR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xb0))
 
-#define DMA_SR1_EB_UdfRd(data) do {\
-		DMA_SR1_RgRd(data);\
-		data = ((data >> 16) & DMA_SR1_EB_Mask);\
+#define MAC_ISR_RgRd(data) do {\
+		(data) = ioread32((void *)MAC_ISR_RgOffAddr);\
 } while(0)
 
+/*#define MAC_ISR_RWT_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0x1160))
+#define MAC_ISR_RWT_Mask (ULONG)(0x1)
 
-#define DMA_SR0_RgWr(data) do {\
-		iowrite32(data, (void *)DMA_SR0_RgOffAddr);\
+#define MAC_ISR_RWT_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 14) & MAC_ISR_RWT_Mask);\
 } while(0)
 
-#define DMA_SR0_RgRd(data) do {\
-		(data) = ioread32((void *)DMA_SR0_RgOffAddr);\
-} while(0)
+/*#define MAC_ISR_TJT_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define  DMA_SR0_Mask_3 (ULONG)(~(~0<<(3)))*/
+#define MAC_ISR_TJT_Mask (ULONG)(0x1)
 
-#define  DMA_SR0_Mask_3 (ULONG)(0x7)
+#define MAC_ISR_TJT_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 13) & MAC_ISR_TJT_Mask);\
+} while(0)
 
-/*#define DMA_SR0_RES_Wr_Mask_3 (ULONG)(~((~(~0<<(3)))<<(3)))*/
+/*#define MAC_ISR_TSIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+#define MAC_ISR_TSIS_Mask (ULONG)(0x1)
 
-/*#define  DMA_SR0_Mask_19 (ULONG)(~(~0<<(13)))*/
+#define MAC_ISR_TSIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 12) & MAC_ISR_TSIS_Mask);\
+} while(0)
 
-#define  DMA_SR0_Mask_19 (ULONG)(0x1fff)
+/*#define MAC_ISR_MMCRXIPIS_Mask (ULONG)(~(~0<<(1)))*/
 
-/*#define DMA_SR0_RES_Wr_Mask_19 (ULONG)(~((~(~0<<(13)))<<(19)))*/
+#define MAC_ISR_MMCRXIPIS_Mask (ULONG)(0x1)
 
-#define DMA_SR0_RES_Wr_Mask_19 (ULONG)(0x7ffff)
+#define MAC_ISR_MMCRXIPIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 11) & MAC_ISR_MMCRXIPIS_Mask);\
+} while(0)
 
-/*#define DMA_SR0_TI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_ISR_MMCTXIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_TI_Mask (ULONG)(0x1)
+#define MAC_ISR_MMCTXIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_TI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (0)))*/
+#define MAC_ISR_MMCTXIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 10) & MAC_ISR_MMCTXIS_Mask);\
+} while(0)
 
-#define DMA_SR0_TI_Wr_Mask (ULONG)(0xfffffffe)
+/*#define MAC_ISR_MMCRXIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_TI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_TI_Wr_Mask) | ((data & DMA_SR0_TI_Mask)<<0));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MAC_ISR_MMCRXIS_Mask (ULONG)(0x1)
 
-#define DMA_SR0_TI_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 0) & DMA_SR0_TI_Mask);\
+#define MAC_ISR_MMCRXIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 9) & MAC_ISR_MMCRXIS_Mask);\
 } while(0)
 
-/*#define DMA_SR0_TPS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_ISR_MMCIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_TPS_Mask (ULONG)(0x1)
+#define MAC_ISR_MMCIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_TPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (1)))*/
+#define MAC_ISR_MMCIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 8) & MAC_ISR_MMCIS_Mask);\
+} while(0)
 
-#define DMA_SR0_TPS_Wr_Mask (ULONG)(0xfffffffd)
+/*#define MAC_ISR_LPIIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_TPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_TPS_Wr_Mask) | ((data & DMA_SR0_TPS_Mask)<<1));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MAC_ISR_LPIIS_Mask (ULONG)(0x1)
 
-#define DMA_SR0_TPS_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 1) & DMA_SR0_TPS_Mask);\
+#define MAC_ISR_LPIIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 5) & MAC_ISR_LPIIS_Mask);\
 } while(0)
 
-/*#define DMA_SR0_TBU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_ISR_PMTIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_TBU_Mask (ULONG)(0x1)
+#define MAC_ISR_PMTIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_TBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (2)))*/
+#define MAC_ISR_PMTIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 4) & MAC_ISR_PMTIS_Mask);\
+} while(0)
 
-#define DMA_SR0_TBU_Wr_Mask (ULONG)(0xfffffffb)
+/*#define MAC_ISR_PHYIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_TBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_TBU_Wr_Mask) | ((data & DMA_SR0_TBU_Mask)<<2));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MAC_ISR_PHYIS_Mask (ULONG)(0x1)
 
-#define DMA_SR0_TBU_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 2) & DMA_SR0_TBU_Mask);\
+#define MAC_ISR_PHYIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 3) & MAC_ISR_PHYIS_Mask);\
 } while(0)
 
-/*#define DMA_SR0_RI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_ISR_PCSANCIA_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RI_Mask (ULONG)(0x1)
+#define MAC_ISR_PCSANCIA_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_RI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+#define MAC_ISR_PCSANCIA_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 2) & MAC_ISR_PCSANCIA_Mask);\
+} while(0)
 
-#define DMA_SR0_RI_Wr_Mask (ULONG)(0xffffffbf)
+/*#define MAC_ISR_PCSLCHGIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_RI_Wr_Mask) | ((data & DMA_SR0_RI_Mask)<<6));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MAC_ISR_PCSLCHGIS_Mask (ULONG)(0x1)
 
-#define DMA_SR0_RI_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 6) & DMA_SR0_RI_Mask);\
+#define MAC_ISR_PCSLCHGIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 1) & MAC_ISR_PCSLCHGIS_Mask);\
 } while(0)
 
-/*#define DMA_SR0_RBU_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MAC_ISR_RGSMIIIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RBU_Mask (ULONG)(0x1)
+#define MAC_ISR_RGSMIIIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_RBU_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+#define MAC_ISR_RGSMIIIS_UdfRd(data) do {\
+		MAC_ISR_RgRd(data);\
+		data = ((data >> 0) & MAC_ISR_RGSMIIIS_Mask);\
+} while(0)
 
-#define DMA_SR0_RBU_Wr_Mask (ULONG)(0xffffff7f)
 
-#define DMA_SR0_RBU_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_RBU_Wr_Mask) | ((data & DMA_SR0_RBU_Mask)<<7));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_RgOffAddr ((volatile ULONG *)(BASE_ADDRESS + 0xc20))
 
-#define DMA_SR0_RBU_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 7) & DMA_SR0_RBU_Mask);\
+#define MTL_ISR_RgRd(data) do {\
+		(data) = ioread32((void *)MTL_ISR_RgOffAddr);\
 } while(0)
 
-/*#define DMA_SR0_RPS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_MACIS_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RPS_Mask (ULONG)(0x1)
+#define MTL_ISR_MACIS_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_RPS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (8)))*/
+#define MTL_ISR_MACIS_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 16) & MTL_ISR_MACIS_Mask);\
+} while(0)
 
-#define DMA_SR0_RPS_Wr_Mask (ULONG)(0xfffffeff)
+/*#define MTL_ISR_Q7RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RPS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_RPS_Wr_Mask) | ((data & DMA_SR0_RPS_Mask)<<8));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q7RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_RPS_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 8) & DMA_SR0_RPS_Mask);\
+#define MTL_ISR_Q7RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 15) & MTL_ISR_Q7RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_RWT_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q7TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RWT_Mask (ULONG)(0x1)
+#define MTL_ISR_Q7TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_RWT_Wr_Mask (ULONG)(~((~(~0 << (1))) << (9)))*/
+#define MTL_ISR_Q7TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 14) & MTL_ISR_Q7TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_RWT_Wr_Mask (ULONG)(0xfffffdff)
+/*#define MTL_ISR_Q6RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_RWT_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_RWT_Wr_Mask) | ((data & DMA_SR0_RWT_Mask)<<9));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q6RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_RWT_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 9) & DMA_SR0_RWT_Mask);\
+#define MTL_ISR_Q6RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 13) & MTL_ISR_Q6RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_ETI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q6TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_ETI_Mask (ULONG)(0x1)
+#define MTL_ISR_Q6TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_ETI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (10)))*/
+#define MTL_ISR_Q6TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 12) & MTL_ISR_Q6TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_ETI_Wr_Mask (ULONG)(0xfffffbff)
+/*#define MTL_ISR_Q5RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_ETI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_ETI_Wr_Mask) | ((data & DMA_SR0_ETI_Mask)<<10));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q5RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_ETI_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 10) & DMA_SR0_ETI_Mask);\
+#define MTL_ISR_Q5RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 11) & MTL_ISR_Q5RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_ERI_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q5TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_ERI_Mask (ULONG)(0x1)
+#define MTL_ISR_Q5TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_ERI_Wr_Mask (ULONG)(~((~(~0 << (1))) << (11)))*/
+#define MTL_ISR_Q5TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 10) & MTL_ISR_Q5TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_ERI_Wr_Mask (ULONG)(0xfffff7ff)
+/*#define MTL_ISR_Q4RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_ERI_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_ERI_Wr_Mask) | ((data & DMA_SR0_ERI_Mask)<<11));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q4RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_ERI_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 11) & DMA_SR0_ERI_Mask);\
+#define MTL_ISR_Q4RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 9) & MTL_ISR_Q4RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_FBE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q4TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_FBE_Mask (ULONG)(0x1)
+#define MTL_ISR_Q4TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_FBE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (12)))*/
+#define MTL_ISR_Q4TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 8) & MTL_ISR_Q4TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_FBE_Wr_Mask (ULONG)(0xffffefff)
+/*#define MTL_ISR_Q3RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_FBE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_FBE_Wr_Mask) | ((data & DMA_SR0_FBE_Mask)<<12));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q3RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_FBE_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 12) & DMA_SR0_FBE_Mask);\
+#define MTL_ISR_Q3RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 7) & MTL_ISR_Q3RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_CDE_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q3TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_CDE_Mask (ULONG)(0x1)
+#define MTL_ISR_Q3TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_CDE_Wr_Mask (ULONG)(~((~(~0 << (1))) << (13)))*/
+#define MTL_ISR_Q3TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 6) & MTL_ISR_Q3TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_CDE_Wr_Mask (ULONG)(0xffffdfff)
+/*#define MTL_ISR_Q2RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_CDE_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_CDE_Wr_Mask) | ((data & DMA_SR0_CDE_Mask)<<13));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q2RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_CDE_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 13) & DMA_SR0_CDE_Mask);\
+#define MTL_ISR_Q2RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 5) & MTL_ISR_Q2RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_AIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q2TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_AIS_Mask (ULONG)(0x1)
+#define MTL_ISR_Q2TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_AIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (14)))*/
+#define MTL_ISR_Q2TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 4) & MTL_ISR_Q2TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_AIS_Wr_Mask (ULONG)(0xffffbfff)
+/*#define MTL_ISR_Q1RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_AIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_AIS_Wr_Mask) | ((data & DMA_SR0_AIS_Mask)<<14));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q1RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_AIS_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 14) & DMA_SR0_AIS_Mask);\
+#define MTL_ISR_Q1RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 3) & MTL_ISR_Q1RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_NIS_Mask (ULONG)(~(~0<<(1)))*/
+/*#define MTL_ISR_Q1TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_NIS_Mask (ULONG)(0x1)
+#define MTL_ISR_Q1TXU_Mask (ULONG)(0x1)
 
-/*#define DMA_SR0_NIS_Wr_Mask (ULONG)(~((~(~0 << (1))) << (15)))*/
+#define MTL_ISR_Q1TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 2) & MTL_ISR_Q1TXU_Mask);\
+} while(0)
 
-#define DMA_SR0_NIS_Wr_Mask (ULONG)(0xffff7fff)
+/*#define MTL_ISR_Q0RXO_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_NIS_UdfWr(data) do {\
-		ULONG v;\
-		DMA_SR0_RgRd(v);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_3))|((( 0) & (DMA_SR0_Mask_3))<<3);\
-		v = (v & (DMA_SR0_RES_Wr_Mask_19))|((( 0) & (DMA_SR0_Mask_19))<<19);\
-		v = ((v & DMA_SR0_NIS_Wr_Mask) | ((data & DMA_SR0_NIS_Mask)<<15));\
-		DMA_SR0_RgWr(v);\
-} while(0)
+#define MTL_ISR_Q0RXO_Mask (ULONG)(0x1)
 
-#define DMA_SR0_NIS_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 15) & DMA_SR0_NIS_Mask);\
+#define MTL_ISR_Q0RXO_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 1) & MTL_ISR_Q0RXO_Mask);\
 } while(0)
 
-/*#define DMA_SR0_EB_Mask (ULONG)(~(~0<<(3)))*/
+/*#define MTL_ISR_Q0TXU_Mask (ULONG)(~(~0<<(1)))*/
 
-#define DMA_SR0_EB_Mask (ULONG)(0x7)
+#define MTL_ISR_Q0TXU_Mask (ULONG)(0x1)
 
-#define DMA_SR0_EB_UdfRd(data) do {\
-		DMA_SR0_RgRd(data);\
-		data = ((data >> 16) & DMA_SR0_EB_Mask);\
+#define MTL_ISR_Q0TXU_UdfRd(data) do {\
+		MTL_ISR_RgRd(data);\
+		data = ((data >> 0) & MTL_ISR_Q0TXU_Mask);\
 } while(0)
 
 
@@ -41375,6 +34633,9 @@
 		(data) = ioread32((void *)MTL_QROMR_RgOffAddress(i));\
 } while(0)
 
+
+#ifdef DWC_ETH_QOS_VER_4_0
+
 /*#define  MTL_QROMR_Mask_30 (ULONG)(~(~0<<(2)))*/
 
 #define  MTL_QROMR_Mask_30 (ULONG)(0x3)
@@ -41623,6 +34884,243 @@
 		data = ((data >> 0) & MTL_QROMR_RTC_Mask);\
 } while(0)
 
+#else
+
+/*#define  MTL_QROMR_Mask_30 (ULONG)(~(~0<<(2)))*/
+
+#define  MTL_QROMR_Mask_30 (ULONG)(0x3)
+
+/*#define MTL_QROMR_RES_Wr_Mask_30 (ULONG)(~((~(~0<<(2)))<<(30)))*/
+
+#define MTL_QROMR_RES_Wr_Mask_30 (ULONG)(0x3fffffff)
+
+/*#define  MTL_QROMR_Mask_11 (ULONG)(~(~0<<(2)))*/
+
+#define  MTL_QROMR_Mask_11 (ULONG)(0x3)
+
+/*#define MTL_QROMR_RES_Wr_Mask_11 (ULONG)(~((~(~0<<(2)))<<(11)))*/
+
+#define MTL_QROMR_RES_Wr_Mask_11 (ULONG)(0xffffe7ff)
+
+/*#define  MTL_QROMR_Mask_2 (ULONG)(~(~0<<(1)))*/
+
+#define  MTL_QROMR_Mask_2 (ULONG)(0x1)
+
+/*#define MTL_QROMR_RES_Wr_Mask_2 (ULONG)(~((~(~0<<(1)))<<(2)))*/
+
+#define MTL_QROMR_RES_Wr_Mask_2 (ULONG)(0xfffffffb)
+
+/*#define MTL_QROMR_RQS_Mask (ULONG)(~(~0<<(10)))*/
+
+#define MTL_QROMR_RQS_Mask (ULONG)(0x3ff)
+
+/*#define MTL_QROMR_RQS_Wr_Mask (ULONG)(~((~(~0 << (10))) << (20)))*/
+
+#define MTL_QROMR_RQS_Wr_Mask (ULONG)(0xc00fffff)
+
+#define MTL_QROMR_RQS_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_RQS_Wr_Mask) | ((data & MTL_QROMR_RQS_Mask)<<20));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_RQS_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 20) & MTL_QROMR_RQS_Mask);\
+} while(0)
+
+
+#define MTL_QROMR_RFD_Mask (ULONG)(0x3f)
+#define MTL_QROMR_RFD_Wr_Mask (ULONG)(0xfff03fff)
+
+#define MTL_QROMR_RFD_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_RFD_Wr_Mask) | ((data & MTL_QROMR_RFD_Mask)<<14));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_RFD_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 14) & MTL_QROMR_RFD_Mask);\
+} while(0)
+
+
+#define MTL_QROMR_RFA_Mask (ULONG)(0x3f)
+#define MTL_QROMR_RFA_Wr_Mask (ULONG)(0xffffc0ff)
+
+#define MTL_QROMR_RFA_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_RFA_Wr_Mask) | ((data & MTL_QROMR_RFA_Mask)<<8));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_RFA_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 8) & MTL_QROMR_RFA_Mask);\
+} while(0)
+
+/*#define MTL_QROMR_EHFC_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MTL_QROMR_EHFC_Mask (ULONG)(0x1)
+
+/*#define MTL_QROMR_EHFC_Wr_Mask (ULONG)(~((~(~0 << (1))) << (7)))*/
+
+#define MTL_QROMR_EHFC_Wr_Mask (ULONG)(0xffffff7f)
+
+#define MTL_QROMR_EHFC_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_EHFC_Wr_Mask) | ((data & MTL_QROMR_EHFC_Mask)<<7));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_EHFC_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 7) & MTL_QROMR_EHFC_Mask);\
+} while(0)
+
+/*#define MTL_QROMR_DIS_TCP_EF_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MTL_QROMR_DIS_TCP_EF_Mask (ULONG)(0x1)
+
+/*#define MTL_QROMR_DIS_TCP_EF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (6)))*/
+
+#define MTL_QROMR_DIS_TCP_EF_Wr_Mask (ULONG)(0xffffffbf)
+
+#define MTL_QROMR_DIS_TCP_EF_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_DIS_TCP_EF_Wr_Mask) | ((data & MTL_QROMR_DIS_TCP_EF_Mask)<<6));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_DIS_TCP_EF_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 6) & MTL_QROMR_DIS_TCP_EF_Mask);\
+} while(0)
+
+/*#define MTL_QROMR_RSF_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MTL_QROMR_RSF_Mask (ULONG)(0x1)
+
+/*#define MTL_QROMR_RSF_Wr_Mask (ULONG)(~((~(~0 << (1))) << (5)))*/
+
+#define MTL_QROMR_RSF_Wr_Mask (ULONG)(0xffffffdf)
+
+#define MTL_QROMR_RSF_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_RSF_Wr_Mask) | ((data & MTL_QROMR_RSF_Mask)<<5));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_RSF_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 5) & MTL_QROMR_RSF_Mask);\
+} while(0)
+
+/*#define MTL_QROMR_FEP_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MTL_QROMR_FEP_Mask (ULONG)(0x1)
+
+/*#define MTL_QROMR_FEP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (4)))*/
+
+#define MTL_QROMR_FEP_Wr_Mask (ULONG)(0xffffffef)
+
+#define MTL_QROMR_FEP_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_FEP_Wr_Mask) | ((data & MTL_QROMR_FEP_Mask)<<4));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_FEP_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 4) & MTL_QROMR_FEP_Mask);\
+} while(0)
+
+/*#define MTL_QROMR_FUP_Mask (ULONG)(~(~0<<(1)))*/
+
+#define MTL_QROMR_FUP_Mask (ULONG)(0x1)
+
+/*#define MTL_QROMR_FUP_Wr_Mask (ULONG)(~((~(~0 << (1))) << (3)))*/
+
+#define MTL_QROMR_FUP_Wr_Mask (ULONG)(0xfffffff7)
+
+#define MTL_QROMR_FUP_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_FUP_Wr_Mask) | ((data & MTL_QROMR_FUP_Mask)<<3));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_FUP_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 3) & MTL_QROMR_FUP_Mask);\
+} while(0)
+
+/*#define MTL_QROMR_RTC_Mask (ULONG)(~(~0<<(2)))*/
+
+#define MTL_QROMR_RTC_Mask (ULONG)(0x3)
+
+/*#define MTL_QROMR_RTC_Wr_Mask (ULONG)(~((~(~0 << (2))) << (0)))*/
+
+#define MTL_QROMR_RTC_Wr_Mask (ULONG)(0xfffffffc)
+
+#define MTL_QROMR_RTC_UdfWr(i,data) do {\
+		ULONG v;\
+		MTL_QROMR_RgRd(i,v);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_30))|((( 0) & (MTL_QROMR_Mask_30))<<30);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_11))|((( 0) & (MTL_QROMR_Mask_11))<<11);\
+		v = (v & (MTL_QROMR_RES_Wr_Mask_2))|((( 0) & (MTL_QROMR_Mask_2))<<2);\
+		v = ((v & MTL_QROMR_RTC_Wr_Mask) | ((data & MTL_QROMR_RTC_Mask)<<0));\
+		MTL_QROMR_RgWr(i,v);\
+} while(0)
+
+#define MTL_QROMR_RTC_UdfRd(i,data) do {\
+		MTL_QROMR_RgRd(i,data);\
+		data = ((data >> 0) & MTL_QROMR_RTC_Mask);\
+} while(0)
+
+
+
+
+
+
+
+
+
+
+#endif
+
+
 
 #define MTL_QLCR_RgOffAddr (BASE_ADDRESS + 0xd24)
 
@@ -42433,6 +35931,7 @@
 		DMA_TDLAR_RgRd(i,data);\
 } while(0)
 
+#ifdef  DWC_ETH_QOS_VER_4_0
 
 #define DMA_IER_RgOffAddr (BASE_ADDRESS + 0x1134)
 
@@ -42770,6 +36269,288 @@
 } while(0)
 
 
+#else
+  /*****************************************/
+#define DMA_IER_RgOffAddr (BASE_ADDRESS + 0x1134)
+
+#define DMA_IER_RgOffAddress(i) ((volatile ULONG *)(DMA_IER_RgOffAddr + ((i-0)*128)))
+
+#define DMA_IER_RgWr(i,data) do {\
+		iowrite32(data, (void *)DMA_IER_RgOffAddress(i));\
+} while(0)
+
+#define DMA_IER_RgRd(i,data) do {\
+		(data) = ioread32((void *)DMA_IER_RgOffAddress(i));\
+} while(0)
+
+
+#define DMA_IER_Mask_16 (ULONG)(0xffff)
+#define DMA_IER_RES_Wr_Mask_16 (ULONG)(0xffff)
+
+#define  DMA_IER_Mask_3 (ULONG)(0x7)
+#define DMA_IER_RES_Wr_Mask_3 (ULONG)(0xffffffc7)
+
+#define DMA_IER_NIE_Mask (ULONG)(0x1)
+#define DMA_IER_NIE_Wr_Mask (ULONG)(0xffff7fff)
+
+#define DMA_IER_NIE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_NIE_Wr_Mask) | ((data & DMA_IER_NIE_Mask)<<15));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_NIE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 15) & DMA_IER_NIE_Mask);\
+} while(0)
+
+
+#define DMA_IER_AIE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_AIE_Wr_Mask (ULONG)(0xffffbfff)
+
+#define DMA_IER_AIE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_AIE_Wr_Mask) | ((data & DMA_IER_AIE_Mask)<<14));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_AIE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 14) & DMA_IER_AIE_Mask);\
+} while(0)
+
+
+#define DMA_IER_CDEE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_CDEE_Wr_Mask (ULONG)(0xffffdfff)
+
+#define DMA_IER_CDEE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_CDEE_Wr_Mask) | ((data & DMA_IER_CDEE_Mask)<<13));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_CDEE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 13) & DMA_IER_CDEE_Mask);\
+} while(0)
+
+
+#define DMA_IER_FBEE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_FBEE_Wr_Mask (ULONG)(0xffffefff)
+
+#define DMA_IER_FBEE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_FBEE_Wr_Mask) | ((data & DMA_IER_FBEE_Mask)<<12));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_FBEE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 12) & DMA_IER_FBEE_Mask);\
+} while(0)
+
+
+#define DMA_IER_ERIE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_ERIE_Wr_Mask (ULONG)(0xfffff7ff)
+
+#define DMA_IER_ERIE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_ERIE_Wr_Mask) | ((data & DMA_IER_ERIE_Mask)<<11));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_ERIE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 11) & DMA_IER_ERIE_Mask);\
+} while(0)
+
+
+#define DMA_IER_ETIE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_ETIE_Wr_Mask (ULONG)(0xfffffbff)
+
+#define DMA_IER_ETIE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_ETIE_Wr_Mask) | ((data & DMA_IER_ETIE_Mask)<<10));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_ETIE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 10) & DMA_IER_ETIE_Mask);\
+} while(0)
+
+
+#define DMA_IER_RWTE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_RWTE_Wr_Mask (ULONG)(0xfffffdff)
+
+#define DMA_IER_RWTE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_RWTE_Wr_Mask) | ((data & DMA_IER_RWTE_Mask)<<9));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_RWTE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 9) & DMA_IER_RWTE_Mask);\
+} while(0)
+
+
+#define DMA_IER_RSE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_RSE_Wr_Mask (ULONG)(0xfffffeff)
+
+#define DMA_IER_RSE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_RSE_Wr_Mask) | ((data & DMA_IER_RSE_Mask)<<8));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_RSE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 8) & DMA_IER_RSE_Mask);\
+} while(0)
+
+
+#define DMA_IER_RBUE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_RBUE_Wr_Mask (ULONG)(0xffffff7f)
+
+#define DMA_IER_RBUE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_RBUE_Wr_Mask) | ((data & DMA_IER_RBUE_Mask)<<7));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_RBUE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 7) & DMA_IER_RBUE_Mask);\
+} while(0)
+
+
+#define DMA_IER_RIE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_RIE_Wr_Mask (ULONG)(0xffffffbf)
+
+#define DMA_IER_RIE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_RIE_Wr_Mask) | ((data & DMA_IER_RIE_Mask)<<6));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_RIE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 6) & DMA_IER_RIE_Mask);\
+} while(0)
+
+
+#define DMA_IER_TBUE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_TBUE_Wr_Mask (ULONG)(0xfffffffb)
+
+#define DMA_IER_TBUE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_TBUE_Wr_Mask) | ((data & DMA_IER_TBUE_Mask)<<2));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_TBUE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 2) & DMA_IER_TBUE_Mask);\
+} while(0)
+
+
+#define DMA_IER_TXSE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_TXSE_Wr_Mask (ULONG)(0xfffffffd)
+
+#define DMA_IER_TXSE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_TXSE_Wr_Mask) | ((data & DMA_IER_TXSE_Mask)<<1));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_TXSE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 1) & DMA_IER_TXSE_Mask);\
+} while(0)
+
+
+#define DMA_IER_TIE_Mask (ULONG)(0x1)
+
+
+#define DMA_IER_TIE_Wr_Mask (ULONG)(0xfffffffe)
+
+#define DMA_IER_TIE_UdfWr(i,data) do {\
+		ULONG v;\
+		DMA_IER_RgRd(i,v);\
+		v = (v & (DMA_IER_RES_Wr_Mask_16))|((( 0) & (DMA_IER_Mask_16))<<16);\
+		v = (v & (DMA_IER_RES_Wr_Mask_3))|((( 0) & (DMA_IER_Mask_3))<<3);\
+		v = ((v & DMA_IER_TIE_Wr_Mask) | ((data & DMA_IER_TIE_Mask)<<0));\
+		DMA_IER_RgWr(i,v);\
+} while(0)
+
+#define DMA_IER_TIE_UdfRd(i,data) do {\
+		DMA_IER_RgRd(i,data);\
+		data = ((data >> 0) & DMA_IER_TIE_Mask);\
+} while(0)
+
+        
+#endif //!DWC_ETH_QOS_VER_4_0
+
+
 #define DMA_SR_RgOffAddr (BASE_ADDRESS + 0x1160)
 
 #define DMA_SR_RgOffAddress(i) ((volatile ULONG *)(DMA_SR_RgOffAddr + ((i-0)*128)))
-- 
1.7.9.5

