From d5b6554a34e35a353f742266ec8cf1a86f10dbba Mon Sep 17 00:00:00 2001
From: Huiquan Zhong <huiquan.zhong@intel.com>
Date: Mon, 5 Jan 2015 23:37:00 +0800
Subject: [PATCH] dma: dw: must initialize dma channel in each transaction

CHT enable Autonomous D3 for LPSS DMA. When idle, DMA will power gated
and reset without driver knowledge, So need to initialize in each dma
transaction.

Change-Id: I24027f376b691419b2a1cb6c599f5856425c5a82
Signed-off-by: Huiquan Zhong <huiquan.zhong@intel.com>
(cherry picked from commit bd4e622f26bcd22431f0e2b3a71da32f9adda9a8)

Signed-off-by: Brett T. Warden <brett.t.warden@intel.com>
---
 drivers/dma/dw/core.c |    9 ---------
 drivers/dma/dw/regs.h |    1 -
 2 files changed, 10 deletions(-)

diff --git a/drivers/dma/dw/core.c b/drivers/dma/dw/core.c
index e58ef9f..1e23352 100644
--- a/drivers/dma/dw/core.c
+++ b/drivers/dma/dw/core.c
@@ -149,9 +149,6 @@ static void dwc_initialize(struct dw_dma_chan *dwc)
 	u32 cfghi = DWC_CFGH_FIFO_MODE;
 	u32 cfglo = DWC_CFGL_CH_PRIOR(dwc->priority);
 
-	if (dwc->initialized == true)
-		return;
-
 	if (dws) {
 		/*
 		 * We need controller-specific data to set up slave
@@ -174,8 +171,6 @@ static void dwc_initialize(struct dw_dma_chan *dwc)
 	/* Enable interrupts */
 	channel_set_bit(dw, MASK.XFER, dwc->mask);
 	channel_set_bit(dw, MASK.ERROR, dwc->mask);
-
-	dwc->initialized = true;
 }
 
 /*----------------------------------------------------------------------*/
@@ -1200,7 +1195,6 @@ static void dwc_free_chan_resources(struct dma_chan *chan)
 	spin_lock_irqsave(&dwc->lock, flags);
 	list_splice_init(&dwc->free_list, &list);
 	dwc->descs_allocated = 0;
-	dwc->initialized = false;
 	dwc->request_line = ~0;
 
 	/* Disable interrupts */
@@ -1492,9 +1486,6 @@ static void dw_dma_off(struct dw_dma *dw)
 
 	while (dma_readl(dw, CFG) & DW_CFG_DMA_EN)
 		cpu_relax();
-
-	for (i = 0; i < dw->dma.chancnt; i++)
-		dw->chan[i].initialized = false;
 }
 
 int dw_dma_probe(struct dw_dma_chip *chip, struct dw_dma_platform_data *pdata)
diff --git a/drivers/dma/dw/regs.h b/drivers/dma/dw/regs.h
index deb4274..7ce76504 100644
--- a/drivers/dma/dw/regs.h
+++ b/drivers/dma/dw/regs.h
@@ -199,7 +199,6 @@ struct dw_dma_chan {
 	u8				priority;
 	enum dma_transfer_direction	direction;
 	bool				paused;
-	bool				initialized;
 
 	/* software emulation of the LLP transfers */
 	struct list_head	*tx_node_active;
-- 
1.7.9.5

