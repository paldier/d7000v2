From 885087cbf4845dc4408951863aba968fd8232b02 Mon Sep 17 00:00:00 2001
From: Marco A Vital Yep <marco.a.vital.yep@intel.com>
Date: Wed, 23 Dec 2015 17:06:51 -0700
Subject: [PATCH]   Title: Change GBE MAC queue and descriptors configuration.
   Issue: <HSD:244984>   IssueType: Bug   Description:
 Configure MAC to use only one MTL FIFO queue.              
  Set number of descriptors to maximum allowed value.

---
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c    |   32 +++++++++++++++++---
 .../net/ethernet/synopsys/DWC_ETH_QOS_yheader.h    |    4 +--
 2 files changed, 30 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
index d197166..8c01482 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
@@ -142,12 +142,35 @@ static int DWC_ETH_QOS_init_general_gbe(void __iomem **gbe_base,
 	return ret;
 }
 
+static uint32_t DWC_ETH_QOS_gbe_config_to_speed(uint32_t config)
+{
+	uint32_t speed = 0;
+	switch(config) {
+		case GCR5_PHY_SPEED_10M:
+			speed = 10;
+		break;
+		case GCR5_PHY_SPEED_100M:
+			speed = 100;
+		break;
+		case GCR5_PHY_SPEED_1G:
+			speed = 1000;
+		break;
+		case GCR5_PHY_SPEED_2_5G:
+			speed = 2500;
+		break;
+		case GCR5_PHY_SPEED_5G:
+			speed = 5000;
+		break;
+	}
+	return speed;
+}
+
 static ssize_t DWC_ETH_QOS_gbe_speed_show(struct device *dev,
 	struct device_attribute *attr, char *buf)
 {
 	struct DWC_ETH_QOS_prv_data *pdata = NULL;
 	pdata = container_of(attr, struct DWC_ETH_QOS_prv_data, dev_attr);
-	return sprintf(buf, "%d\n", pdata->rate);
+	return sprintf(buf, "%d\n", DWC_ETH_QOS_gbe_config_to_speed(pdata->rate));
 }
 
 static ssize_t DWC_ETH_QOS_gbe_speed_store(struct device *dev,
@@ -258,9 +281,10 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 
 	DBGPR("dwc_eth_qos_pci_base_addr = %#lx\n", dwc_eth_qos_pci_base_addr);
 
-	/* queue count */
-	tx_q_count = get_tx_queue_count();
-	rx_q_count = get_rx_queue_count();
+	/* Queue count: Enabling only one queue due to problem with MAC
+		sending most of the traffic to MTL FIFO 0 */
+	tx_q_count = 1; //get_tx_queue_count();
+	rx_q_count = 1; //get_rx_queue_count();
 
 	dev = alloc_netdev_mqs(sizeof(struct DWC_ETH_QOS_prv_data), "gmac5",
 				ether_setup, tx_q_count, rx_q_count);
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
index e302af5..6c9ee69 100644
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
@@ -209,8 +209,8 @@
 #define MASK (0x1ULL << 0 | \
 	0x13c7ULL << 32)
 #define MAC_MASK (0x10ULL << 0)
-#define TX_DESC_CNT 256
-#define RX_DESC_CNT 256
+#define TX_DESC_CNT 1024
+#define RX_DESC_CNT 1024
 #define MIN_RX_DESC_CNT 16
 #define TX_BUF_SIZE 1536
 #define RX_BUF_SIZE 1568
-- 
1.7.9.5

