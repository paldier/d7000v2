From 252705f68bb5ba96f72b61c52e2375d582734923 Mon Sep 17 00:00:00 2001
From: "Wu, Hao" <hao.wu@intel.com>
Date: Thu, 8 Jan 2015 15:55:09 +0800
Subject: [PATCH] dwc3: avoid deadlock in otg notification function

dwc3_thread_interrupt function will hold the device lock before
start handling events, but if it invokes functions like vbus_draw,
it may trigger other events (need to be ignored by dwc3) on phy
notification call chain, so move spinlock inside the switch case
where it needs the device lock.

Change-Id: I4e545edfe8fba1538920c91ccd08d0f253628c3f
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-8935
Signed-off-by: Wu, Hao <hao.wu@intel.com>
(cherry picked from commit cb9109393dbcc2e2dca03c08b410a95c04fdf20e)

Signed-off-by: Brett T. Warden <brett.t.warden@intel.com>
---
 drivers/usb/dwc3/core.c |   33 ++++++++++++++++++---------------
 1 file changed, 18 insertions(+), 15 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 15a2e25..57a3366 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -591,30 +591,33 @@ static int dwc3_handle_otg_notification(struct notifier_block *nb,
 	int state = NOTIFY_DONE;
 	static int last_value = -1;
 
-	if (last_value == event)
-		goto out;
-
-	spin_lock_irqsave(&dwc->lock, flags);
 	switch (event) {
 	case USB_EVENT_VBUS:
-		dev_info(dwc->dev, "DWC3 OTG Notify USB_EVENT_VBUS\n");
-		last_value = event;
-		if (dwc->dpm_pulled_down) {
-			dwc3_set_phy_dpm_pulldown(dwc, 0);
-			dwc->dpm_pulled_down = 0;
+		spin_lock_irqsave(&dwc->lock, flags);
+		if (last_value != event) {
+			dev_info(dwc->dev, "DWC3 OTG Notify USB_EVENT_VBUS\n");
+			last_value = event;
+			if (dwc->dpm_pulled_down) {
+				dwc3_set_phy_dpm_pulldown(dwc, 0);
+				dwc->dpm_pulled_down = 0;
+			}
+			pm_runtime_get(dwc->dev);
+			state = NOTIFY_OK;
 		}
-		pm_runtime_get(dwc->dev);
-		state = NOTIFY_OK;
+		spin_unlock_irqrestore(&dwc->lock, flags);
 		break;
 	case USB_EVENT_NONE:
-		dev_info(dwc->dev, "DWC3 OTG Notify USB_EVENT_NONE\n");
-		last_value = event;
-		state = NOTIFY_OK;
+		spin_lock_irqsave(&dwc->lock, flags);
+		if (last_value != event) {
+			dev_info(dwc->dev, "DWC3 OTG Notify USB_EVENT_NONE\n");
+			last_value = event;
+			state = NOTIFY_OK;
+		}
+		spin_unlock_irqrestore(&dwc->lock, flags);
 		break;
 	default:
 		dev_dbg(dwc->dev, "DWC3 OTG Notify unknow notify message\n");
 	}
-	spin_unlock_irqrestore(&dwc->lock, flags);
 
 out:
 	return state;
-- 
1.7.9.5

