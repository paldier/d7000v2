# This patch is to populate GPT partition table device name with it's volume name
# Partition info will be populated at /dev/partitions_info

Index: linux-3.12.17/block/genhd.c
===================================================================
--- a/block/genhd.c
+++ b/block/genhd.c
@@ -841,6 +841,16 @@ static void *show_partition_start(struct
 	return p;
 }
 
+static void *show_partition_start_info(struct seq_file *seqf, loff_t *pos)
+{
+	void *p;
+
+	p = disk_seqf_start(seqf, pos);
+	if (!IS_ERR_OR_NULL(p) && !*pos)
+		seq_puts(seqf, "Number\tStartSector\tSize\tName\tVolumeName\n\n");
+	return p;
+}
+
 static int show_partition(struct seq_file *seqf, void *v)
 {
 	struct gendisk *sgp = v;
@@ -867,6 +877,36 @@ static int show_partition(struct seq_fil
 	return 0;
 }
 
+static int show_partition_info(struct seq_file *seqf, void *v)
+{
+	struct gendisk *sgp = v;
+	struct disk_part_iter piter;
+	struct hd_struct *part;
+	char buf[BDEVNAME_SIZE];
+
+	/* Don't show non-partitionable removeable devices or empty devices */
+	if (!get_capacity(sgp) || (!disk_max_parts(sgp) &&
+				   (sgp->flags & GENHD_FL_REMOVABLE)))
+		return 0;
+	if (sgp->flags & GENHD_FL_SUPPRESS_PARTITION_INFO)
+		return 0;
+
+	disk_part_iter_init(&piter, sgp, DISK_PITER_INCL_PART0);
+
+	/* Number	StartSector		Size	Name	VolumeName */
+	while ((part = disk_part_iter_next(&piter)))
+		seq_printf(seqf, "%4d\t%15llu\t%15llu\t%15s\t%20s\n",
+			part->partno,
+			(unsigned long long)part->start_sect,
+			(unsigned long long)part_nr_sects_read(part),
+			disk_name(sgp, part->partno, buf),
+			(part->info)?(const char *)part->info->volname:"-");
+
+	disk_part_iter_exit(&piter);
+
+	return 0;
+}
+
 static const struct seq_operations partitions_op = {
 	.start	= show_partition_start,
 	.next	= disk_seqf_next,
@@ -874,17 +914,36 @@ static const struct seq_operations parti
 	.show	= show_partition
 };
 
+static const struct seq_operations partitions_op_info = {
+	.start	= show_partition_start_info,
+	.next	= disk_seqf_next,
+	.stop	= disk_seqf_stop,
+	.show	= show_partition_info
+};
+
 static int partitions_open(struct inode *inode, struct file *file)
 {
 	return seq_open(file, &partitions_op);
 }
 
+static int partitions_open_info(struct inode *inode, struct file *file)
+{
+	return seq_open(file, &partitions_op_info);
+}
+
 static const struct file_operations proc_partitions_operations = {
 	.open		= partitions_open,
 	.read		= seq_read,
 	.llseek		= seq_lseek,
 	.release	= seq_release,
 };
+
+static const struct file_operations proc_partitions_operations_info = {
+	.open		= partitions_open_info,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= seq_release,
+};
 #endif
 
 
@@ -1202,6 +1261,7 @@ static int __init proc_genhd_init(void)
 {
 	proc_create("diskstats", 0, NULL, &proc_diskstats_operations);
 	proc_create("partitions", 0, NULL, &proc_partitions_operations);
+	proc_create("partitions_info", 0, NULL, &proc_partitions_operations_info);
 	return 0;
 }
 module_init(proc_genhd_init);
