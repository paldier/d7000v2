From e70567da8e6ec85b13c6a97cb9c8ac685d20ceed Mon Sep 17 00:00:00 2001
From: Marco A Vital Yep <marco.a.vital.yep@intel.com>
Date: Thu, 15 Oct 2015 16:35:21 -0700
Subject: [PATCH] Enable GMAC5 in open when it is connected to GMAC4

---
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c    |    7 ++++++-
 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c    |   15 +++++++++------
 .../net/ethernet/synopsys/DWC_ETH_QOS_yheader.h    |    6 ++++++
 3 files changed, 21 insertions(+), 7 deletions(-)
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_eee.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_ethtool.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_ethtool.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_ptp.c
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/Kconfig
 mode change 100755 => 100644 drivers/net/ethernet/synopsys/Makefile

diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_api.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_debug_operation.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_desc.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_dev.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
old mode 100755
new mode 100644
index 17ed34a..a5319a6
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.c
@@ -1512,8 +1512,13 @@ static int DWC_ETH_QOS_open(struct net_device *dev)
 		pdata->eee_enabled = false;
 
 #ifndef DWC_ETH_QOS_CONFIG_PGTEST
-	if (pdata->phydev)
+	if (pdata->mux_cfg == GMCR_GMAC5_TO_GMAC4) {
+		hw_if->set_full_duplex();
+		hw_if->set_gmii_speed();
+		netif_tx_start_all_queues(dev);
+   } else if (pdata->phydev) {
 		netif_tx_start_all_queues(dev);
+   }
 #ifdef GBE_POLLING
 	hrtimer_init(&pdata->gbe_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
 	pdata->gbe_timer.function = gbe_timeout;
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_drv.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_eee.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_eee.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_ethtool.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_ethtool.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_ethtool.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_ethtool.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_mdio.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
old mode 100755
new mode 100644
index b38921b..50faca7
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.c
@@ -40,7 +40,8 @@
 #ifdef INIT_NETSS_GBE
 #include <linux/netip_subsystem.h>
 
-static int DWC_ETH_QOS_init_general_gbe(void __iomem **gbe_base)
+static int DWC_ETH_QOS_init_general_gbe(void __iomem **gbe_base,
+   unsigned int *mux_cfg)
 {
    int ret = 1;
    netss_dev_info_t gbe_mmio;
@@ -95,14 +96,14 @@ static int DWC_ETH_QOS_init_general_gbe(void __iomem **gbe_base)
          GBE_REG_WR(reg_base, GBE_GCR5_OFF, reg_val);
 
          // Read GBE MUX configuration
-         GET_VAR32_BITS(GBE_REG_RD(reg_base, GBE_GMCR_OFF), reg_cfg,
-                        GMCR_GMAC25_WIDTH, GMCR_GMAC25_OFF);
+         reg_cfg = GBE_REG_RD(reg_base, GBE_GMCR_OFF);
+         GET_VAR32_BITS(reg_cfg, *mux_cfg, GMCR_GMAC25_WIDTH, GMCR_GMAC25_OFF);
 
-         if (reg_cfg == GMCR_GMAC5_TO_PHY) {
+         if (*mux_cfg == GMCR_GMAC5_TO_PHY) {
             DBGPR("[GBE] GMAC5 to PHY!\n");
             // Set RGMII PHY config
             SET_VAR32_BITS(reg_val, 1, GCR5_PHY_CFG_WIDTH, GCR5_PHY_CFG_OFF);
-         } else if (reg_cfg == GMCR_GMAC5_TO_GMAC4) {
+         } else if (*mux_cfg == GMCR_GMAC5_TO_GMAC4) {
             DBGPR("[GBE] GMAC5 to GMAC4!\n");
             // Set GMII PHY config
             SET_VAR32_BITS(reg_val, 0, GCR5_PHY_CFG_WIDTH, GCR5_PHY_CFG_OFF);
@@ -182,6 +183,7 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 	struct desc_if_struct *desc_if = NULL;
 	UCHAR tx_q_count = 0, rx_q_count = 0;
 	void __iomem *gbe_base;
+   unsigned int gbe_mux_cfg;
 
 	DBGPR("--> DWC_ETH_QOS_probe\n");
 
@@ -196,7 +198,7 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 		goto err_out_msi_failed;
 	}
 
-   if (DWC_ETH_QOS_init_general_gbe(&gbe_base)) {
+   if (DWC_ETH_QOS_init_general_gbe(&gbe_base, &gbe_mux_cfg)) {
       goto err_out_req_reg_failed;
    }
 #endif
@@ -259,6 +261,7 @@ int DWC_ETH_QOS_probe(struct pci_dev *pdev,
 	pdata->rx_queue_cnt = rx_q_count;
 #ifdef INIT_NETSS_GBE
 	pdata->gbe_base = gbe_base;
+	pdata->mux_cfg = gbe_mux_cfg;
 #endif
 
 #ifdef DWC_ETH_QOS_CONFIG_DEBUGFS
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pci.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_pktgen.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_ptp.c b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_ptp.c
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yapphdr.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
old mode 100755
new mode 100644
index 03a8a10..a9c7e61
--- a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
+++ b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yheader.h
@@ -578,6 +578,11 @@ typedef enum {
 	eDWC_ETH_QOS_32k = 0x7f
 } eDWC_ETH_QOS_mtl_fifo_size;
 
+typedef enum {
+	eGBE_GMAC5_TO_PHY,
+	eGBE_GMAC5_TO_GMAC4
+} e_GBE_mux_config;
+
 /* do forward declaration of private data structure */
 struct DWC_ETH_QOS_prv_data;
 struct DWC_ETH_QOS_tx_wrapper_descriptor;
@@ -1294,6 +1299,7 @@ struct DWC_ETH_QOS_prv_data {
 	int tcp_pkt;
 
 	void __iomem *gbe_base;
+	e_GBE_mux_config mux_cfg;
 #ifdef GBE_POLLING
 	struct hrtimer gbe_timer;
 #endif
diff --git a/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h b/drivers/net/ethernet/synopsys/DWC_ETH_QOS_yregacc.h
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/Kconfig b/drivers/net/ethernet/synopsys/Kconfig
old mode 100755
new mode 100644
diff --git a/drivers/net/ethernet/synopsys/Makefile b/drivers/net/ethernet/synopsys/Makefile
old mode 100755
new mode 100644
-- 
1.7.9.5

