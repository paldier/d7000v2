diff -Npur '-x*.*.rej' '-x*.*.orig' '-x*.patch' a/include/net/cfg80211.h b/include/net/cfg80211.h
--- a/include/net/cfg80211.h	2016-01-19 10:21:12.635475100 +0000
+++ b/include/net/cfg80211.h	2016-01-19 10:23:52.471176400 +0000
@@ -759,6 +759,7 @@ struct station_parameters {
 	u8 ext_capab_len;
 	u8 *resp;
 	size_t resp_len;
+	u32 rssi;
 };
 
 /**
@@ -839,6 +840,7 @@ int cfg80211_check_station_change(struct
  * @STATION_INFO_NONPEER_PM: @nonpeer_pm filled
  * @STATION_INFO_CHAIN_SIGNAL: @chain_signal filled
  * @STATION_INFO_CHAIN_SIGNAL_AVG: @chain_signal_avg filled
+ * @STATION_INFO_MAX_RSSI: @max_rssi filled
  */
 enum station_info_flags {
 	STATION_INFO_INACTIVE_TIME	= 1<<0,
@@ -869,6 +871,7 @@ enum station_info_flags {
 	STATION_INFO_TX_BYTES64		= 1<<25,
 	STATION_INFO_CHAIN_SIGNAL	= 1<<26,
 	STATION_INFO_CHAIN_SIGNAL_AVG	= 1<<27,
+    STATION_INFO_MAX_RSSI  		= 1<<28,
 };
 
 /**
@@ -1027,6 +1030,7 @@ struct station_info {
 	enum nl80211_mesh_power_mode local_pm;
 	enum nl80211_mesh_power_mode peer_pm;
 	enum nl80211_mesh_power_mode nonpeer_pm;
+	u32 max_rssi;
 
 	/*
 	 * Note: Add a new enum station_info_flags value for each new field and
diff -Npur '-x*.*.rej' '-x*.*.orig' '-x*.patch' a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
--- a/include/uapi/linux/nl80211.h	2015-11-11 15:50:05.926698000 +0000
+++ b/include/uapi/linux/nl80211.h	2015-11-11 15:51:53.531457400 +0000
@@ -1555,6 +1555,8 @@ enum nl80211_commands {
  *	data is in the format defined for the payload of the QoS Map Set element
  *	in IEEE Std 802.11-2012, 8.4.2.97.
  *
+ * @NL80211_ATTR_STA_RSSI: Received signal strength indication (u32)
+ *
  * @NL80211_ATTR_MAX: highest attribute number currently defined
  * @__NL80211_ATTR_AFTER_LAST: internal use
  */
@@ -1883,6 +1885,7 @@ enum nl80211_attrs {
 
 	NL80211_ATTR_QOS_MAP,
 
+	NL80211_ATTR_STA_RSSI,
 	/* add attributes here, update the policy in nl80211.c */
 
 	__NL80211_ATTR_AFTER_LAST,
@@ -2182,6 +2185,7 @@ enum nl80211_sta_info {
 	NL80211_STA_INFO_TX_BYTES64,
 	NL80211_STA_INFO_CHAIN_SIGNAL,
 	NL80211_STA_INFO_CHAIN_SIGNAL_AVG,
+	NL80211_STA_INFO_MAX_RSSI,
 
 	/* keep last */
 	__NL80211_STA_INFO_AFTER_LAST,
diff -Npur '-x*.*.rej' '-x*.*.orig' '-x*.patch' a/net/wireless/nl80211.c b/net/wireless/nl80211.c
--- a/net/wireless/nl80211.c	2015-11-11 15:51:17.434848100 +0000
+++ b/net/wireless/nl80211.c	2015-11-11 15:51:53.554459700 +0000
@@ -230,6 +230,7 @@ static const struct nla_policy nl80211_p
 	[NL80211_ATTR_BEACON_TAIL] = { .type = NLA_BINARY,
 				       .len = IEEE80211_MAX_DATA_LEN },
 	[NL80211_ATTR_STA_AID] = { .type = NLA_U16 },
+	[NL80211_ATTR_STA_RSSI] = { .type = NLA_U32 },
 	[NL80211_ATTR_STA_FLAGS] = { .type = NLA_NESTED },
 	[NL80211_ATTR_STA_LISTEN_INTERVAL] = { .type = NLA_U16 },
 	[NL80211_ATTR_STA_SUPPORTED_RATES] = { .type = NLA_BINARY,
@@ -3518,6 +3519,10 @@ static int nl80211_send_station(struct s
 	    nla_put_u32(msg, NL80211_STA_INFO_INACTIVE_TIME,
 			sinfo->inactive_time))
 		goto nla_put_failure;
+	if ((sinfo->filled & STATION_INFO_MAX_RSSI) &&
+	    nla_put_u32(msg, NL80211_STA_INFO_MAX_RSSI,
+			sinfo->max_rssi))
+		goto nla_put_failure;
 	if ((sinfo->filled & (STATION_INFO_RX_BYTES |
 			      STATION_INFO_RX_BYTES64)) &&
 	    nla_put_u32(msg, NL80211_STA_INFO_RX_BYTES,
@@ -4105,6 +4110,9 @@ static int nl80211_new_station(struct sk
 	    !info->attrs[NL80211_ATTR_PEER_AID])
 		return -EINVAL;
 
+	if (!info->attrs[NL80211_ATTR_STA_RSSI])
+		return -EINVAL;
+
 	mac_addr = nla_data(info->attrs[NL80211_ATTR_MAC]);
 	params.supported_rates =
 		nla_data(info->attrs[NL80211_ATTR_STA_SUPPORTED_RATES]);
@@ -4125,6 +4133,8 @@ static int nl80211_new_station(struct sk
 	if (!params.aid || params.aid > IEEE80211_MAX_AID)
 		return -EINVAL;
 
+	params.rssi = nla_get_u32(info->attrs[NL80211_ATTR_STA_RSSI]);
+
 	if (info->attrs[NL80211_ATTR_STA_CAPABILITY]) {
 		params.capability =
 			nla_get_u16(info->attrs[NL80211_ATTR_STA_CAPABILITY]);
