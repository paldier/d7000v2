From c7391d3b1f092a6427b4c936ecc90d95baea1c8a Mon Sep 17 00:00:00 2001
From: Emmanuel Jillela <emmanuel.jillela@intel.com>
Date: Thu, 10 Sep 2015 23:21:27 -0700
Subject: [PATCH] Enable NetIP interrupts after handlers are registered.

---
 arch/x86/NetIP_SubSystem/netip_subsystem_lld.c |   20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/arch/x86/NetIP_SubSystem/netip_subsystem_lld.c b/arch/x86/NetIP_SubSystem/netip_subsystem_lld.c
index 0f7be26..5b77787 100755
--- a/arch/x86/NetIP_SubSystem/netip_subsystem_lld.c
+++ b/arch/x86/NetIP_SubSystem/netip_subsystem_lld.c
@@ -71,8 +71,8 @@ extern netss_sysfs_attributes_info_t g_netss_sysfs_attributes_info;
 
 void netss_subdev_register_irq(netss_subdevices_t subdevice, int arm11_int_id, netss_subdev_irq_info_t *irq_info)
 {
-    if(subdevice != NETSS_ARM11) 
-    {
+   if(subdevice != NETSS_ARM11) 
+   {
         pnetss_drv_data->irqs[subdevice].func = irq_info->func;
         pnetss_drv_data->irqs[subdevice].args = irq_info->args;
     }
@@ -81,6 +81,15 @@ void netss_subdev_register_irq(netss_subdevices_t subdevice, int arm11_int_id, n
         pnetss_drv_data->arm11_irqs[arm11_int_id].func = irq_info->func;
         pnetss_drv_data->arm11_irqs[arm11_int_id].args = irq_info->args;
     }
+    if(irq_info->func != NULL)
+    {
+       uint32_t reg_val;
+       reg_val = __raw_readl(pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IER_OFFSET);
+       if(!(reg_val & (1 << subdevice))) {
+          __raw_writel((reg_val | (1<<subdevice)), pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IER_OFFSET);
+          printk("Enabling Net IP subdevice %d interrupts reg %x\n", subdevice, __raw_readl(pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IER_OFFSET));
+       } 
+    }
 }
 
 EXPORT_SYMBOL(netss_subdev_register_irq);
@@ -238,13 +247,6 @@ static int netss_probe(struct pci_dev *pdev,
       ret = -ENOMEM;
       goto free_mem;
    }
-   /**Enable bridge interrupt registers */
-   reg_val = __raw_readl(pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IER_OFFSET);
-   if(!(reg_val & NETIP_BRIDGE_IRQ_MASK)) {
-      __raw_writel((reg_val | NETIP_BRIDGE_IRQ_MASK), pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IER_OFFSET);
-      NETSS_DBG_PRINT("Enabling Net IP Bridge interrupts IER reg %x\n", __raw_readl(pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IER_OFFSET));
-   }
-   
    reg_val = __raw_readl(pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IMR_OFFSET);
    if((reg_val & NETIP_BRIDGE_IRQ_MASK)) {
       __raw_writel((reg_val & ~NETIP_BRIDGE_IRQ_MASK) , pnetss_drv_data->bridge_reg_base + NETIP_BRIDGE_IMR_OFFSET); 
-- 
1.7.9.5

